<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[自动驾驶 | 感知篇]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6-%E6%84%9F%E7%9F%A5%E7%AF%87.html</url>
    <content type="text"><![CDATA[感知是指一个自主系统从环境中收集信息和提取相关知识的能力。环境感知是指发展对环境的上下文理解，如障碍物的位置、路标的检测、数据的语义分类等。 定位是指机器人根据环境确定其位置的能力。 环境感知环境感知是实现自动驾驶汽车的一项基本功能，它为汽车提供有关驾驶环境的关键信息，包括自由行驶区域和周围障碍物的位置、速度，甚至是对其未来状态的预测。基于所实现的传感器，环境感知任务可以通过LIDARs、相机或这两种设备之间的融合来处理。其他一些传统方法也可能涉及使用短距离/远程雷达和超声波传感器。 无论传感器是如何实现的，感知任务的两个关键元素是(i)路面提取和(ii)道路目标检测 LIDAR激光雷达是一种光探测和测距装置，每秒以设定的模式发送出去数以百万计的光脉冲。通过它的旋转轴，它能够创建一个动态的、三维的环境地图。激光雷达是目前大多数自动驾驶车辆目标检测的核心技术。 在真实场景中，激光雷达返回的点从来都不是完美的。激光雷达点云处理的难点在于扫描点稀疏、缺失点和无组织模式（unorganized patterns)。周边环境也增加了挑战，因为反射回来的表面可能是任意和不稳定的。有时，甚至人类都很难从扫描点的可视化中感知有用的信息。 representation表示激光雷达输出的是物体反射回来的稀疏三维点，每个点代表物体相对于激光雷达的三维表面位置。通常使用三种主要的点表示形式，即点云、特征和网格。 基于点云的方法直接使用原始传感器数据进行进一步处理。这种方法提供了更好的环境表示，但代价是增加了处理时间和降低了内存效率。为了缓解这种情况，通常对原始点云应用基于体素的过滤机制（voxel-based filtering mechanism）来减少点的数量。 基于特征的方法首先从点云中提取参数特征，然后利用提取的特征表示环境。常用的特征包括直线和曲面。这种方法内存效率最高，但它通常过于抽象，其准确性取决于点云的性质，因为并不是所有的环境特性都可以通过特征达到很好地近似。 基于网格的方法将空间离散成小网格，每个小网格都填充了来自点云的信息，从而建立了一个点邻域（point neighborhood）。这种方法是内存高效的，且不依赖于预定义的特性。然而，确定离散化的大小并不容易。常用自适应八叉树来指导粗网格到细网格的分割。 分割算法对于三维点云信息的感知，通常分为两个步骤:分割和分类。有些方法可能包括第三步，时间统整（intergation），以提高准确性和一致性。 点云分割是把点聚类到多个同质组的过程,而分类识别是确定各分割集群的类别,例如,自行车,汽车,行人,路面,等等。 三维点云分割的算法可以分为五个分类:基于边缘的,基于区域的，基于属性的,基于模型的,和基于图的。在此基础上，还有一种基于深度学习算法的分类方法。 基于边缘的方法主要适用于具有较强人工边缘特征的对象，如道路路缘。但是它并不是一种有效的自然场景检测方法，而且容易受到噪声的影响。为了提高鲁棒性，可以计算主点的海拔梯度（ elevation gradients of principal points ），并采用梯度滤波器滤除波动点。 基于区域的方法利用区域增长机制，根据欧几里得距离或表面法线等标准对邻域点进行聚类。在大多数情况下，这个过程从生成一些种子点开始，然后根据预定义的标准从这些点生成区域。与基于边缘的方法相比，该方法更具有通用性和实用性。同时由于考虑了邻域信息，避免了局部视图问题。 当前提出了一种基于扫描线的局部最低点识别算法，并以这些点为种子，根据坡度和高程生长为地面段。另外，学术界还提出了一种基于点邻域平整度和法向量的特征，用于树木和非平面区域的生长。 为了提高算法的鲁棒性，学术界提出了一种自适应欧几里得聚类算法。另外还有一种根据每束激光连续扫描环的距离差推导出来的不均匀属性作为生长准则，它更有能力检测小障碍物，对地面坡度、车辆俯仰和滚动的存在不那么敏感。 在文献中，一些研究人员还研究了如何通过更多的启发法来有效地生成种子点，从而使它们能够引导更有效和更健壮的区域生长过程。 Vieira等人在选择种子点之前，首先根据曲率将尖锐边缘的点去掉，因为好的种子点通常是在区域内部，而不是在区域边界。 也有学者首先每个点的法线进行估计,然后选择残差最小的点作为初始种子点。进一步的研究选择的局部平面（local plane）,而不是法线,每一点是提取后和相应的计算之后得到分数,种子的选择是基于分数。 多阶段种子生成方法。利用共面点的相干性和邻近性，将非空体按邻近性分组，这些片段作为下一个分割过程的种子。最后根据平面连接和交叉点合并邻域共面点段。 基于区域的分割方法在文献中得到了广泛的应用，但分割结果过于依赖于种子点的选择。选择错误的点可能导致分割不充分和效率低下，种子点的不同选择通常导致不同的分割。此外，所有基于区域的方法都需要大量的计算资源，既耗费时间又耗费内存。 基于模型的方法，也称为参数化方法，首先将这些点拟合到预定义的模型中。这些模型，有平面、球面、圆锥和圆柱，通常可以用一种封闭的数学形式有效而紧凑地表示。这些特定模型的离群值被聚集成一个部分。 大多数基于模型的方法都是用来分割地平面的。文献中应用最广泛的两种模型拟合算法是RANSAC (Random Sample Consensus)和HT (Hough Transform)基于模型的方法与这两种算法具有相同的优缺点。 RANSAC算法能实现对点云中的地平面进行分割。然而，对于非平面的路面，如起伏的道路、上坡、下坡、驼峰等，这种模型拟合方法是不够的。为了减少这些缺陷，Oniga等人将平面拟合成二次型，而不是基于RANSAC的平面形式。然后设计了一个区域生长过程来优化二次平面。 Asvadi等人将车辆前方空间划分为若干等距(5 m)条，基于最小二乘法进行拟合，每条条对应一个平面。学者们还提出了一种基于分段的地表估计方法，该方法由切片、gating、平面拟合和验证四个步骤组成。分割步骤将车辆前面的空间分割成激光雷达点数量大致相等的区域，而门控步骤基于四分位间距法剔除每个区域的离群值。然后对每个切片区域进行RANSAC平面拟合，找到所有的分段平面，最后通过检查连续平面之间的法向和高度差进行验证。 HT模型拟合方法也可以在文献中找到，适用于不同的模型，如平面、柱体、球体。可以将三维HT应用于点水平和法向量识别点云中的平面结构，也可以用其来检测点云中的柱面。与传统的需要5维霍夫空间的方法相比，该方法降低了时间和空间复杂度。 如上所述，基于模型的平面提取方法在文献中已有较好的建立。通常情况下，这些方法是分割的第一步，用于去除底面（ground plane），而其他方法，如区域增长，是用于聚类剩下的点。 然而，基于模型的方法的主要缺点是它没有考虑到邻居和上下文信息，因此它可能会强制随机点进入一个特定的模型。此外，分割对点云密度、位置精度和噪声都很敏感。 基于属性的方法通常采用两步方法，第一步是计算每个点的属性，第二步是根据相关属性对点进行聚类。，这组方法允许更多的线索被整合到顶部空间信息的中。然而，分割的成功与否也很大程度上取决于派生的隐藏属性。 基于属性的方法首先计算每个点的最优邻域大小。在主成分分析的基础上，考虑了相邻信息的影响，提出了基于主成分分析的几何特征。然后利用LIBSVM将几何特征作为输入，为每个点分配三种类型的属性(线性、平面和球面)。最后，设计分割规则，根据相关属性对点进行聚类。 基于图的方法，将点云转换为图结构，每个点作为顶点/节点，相邻点之间的连接作为图边缘。基于图的方法在图像语义分割中具有很强的优势，它可以将局部和全局的线索、邻域信息、上下文、平滑度等自定义特征融入到图像的表达中，对整个图像的分割进行全局优化。 图像分割中的图形切割方法，在点云的内容上，通常采用CRF(条件随机场)或MRF(马尔可夫随机场)的形式，优化通常采用最小-最大流切割算法或其变体。 在最近的研究中，学者首先创建了k近邻图，之后根据背景补偿函数对每个节点进行赋值，增加了硬前景约束，并通过mincut实现了前景和背景分割。 也有学者采用基于图形的方法，利用基于局部凹凸度度量的统一通用准则分割地面和物体。 与其他方法相比，基于图的方法由于具有上述的全局特征，在处理复杂场景时具有更强的鲁棒性。这些方法的主要问题是通常需要更多的时间来计算，特别是对于优化部分。 基于机器学习的算法 随着计算机视觉中机器学习算法的发展，一些研究者也在研究如何将通常应用于二维图像的机器学习架构应用到三维点云中进行分割和检测。可以通过随机森林分类器，将每个点分类为一个语义类。 基于轻量级的三维特征对分类器进行了训练。然后，通过检测语义结构的差异，对个体立面进行分类。为了提高存储效率和分割精度，现在常用一种基于三维卷积的八叉树网络。 它利用点云的稀疏性，集中内存分配和计算，以便在不影响分辨率的情况下实现更深层次的网络。该算法是近年来发展起来的，存在一些关键的实际问题，难以实现实时操作。然而，它们确实为点云分割问题提供了新的见解。如检测算法所示，它们可以提供一个统一的管道，将分割和检测过程结合起来。 检测算法分割完成后，每个簇需要被分类到不同的对象中。每个簇中嵌入的信息主要来自空间关系和点的激光雷达强度，在目标识别中应用非常有限。因此，大多数算法将利用计算机视觉上的检测问题，通过一些融合机制，待会展示。然而，也有一些其他的研究工作在探索从点云数据进行目标识别的可能性 其中一种算法是对于每个线段，生成所有表面法向量高度值的直方图，如果最后一个线段包含最多的投票，则将该线段分类为ground。这种算法不能区分地面上的物体。 Zhang等提出了一种基于SVM (Support Vector Machine, Support Vector Machine)的分类器，将集群划分为地面、植被、建筑、电线和车辆。共推导出13个特征作为SVM分类器的输入。但是，该分类器仍然非常粗糙，对于自动驾驶汽车的应用还不够实用。 与前面提到的机器学习算法相比，最近开发的机器学习算法更加通用和健壮，因为它们能够识别更多类别的对象。VoxNet实现了一个三维卷积神经网络可以对三维点云进行分类(占用网格/体积表示)。三维卷积深度信念网络，从原始CAD数据中学习复杂三维形状在不同对象类别和任意姿态下的分布。 但是对于三维网络，计算和内存需求随着三维点云的输入尺寸的增大而增大。上述方法只能在303个体素的阶数下操作，能够充分利用三维物体丰富细致的几何特征。如分割部分所述，八叉树网络是处理三维点云的一种更有效的架构。其将输入集群的分辨率从$30^3$阶提高到$256^3$阶]]></content>
      <tags>
        <tag>自动驾驶</tag>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶仿真系统设计(一)]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E4%BB%BF%E7%9C%9F%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1-%E4%B8%80.html</url>
    <content type="text"><![CDATA[ITS和AHS是复杂的系统，人、车、环境等各种因素相互作用，其中的信息是多源、异构、非结构化的。这个系统需要智能汽车的参与。考虑成本问题，仿真就成为开发过程中一个很重要的阶段。 对构建自动驾驶仿真来说，可以重点关注以下几项技术：VR技术和多代理建模技术，后者的技术框架中还包括对建模技术的优化。 概念介绍在自动驾驶仿真系统中，Agent模型是指复杂系统中个体(实体)模型的抽象模型。这里有以下几个要点 每个独立的仿真模块都是一个agent 环境。Agent在虚拟环境中实现感知和行为 感知与行动。Agent通过内部传感器感知环境和其他Agent的信息，通过actor对环境和其他Agent起作用。智能汽车模型中有感知模块和运动模块来实现这一工作。 事件。微观行为如追车、超车是系统中的事件。 目标。交互结果是去验证交通安全。 规则和属性。实体代理(如智能车辆)定义了反映实体行为的规则和属性。实体代理根据感知信息改变其规则和行为。 协调。多控制器协调可以实现不同的车辆算法。 交互。仿真系统中的交互作用可以反映车辆与环境的交互作用。 合作。实体代理(智能车辆和周边车辆)需要协同实现交通行为。 代码生成。仿真系统所需的项目文件、源代码文件、头文件应通过配置添加。 智能仿真系统是在Visual Studio c++中构建的，智能车辆模型是在Matlab/Simulink中开发的。系统整体而言是分布式仿真系统。 系统需求 系统应该能够有效模拟交通环境下智能车辆的控制过程，验证微观交通模型和智能车辆控制算法的合理性和正确性。 通过三维可视化，用户可以清晰地观察整个仿真过程。系统界面简单，人机交互方便，仿真过程和可视化可由用户控制。 系统应具有可扩展性、灵活性、可扩展性。采用分散设计范式实现复杂的交通模型和仿真。这些算法可以很容易地添加、删除或更改。 基于多智能体的自动驾驶仿真框架 硬件、网络和操作系统层提供了系统运行的支持技术，其中包括可视化呈现的子模块系统(即图形加速器硬件和OpenGL、DirectX等软件开发库)、车辆动态模型和控制模型子系统(Matlab/Simulink)、分布式网络通信环境、操作系统和存储数字高程模型(DEM)的模型数据库、三维模型等 可视化管理层负责管理三维模型，组织可视化节点，驱动三维场景，计算物理属性，如碰撞检测和基于场景的事件管理。 多代理层包括实体代理、环境代理和服务代理。这一层反映了自动驾驶仿真系统的智能化、可重构性、可重用性和可扩展性。 每个实体代理对应于场景中的一个三维实体，为三维实体提供特定的语义和行为规则以及交互功能。 实体代理分为智能车辆代理和周边车辆代理。智能汽车agent通过感知能力、认知能力和行为能力来表现驾驶员的行为特征。围绕车辆的agent通过感知和行动能力与智能车辆进行交互，它们可以改变自身属性，影响智能车辆。 环境代理是在综合自然环境(SNE)概念的基础上构建的，它是通过建模和仿真方法建立的系统中自然环境的表示，考虑了仿真实体与自然环境仿真系统之间的相互作用。可以利用地理信息系统(GIS) 建立环境代理，使仿真系统更加真实。环境代理是动态的，其特性可以改变，也可以通过模型数据库中存储的环境参数影响实体代理。 服务代理没有几何形状，其基本功能是提供系统服务，分为通信服务代理(CommAgent)和信息服务代理(InfoAgent)。CommAgent提供分布式仿真支持服务。InfoAgent提供与环境相关的语义信息和智能行为所需的知识，它不仅与实体代理交互，而且与可视化管理层交互。InfoAgent负责将实体代理的命令转换为3D场景中特定实体的状态变化。具体实体的状态变化也可以转化为有意义的知识，传递给实体代理进行决策 人机界面层是用户通过键盘、鼠标、显示器等虚拟现实设备与智能仿真系统直接交互的界面 仿真框架抽象化描述 simulation framework ：：= &lt; Agent, Communication &gt; Agent = {EnvironmentAgent} ∪ {ServiceAgents} ∪ {EntityAgents} EntityAgents = {IntelligentV ehicleAgents} ∪ {AroundV ehicleAgents} ServiceAgents = {CommuAgent} ∪ {InfoAgent} EnvironmenAgent ：：=&lt; FeatureName, FeatureType, FeatureValue &gt; EntityAgent ：：=&lt; AgentID, Attribs, BehaviorModel &gt; Attrib ：：=&lt; AttribID, AttribName, AttribType, AttribV alue &gt; Behavior ：：=&lt; AgentID, BehaviorName, BehaviorT ype, ParameterSet &gt; BehaviorType ∈ {SelfBehavior, InteractBehavior} Communication = {&lt; Sender, Receiver, MsgContent &gt; |(Sender ∈ Agent) and (Receiver ∈ Agent) and(MsgContent ∈ Communication(L))} 具体框架实现 需要采用分布式组件对象模型(DCOM)和高级架构(HLA)实现了分布式仿真通信，下面将详细说明。DCOM使用Microsoft Component Object Model (COM)技术，其源代码可以用任何支持COM的编程语言编写，如c++。Matlab具有支持COM的特性，通过IDispatch接口将COM对象集成到Matlab/Simulink模型中。 HLA/RTI(实时架构)是通过HLA/RTI的仿真联合辅助开发工具实现的。 AST-RTI和AST-OMDT (Object Management Development Tool)是由北京航空航天大学先进仿真技术实验室(Advanced Simulation Technology Laboratory, ASTLab)开发并用于研究的一类工具。AST-RTI是一个仿真支持平台，AST-OMDT软件帮助定义交互数据和联合对象模型(FOM)和仿真对象模型(SOM)。AST-FEDWIZARD工具软件可以根据FOM和发布/订阅信息生成联邦应用程序框架和RTI调用接口.]]></content>
      <tags>
        <tag>自动驾驶</tag>
        <tag>自动驾驶仿真</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[招聘需求 | 自动驾驶仿真工程师]]></title>
    <url>%2F%E6%8B%9B%E8%81%98%E9%9C%80%E6%B1%82-%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E4%BB%BF%E7%9C%9F%E5%B7%A5%E7%A8%8B%E5%B8%88.html</url>
    <content type="text"><![CDATA[新开一批就业相关的博客，为未来也做一波准备。第一弹介绍一个比较细化的分支：自动驾驶仿真工程师。自动驾驶仿真属于自动驾驶测试的大类，再往上走，可以归属到自动驾驶安全或者自动驾驶产品落地这一脉里。随着国内自动驾驶的竞争开始进入后半段，企业在继续维持技术积累的速度之外，对自动驾驶测试，尤其是仿真测试越发重视了。 总的来说，自动驾驶仿真工程师的门槛是比较高的。因为这里的测试往往已不再是黑箱测试，而是要进行白箱测试，这样才能提高效率，同时进行好的反馈。因此仿真工程师不仅要懂偏向于开发的知识，掌握自动驾驶系统/产品的主要系统架构，算法原理等，也要掌握偏向于测试的知识，如在环系统构建，主流的仿真工具使用，测试场景制定等等。 以下列举一些典型大厂对自动驾驶仿真工程师的招聘需求： 阿里基本信息 年薪:40-70万，20-40岁，学历：本科，base杭州，所属部门：人工智能实验室，招聘人数：2岗位描述 负责搭建自动驾驶虚拟场景，完善仿真测试框架 配合驾驶决策、路径规划、仿真算法等模块，实现自动驾驶闭环仿真，并可视化相关调试信息 通过物理引擎对自动驾驶仿真结果进行评估 理解各种仿真引擎优缺点，根据项目阶段搭建并部署相应系统 本科及以上学历，机器人、计算机、游戏开发等相关专业岗位要求 熟悉unity、unreal等游戏引擎 熟悉至少一种3D建模工具，如Sketchup，Blender等 熟悉掌握游戏物理引擎的应用 有自动驾驶仿真工具搭建者优先 有汽车类游戏开发经验者优先 有使用CarSim、PreScan搭建车辆运动仿真平台者优先 有两年以上测试经验，有搭建车辆在环仿真测试场景经验者优先 有多年python等脚本语言开发经验优先 多年的C++的开发经验，1～3年的实际项目工作经验 熟练掌握Linux或类Linux系统，并掌握常用Linux命令 善于团队协作完成既定任务。 深入理解软件开发周期、软件质量需求，扎实等测试知识及执行力 百度基本信息社招 岗位描述 按照需求进行仿真系统相关功能的设计和开发工作 对仿真前沿技术进行跟踪与研究 通过需求调研和需求分析，完成业务建模、系统建模岗位要求 计算机相关专业本科以上学历 有扎实的计算机基础知识，熟练掌握C/C++编程语言 熟悉软件开发流程，有良好的编程风格和文档习惯 熟悉Linux、Unix等操作系统，并在此系统上有开发经验的优先 良好的沟通能力和执行能力； 正直、务实、敬业、善于思考、良好的团队合作精神 有ROS开发经验优先 掌握仿真相关原理和算法优先 具有车辆主动安全和自动驾驶系统开发经验优先 掌握一种以上通用或专用仿真工具软件，有业务模拟仿真或仿真平台的开发经验优先 京东基本信息base北京，经验：3-5年，学历：硕士，年薪：面谈 岗位描述 设计和实现基于插件式的分布式仿真系统底层架构，替换ROS系统，并可满足车辆量产的要求； 实现仿真系统三维渲染引擎，对动态和静态场景渲染和模拟以及交互性，预期要达到次世代游戏的水平； 实现物理引擎以及AI脚本引擎的优化及实现。岗位要求 计算机相关专业，硕士及以上学历； 深入理解机器人地图和自动驾驶数据，熟悉ROS以及Linux ，了解SLAM相关算法，C++架构能力强，有车厂或图商相关研发优先； 具备地图/GIS相关数据可视化开发经验 或者 商业渲染引擎、游戏引擎优化以研发经验； 深入理解OpenGL基本原理及相关计算几何，熟悉数据可视化相关基础算法。 美团基本信息base北京，年薪：40-88w， 岗位描述 设计和构建无人车仿真平台，实现各类算法的快速验证 重建真实场景和传感器模型，持续提升感知模拟的精准度 跟踪和研究仿真前沿技术岗位要求 熟练掌握C++、Python，了解Linux 熟悉传感器模拟、点云处理、三维重建等技术【计算机图形学】 了解Gazebo、Prescan等至少一种仿真软件【部分模拟器】 良好的沟通表达和团队协作能力 有3D赛车游戏开发经验优先 有3D引擎如UE4、Unity开发经验优先 有仿真系统开发经验优先 Momenta基本信息base北京，24w-48w,工作经验不限 岗位描述负责搭建无人驾驶模拟系统，对汽车、传感器、环境进行软件模拟。模拟结果将与真实数据一同用于预测汽车在真实场景中的行为。 岗位要求 熟悉汽车系统和仿真软件（carsim, carmaker, v-rep） 熟悉C++/Python等开发语言，有Linux开发经验 了解汽车动力学模型，3D图像引擎工作原理 具有一定模拟系统或3Ｄ游戏开发经验，具有无人驾驶、汽车、机器人领域模拟系统开发经验者优先 慧勒汽车科技(上海)股份有限公司基本信息base上海，年薪：24w-36w，学历：硕士 岗位描述 负责自动驾驶软件（虚拟驾驶场景、交通流、高精地图）集成测试、硬件(摄像头、激光雷达、毫米波雷达、GPS/IMU、ECU)在环台架测试、以及驾驶员在环测试； 搭建自动驾驶硬件在环平台，包括软硬件架构、各接口定义等； 设计并搭建自动驾驶仿真场景，并编写测试用例，撰写测试报告； 配合算法工程师调试并测试控制算法； 负责集成调试自动驾驶嵌入式实时计算平台； 负责集成调试自动驾驶HMI。岗位要求 硕士及以上学历，汽车类、电子类、自动化、计算机类等相关专业； 精通嵌入式开发，熟悉C++，精通Linux环境，具有丰富的软硬件动手实践经验； 熟悉车载CAN、以太网总线、TCP/IP, UDP, serialization等通讯协议； 良好的沟通能力，自主学习能力，富有高度的责任心及团队合作精神； 有ACC、AEB、APA、LKA等ADAS功能仿真与开发经验者优先； 熟悉NVidia Drive PX2或者Jetson TX2嵌入式平台优先； 熟悉超声波雷达/毫米波雷达/激光雷达/摄像头/ECU等产品优先； 熟悉实时仿真系统者优先。]]></content>
      <tags>
        <tag>自动驾驶</tag>
        <tag>自动驾驶仿真</tag>
        <tag>就业信息</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我为什么要写博客]]></title>
    <url>%2F%E6%88%91%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%86%99%E5%8D%9A%E5%AE%A2.html</url>
    <content type="text"><![CDATA[不按修改时间，按创建时间算，这是第101篇博客。一个新起点。如图，这是我9月12日发的一条微博，算来是两个多月前，现在我可以说，这个小项目已经达成了预期目标。我甚至准备以后找实习、找工作的时候，把这个博客写到我的个人简历上。 我终于能够确认，我能认真坚持下来做一件事，能坚持一件事情100天，能坚持整理归纳到100篇，即使博客质量参差不齐，即使博客内容错误疏漏无数。 按玄幻小说的说，我现在道心坚定。 为什么要写博客？我在7月多开篇时问了自己这么一个问题，现在我已经有了自己的答案，其可概括为以下三句话。 第一句，“以自省而已”。这正是那篇不断更新的博客《每日学习记录》的第一句话，我想看看自己有多少开的学习项目半途而废？看看自己一天内到底都做了什么事情？看看我现在这个人究竟能输出什么？看看自己究竟是否有竞争力？ 第二，“博观以约取，厚积而薄发”。这是我说了无数遍的博客主题。现在虽然博客的标签做了二十多个，但系列的真正主题有两个，学习相关与日常随笔。前者用来记述自己的的技术学习笔记和过往所学知识的总结归纳，后者则是写一些读书笔记、童年追忆、个人情绪、偶然脑洞等。以这两条线为脉络，我想得让自己更开放些，懂得多一些，懂得再多一些。永远保持对这个世界各种事物的好奇心，永远年轻，并能在适当的时候把心收到该收的地方，不做心比天高，命比纸薄的可怜人，让思维高度、宽度都上升一个等级。 第三句，“藏锋与不藏锋”，人在和周围人多交流后，才更能获得警醒和进步。故步自封是不可取的，单单沉浸在自己的小圈子里，沉浸在自己的世界里，只会约束自己的上限。该锋芒毕露就不要遮遮掩掩。对我而言，我需要一个交流平台，QQ空间、朋友圈，前者过于封闭，后者虽然可以扩展，但是有些介于熟悉和陌生之间的老师同学，微博就更不必提，一个垃圾平台，恶心的很。放弃使用微信公众号倒是下了很大决心，主要是因为其排版成本比较高，我没那么多精力，且不能即时修改。另外，它每天只能发一篇，最后它对组织整理的功能支持的比较弱。 不管怎样，100篇已经达成，撒花庆祝。谢谢小土刀，就是看了你的博客我才下定决心开始做的；谢谢谢益辉，你让我看到了真正高价值博客的样子；谢谢妍妍，你的不间断阅读给我写下去的耐心。 我会继续做下去的。这是懒散与无趣之人的救赎。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[捉螃蟹]]></title>
    <url>%2F%E6%8D%89%E8%9E%83%E8%9F%B9.html</url>
    <content type="text"><![CDATA[螃蟹，横行霸道，生活在污泥里，石头下，小河中。一言概之，它们生活在远离我的地方。 也许正是因为这种距离感，我对螃蟹总有一种说不清的喜欢。这喜欢不同于对猫猫狗狗的喜爱。也不同于美食家对螃蟹肉的欣赏。这种喜欢应该是来自于老祖宗基因中的采集本能，即见猎心喜也。 换句话说，我心中向往的，应该是捉螃蟹。 我很少与螃蟹有接触，但总有身边人捉过好几次。当他们说起下河捉螃蟹的经历时，我总是在旁边听着，一字不落。我家附近没河，水库又远，我总跟他们一起去玩的机会。即便如此，捉螃蟹这件事似乎绝称不上非常遥远，但就是求不得呐，这又增添了我对捉螃蟹这件事的向往。 到现在为止，我23岁，捉螃蟹的次数，两次而已，能去捉螃蟹的机会倒是有几次。 第一次捉螃蟹是在小学以前，那就应该是五六岁的年纪，去的是我大奶奶家，在深山里，我应该是坐了很长时间的公交车，最少对年幼的我来说，那算一次长途旅行。 到时已是正午，我连午饭也不想吃，刚到就缠着姑奶奶要去捉螃蟹。下午一二点时，姑奶奶也没午睡就带我去了后山，那里天清云淡，有透明的阳光和白色的石头，水像在天上流。姑奶奶在前边翻石头，我抱着一个大玻璃罐子在后面蹦蹦跳跳地跟着，翻到一个，我也不敢上手，就在旁边喊着，奶奶，快抓它！又笑又跳了一下午，捉到几十只左右，回去后我把它们放在一个盐袋子里。那个盐袋子被我清洗了很多次，怕盐度太高让它们夠死。下午吃饭时我也无心品尝，一直想着回去后要放两只在铝盆里，让他们用大钳子战斗。 因为一天都在折腾，回来路上我太困，就在车上沉沉睡去了，回来后好几小时才想起来，真是悲恸，奶奶自责说她自己也忘记了，安慰我下次去再捉。我心里清楚都是我的错，怨不得她，也清楚应该不会再有机会，因而只是大哭。 那是我第一次接触螃蟹，结局不甚完美。那是我第一次去姑奶奶家，也是最后一次去，四年前奶奶告诉我她已去世。对长大后的我来说，那个距离明明不远的，为什么却只去过一次呢，我自己想不明白为什么，心里有一点恍惚。 第二次接触螃蟹，是在小学六年级。有邻近的同学说现在正是捉螃蟹的时候，盛情难却，我就接受了邀约。内心终究还是雀跃的，算是于不经意处重温了童年旧梦。这是我第一次外出留宿，踏入了陌生的家，吃了陌生的饭，睡在陌生的床上，感受着陌生的情绪，心里总是有点惴惴。唯一让我感到熟悉且放松的是，朋友为我演示了魂斗罗的玩法，他很轻松就打到了第三关，那是我从不曾接触的关卡。 第二天出发时，我们提着桶，相比几年前的罐子算是鸟枪换炮，和我们同行的还有另外两个朋友，其中一个是我邻居，另外一个是这次捕猎的主将。 目的地是一条河，河边树木很高，因为已是正午，所以虽然遍地都是阴凉，但光线条件也算不得差。 主将出手时，我在旁边已经不会像小时候一样蹦蹦跳跳，但观察他捉螃蟹的动作比以前细心得多。找到冒泡的泥洞后要小心，因为螃蟹在洞里听到声响时，就会把两个螯摆起来做战斗状，如果贸然出手，肯定会被钳的，而且螃蟹还轻易不松手。这时候需要做的是把双手的大拇指、食指、中指模拟成两个大钳子慢慢探进去，来一场钳子对钳子的正面对决，手感受到螃蟹的螯后，就要凭感觉快速张开手钳出击，夹着螃蟹的两个螯，再把它提出来，这样才可以免受被夹之苦。这是高超的技艺，我最后也没学会，而且在逗螃蟹玩的时候，被其中一只不甘命运的斗士攻击了大拇指，一阵大呼小叫之后，主将帮我解决了危局，不过还是出了一点血。 收工时，我们的战利品接近半桶，我和邻居各分了一半带回去，放在家里养着，中间还给它们喂了几次馒头。它们吃东西时也是用大钳子，夹住小小的馍花儿，再往嘴里送。不过我预期中的螃蟹角斗没有出现，相反，它们是极其团结的，没事儿就开始叠罗汉搞大逃亡。这堆螃蟹的最终归宿，是被爷爷料理后炸了吃了，味道只能说是一般。 这就是我人生中仅有的两次捉螃蟹的经历。其余大多都是听闻而没实际去看。在密县时听说，晚上拿个大桶，再带个手电筒，灯一开，螃蟹就成群结队的往灯光这里走，这种捉螃蟹的方法真是简单高效地令人艳羡。到了大学，听说崇明有很多螃蟹，钓螃蟹还是个保留项目，但现在已不像小时候那么向往，最终未去。 现在想来，说喜欢捉螃蟹也不是最对的，最喜欢的应该是捉螃蟹代表的出去玩耍。现在因为工作重，不能也不太想出去玩了，对捉螃蟹的感情自然就归于平淡。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[下雨]]></title>
    <url>%2F%E4%B8%8B%E9%9B%A8.html</url>
    <content type="text"><![CDATA[我喜欢下雨，但我不知道该怎么表达对雨的感受，它是我的言不可及之域。 听雨声，且听细雨，勿湿衣襟。看雨景，雨丝剔透，连接天地。读雨诗，如蒋捷的《虞美人·听雨》，少年听雨歌楼上。红烛昏罗帐。壮年听雨客舟中。江阔云低、断雁叫西风。而今听雨僧庐下。鬓已星星也。悲欢离合总无情。一任阶前、点滴到天明。其他相关处，不一而足。 人说所有的心理都该去追溯童年，我童年懂事较早，大约六七岁时，家里盖房子，家外有沙。我听到父母叹息说运气不好，这次下雨会让沙子损失很多。当时门外刮着大风，我偷偷出去拿砖加固塑料布，而且不想让父母知道，因为担心他们对我的担心，那时的我是讨厌下雨的。后来的雨天，母亲和父亲的工作却总能难得清闲，对雨才渐渐有了偏爱。 很多人是讨厌雨天的，我跟一个朋友有深入讨论过，她的心理轨迹与我相似，她在一个雨天看到流浪小狗四处找避雨的地方，觉得它很可怜，自此不喜欢下雨。 这些差异背后正是朴素的道理，下雨时猫和狗的瑟瑟发抖会让我心痛，但建筑工人却可以抽烟休息，这世间始终没有漫长的雨季，你喜欢的他讨厌的，终究都会过去。 撇开这些成因源头，我喜欢下雨，这个事实改变不了。但下笔时，万千思绪卷来，我真的不知该从何说起了。 若说时间，春雨温柔，夏雨爽利，秋雨细腻，冬雨冷静。又有晨雨敲落花，午雨打屋瓦，夜雨谈情话。若说空间，大城市的雨洗刷天地，站在综合楼的十九层往下看时，五颜六色的伞跳动着，相遇又别离，伞下的每个人都有自己将去的地方，都有自己的故事，来也匆匆，去也匆匆，宏大的人流中有着自己的井然有序。至于乡下，这里三层楼就算高了，我曾站在楼顶观雨，下雨时乡下人都是不出门的，整个村子更安静沉稳了一些，你能看到每家的屋顶，感受到一个个整体，家家户户就在雨中，家的概念变得无比清晰，这感觉正如在城市的夜晚楼顶，人会感慨万家灯火一般。谈雨势，小雨淅沥，丝丝润心，且总不停，大雨哗啦，切切催情，来去匆匆。听雨声，庭院深深处的雨声、窗外雨声、屋顶雨声、帐篷雨声，各有情趣。每个情景谈下去，可以无穷无尽。 下雨天最易神启。雨夜总唤情，雨丝和情丝总是萦绕在一起的。在雨里，和自己的爱人撑一把伞，走过石板路，看有船夫在泛起淡淡烟雾的古镇小河中，淡然前行。客栈的灯亮了起来，橘色的灯光映在河旁的垂柳上，又萦绕在店外亭子下的碗筷之间，远方和生活就这样融合在一起，这真的让人感觉沉醉。 我和妍妍都喜欢下雨。我们曾在城市将将沉睡时，穿过雨下的越来越大的巷子，也曾在清晨六七点，顶着小雨去吃双浇面，进店时两人衣襟都被细雨打湿，趁着补偿自己的期待叫面来吃，鱼肉一块，猪肉一块，此双浇也，味极鲜美，言不可及。我们也会在雨将歇时，启程去看头号玩家，那时已是深夜，我骑着小电驴在前面乌拉乌拉唱歌，她坐在后面跟我聊天聊地聊家乡，风吹拂着脸，吹起了衣衫，雨又下起来了，斜斜的落在脸上，我感觉很惬意很舒服，好似已不在人间。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[人生中第一次实习]]></title>
    <url>%2F%E4%BA%BA%E7%94%9F%E4%B8%AD%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%AE%9E%E4%B9%A0.html</url>
    <content type="text"><![CDATA[那时候还没有实习的说法，应该称做打工。 中考刚考完，从初三考试的压力走出来，我轻飘飘的反而无所是从了，呆在家里几天，读书打不起精神，就突生想法出去打工，既能赚钱补贴家用，又能多看点新事物。 现在想来，这是第一次真正离家了。 工作地方离家不远，在市区的朝阳路，那条街是烧烤店的主场，这家只是其中之一，名为酱爆鸡烧烤。我爸似乎对我很没信心，在他看来，我应该一直是那个坐在角落里安静看书的孩子，是那个害羞腼腆的青瓜蛋子。但他也不是会主动表达情感的性格，只同老板叮嘱了很多，拜托他们多照顾我，转头跟我说要常向家里打电话，就骑着电动车走了。 在店里的第一顿饭是在傍晚，我们一堆人围在桌子前吃饭，因为我这个新人的到来，老板娘让加个菜，大厨做了烧茄子配白馒头，这是我吃过的最美味的茄子。店里每个人对我很友好，一直让我多吃，因为光线已暗，心里有种隐隐地安全感，于是自己就放开了吃，后来嘴上颚烫掉了一层皮，好几天不得消停。 在店里的第一次正式工作是端菜，没有插曲，没有波澜，一切风平浪静。老板跟我讲了规则，Z字形的桌子编号，很轻松地就完成了。 这之后工作渐渐地做了起来，晌午时帮采购的奶奶择菜，中午穿羊肉串，傍晚是一天中最忙的时候，会帮忙搬啤酒，进出拿烧烤材料等。 穿羊肉串倒是个要用心学习的活记，因为要保证沿着长轴穿入，不熟练的话，一是慢，二是容易扎手。签为铁制，为了能穿透羊肉，签头削的很尖，十指又连心，每次被扎时都疼的很。第一次穿时，我被扎了大致三四十次，但因为刚来工作，也不愿意诉苦。第二天时，我潜心观察烧烤师傅的穿串儿方式，跟着学习。第三天，不谦虚地说，我已经可以算串的又快又好。再后来，我甚至会和别人比试穿串儿的速度，这是后话了。 打工的钱并不多，那时是2010年，每月500，无休，平均每天16.67元，我算的很清楚，以现在的眼光看，这真是一笔小钱，可能投两篇稿子做几次家教就能搞定，但对当时的我来说，这的确可以称得上是一笔巨款，与之相对，工作也确实称得上是辛苦。烧烤铺子的特点，我们每天凌晨一点多收工，早上八九点就起来做预期准备，年轻人正是贪睡的时候，这让当时的我适应了很长一段时间。 说到收工晚，我想起了前两年的一个热点话题，什么最能代表中国人的深夜食堂？在其中，烧烤摊就被反复提名。确实，这是一个可以听到无数故事，看到世间百态的地方。有七十多岁的老夫妻在午夜来吃酱爆鸡，让我莫名的想到“白首如新，倾盖如故”；有一群光膀子的大汉拼了两张大桌子，吃着吃着，其中一个人很激动地拿啤酒瓶子向自己的光头招呼了一下，瓶子炸裂粉碎，一部分人面色冷峻，也有一部分人紧张起来拿着纸给他擦血。有人举杯畅饮，吃串儿吃到眉开眼笑，但也有人一边独自啃板筋一边默默落泪的。家家有本自己的经，人人都有自己的故事，在烧烤摊儿，人内心似乎被一种特殊的氛围感染，进而变得或更柔软，或更刚烈一些。 不知道你们有没有过这种体验，进入到一个新的环境后，周围全部是新的信息，新的环境、新的人、新的规则、新的氛围… 这份工作让我真切的体验到了“新”的力量。我还记得之后的一个多月里，每天从宿舍里起来，站到店里的后院，伸懒腰，呼吸新鲜空气，感受着从陌生变熟悉的布局、物品、气味。 人也渐渐熟悉起来了，每个人都有自己的故事。大师傅活的很潇洒，晚上总是用QQ装女号去逗自己的朋友，他对我们也极好，夜很深客已稀的时候，他总会为我们做羊肉面或番茄鸡蛋面，或让我们用白馒头夹芝麻酱吃—酱爆鸡用的酱就是芝麻酱。烧烤师傅那时也总是烤馒头或者给我们吃，现在想来，店里的氛围真是融洽，每天晚上都是烧烤盛宴。 老板不会参与我们的聚餐，但他们也不会在意。 &lt;未完待续、&gt;]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶学习资源整理]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90%E6%95%B4%E7%90%86.html</url>
    <content type="text"><![CDATA[博观而约取，厚积而薄发。这是我很喜欢的一句话。 我的目标是成为自动驾驶工程师，而不是科学家。想成为工程师，工程能力和足够的知识储备是不可或缺的。实际上，在掌握专业知识的基础上，足够广的知识面、旺盛的好奇心、超快的学习速度才是一个人的核心竞争力。另外，知识面宽广和专精一处并不是矛盾的事，有自己的专业研究方向不一定意味着把其他领域的路限死。 这篇博客是我一年来在网上搜集到的各种自动驾驶学习资源，内容包括学术论文，书本，开源项目，甚至微信公众号等等等。在学习的过程中，我每次找到好的资源都会高兴一阵子，每次遇到不好的资源半途而废就会不开心。一年下来，去粗取精，大致有以下的结果。 微信公众号自动驾驶（汽车）类 智车科技 | 从学术界转载较多，眼光总体不错 厚势 | 关注自动驾驶市场新闻，穿插有跟自动驾驶各方面相关的论文，与智车科技有相似之处 智东西 | 我平常很少看这个公众号，但他们做了一系列很棒的公开课，可在里面找到资源 Apollo开发者社区 | 有Apollo项目的教程推送 泡泡机器人SLAM | 关注SLAM领域的研究 机器视觉 | 排版垃圾，但是内容丰富接地气，包含各种有关机器视觉学习的讨论 新智驾 | 偏重于自动驾驶市场新闻 高工智能汽车 | 偏重于自动驾驶市场新闻 自动驾驶说 | 偏重于自动驾驶产品设计，大概是因为负责运营者是一位产品经理 佐思汽车研究 | 偶尔会有内容质量比较高的咨询报告放出 人工智能类 新智元 | 包含人工智能的市场信息，基础知识，论文研读均有涉猎 量子位 | 定位与新智元基本相似 机器之心 | 更偏重于研究前沿，学习资源，这是质量最高的一个人工智能公众号 七月在线实验室 | 偏向于人工智能学习资源以及开源收集和，同时关注具体的就业面试问题 招聘就业 毕马威招聘 图森未来 罗兰贝格管理咨询 依图科技 书本 《The DARPA Urban Challenge》| 看自动驾驶相关论文时，发现他们的文献综述大多都在讲DARPA，应该都是取自这本书的各种论文。这本书由参与2009城市DARPA挑战赛的队伍所写论文集合而成，相当于创世纪著作了。在新技术层出不穷的当下，这本书也依然非常有价值。 《第一本无人驾驶书》 | 作为入门是很好的书，覆盖了自动驾驶研究领域的方方面面，深度虽不足，但广度足够，可以阅读此书以获得一个总体认识。 《HandBook of Intelligent Vehicles》 | 如你所见，这是一本手册，不可能阅读完的，近乎1700页的论文合集，主要由几个section组成，每个section关注自动驾驶汽车的一个方面，像是《第一本无人驾驶书》的全面增强版。 《Probabilistic Robotics 概率机器人》| 机器人领域的经典著作，SLAM研究的经典与权威 《2017中国自动驾驶产业研究报告》| 准确来说，这是一篇研究报告，对当前国内外自动驾驶市场做了一个非常细致的研究，对把握当前大局很有用处。 自动驾驶相关学术会议这是论文的入口了，日常最新文章和学术资源可以在这里寻找。 机器人领域 IFRR RSS | 文章理论创新性，实验验证完备性要求都很高 IROS | 规模（千人左右）和影响力仅次于ICRA的顶级国际会议 ICRA | 该领域规模（千人以上）和影响力最大的顶级国际会议。计算机视觉领域 CVPR | 世界顶级的计算机视觉会议，被认为有着很强的影响力和很高的排名 ICCV | 文录用率非常低，是三大会议中公认级别最高的 (另外两个是CVPR和ECCV) ECCV | 三大顶会之一自动驾驶领域 IEEE IV | 总感觉质量稍微差了那么一点意思 ITSC | IEEE智能交通系统学会的年度旗舰会议，偏向于交通场景的研究 ICEVS人工智能会议 AAAI IJCAI 仿真/开发平台 ROS Prescan VTD(virtual test ) Carla Arisim Apollo 基础(核心)能力这会是内容最多的一部分，也是塑造竞争力的核心一部分。对以下各项的学习都是没有止境的，活到老，学到老，中途放弃是会被马上抛下的。以下的也都是入门建议而已。 语言(未完待续)语言学习有一点很重要，其一是要一边看书一边实际敲代码，另外就是要实际动手项目，而不是一直在语法上打转，那样就是陷入陷阱中了。关于这一点，myan总结的很好，请看此处。除了这些，其他实际入门时，可参考如下参考资料。 C++，从《essential C++》读起，之后借助各方大佬的博客，对于细节查询可以去看《C++ Primer Plus ++》 Python，确实比较容易，在掌握基本语法后，主要是去看基于Python提供各种的库、模块、框架，这一块才是重点。另外，要好好利用Python的优势，关于这一点，可以去看《写好Python代码的91个建议》 其他(任何一门需要使用的语言) 算法和数据结构 算法。斯坦福的算法第四讲，是最好的算法学习资源。书本、教程、视频、习题一应俱全。书本里在讲解算法时都用到了易学的配图，这一系列教程采用的语言是java，学习起来相对较简单，且在学习这门语言的过程中可以掌握面向对象编程的精髓。具体介绍，请参考算法第四版 数据结构。清华邓俊辉数据结构。一个资源足够了。 系统想要做开发还是要使用Linux系统，原因不再赘述。Ubuntu作为Linux一个发行版相对其他版本上手会更容易些，资源整理如下表。 关于Ubuntu，以前的博客做过一些资源整理，参见Ubuntu学习整理 鸟哥的Linux私房菜。语言风趣，例子丰富，基础知识和扩展知识(服务器)都有涉及，优先推荐 Linux菜鸟教程。以实际使用为教程原则，不绕弯，直击本质。 数学知识对于数学的学习是无穷无尽的，但在时间有限的时候，可以先 线性代数(矩阵论)，参照本博客，《线性代数学习》 高等数学(微积分),只需要掌握基础内容即可，youtube上的3blue1brown是非常不错的。 统计学。使用《统计学习方法—李航》密码：adep 优化相关(凸优化)。当然就是斯坦福的凸优化，但是这块儿内容不建议直接学，可以在用到时候再进行学习。 机器学习对于这块儿内容，网上有无穷多的总结资料了，总结下来，无非是那几本书，那几个视频，那几个框架而已。 应该还是未完待续…]]></content>
      <tags>
        <tag>自动驾驶</tag>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[每日学习记录]]></title>
    <url>%2F%E6%AF%8F%E6%97%A5%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95.html</url>
    <content type="text"><![CDATA[以自省而已。看看有多少开的学习项目半途而废？看看自己一天内到底都做了什么事情？ 12.2 修改deeptest；准备安装carsim；整理博客； 12.1 上午睡觉休息；下午先进行了报告；下载了carla，又失败啦；在linux上构建了airsim;做了一个很糟糕的PPT工作;又又又又搞了一遍deeptest; 11.30 提交了课程作业报告；确定了要推送的内容deeptest；试用了veristand；重新学习了ros入门操作； 11.29 上午进行组会，报告了近期工作，初步确定了VTD所需模块；完成第二篇推送；学习驾驶模拟器与Prescan的连接；查找大量关于自动驾驶传感器仿真的论文； 11.28 确定实时机收尾，补充进来曹博box；曹博新的仿真工具提供了很多优良的特性；确认VTD的模块特征，为明天的合同做准备；注册完成头条号“同济智能汽车研究所”(效果有待观察)；完成熊掌号注册；完成专利初稿修改；阅读完《小蓝书》前四章； 11.27 顺利完成车联网报告，小队被称为做的做好的，讲的也是最好的，感觉很不错；看小蓝书，李航的《统计学习方法》前两章，这本书和《西瓜书》会成为我统计学学习的两本主要参考书； 《剑指offer》会成为我的面试书；Prescan展示demo基本收尾；相关报销已完毕，等最终收尾；赵老师已回复子网信息，可进行收尾；开始尝试进行Unity与驾驶模拟器的连接；在Ubuntu上配置opencv，googleslam，科学上网工具，全部失败；继续看《带你一起学SLAM》公众号；看了《小蓝书第三章》； 11.26 prescan导入高架桥；进行头条号验证；完成拖了比较久的两篇推文；完成拖了比较久的验收；继续 整理PXI总结；继续试用ROS，复习昨晚关于ROS文件组织的内容；整理了部分子课题三项目资料；学习ROS消息和服务部分的内容； 11.24-11.25 惯例周末散心找燕子；期间完成了车联网报告作业；开始亲自上手学习ros；carla和aisim的安装依然失败了，很是不爽呐，但是失败是成功之母，没问题；更新了部分博客，再次确定自己的学习内容和学习计划 11.23 做PXI总结PPT，开PXI会，确定向赵老师，曹工问接下来的情况，整理excel作为后续资料；转手机资料；下午继续进行《西瓜书》 11.22 修改专利实施例，完成专利的初稿；下午开组会；讨论周二车联网使用的思路，准备用在环仿真来写；成功试用了VTD的demo；晚上回去看了一会儿西瓜书； 11.21 服务器今天成功安装了win系统，并配置了以Prescan为核心的一系列工作环境；同冯总结了unity目前的工作，提醒他做一份相关操作的文档；教冯进行Prescan的学习，为接下来的Demo做准备；递交了关于服务器的报销，明天跑驾驶模拟器的报销；蓝神开了新的模拟器点，需联合陈冯工作；对日常技术的学习进入了一个小的瓶颈期，必须腾出来时间专门做一下这件事。 11.20 确定实时机选型，这是一个重要的节点；成功试用VTD；为其他人配置了一遍Prescan，并运行了过往的大型项目；为学弟讲述Prescan用法，帮忙完成工作；修改了一篇英文作文；上午课上继续广泛浏览《西瓜书》；今天是还算充实的一天，很不错哦~ 加油 11.19 上午主要整理了周五的设备报价资料，还有向陈老师报告一件事没做；下午前两节听了朱老师报告；后两节上课，课上继续翻《西瓜书》；晚上先去看病了，得病是真的影响效率啊，明天要去验血；回来后第三次参观韩博的平台，进行了物理层的连接，但carsim的license出了一点问题；晚上回来审核了公众号推送；买回来驾驶模拟器支架（加紧走报销啊）；生病真是最折磨人的一件事，感觉以前清醒着书听课学习原来是那么奢侈的一件事，赶紧吃药，赶紧好起来。想去照顾哥哥又过不去，不要不要生病哇，快好快好，不要让我老公再生病很难受了。抱紧你啊。 11.18 发烧感冒了啊，躺了大半天，下午五点才继续回到课题组工作，效率非常非常非常低，完成了一周工作总结的书写，其他实在想不起来做什么事了，可能是因为本来就没做什么事。 11.17 为博客100篇做准备，完善整理了部分博客，写了《我为什么要写博客》的总结；进行收集数据的迁移；阅读论文《 Perception, Planning, Control, and Coordination for Autonomous Vehicles》 11.16 上午做了啥忘了；中午同NI工程师讨论，确定后续板卡；下午阅读了《机器学习》第三章；晚上实际又去看了EHB的HIL平台；修改补充博客； 11.15 上午进行论文的分享整理工作；听Drive core studio的宣讲；下午开了组会，分享了关于摄像头图像质量和动态范围的信息；晚上快递收到了驾驶模拟器，准备找人完成Unity与驾驶模拟器的链接；指导冯写邮件向教授问询；更新博客，翻译文章《自动驾驶 | 控制篇》和《自动驾驶 | 规划篇》 11.14 进行设备验收工作；继续配置工作环境；继续调研关于域控制器的相关信息；观看NI的课程直播；下载《deep learning with python》；与冯进行Unity下一步工作计划并讨论下一步工作；安装了ROS；完成Apollo框架的使用，并定位到了冯宗宝的博客，www.fzb.com;在晚上讲座中阅读了《西瓜书》前两章，感觉深受启发呀； 11.13 写完英语作业；安装配置新的工作环境（安装apollo失败）；填写设备的验收单；找寻博士去听NI讲座；购买G29驾驶模拟器；确定论文报销流程；修改留学生的中文摘要；确定周四要分享的论文； 11.12 上午进行一周工作总结；完成evernote笔记本的初次重构；听相关专利讲座（没啥用），讲座上粗略了解了部分关于PCL点云的知识；晚上回来开始重新安装系统，搞定任务； 11.11 下午进行组会，确定下周工作计划,完成两篇博客，整理evernote； 11.10 周六，休息呐 11.09 Ubuntu搞崩，windows盘分卷未完成，要重新去装双系统，服务器有噪声过大的问题，还需要再进行整理；整理总结关于仿真测试的workshop问题；反馈蓝神的VTD的MAC地址和注册网址；下午同朱冰老师进行workshop，基本顺利，有所启发；与NI工程师搭上线，进行后续ICU选型，需要向NI工程师发送邮件；更新整理博客；给博士的反馈目前完成了半拉子。 11.08 选无线网卡，最后选用了以太网；联系NI工程师；斯图加特会议注册；学习Unity的基础操作，解决了Unity触发器问题，至此基本上已完全项目的解决问题，进入新的实际场景的阶段；提供论文题目《基于虚实结合方法的自动驾驶数据集》； 11.07 上午SAE展览参观NI展台，晶众地图、5G开车、用啥软件的啥公司来着 SAE上的PPT还没看；下午英语课背了一会儿单词；晚上打开《essential》第六章，往下继续学习，这一章要求并不高，但也需要反复阅读；服务器拆箱；和学弟共同讨论Unity项目中的触发器（trigger）问题和后续工作安排；确定MAC地址和VTD内部技术论坛名； 11.06 躺了一天，反思了自己的一天；晚上补了一下博士留下来的项目管理任务； 11.05 终于学完《essential C++》第四章（最后两小节没看），中间不知道为什么推进很慢呐，主要是因为不适应吧，这章节本质上还是以前学习过的概念，现在只不过是更系统的了解了而已，书也到了，很好，准备先进入第六章，“以Template”进行编程，开始阅读《essential C++》第六章； 11.04 总结Unity现在的工作；阅读《算法第四版》中的排序问题；效率很低。 11.03 完成第七周工作总结，最近总结的时间总感觉花的过长了一点；反馈新学弟的读书笔记；细致化复习《算法第四版》开始；阅读《SLAM》十四讲；写科研总结《自动驾驶中的黑天鹅问题》；开谈一直以来想写的一篇文章《武侠与我》； 11.02 部署Unity自动驾驶模拟器的开发工作；询问实时机的通信方式；找到了CC系统代码，要认真研读；完成一周报告； 11.01 上午看《算法第四版》；下午进行组会；晚上进行工作总结，聚餐。 10.31 参观韩博的平台，了解Labview和Carsim的应用；讨论硬件在环仿真的专利；阅读《算法第四版》排序的应用；了解汽车的通信方式；阅读《essential C++》部分内容10.30 继续《算法第四版》的优先队列；听筒子们的开题答辩，获得一些感性认识；以纸质版复习《SLAM十四讲》；阅读《VTD Manual》；浏览关于HIL仿真的内容;写了科研总结《自动驾驶仿真需求》；补充了自动驾驶仿真工具《Unity》；写了个人博客《书摘|数学之美》 10.29 完善课题组的公众号；下午参加了学术沙龙；请同学在合同上盖章；阅读了《算法第四版》中关于优先队列的部分，这本书的内容起自上学期，中间 只因为几页内容没有读懂，就中断了这个自学项目，这次《算法第四版》不管怎样，将近浏览了一遍，这是很好的；参加了课题组聚餐，晚上效率比较低，浏览了一部分关于域控制器的内容，浏览了部分关于HIL仿真的内容，浏览了一些招聘信息（寒冬将至，一定要早做打算）； 10.27-10.28 休息的日子，周日晚回来写了研究所的公众号 10.25-10.26 繁忙的两天，气氛比较紧张；主要是继续学些《算法第四版》，这不是一本可以快速解决完毕的书；ROS仍然要继续学；一定要找到自己的优势，快没时间了。 10.24 确定合同细节完成合同；学习《算法第四版》，不开心也要继续读下去，受益无穷呐；学习《essential C++》；看到北京智行者的六大关键问题，可以把其中一个作为学弟的本科生研究方向，可以把他们的归结为自己的论文，学习部分ROS。(好像有点困难哦，白天做的事少，晚上写都没什么好写的。) 10.23 阅读关于HIL的内容；阅读《算法第四版》中关于字符串部分的内容；《数学之美》接近完工 10.22 学习《算法第四版》图部分的内容；阅读部分ROS相关概念；查找确认C++技术路线；整理chrome书签； 10.20-10.21 《essential C++》chap3-chap4，未完成；《算法第四版》图算法；《ROS原理与应用》一些基础概念。 10.19 上午完成易拉宝；递交审核了设备采购清单；下午同赵老师进行第二次学术交流，确定下一步工作范围，像陈老师学习了一些新的工作方法，主要是文档记录和用心情况；阅读部分《数学之美》和《算法》，《数学之美》准备做一次博客总结；完成一周工作总结；完成《ROS安装简史》初稿；解决了coding和github上双解析的故障，这几天解决问题都很顺利呐；但是本周在技术积累上做的并不好，明后两天补上吧。 10.18 跑设备的一天，准备敲定设备合同的细节；这天其他事情我忘记记录了，很不好意思；安装好并且试用了ROS，这天已经完美了。 10.17 读完《essential C++》前两章，这真的是一本好书呐；帮助跑Prescan的ITM插件； 10.16 学习《essential C++》；《数理统计学简史》准备closed，这个系列下一步要走具体的知识点还是继续培养关于统计的直觉要继续评估，但这个并不重要了；搞了一会儿blender中的blensor，一个lidar scanner，但没成功，注意的是，现在不该在这一块儿浪费时间，这属于可以快速学习的知识，不属于基础知识；晚上看了《数学之美》中几个章节；阅读了《编程之美》几个章节；查到了一个16.04版安装carla的博客，自己的ubuntu一直有各种问题，去国内的Ubuntu网站学习一下？要建立自己的产品意识，把微信公众号和博客当做类似产品的东西，先进行内容填充，再进行宣传推广。 10.15 听了51VR宣讲，听到了几部分有意思的内容，开一篇博客总结一下吧，也希望能亲自上手试用；递交了设备申请单，但是G29还没申请成功；和几个朋友聊了一些内容，自身一定需要有自己的优势，哪怕一样就好，要做到特别好；完成新版prescan安装，准备学习ITM的使用，看能否对标SUMO；读了部分《essential C++》，但心不定，没完成很多，不过这是本好书，一定要为完成的；下午继续阅读部分《数理统计学简史》 10.13-14 完全放松休息的两天。 10.12今天是跟项目强相关的一天，完成了一周总结，但细细想来虽然忙的连轴转，但却没在积累过多自身知识的学习，忙碌也是一种假象呐，请切切注意。 10.11 进行一周的学习内容总结；向支工反馈ICU数据类型；向陈老师反馈所需的交通流仿真软件，完成ITM申请；解决《菜鸟教程-C++》过去的疑难问题，如宏和关键指针； 10.10 确定了服务器；跟朱冰老师发了联系邮件；推送了一篇文章；依然处理hexo的coding问题。https://blog.csdn.net/xfdywy/article/details/79720070；完成《菜鸟教程-C++》第二次学习。 10.9 一整天都在折腾部署问题，间接复习了域名解析、https等杂项，这次之所以花了这么多时间，是因为问题套着问题，坑连着坑，坑的尽头还有coding公司的不作为。我有几个感触，其一千万不要把解决问题的方案寄希望于随机尝试，教程和文档基本上已经帮你绕过了各种坑，不要因为是繁长的英文就刻意逃避。其二做产品一定要注意细节，coding改了它们的产品却没有产品更新日志，在线问题反馈虽然及时但回复来回复去只是一句话，没有真心为用户提供解决方案。其三，当沉浸到问题的迷宫时，要学会抽离，不光是身体上要休息，要适当站起来走走，精神上也要转手去做做其他事情，换换大脑，暂时远离泥潭才能真正离开泥潭，此言诚不我欺；今天买的《SLAM十四讲》《算法第三版》《数学之美》《数理统计简史》，要完成读书层面上的虚实结合，听讲座时阅读了《数理统计简史》的后续内容； 10.8 公众号四篇文章； 论文修改基本完成了希望能尽快closed；对GS线性代数最后几部分进行整理，也是希望尽快完成，之后能以此为基础进行新的研究；对于自动驾驶仿真，确实是个好话题，可以关注平行理论，工具链，相关论文等。 10.7《菜鸟教程C++-高级教程》，《集体智慧编程-google算法》，假期学习都比较单纯呐，但也正说明自己可能放松自己了，应该是吧，对假期学习的东西还是要坚持下去，争取closed的。 10.6 基础《菜鸟教程-C++》，总结阅读《数理统计学简史》 10.5 每天起床，脑子里面像电影一样揭过去一个四，像印章一样盖了一个五，第五天再见，快结束了；今天的主要任务依然是复习《菜鸟编程 | C++》，真正动手解决问题的时候，很多问题都会变得清晰了呢，除此以外效率没那么高，也是因为自己假期要休息的原因，后续会和essential联袂前进；阅读《数理统计简史》，想完成阅读，做一篇书摘之类；明后两天要收尾了。（去看看数理学科专题史丛书吧） 10.4 《集体智慧编程-文档过滤》；快搜以前用的很多，要重新捡起来才对;复习《菜鸟编程|C++》；学习《Essential C++》；跟妍妍看《完美陌生人》 10.3《集体智慧编程-支持向量机》和《集体智慧编程-寻找独立特征》；感觉自己的效率还是低了一些；完成《线性代数|特征值》总结；完成《线性代数|对称矩阵》总结，阅读《数理统计简史》并进行部分总结 10.2 进行《集体智慧编程-K聚类》；补充《线性代数-特征值，特征变量》的内容；阅读《统计之都》，并选取了几篇博客；阅读了岛田庄司的《占星术杀人魔法》 10.1 读https://yufree.cn/cn/2017/12/31/30/，以及谢益辉创建的统计之都和他自己的博客，感觉发现了新大陆；阅读完了《SLAM》第十讲；《统计七十五讲》已阅读完，后边的内容价值不大，舍弃；对了，小论文已被接受，即使不喜欢这个话题，但既然做了那篇论文，把它转换成成果是最好的方式；疯狂收集电子书是很有快感的，要注意，需要找到经典的书来读，不然终究一事无成。-时刻保持跟科班同学的联系，牢记自己是个非科班人，这样才能心存敬畏--出自《统计之都 | 入门书籍》。晚上进行了《集体智慧编程|第七章|决策树建模》，修复有一各bug花了大量时间，最后是靠对照源代码解决的，修理bug的能力还需要专门去进行训练；补充了部分关于《线性代数，特征值，特征向量》的内容。 9.30 看电影去；完成了《统计七十五讲 | 正态分布、测量》；完成了nextcloud设定，包括文件夹和上传要求；下午上课阅读了《集体智慧编程》三四五讲的梗概；跟新同学布置了阅读任务；上午重新阅读《SLAM》第十讲(尚未读完)；和来自达姆的学长讨论了基于VTD的编程配置；重新阅读evernote文章《卡尔曼滤波》，发现推导卡尔曼滤波是可以基于不同场景的。 9.29 补完《统计七十五讲 | 相关性》；更新Ubuntu，选用了tongji更新源； 重新阅读《SLAM》第十二讲；完成本周总结并参加了组会；修改了hexo的node消失问题，要小心在意，不想再纠正已配置好的东西上花太多时间。 9.28 联系opal-RT;带课题组同学进行线上数据库学习；打开实验楼学习;修改Unity的License问题；电脑包丢了有点烦，感觉记忆力下降了，有时候碰到一个人总想不起来，有些明星的名字也总是突然想不起来，这不能一笑置之，还是应该想想原因是什么；重新阅读《SLAM》第十三讲；复习《数据结构与算法-Python》语言前二章；读《集体智慧编程》前二章；联调prescan+MATLAB+vissim，prescan和matlab成功，vissim已安装成功; 9.27 阅读完《正态分布的前世今生》，发现白宁超的wordpress，转手发现其hexo，创建时间是2018.9.20，缘分就是如此不可言说，学习以前进；博客的下一个目标是扩展话题了，必须有内容的组织和分布，有所条理；参加线上数据库培训会议；整理近期对统计学学习的资料；确定好的统计学习网站:统计之都，在上面发现了众多大神。 9.26 整理evernote中部分内容；推动《算法4》的学习；听课题项目启动会；反馈修改；进行公众号运营的迭代工作；参加项目启动会；阅读完文章《卡尔曼滤波》，但还是有不懂的地方；《SLAM》十四讲，第二遍（慢速细化版）；找到一个好的可视化网站http://setosa.io/#/，类似马同学；高斯分布和卡尔曼滤波； 9.25 反馈ICU相关信息；确定工作站的硬件配置；核对课题报价；确定公众号下次推文（后续通知）；重整《算法4》，去年上半年看过一些，但中途抛下了，对于这本书我并不准备从头到尾认真每章过一遍，因为太长了读不完，但学会基本语法，并能找到并应用合适的算法就是成功了；阅读《算法精解：C语言描述》，从昨晚到现在大致浏览了一遍，这是去年就借的书，现在借助《如何阅读一本书》终于读完了它； 9.22-9.24 中秋出游，劳逸结合，我的灰色生活过去了，现在是彩色的； 9.21 粗略的过完了《SLAM》，这还只是个开始，接下来认真去读去深入了解才是挑战；重新学习算法，以《算法第四版》和《算法—python语言描述》为参考教材；听了职业咨询对我的建议，也许未来不一定就在技术岗一条路走到黑，诸如罗兰贝格的偏向汽车组的咨询线为什么不考虑一下呢？为什么就限制死自己这条路呢？要开阔眼界才可以的，以后也可以了解部分这里的知识，我是认真说这句话的；技术博客还是得写得做，没什么可写的是不可能的，关键看有没有“自知”，有没有善于总结；没有硬性能力提升，但这些思考应该也不错，继续努力伐。 9.20 上午进行了一周工作总结（19第二周）；跟孙悟空确定了进一步工作，软件资源可以从他这里获取；确定硬件的基本选型，决定选用超高配置的版本；向赵老师反馈需要进一步的需求，为后续跟支工交流创立基础；下午进行了两场讲座（收获不大）和一次组会；晚上继续学习《SLAM》；决定在EiServer上搜索一波论文，主要是关于自动驾驶仿真的论文； 9.19 粗略看完《SLAM》第十一讲，第十二讲，在看《SLAM》第十三讲，有大量的新知识，很不错；同支工讨论了自动驾驶仿真平台，学到了很多东西，同时在实时机选型方面取得相当的突破，在整个在环方案搭建方面取得突破，终于可以称得上有所进展了，完成了一个会议纪要；下午英语学习和晚上自学的效率并不是很高，依然是在想未来究竟要做什么的问题，有所纠结，有所动力；斯图加特的论文可能有所进展，静待发展； 9.18 将将看完《SLAM》第十讲，但问题还是有很多，需要补充大量的预备知识，还是要返回去重新看的；三四节上课，并没有很认真的听，期间想发两条朋友圈，一条是关于大脑思考与碰运气与问题迷宫，一条是功利性思考；像供应商确定最终硬件配置询价；看部分《SLAM》第十一讲、《SLAM》第十二讲的内容； 9.17 完成了上一周的工作总结，有所推迟了；同老外又讨论了他的毕业设计，向他推荐了Unity作为环境建模的基本工具；公众号留言功能无法开启，多平台部署准备先使用今日头条试水，推送又被放鸽子，没有限制约束的学生主导项目很容易和日常感情产生矛盾；下午晚上都在重拾《Algothrims4》的配置，期间对java的基本语法又复习了一遍，晚上做部分博客《自动驾驶学习| 算法第四版》；深夜看到文章《什么是目的性》，有很大触动。 9.16 整理了一部分学习资料，看到一个鸭子文档的开源项目，挺牛的https://www.duckietown.cn/cool_videos.html，下午桌游，晚上高老九，课题组聚餐是不错哒。 9.15 在零碎的看一些关于统计学的问题，目前还是处于概念和科普阶段，主要看的资源有《统计75讲》、《马同学高等数学 | 概率篇》 、《SLAM》中一部分关于后验概率的内容，《数学之美》的前几章（贝叶斯定律真是个神奇的概念），源头还是在于《SLAM》第十章学起来过于艰难一些； 粗读了一篇比较好的论文《 Simulation Approaches to Intelligent Vehicles》 9.14 上午九点同孙悟空讨论了他的毕设，前辈的口语很好，至少比我好得多，自愧不如，要向人学习；下午课程上看了一部分《统计75讲》，当成科普文阅读，学到了一些很重要的概念，但整体读起来还是颇有滞涩的，因为是自己非常不熟悉的语言体系；晚上进行了研究生班级第一次轰趴，很开心；回来后更新了博客《与人言》，部分回顾了自己与他人交流的心态；阅读《SLAM》第十讲关于后端的内容，尚未读完，但是值得强调的是，第一遍阅读都是比较粗略的，后期这本书还需要再花时间； 最近这段时间看论文比较少，要注意。 9.13 今天上午在进行公众号数据分析，这是我第一次直接应用R语言工具，也解决了一些问题，认识到了自己的不足之处，虽然最后那张相关性的图片并没有最终用上；下午开了组会，陈老师给我们讲了一些工作处理的方法：包括理解别人的任务，学会给对方分配任务，闭环跟踪等；晚上总结了微信公众号工作得失于博客上； 9.12 低效的一天。一个临时接派的不太熟悉的技术路线任务耽误了太多时间；早上遇到黄老板，想由他带一个具体的毕业项目，关于深度学习和测试的耦合方面的；中午帮博士想了一个针对当前研究课题的通信理论模型，并找了基本参考书；下午的英语课让我短暂的有回到班级的感觉，结交了很多可爱的新朋友，大家笑着介绍自己，我也许太长时间不跟熟人之外的人交流了，从下午的课来看，应该还没失去与人交流的能力，也是乐于与别人说话的，老师也很温柔好看，期待下周三的英语课程；晚上大致看了一些SLAM第九章的内容，这章比较重视实践，所以暂且不会核心去看；晚上更新整理了部分关于过去学习的自动驾驶资源的博客。 9.11 粗略看完《SLAM》第七讲，还是有很多的疑问，第八讲的直接法内容要少很多，也容易理解很多，在学习第八讲的时候要去反复阅读第七讲；上午的三四节课阅读了一部分以散列表为核心的数据结构问题，包括排序二叉树等；下午先复习了anaconda和jupyter-notebook的操作技巧；做微信公众号的数据分析（未完成），准备引入多变量分析；阅读《数学之美》第五章，了解了隐含马尔科夫模型； 9.10 学习《SLAM》第七讲中的对极几何、3D测量、3D-2DPnP问题；完成实施方案并提交；下午思政课学习了模式分类中一些基本概念，但这本书对我现在的水平来说还是难度太大了，不过也算长了见识，后续不准备在这本书投入过多时间；晚上重开了《数学之美》，阅读了前四章，这本书在大三时读过一遍，如今重读，依然感觉受益无穷； 9.9 继续阅读《SLAM》的前七讲，这一讲的内容突然变多了，不懂的部分也变多了，应该会花一段比较长的时间；阅读了《DeepLearning深度学习笔记》深度神经网络的部分；基本完成了实施方案，并对这次方案总了总结，以博客的形式《表达能力》；家里出了一点事，希望一切都能过去。 9.8粗略复习了《SLAM》的前五讲， 阅读了第六讲以及第七讲的一部分；更新了Unity的自动驾驶仿真资源整理。 9.7 继续写报告，同老师进行了第一版讨论，问题还是比较多的，归根到底还是自己见的太少，总结的太少，想的太少；阅读《DeepLearning深度学习笔记》前几部分；阅读《七周七语言编程范型》中关于Ruby章节的一部分，这能帮助厘清很多概念，也安装了第七语言ghci，想在闲暇时间跳着阅读下这本书； 9.6 起床看到赵老师的报告，深切的知道何为差距，一味坐井观天，活在自己的世界里，是多么可悲的事情；解决了gitment的评论问题；开学第一天班会；下午余老师的教导会； 9.5 繁忙但较为低效的一天：实施计划真正落笔时举步维艰；第三方实时机/硬件平台基本模块了解，但具体要求还是 一片迷雾，可见的未来内也解决不了这个问题；博客的评论系统初始化有问题，尚未解决，在要不要保留评论系统中摇摆；研究生培训，未来四天都有一些混杂的安排，虽然事情很多，但这次不想继续互相边缘化了；晚上要继续搬寝室； 9.4 上午依然进行公众号排版；思索第五个子任务技术路线书写；下午以及傍晚阅读大量dSpace和实时系统相关内容；九点以后大致整理翻译了一些Unity资源，但是比较乱；效率好低，是不是应该捞出点时间看看外面固定的跑步来提高效率呢？ 9.3 排版同济智能汽车研究所公众号推送；查询AEV混合资料，准备明后两天集中写项目的技术路线；下定决心解决博客的交流渠道，历经爱比力，hypercomments等，终于找到了gitmment，又恰巧发现了next已配置了gitcomment，中间又遇到几坑，搞定。 9.2 学习部分mxnet框架；带人浏览自己的工作环境；evernote整理大框架完成；准备整理知乎保存的内容；周末对自己还是过于放纵了，切忌切记。 9.1 周六以休息为主，整理部分evernote(长期工作) 8.31整理部分evernote(长期工作);进行了一周工作总结，完成一周总结的excel;下载了一本关注自动驾驶安全评估的书，应该能提供一些灵感；整理部分下载的论文和会议(E:/课题组/论文 )（找到了一些需重读的文献和书籍）；开组会；为同学寻找了一个确定性的论文《nondetermintistic influence》；确定奇妙清单作为日常工具的地位；开始进行硬件部分的寻价；《SLAM十四讲》不是一本能轻易搞定的书，必须静心下来，前四章还是较熟悉的内容，第五章之后每章都需要大量知识； 8.30整理部分evernote笔记(长期工作)；完成对线性代数|正交矩阵的整理；完成在环仿真项目实施方案大纲的书写；同孙悟空同学确认了他的毕业论文进度，后续工作准备交由马博执行；完成线性代数|行列式的整理；阅读长文《什么是深度学习？（从函数逼近论的角度来理解和解释）》(未读完，与当前线性代数关系紧密)；阅读《SLAM十四讲》关于相机模型的部分；从今天起，进行更为完善的每日学习记录，过去的记录习惯过于粗略，没能形成良好的效果，同时，将学习记录置顶。 8.29重启gluon项目(MxNet框架)；确认gluon、《SLAM十四讲》，ICU仿真等等等科研项目和学习任务并进的思路；向技术支持咨询Prescan的的RT策略；阅读Prescan的操作手册全文，以获得一个全盘认识；阅读VTD的技术手册(未完成)，了解其以在环为核心的设计理念；《剑桥金庸武侠史》阅读即将结束； 8.22-8.28 与大宝贝出行一周，算毕业旅行了~ 很开心很幸福，不是虚幻的，是踏实的幸福。 8.21 交代出行前的工作安排，主要包括一些文档整理、会议纪要和具体工作路线；晚上剪发；总结文章，准备出行期间不能及时更新的博客。准备出游休息啦！hey ya！ 8.20 上午本来想重新装一下carla，但是又跌倒在从谷歌硬盘上下载这一步，搜寻时找到了一堆博士博客，加入收藏夹观察学习了一下，顺手解决google硬盘问题；看到对方博客刷新很快，自己去google上查怎么禁止刷新，关掉了motion里的enable，感觉速度变得更快了；博观而约取，厚积而薄发，自律且幸福；重新整理了部分google书签，把东西整理好的感觉真好；重新安装了matlab，配置Prescan成功；下午与赵老师交流了技术方案，深受启发； 8.19 今天是整理明天与赵老师进行的技术交流会议的PPT；主要是下午和晚上进行了这项任务；晚上重新配置了ssr，将ssr改成了v2rayN；并将evernote进行了一次更新。 8.18 上午看了《视觉SLAM十四讲》的第四章；下午睡了一觉； 晚上整理了《如何阅读一本书》 。 8.17 上午去VTD进行培训，价值并不大，但总有用处；下午开组会和人有和平的争论，理想主义者的生活也很美好吧，可惜我已经是个现实主义者了，不过思维交流也是不错的；晚上阅读了高翔视觉SLAM的前三讲和第五讲的一部分，线性代数果然是重要的；其他日常杂项工作暂且不表。 8.16 上午进行R语言学习；下午听了VTD培训；晚上阅读关于自动驾驶仿真的文献；重启高博《视觉SLAM十四讲》，科研和项目可以分家的，为什么不呢？ 8.15 继续改论文，改到天昏地老，抽空阅读了几篇关于自动驾驶论文《 Self-Tuning Method for Increased Obstacle Detection Reliability Based on Internet of Things LiDAR Sensor Models》；自己终究是要做一个复合型人才的，要提高自己的基础积累。 8.14 投完斯图加特会议论文，等待结果；开始认真考虑自己的未来规划；整理了部分印象笔记中的微信文档；效率不高，切切注意。 8.13 上午复习C++，下午开始整理《urban challenage2019》的文章，晚上对老师返还的小论文进行修改。 8.12 对博客进行该站点的SEO优化，修改了投稿小论文提交老师审核； 8.11 休息，出去玩儿，吃吃喝喝。 8.10 上午同MSC总部确定VTD未来可能合作细节；整理《Autonomous Vehicle Testing and Validation Platform:Integrated Simulation System with Hardware in the Loop 》一文并做论文分享，该论文是IV2018的学生论文第一名，很有指导意义；晚上对博客增加了字数统计功能，并对博客进行了SEO优化。 8.9 主要修整完善投稿小论文；整理Linux学习资料。 8.8 阅读论文《 Addressing the Uncertainties in Autonomous Driving》，理解不确定性的概念；阅读研究报告《Annual Review of Control, Robotics, and autonomus systems》；写斯图加特会议的投稿小论文。 8.7 上午阅读《无人驾驶汽车概论》这本书两个章节；下午根据最新的官方文档修改完善了试车场要素需求表格； 8.6 上午进行了VTD咨询和技术介绍；下午整理了谷歌书签；晚上根据书签的内容对本科毕设阶段看到的网页进行了一番梳理； 8.5 对昨晚找到的github项目进行了进一步梳理；完成了学长的场景任务；阅读关于仿真的论文. 8.4 和学姐交付关于驾驶模拟器的资料；学习凸优化中关于凸优化函数这一部分的内容；凸优化学习遇到瓶颈，是否应该转变学习思路，比如以应用为核心，而不是以学院派为核心；在网上找到了一个很好的开源项目；在网上找到了关于auronomous driving的一系列资料。 8.3 上午又阅读了关于平行视觉的论文；找到了一个新的学术网站，必须学会多看论文啦；下午睡到了三点，起来做学长安排的日常工作（此项没有记录的必要）；想人想的有点乱，先关掉微信努力学习一会儿；晚上阅读了几篇论文；]]></content>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶 | 控制篇]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6-%E6%8E%A7%E5%88%B6%E7%AF%87.html</url>
    <content type="text"><![CDATA[自动驾驶系统的运动控制控制，是将意图转化为行动的过程。它的主要目的是通过向硬件级别提供必要的输入来完成上层的规划意图，这些输入将生成所需的运动。控制器根据力和能量映射现实世界中的相互作用，而自主系统中的认知导航和规划算法通常关心的是车辆相对于环境的速度和位置。 控制系统内部的量可以用来确定系统的性能，控制器可以对干扰作出反应，并将系统的动力学调整到期望的状态。系统的模型可以被用来更详细地描述所需的运动，如果想达成令人满意的运动执行效果，好的系统模型是必不可少的。 传统控制反馈控制是许多应用中最常见的控制器结构。反馈控制使用被测量的系统响应，并主动补偿任何偏离期望行为的偏差。反馈控制可以减少参数变化、建模误差以及不必要的干扰的负面影响。反馈控制也可以改变系统的瞬态行为，以及测量噪声的影响。 经典反馈控制最常见的形式是比例-积分-微分(PID)控制器。PID控制器是过程控制工业中应用最广泛的控制器。 其概念比较简单。它不需要系统模型，控制律以误差信号为基础，如下公式，其中e为误差信号，$k_p ,k_i和k_d$分别为控制器的比例增益，积分增益和导数增益. u(t) = k_d\dot{e} + k_pe + k_i \int e(t)dt然而，在控制器中仅使用反馈项可能会受到一些限制。第一个重要限制是它延迟了对错误的响应，因为它只在错误发生时才响应。纯反馈控制器还存在耦合响应问题，因为对扰动、建模误差和测量噪声的响应都是由同一机构计算的。对各项进行独立的响应才是更符合逻辑的。 通过在控制器中增加一个前馈项，可以向控制器添加一个新的自由度，这个控制器体系结构如下图所示。在控制器中加入前馈项有助于克服反馈控制的局限性。前馈项被添加到控制信号中，不需要考虑控制系统的任何测量。但是，前馈项可能涉及到干扰的测量等。设计前馈控制需要对物理系统有更全面的了解，因此，常常需要使用模型参考作为前馈控制器。在控制器中结合前馈和反馈项的方法也称为二自由度控制器下表总结了前馈和反馈控制的作用 状态空间控制其通常被称为现代控制，它通过检查系统的状态，尝试把系统的整个向量来作为一个单元进行控制。状态空间控制领域是一个非常大的领域，在这一领域还有很多积极的研究。 线性状态空间模型可以写成如下公式，其中 $x(t)$是系统状态向量，$u(t)$是控制输入向量，$y(t)$是系统输出向量。 \dot{x}(t) = A(t)x(t) + B(t)u(t)y(t) = C(t)x(t) + D(t)u(t)自动驾驶系统的观测结果大多是非线性的，需要先通过线性化系统的状态空间方程，来获得非线性系统的线性模型。 \dot{x}(t) = f ( x(t), u(t) )y(t) = h(x(t), u(t))双自由度控制器也适用于非线性系统。前馈用于产生参考轨迹，反馈用于补偿扰动和误差,通过对参考轨迹$x_r(t)$进行线性化处理，可以得到线性化的动态误差。 \delta \dot{x}(t) = A(t)\delta x(t) + B(t)\delta u(t)\delta y(t) = C(t)\delta x(t) + D(t)\delta u(t)其中A B C D是合适的雅可比矩阵。如果存在可设计为产生参考输入$u_r(t)$的轨迹生成过程，使$u_r(t)$生成满足系统非线性系统动力学的可行轨迹，则可配置状态空间控制器对线性化误差动力学进行反馈补偿。 基于模型的预测控制-MPC控制自治系统需要运动模型来进行规划和预测，模型也可以用于控制执行。 一种利用系统建模来优化前向时间范围的控制方法在文献中通常被称为模型预测控制(MPC)。MPC的基本结构如下图所示。模型预测控制，将最优控制的性能与鲁棒控制的鲁棒性相结合。预测是在短时间范围内进行的，称为预测范围，模型预测控制器的目标是在预测范围内计算最优解。模型和控制器可以在线改变以适应不同的条件。模型预测控制在工业过程控制应用中取得了巨大的成功，这主要是由于其简单的概念和用输入约束和非线性处理复杂过程模型的能力。 模型预测控制还有其他一些吸引人的特性，比如设计多变量反馈控制器对它而言是比较简单的。它还可以方便地指定控制器必须执行的系统输入、状态和输出。MPC还允许指定一个目标函数来优化控制工作。MPC还可以处理时间延迟，拒绝测量和未测量干扰，并利用以前存储的预期信息。这个特性对于例如遵循固定的路径等重复的任务非常有用。MPC实现了优化和反馈调整，模拟了自然过程，其也被广泛应用于汽车应用。 为了提高燃油经济性、排放和安全性能，整个车辆系统的运行必须在整个运行范围内达到最佳状态。然而，在汽车系统中应用模型预测控制器与在过程控制行业中所面临的挑战不同。在过程控制行业中，采样时间相对较长，可用的计算资源也比较充足。汽车进程的采样周期为几毫秒，由于空间限制，可用的计算资源数量有限。 因此，处理器速度和内存的进步以及新算法的开发对于推动MPC在汽车行业的更广泛应用非常重要。MPC已经应用于多种汽车控制应用，包括牵引控制、制动和转向、车道保持等。模型预测技术也被应用于各种工程的轨迹跟踪问题。 轨迹生成与追踪已知路径信息的轨迹生成方法有两种。第一种方法是使用优化方法同时生成和跟踪轨迹，另一种方法是解耦轨迹生成和跟踪。前者将生成和执行/跟踪任务集成到一个优化问题中。这种方法通常用于最优时间应用，例如在中。由于处理能力有限，实时运行优化问题是一个挑战，在复杂环境下进行规划可能并不十分有利。 轨迹生成轨迹生成的问题是找到一个完整的控制输入$u(t)$，它对应于某个期望状态的轨迹$x(t)$。轨迹生成问题可以为两点边值问题。边界条件通常包括初始状态$x(t_0) = x_0$和最终目标状态$x(t _) = x_f$，系统动力学$\dot{x} = f (x, u)$作为附加约束。对于满足边界条件的给定状态的轨迹x(t)，如果没有控制输入u(t)，则定义为不可行的轨迹。 轨迹是限定在一定时间间隔内的运动的表示。这可以是在区间上对状态向量的详细描述$x(t)|(t_0, t &lt; t _f)$上的状态向量的描述，或者是在一个区间上输入向量的描述。$u(t) | (t_0, t &lt; t_f)$. 自动驾驶汽车的轨迹生成问题可以通过多种技术来解决。讲述轨迹生成的文献通常可以分为两种方法:(i)基于传感器的方法和(ii)基于动力学的方法。第一种方法更倾向于机器人领域。几十年来，机器人研究人员一直在解决轨迹生成问题，该问题已被应用于工业机器人和自主移动机器人。基于传感器的方法通常集中在对环境的感知集成，而不考虑车辆动力学。 另一种方法更多地基于车辆动力学。文献中提出了各种轨迹的优化方法，如遗传算法的应用，梯度下降法等。对车辆动力学和控制的深入理解可以推动突破自动驾驶车辆的极限。轨迹生成和跟踪的研究也被应用于半自主车辆，用于更先进的驾驶员辅助系统。 应该在充分考虑自动驾驶汽车的目标之后，在基于传感器的方法和基于动力学的方法之间寻找一个平衡。 轨迹跟踪在这一节中，将综述可用的路径和轨迹跟踪方法。我们认为路径是计划从起始姿态移动到目标姿态的几何表示，而轨迹还包括运动的速度信息。 目前最流行的两种轨迹跟踪方法是 几何方法 基于模型的方法 基于模型的几何路径跟踪从基于模型的路径跟踪方法中派生出来的控制器使用车辆的运动学和/或动力学模型。 基于运动学模型的控制器在低速应用中表现良好，但误差随着车速和路径曲率的增大而增大。 基于动态模型的控制器在高速公路自动驾驶等高速驾驶应用中往往表现良好，但在车辆快速加速、减速和大曲率路径时。基于模型的方法要求路径是连续的，对扰动和大的横向偏移不具有鲁棒性 基于几何的路径跟踪几何路径跟踪算法利用简单的几何关系推导出转向控制律。这些技术利用前视距离来测量车辆前方的误差，就模型复杂度而言可从简单的圆弧计算到更为复杂的几何定理，如矢量跟踪方法。 最流行的几何路径跟踪算法之一是纯追踪路径跟踪算法。纯追踪路径跟踪算法是在距离车辆当前位置一定前视距离的路径上寻点。该算法相对简单，易于实现，对干扰和较大的横向误差具有较强的鲁棒性。该算法的输入是路径点，而不是平滑曲线，因此不太容易受到离散化相关问题的影响。如果所选的前向距离不合适，特别是在速度较高的情况下，当前向距离增加时(通常将前向距离设置为与速度相关的递增函数)，该算法仍存在切角（ corner cutting corner cutting）和稳态误差问题 为了避免限制路径生成的方式，路径应该以分段线性方式表示，根据这一原理，具有连续的一阶和二阶导数的平滑轨迹，例如贝塞尔曲线，应该表示为密集点序列，从而能够应用更广泛的潜在跟踪算法。一个点通过线性路径段连接到路径中的下一个点。为了尽可能地逼近连续路径，必须对连续路径进行更密集的离散化。离散节点包含在有序列表中,按顺序和路径点追踪。 纯算法具有一个可调参数,即前向距离$L_{fw}$。阿克曼转向几何,该算法定义了一个虚拟的圆弧，用以连接锚点(rear axle)和跟踪点。 对该算法进行改进，不一定选择锚点作为rear axle ，可被定位在沿$x_b$与后桥的距离为e的点。然而，在此之后，锚点将被假定为后桥。 对该算法的稳定性极限进行了分析，结果表明，对于系统所涉及的最小前向距离和过程延迟的正确组合，纯跟踪算法是稳定的。]]></content>
      <tags>
        <tag>自动驾驶</tag>
        <tag>总结</tag>
        <tag>DARPA</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶 | 规划篇]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6-%E8%A7%84%E5%88%92%E7%AF%87.html</url>
    <content type="text"><![CDATA[早期的自动驾驶汽车(SDVs)本质上是自动的，因为它们的设计功能通常仅限于车道跟踪、自适应巡航控制和其他一些基本功能。2007年DARPA城市挑战赛(DUC)展示了一种现在也能被广泛使用的规划框架，它可以让自动驾驶汽车有能力处理多样的城市驾驶场景。 自动驾驶汽车的表现相比人类司机差距很大，在DARPA挑战赛中，35只队伍中，只有6支队伍完赛,尽管如 此,这一具有里程碑意义的比赛也证明了在城市环境中实现无人驾驶的可行性，也揭示了在研究自动驾驶是急需解决的挑战。 背景介绍Boss, Junior, Odin, 是DARPA大赛的前三甲，除了它们，还有其他许多队伍，使用了类似的三层规划框架，包括任务规划器（全局规划器）、行为规划器动作规划器（mission planner, behavioral planner, and motion planner.）。第四名的Talos据说使用了两层规划器：一个导航器和一个运动规划期，导航器基本上同时执行任务规划器和行为规划器的功能。 任务规划器或路线规划器（route planner）关注的是高层次的目标，例如分配、取\丢任务，以及决定应该采取哪些道路来完成驾驶任务。 行为规划器或决策者（decision maker）会做出做出一些决策，进而遵守规则限制，并和其他交通参与者交互，并产生相应的局部目标，例如，改变车道、超车或通过交叉路口。 运动规划器或局部规划器（local planning）生成适当的路径和或一系列动作以实现局部目标，举例来说，最典型的目标是达到目标区域的同时避免障碍物碰撞。从DUC开始，尽管分层的划分有些模糊，但自动驾驶汽车整体上仍然继承了这里描述的三级层次结构。 Mission Planning任务规划，或者说路径规划，或者称全局规划，通常通过在一个反映道路/路径网络连接的有向图网络上进行图搜索。DUC中提供了路网定义文件(RNDF—Road Network Definition File )作为先验信息。RNDF用图的节点和边表示可通过的路段，除此之外，它还包含诸如停止标志的位置、车道宽度和停车位位置等信息。RNDF是竞赛组织者手动生成的，但是现在正在进行相应研究，目标是通过自动化过程，通过直接感知基础设施(例如道路边界)直接，甚至通过对车辆运动的推断，生成存储在路网图(RNG])的更丰富的信息。 不管RNG是否是手动生成的，搜寻路径这个问题都是通过分配相对应的权重，这个权重会和比如某个特定路段的距离相一致，这之后应用图搜索算法来解决的。Dijkstra s[194]或A*[195]等经典算法对于较小的邻域是有效的，但在大型网络上需要更高效率的方法，这些方法可以在下面这篇调查论文中得到了详细描述。《Bast, H.; Delling, D.; Goldberg, A.; Müller-Hannemann, M.; Pajor, T.; Sanders, P.; Wagner, D.; Werneck, R.F.Route planning in transportation networks. arXiv 2015, arXiv:1504.05140》 Behavioral Planning行为规划人员负责制定决策，以确保车辆遵守规定的道路规则，并以符合习惯的、安全的方式与其他参与者进行互动。这可以通过结合局部目标设立、障碍物设置、调整可驾驶区域边界和/或基于成本的区域启发式调整来实现。 在获得特定的已感知到的驾驭语义场景后，大多数DUC车辆都是通过有着不同复杂度的有限状态机(FSMs)来做出决策的。“优先观察者”（ precedence observer ）和“间隙观察者”（ precedence observer ）这两个术语被创造出来，用来分类 用于检查状态转换所需的某些逻辑条件的函数。其中，优先观察者用于检查与车辆相关的规则是否允许车辆继续前进，间隙观察者检查被检测到的障碍物进入指定的感兴趣区域的最短时间，以确保其他交通参与者的安全通行。 例如,当接近一个停车标志时,SDV必在停止线前完全停车来确保predence observer，等待在十字路口的其他静止车辆按顺序离开,并通过通过测量沿着它预期路径行进的话的碰撞时间(迎面而来的交通可能没有在十字路口停止)进而确保clearance observer 这种性质的有限状态机是有限的，因为它们是为一定数量的特定情况手工设计的。 在FSM结构中没有明确描述的情况下，车辆也可能会表现出非预期的行为，如果没有有效的死锁保护的话，车辆可能会发现自己处于活跃状态，甚至是死锁状态。 最近的研究工作试图改进大型决策结构中的组织，从而管理更大的规则集[198 200]。也有一些工作尝试在决策结构中寻求可证明的保证（ provable assurances ），以保证遵守规则集。 Motion Planning运动规划是一个应用非常广泛的研究领域，比如制造、医疗、应急响应、安全/监视、农业和交通运输等领域。在移动机器人领域，运动规划指的是进行一系列决策行动以达到特定目标的过程，这通常是在避免与障碍物碰撞时进行的。运动规划者通常是根据他们的计算效率和完整性（compeltness）进行比较和评估。计算效率指的是进程运行时间，以及如何根据配置空间的维数进行缩放。如果算法在有限的时间内终止，则认为该算法是完整的，当存在一个解时，该算法总是返回一个解，并表明在其他情况下不存在解。 运动规划问题已被证明具有极大的计算复杂性，尤其是在高维空间中。为了保证完整性，可能需要对所有可能的路径进行彻底搜索，这使得许多方法在高维配置空间中陷入维数的困境;随着搜索空间维度的增加，对所有被占据的障碍物空间的表示和对无障碍物点的检测变得越来越困难。运动规划背后的核心思想是通过将连续空间模型转换为离散模型来克服这一挑战[206]。目前存在两类实现这种转变的方法:(1)组合规划，建立了一个离散的表示法，准确地表示原始问题。哪个建立了一个离散的表示法，准确地表示原始问题（2）基于采样的规划，利用碰撞检测模块对来自配置空间的样本进行离散搜索。]]></content>
      <tags>
        <tag>自动驾驶</tag>
        <tag>总结</tag>
        <tag>DARPA</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶传感器 | 激光雷达(二)]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E4%BC%A0%E6%84%9F%E5%99%A8-%E6%BF%80%E5%85%89%E9%9B%B7%E8%BE%BE-%E4%BA%8C.html</url>
    <content type="text"><![CDATA[激光雷达的认知处理过程就是点云处理过程。 激光雷达算法概论道路中主要环境对象可分为可通行区域、道路边界以及可通行区域上的路上静态、动态障碍物，道路边界确定了可通行以及不可通行区域，障碍物确定了可通行区域的避让区域。 对于激光雷达来说，认知过程一般是先找出道路边界，再在可行驶区域内区分路面点和障碍物点，之后区分静态和动态障碍物，并确定具体障碍物。激光雷达在自动驾驶系统中主要算法有车道线识别，可行驶区域分析，车辆识别与跟踪，行人识别与跟踪等。 在具体处理对象方面，就行驶路径而言，激光雷达可以用于车道线、道路边缘、道路隔离物的识别，就周边物体而言，激光雷达可识别车辆、行人以及其他影响车辆行驶的静态与动态障碍物。对于交通标志的识别，如红绿灯、限速牌等目前主要还是由摄像头完成。 在具体算法方面，对于物体的识别会先进行障碍物聚类，然后在训练集里通过特定的分类器完成识别。 具体激光雷达算法介绍车道线检测车道线的特征核心依据之一标线和周围路面所用材料不同。目前的主要算法分为两类，其一是关注车道线和泊车位线材料的反射强度，其二是利用激光雷达的特殊性，先检测出路沿，再结合导读宽度信息确定车道线的位置。 车道线和泊车位线的材料一般是选择热熔划线工艺。热熔型标线是主要选取的材料。对于该种涂料，由于需要经受恶劣的环境，其附着能力较强，且耐磨性要超过一般涂料。就反射强度值一般在12-30之间。 由于车道线材料和路面材料反射强度的不同，因此以此为特征可以轻松区分开车位线和道路路面。实际在进行道路检测时，得到的数据时圆环形状的点云，当检测到圆环出现断裂，即表明反射强度发生了突变，通过标注这些点出现的位置，就可以锁定车道线和泊车位线的位置。 路沿检测激光雷达的一个功能特点是可以进行路沿检测，它主要关注的是高度特征，常见的路沿有路牙、交通隔离栏、植物带等，另外在实际的自动驾驶环境中还有充电桩、交通标志牌、垃圾桶等中等高度对象。除此之外，道路中还有交通路灯、树木等较高的对象。整体上高度可被划分为三个层次。通过栅格图并结合特征算子可以检测出较低层次的对象。 一般使用的高度特征是最大最小值高度差特征，即设无人平台能够通过的障碍物高度下限为$Z_{min}$，平台可通过的最低悬垂高度为$Z_{max}$，低于$Z_{min}$的可认为是道路平面，而高于$Z_{max}$的障碍物不对无人平台的自主通过造成干扰，如无人平台可正常穿过桥洞、林间路等。但是随着距离增大，点云的稀疏程度增大，单一栅格中难以形成有效高度差，特别是对于低矮障碍物有漏检的风险。因为其阈值设定的问题，其还可能对高程信息进行误判，错误地把树枝等作为障碍物处理。 车辆、行人检测对激光雷达来说，车辆、行人都可以当做障碍物处理，障碍物可分为路内和路外障碍物。操作的基本思想是先对点云进行聚类，然后通过研究有效的几何模型进行目标检测。 车辆属于刚体模型，外观特征稳定，不随时间发生形变。剔除地面点云的栅格地图中，车辆在雷达二维俯视图中的形态主要呈现为正反“L”型，部分情况下呈现出“一”型或“U”型。利用这一局部特征，通过聚类分析和跟踪器对动态车辆进行速度预测，可有效检测动态车辆。行人由于其服装，体型的差别，点云特征更难被获取，目前主要采用基于机器学习的分类法进行处理。 对车辆和行人识别的本质在于聚类，聚类的基础在于被测对象点云数据的完整性。若对象反射率过低或某个物体局部反射率过低，则可能存在无法识别有效对象的问题。若被测对象互相之间遮盖严重，也会使对象点云数据的完整性受到影响，可能存在将单个物体分割为几个聚类的现象。另外聚类关注的是点云之间的距离和形态，当有与车辆行人相似的其他对象以及与它们距离较近时，也容易发生聚类的误判。]]></content>
      <tags>
        <tag>自动驾驶</tag>
        <tag>传感器</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶传感器 | 激光雷达(一)]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E4%BC%A0%E6%84%9F%E5%99%A8-%E6%BF%80%E5%85%89%E9%9B%B7%E8%BE%BE-%E4%B8%80.html</url>
    <content type="text"><![CDATA[在很自动驾驶从业者看来，激光雷达是想实现高级别自动驾驶所不可或缺的传感器。接下来对激光雷达做一点简要介绍。 激光雷达基本介绍激光产生的原理是受激辐射。它的方向性、单色性、相干性表现都非常好，因而适用于测距。现在应用于激光雷达的激光波长主要有905nm和1550nm两种。前者接近于可见光的波长，有损害人眼视网膜的可能性，因而其发射功率受到严格限制。1550nm的激光远在可见光范围之外，在不伤害人眼的前提下其发射功率得到了极大提高。 激光雷达又称LiDAR，它是一种通过发射激光（探测信号）并探测回波（反射信号）来或得被测物体的相关信息的雷达系统。 激光雷达是一种主动传感器，它不依赖于外界环境的光学条件和被测物体的辐射特性，它通过发射一束激光，之后主动探测经被测物体反射回来的回波信号。通过检测从发射到返回的时间，可以获得被测对象的距离，也可以通过多普勒效应和反射强度信息获取被测物体的速率信息和材料信息。 目前的激光雷达主要有两种类型，扫描式激光雷达和非扫描式激光雷达。前者又可以分为机械式旋转激光雷达、固态激光雷达、基于MEMS的激光雷达以及相控阵激光雷达。目前应用于自主泊车系统上的主要是机械式旋转激光雷达。 激光雷达优缺点激光雷达系统作为一种典型的主动传感器，其相对于视觉传感器和超声波雷达等有自己的优势。 激光雷达拥有极高的分辨率，它工作于光学波段，相比超声波雷达有更高数量级的信息，具体来说，激光雷达拥有更高的距离分辨率、角分辨率和速度分辨率。 激光雷达对光照和色彩等拥有极强的鲁棒性，因而它基本不会受到复杂的光线背景的影响。激光雷达获取的信息量也比较丰富，可直接获取的信息有距离和反射强度，通过简单的计算就可以获角度、速度等相关信息。 激光雷达还能生成目标多维度图像，相比较视觉传感器，它更容易获得物体的三维模型。 但激光雷达也有自己的劣势，主要列举如下。 激光雷达不能维持全天候的工作，由于受感知过程中传播过程的影响，激光雷达很容易受到大气条件以及工作环境的烟尘的影响。 激光雷达所能表现的特征维度终究是有限，这会给认知过程带来极大挑战。 激光雷达所产生的信息数量众多，这给数据存储以及信息传输带来极大的挑战。 激光雷达的造价是极其昂贵的，其离大规模落地应用还有相当一段距离。 激光雷达工作原理点云形成按照探测原理，激光雷达可分为单线（二维）激光雷达和多线（三维）激光雷达两种，由于单线激光雷达只能在二维平面上获得深度信息，其应用场景是比较单一的，它可用于探测有一定高度的障碍物，如树木、墙壁、行人这一类，但无法有效探测低矮障碍物和不规则物体。其只能起到探测功能，不能提供识别功能。而三维激光雷达可以采用多线数据，通过整合处理获得整个空间的信息。本节用于分析的激光雷达是多线旋转式激光雷达。 如图所示，在实际工作过程中，激光雷达每条线上都配备了使用高采样率的单个发射器和接收器，通过发射激光光束的时间差来确定距离，角度信息通过激光雷达旋转组件水平旋转获得，以此可建立在建立二维平面上的极坐标系。单个发射器也可以上下偏转通过俯仰角度的不同可获取第三维信息：高度信息。例如Velodyne的64线激光雷达系统垂直视角为26.8度。 激光测距技术激光测距技术。从技术原理分，主要有三角法激光雷达、TOF系列激光雷达、相位法激光雷达等三种。三角法激光雷达一般用于小距离测量，其主要应用于室内环境，但也有部分车厂用基于此方法的激光雷达来替代超声波雷达实现自动泊车。相位法激光雷达理论上拥有更好的性能，但目前由于技术局限性还未形规模落地产品。TOF（Time Of Flight，飞行时间）激光雷达目前是主流，机械旋转式和固态激光雷达中的大多数都属于此列。它通过计算激光光源到被测物体的飞行时间来进行测距。这一技术方向中是最有希望在汽车市场先行落地。 原理示意如下所示，光源发出由激光器调成的光脉冲，在遇到环境对象后反射，利用感光器接收反射回来的光线并得到数据。之后通过计算得到距离数据。TOF法目前主要有两种分类，脉冲调制技术和相位调制技术。前者通过检测目标反射脉冲激光过程的时间来获取距离信息，常用于机器人和自动驾驶。后者则是调制激光连续波的强度，通过检测相位差来获取距离信息，该方法的主要应用场景是测风、测速。]]></content>
      <tags>
        <tag>自动驾驶</tag>
        <tag>传感器</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶的终极问题 | 安全]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E7%9A%84%E7%BB%88%E6%9E%81%E9%97%AE%E9%A2%98-%E5%AE%89%E5%85%A8.html</url>
    <content type="text"><![CDATA[对于自动驾驶，随着学习深入，认识也越来越深刻一点。 安全问题自动驾驶想要落地，终极难题是什么？是安全。自动驾驶汽车从某种意义上来说就是一种轮式机器人，它和其他各种机器人的差别在哪里呢？在于它对工业化程度的要求，在于它集成的几万个零件，但最关键的还在于它对安全的需求。 自动驾驶汽车是交通工具，是需要完成承载任务的。扫地机器人失效了可能会撞到墙角死机，无人机没控制好可能会直接掉下来，运气不好的话可能还会砸到某个人的头。但是自动驾驶不能出错，或者我们不允许它出错，一出错就代表着死，这是自动驾驶汽车相对于其他智能驾驶机器人最大的特点。 “安全，安全，还是安全” 围绕自动驾驶安全这个点，再看自动驾驶的硝烟战场，你就能看的清晰很多。 对于开发。多传感器融合是为了什么？各种冗余系统是为了什么？ 对于测试。测试是检验安全的手段，也是保证安全的重要决策。针对测试，有基于数据模拟的软件在环，基于实物的硬件在环，驾驶员在环，车辆在环，封闭场地测试，实车测试。每种方式都有循序渐进，都有自己的特点。 对于场景。看看各大车企的主要落地场景吧，L4等级的汽车基本是不可能的。走的路线跳不出低速和限制运行场景两个大圈。高速公路上的自动驾驶系统、清扫车、园区无人车皆是如此。]]></content>
      <tags>
        <tag>自动驾驶</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶传感器 | 视觉传感器(三)]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E4%BC%A0%E6%84%9F%E5%99%A8-%E8%A7%86%E8%A7%89%E4%BC%A0%E6%84%9F%E5%99%A8-%E4%B8%89.html</url>
    <content type="text"><![CDATA[基于视觉传感器的认知过程是从获得的图像中获取感兴趣信息的过程。图像认知是一个逆解码的过程，它需要通过算法甄别各种无效的信息，获取有效的信息。现在的视觉认知可分为传统计算机视觉和新型计算机视觉两种。前者的核心是基于逻辑驱动的，以特征识别作为主要手段，后者以深度学习为代表，是基于数据驱动的。对于一个通用的自动驾驶系统，视觉传感器主要探测的对象有标线、其他地面标记、交通标志、可行驶区域(自由空间)、静态障碍物（如停放的车辆）、动态障碍物（行人和通用移动障碍物） 一些典型算法的介绍对于道路标线和其他众多交通对象。基本的处理过程利用图像传感器，可以使用图像顶视图整形，边缘提取和 Hough 空间分析来检测车位线边缘，从而实现标记检测。或者使用基于颜色分析的手段来定位位置，从外也可以使用基于 HOG 和 LBP特征的方法。 可行驶区域的检测主要是为自动驾驶提供路径规划辅助，可以实现整个的路面检测，也可以只提取出部分的道路信息，对不同的环境，有不同的路面检测方法，基本的方法有基于路面颜色、道路模型、路面纹理特征等获取路面的基本结构特征， 可通过这些特征进一步的获得灭点、道路边缘线、道路的基本方向（直走、左转、右转、左急转、右急转）等潜在信息。对这些特征使用传统的分割提取方法或者机器学习的方法进行可行驶区域的最终提取。 车辆、行人检测和跟踪通常是使用前置摄像头完成的，但随着环视摄像头的发展和计算能力的发展，车辆周边的车辆和行人都可以得到检测。车辆的检测和跟踪对于自动驾驶系统来说是极其重要的。通常来说，车辆检测问题和行人检测问题都是使用某种分类方法解决，视觉系统相比其他传感器能够根据对象类型轻松可靠地进行分类。典型的分类器包括 SVM，随机森林和卷积神经网络。 立体估计提供了障碍物的附加检测，大大减少了汽车紧急制动时的误报数量。现在有两种主要类型的相机深度感知技术：立体和单目。立体相机的主要优势是提高了感知深度的能力。它通过解决每个像素的对应问题，允许将像素位置从左相机图像映射到右相机图像。单目系统也能感知深度，但需要摄像机的运动来创建场景重建的基线。 自由空间是传感器视场范围内车辆周围未被物体占据的区域，可以被归类为占据网格图问题，并且通常通过将地表与其他物体分开来检测，与其他传感器类型不同，视觉系统可以提供不同且独立的估算车辆自由空间的方法。如可利用三维点云及其相应的障碍物信息；也可以通过重建车辆周围路面的特征提供有价值的自由空间信息。融合视觉的自由空间技术是有益的，其可以增加可用空间测量的准确性和可靠性。 对认知过程的特征工程介绍传感器的认知过程本质上是从图像数据到模型的映射，对该过程的影响因素的分析不再侧重于物理过程，而是侧重于信息提取过程。现有的图像处理算法有天然的不完备性，外界的三维信息在图像传感器中转化成为二维信息，信息量被削减了一个维度，由上文分析的感知过程也可以知道，由于硬件能力有限，图像中还存在着大量的噪声，最后，图像是经由复杂的图像物理形成的，图像亮度（辐射率）依赖于光源类型、强度和位置，观察者位置，表面局部几何性质和表面反射特性等，其逆任务，即从基于亮度的图像中抽取出模型，是一个典型的病态过程。 对自动驾驶系统的视觉认知技术而言，特征的提取是工作的核心。 抽象的图像处理过程如图所示,为了从图像中提取信息，图像像素需要被分组以形成集合。每个像素群对应于感兴趣的对象，不同的像素群会组成我们所需要的特征。图像的软件算法识别是一个自底向上的信息处理方式，从抽象的符号到更高的抽象描述， 其中的关键部分就是对特征的提取。精确定义特征需要结合实际问题和应用类型，对自动驾驶系统而言，典型的环境对象，如车道线、行人、车辆都有自己的特征。 特征提取是图象处理中的一个初级运算，它检查每个像素来确定该像素是否代表一个特征。从另外一个角度来看，自动驾驶的算法提取是从图像空间到特征空间再到任务空间的过程。 图像特征有不同的分类方法。从是否直观的角度来看可分为经典特征和新型特征。经典特征典型如颜色特征等，其视觉特征是自然的。新型特征则有着复杂的提取方式和计算属性，典型如用于人脸识别的 HOG 特征。从全局角度看有全局特征和局部特征之分。从特征抽象程度的角度来看，特征可分为底层、中层、语义特征。底层特征是所有直接可从图像中提取的特征，语义特征指有直接的语义含义的。中层特征介于两者之间。]]></content>
      <tags>
        <tag>自动驾驶</tag>
        <tag>传感器</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶传感器 | 视觉传感器(二)]]></title>
    <url>%2F%E2%80%9C%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E4%BC%A0%E6%84%9F%E5%99%A8-%E8%A7%86%E8%A7%89%E4%BC%A0%E6%84%9F%E5%99%A8-%E4%BA%8C.html</url>
    <content type="text"><![CDATA[一个典型的视觉传感器系统，包括光源、镜头、传感器芯片和图像信号处理器和其他相关芯片 等，后三者也可以称为摄像头，此外计算机视觉芯片也是软件算法的主要载体。 光源光源作为视觉传感器系统的输入因素，能直接影响图片质量，进而影响最终的应用效果，它是成像的基础。 光源有可见光和不可见光两种类型，车载摄像头处理的主要是可见光，它有不能保持稳定的显著缺点。自主泊车系统面临的光源状况是极其复杂的，典型的光源类型有可自主发光的光源类型和依靠反射光的光源类型两种。前者有太阳、路灯、车灯等，后者有车辆和路面的反光灯。种类繁多，光照强度不一，打光方式、光线的角度也较为复杂，这会形成极其复杂的光线工况，对自主泊车的视觉传感器系统会形成极大的挑战。 镜头镜头对成像有很重要的作用，是光线转变成图像的重要媒介，对应人类它相当于人眼中的晶状体。镜头是利用折射原理， 让景物光线通过镜头进入摄像机模组之中，在聚焦平面上形成图像。镜头一般是由多片透镜组成相应的透镜结构，从材料上来分主要有塑料镜头和玻璃镜头两大类。 sensor传感器（sensor） 是摄像头的核心，它的主要作用是完成从光到数字的转换，具体过程是先通过镜头把光信息转换成电信息， 之后再经过内部的数字处理芯片转换为数字信息。 转换成电荷，再经过相应处理转换为具体的电信号。作为感光单位都是独立的高感光度的半导体，当外界光线通过摄像头透射到 CCD表面时，每个感光单位都会被激发出相应的电荷，不同部位的不同信号整合一起形成最终的图像。CMOS（Complementary Metal-Oxide Semiconductor）， 全称互补性氧化金属半导体。它的主要材料是硅锗半导体。光线透射进来时，CMOS芯片上会形成带着正负电荷的半导体，进而形成互补效应。在这个过程中产生的电流会被记录。 CCD 和 CMOS有各自的优点和缺点，CCD形成的图像，图像灵敏度、对比度都较高，但由于它不能像 CMOS一样直接访问每个像素，而且不能直接在芯片上处理信号，因而信息处理速度较慢。相比较而言， CMOS 传感器的体积更小，在芯片上它可以直接处理信号，功耗相对来说更低，帧率比较高，能满足自主泊车系统所需要的速度要求。更关键的是，CMOS芯片有更高的动态范围，能处理实际自动驾驶环境中的复杂光线问题。其缺点在于光灵敏度较差，且由于信噪比较低，噪声影响很大。由于自主泊车系统对实时性要求比较高，又需要处理极其复杂的光线难题，因而需要高的动态范围，因而实际应用于自动驾驶系统上的芯片是 CMOS 芯片。 处理芯片图像处理芯片是自动驾驶芯片的一部分，目前主流的自动驾驶芯片有 GPU、 FPGA、 DSP和 ASIC 四种。 图像处理芯片中的图像信号处理器（ISP）相当于传感器的控制器，它进行的前面光数转换的逆过程，即把数字信息转换为图像信息。从另外一个角度上讲，图像处理芯片的主要是在传感器中把原始信转换为可查看的形式，在图像的范畴中，其对应的主要是图像增强部分的内容。解码、去噪和高动态范围处理都是这一阶段的主要工作。]]></content>
      <tags>
        <tag>自动驾驶</tag>
        <tag>传感器</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶传感器 | 视觉传感器(一)]]></title>
    <url>%2F%E2%80%9C%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E4%BC%A0%E6%84%9F%E5%99%A8-%E8%A7%86%E8%A7%89%E4%BC%A0%E6%84%9F%E5%99%A8-%E4%B8%80.html</url>
    <content type="text"><![CDATA[在提取外界环境信息时，视觉是一种非常高效的方式，就效率而言，它是获取信息最有效的手段，百分之八十的信息都会通过视觉的方式获取。在进行驾驶任务时，人类驾驶员也主要是通过眼睛判断周围的信息，再操作车辆进行相应操作。基于此， 研究人员研究了一门新兴学科，计算机视觉，其可应用在机器系统上使其获得视觉的能力，在自动驾驶系统上承载这一功能的核心部件是相机，隶属于视觉传感器系统。 视觉传感器原理介绍对于视觉传感器，其主要工作机制是外界光线经由物体反射等进入摄像机变成图像，之后计算机通过相关算法计算目标物体的特征量，从中提取出感兴趣对象的相应信息。依据数据和结果做出相应判断。并输出数据和判断结果的传感器。 视觉传感器利用的主要信息是可见光，它在电磁波中隶属一个比较特殊的波段。因为它可以天然被包括人类在内的大部分生物自然感知，可见光是一个比较特殊的波段。在进行驾驶行为时，视觉是人获取信息的主要依仗。大部分路面信息如车道线、障碍物、行人等也是通过视觉感知的。通过摄像头所得的视觉图像拥有极高的分辨率，也包含有大量信息，当前位置、周围环境的状态、可行驶区域的信息、障碍物和行人的特征都可以从图像中获得，另外根据连续图像的特征，我们也能推测预估其他对象的运动趋势。我们现在的位置、周围的环境、其他通勤者的状态。根据连续像，也能进一步推测其他对象的运动意图。 在自动驾驶系统的工作环境中，外界光源的信息是多样的，但无论是哪种形式的可见光，视觉传感器在探测可见光时只需要被动接受。与激光雷达、超声波雷达不同，视觉传感器并不需要主动发射电磁波来获取回波。这样视觉传感器就避免了机械发射结构的问题，其体积、复杂程度都得到了有效降低，另外它也避免了由于主动发射电磁波带来的传播过程的挑战。最后因为不会有限制发射功率这个概念，它相比激光雷达等主动传感器有更远的探测距离。 视觉传感器优点超声波雷达传感器的局限性在于它能获得的特征信息只是距离，特征维度单一，激光雷达的局限性就在于贵，其他传感器各自有各自的缺点。 如前文所述视觉传感器具有显著的测量分辨率优势，因此它们可以为某些物体类型生成精细点云数据，超声波传感器可能无法检测到极点和链路栅栏等，而这些“盲点”可能对自动驾驶功能的稳健性和可靠性产生巨大影响。摄像头可以建立较为精确的地面环境拓扑结构，以帮助定位，进而探测可用的自由空间。 另外大量的数据使得摄像机非常适合于机器学习技术，从而可以进行物体分类，例如行人和车辆。这些物体的分类生成另一个融合数据源，从而产生更智能和更具反应性的自动驾驶系统。 视觉传感器缺点基于视觉传感器的系统在当前也面临着许多挑战，它的研究对象主要是图像和视频，对于现有的计算能力来说，它的数据量相对来说是极其庞大的，以此也带来了极高的冗余信息。 另外通过图像可以获取形状、颜色、边缘甚至速度等特征信息，特征空间拥有很高的维度、而对于自动驾驶系统需要处理的对象和问题复杂性来说，面向单一特征的算法不能满足算法所需要的普适性和健壮性， 而为了满足普适性和健壮性设计的算法则需要极高的存储速度和运算能力。 对于机器视觉认知环境信息的机制目前还没有成熟的结论，在这一问题上，目前发展经历主要可分为传统计算机视觉和基于深度学习的计算机视觉两个方面。 传统的计算机视觉以特征提取为核心。基于深度学习的计算机视觉则认为应该去从人类大脑处理视觉信息的过程中得到经验，通过分析、模仿大脑的视觉认知机制来构建相应的机器视觉系统，但其目前对于我们来说还是典型的黑箱，对其运行机制没有清晰的学说，而且其对视觉的理解只能到定性描述的程度，不能获得定量信息，另外其相比传统计算机视觉需要更大的计算量。视觉传感器系统的健壮性、准确性难以得到保证。 需要处理的复杂对象有极高的信息量，算法的不确定性和模糊性也是影响健壮性的关键因素。 相比人类，视觉传感器的系统既需要处理人类面对的复杂庞大的信息流，又要避免人类在处理视觉信息时对准确性和定量数据额的牺牲，这在本质上是有矛盾之处的，这也是视觉系统的一大缺陷。 由于这些视觉系统有这样的典型不足，则在实际运行于环境时其必然会面临众多的边缘工况，需要通过测试去发现这些问题，并给予问题以准确的定位，从而消除潜在的系统存在的危险性。]]></content>
      <tags>
        <tag>自动驾驶</tag>
        <tag>传感器</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[武侠与我]]></title>
    <url>%2F%E6%AD%A6%E4%BE%A0%E4%B8%8E%E6%88%91.html</url>
    <content type="text"><![CDATA[武侠对我是极其重要的。武侠小说在我的阅读史中占有极其重要的地位。如果每个人都有文风的说法，那我的文风应该是金庸古龙的几十本书留下的一个投影，也许也夹杂了一些杂文选刊的风格。 谈到武侠，当属金古梁温。 读武侠小说是自六岁起，人生中第一本厚书是金庸的《射雕英雄传》，书是来自邻居家的晓辉叔，他是那时我们街上仅有的大学生。是在书房里看到了那本书，小心翼翼地翻了翻， 钱塘江浩浩江水，日日夜夜无穷无休的从临安牛家村边绕过，东流入海。江畔一排数十株乌柏树，叶子似火烧般红，正是八月天时。村前村后的野草刚起始变黄，一抹斜阳映照之下，更增了几分萧索。两株大松树下围着一堆村民，男男女女和十几个小孩，正自聚精会神的听着一个瘦削的老者说话。那说话人五十来岁年纪，一件青布长袍早洗得褪成了蓝灰色。只听他两片梨花木板碰了几下，左手中竹棒在一面小羯鼓上敲起得得连声。唱道： “小桃无主自开花，烟草茫茫带晚鸦。几处败垣围故井，向来一一是人家。” 这段话是我与武侠世界的初次相遇，还记得是坐在旺爷家花坛边上看书，月季花正有香气，抬眼时院子里也没了光线，只觉得眼睛酸痛，大概字号比较小的缘故，因为一本书就是全篇了，跟现在一本武侠小说分成四本不一样。我那时候还是极其怕生的性格，想要什么都不敢说，爸妈喊我吃饭时我没回去，抱着书在花坛边纠结。最后花了极大勇气走到旺奶奶刷碗的小厨房边，请她把这本书借给我。这也是我能想到的人生中第一次鼓起勇气做事。 我和武侠小说的缘分自此真正开始。 其实我个人最喜欢的还是古龙的风格，瑰丽的文字，诗歌一般的语言。但也许是被传统的义务教育封印了些，总感觉中正平和才是文字大道，两方纠结，最终变成了现在的样子，平淡的文风，偶尔三句骚话。 （远远的未完待续…）]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶中的黑天鹅问题 | 浅谈Edge Case 边缘测试用例]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E4%B8%AD%E7%9A%84%E9%BB%91%E5%A4%A9%E9%B9%85%E9%97%AE%E9%A2%98-%E6%B5%85%E8%B0%88Edge-Case-%E8%BE%B9%E7%BC%98%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B.html</url>
    <content type="text"><![CDATA[以下是黑天鹅事件的百度百科 “黑天鹅”事件是指满足以下三个特点的事件：它具有意外性；它产生重大影响；虽然它具有意外性，但人的本性促使我们在事后为它的发生编造理由，并且或多或少认为它是可解释和可预测的。 黑天鹅事件具体展开可叙述的点很多，总的来说，它是一种经验陷阱，人类的大脑过分依赖于因果关系和简化，只能看到最显而易见的东西。但现实是一个复杂系统，原因往往没那么简单，要对经验之谈保持警惕。黑天鹅事件也会导致预测误区，在制定计划过程中往往需要注意不确定性来源。 自动驾驶中的黑天鹅问题，本质上也是一种经验陷阱和预测误区。长久以来，所有的欧洲人都确信天鹅都是白色的，这是一个牢不可破的信念，直到在澳大利亚发现了第一只黑天鹅。如果群体没见过一件事情，那就倾向于这件事情不存在。这个问题在基于深度学习的自动驾驶系统中会被无限放大。 深度学习在自动驾驶中的应用范围很广，可以换个说法，自动驾驶就是深度学习发挥自己价值的主要战场之一。深度学习主要用在自动驾驶的感知和决策上，在基于视觉的感知层面表现尤其出色。 深度学习是由数据喂出来的，无监督的、有监督的，但本质上都是从数据中总结出既有模式，如果在训练深度学习算法时就没有加入某类数据，深度学习的框架就无法获取对特定特征的认识，在遇到特殊对象时，就无法有效识别，而且这种情况是无法通过改善神经网络结构而得到改善的，这得从数据源头解决。 我们常说，对于人工智能，数据就是一切，大致分两层意思，其一，大量的数据可以让神经网络避开欠拟合、过拟合等问题，提高系统的鲁棒性。第二，大量的数据包含对于此领域各种能想象到的、不能想象到的模式，可以用来避免黑天鹅问题。 那么如何避免黑天鹅问题呢？ 对于传统的黑天鹅问题，想要规避它，主要有以下几个手段。 第一，反精准预测。指不再追求过度的确定性，而是关注由此事件带来的利弊，并针对利弊来做好相应的准备。 第二，避免负面黑天鹅事件，追寻正面的、积极的黑天鹅事件。即在面对新的、特殊的机会时，一定要抓住，常规事件可以一直做，正面的黑天鹅没了就没了。 第三，运用杠铃策略。杠铃两头重、中间轻。就是对确定性大的事实给与更多资源，对于确定性小的事情反而可以做极端决策。 对自动驾驶来说，这些手段有什么指导意义呢？ 首先应该在意识上认识黑天鹅的重要性，认识不到黑天鹅是极其愚昧的，忽略黑天鹅的存在是极其愚昧的，对自动驾驶来说，尤其如此。 做好针对黑天鹅的决策，端到端的自动驾驶系统是不可以落地的，必须做冗余，以深度学习系统作为制定决策的依据之一，深度学习解决不了的黑天鹅可以被其他系统解决。 从源头数据集解决问题，发挥头脑风暴，尽可能穷举edge case，即边缘测试用例。虽然穷举的难度很大，但可以从信息论的角度制定出edge case的抽象特征，再通过收束世界模型的维度，从而提高edge case的覆盖性。 依然从数据源这一点解决问题，我们可以针对已有的一些数据做一些改进，进而提高数据的多样性。比如我们可以对数据进行翻转、卷积等操作，再以这些数据重新训练神经网络；再比如可以通过GAN把一些极端天气特征迁移到数据集上，重新训练神经网络。]]></content>
      <tags>
        <tag>自动驾驶</tag>
        <tag>深度学习</tag>
        <tag>机器学习</tag>
        <tag>自动驾驶测试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶仿真工具需求]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E4%BB%BF%E7%9C%9F%E5%B7%A5%E5%85%B7%E9%9C%80%E6%B1%82.html</url>
    <content type="text"><![CDATA[自动驾驶仿真在我看来主要有两个目的，其一是用在开发阶段，即训练相关算法。其二是用来测试已有算法，概括来说即软件在环、硬件在环、驾驶员在环、车辆在环等。 现在常用的自动驾驶仿真工具有Prescan、VTD、Carla等。再看仿真，从词义上就可以看到，没有“真”是不行的。仿真的需求首要就是对真实性的需求。没有真实性的坏数据无法训练出实用的算法，在进行自动驾驶测试时也没有可靠性。再来看“仿”这个词，仿真毕竟是一个现实世界到计算机虚拟空间的映射，在转化过程中性质已经完全转变了，因此仿真必须在掌握相关过程工作原理表现其关键特征维度。从另外一个方面来讲，表现所有特征维度是不可能的，理论有缺陷，对计算资源的要求太高，未来在有限的资源范围内做出高仿真场景应该是相关软件迭代的方向。 接下来让我们从“真”设想一个理想的完美的自动驾驶仿真工具应该有什么特点，有哪些具体的实现方法。 静态场景建模 静态场景有不同的真实程度，51VR的L1级别环境是简单的同质化设计，L2等级会基于数据库进行一些分割以及渲染，L3等级的渲染甚至会考虑整体上光能量的守恒，L4等级就是用来提供自动驾驶场景，demo视频 让我们想想一个典型的交通静态场景需要什么，全局性的天气条件、光线，好的仿真工具需要有强大的图形渲染能力来渲染由这些环境，甚至对于自动驾驶仿真来说，渲染能力几乎决定了一切。 非全局性的环境因素有道路、交通设施（交通标志、标识牌、红绿灯）、建筑物、篱笆护栏等等。对于他们，我们需要期待什么呢？ 首先需要明确的是，对于建模而言，开放的权限多少和方便程度是矛盾的，依然是以Prescan和VTD举例，Prescan的GUI做的很好，道路也根据特性被封装成了几个小模块，实际进行道路建模时只需要drag出来，再修改属性就可以，但是对一些形状相对特殊的路段，Prescan就无能无力了。VTD则给与建模者足够的权限，但建模工作是比较巨大的。所以我理想的建模场景是，既有封装好的基于GUI拖曳使用的模型库，又需要开放足够的底层设计接口。 其次，有很多其他领域的成熟建模软件，自动驾驶需要开放一些典型接口。比如Prescan就支持SktechUp等建筑学软件，也支持导入其他文件类型，这对环境建模是极其有利的，在这一方面，VTD的相对效果差一些。 另外，自动驾驶仿真软件也需要支持一些业内的标准，如用于生成高精度地图的OpenDrive，标标准场景标准OpenScenrio，以及OpenCRG等。这些会是未来产业的标准，需要多花时间、 传感器模型传感器模型作为感知的重要部分，也是不可或缺的。我理想中的自动驾驶仿真软件传感器模型应该具有以下几个特点。 类型多样。就视觉传感器而言，需要提供普通的RGB摄像头、深度摄像头、甚至语义摄像机，激光雷达(LIDAR)、雷达(RADAR)、超声波雷达、毫米波雷达(这个仿真比较困难)、红外线传感器，V2X传感器等等。并且提供充足的选项配置。 在提供理想传感器的同时，除了一些基本功能外，还需要提供一些特性的补充，如添加噪声的功能、畸变选项、色差选项等 对于开发者需要提供更底层的接口，让开发者配置自己的传感器模型。 动力学仿真车辆的核心是系统动力学，没有高精度的系统动力学的仿真终究只是过家家。IV2018最佳的论文所进行的硬件在环，使用的是ROS，做的很完整，但是动力学模型比较简单，因而也就限制了它的实用价值。 可以思考一下工作过程，如果车辆只能有非常简单的动力学模型，比如单轨模型或四自由度模型，这也意味着他和实际的状态相别较大，理想的工作状态是车辆接受环境信息，控制车辆移动，新的车辆位置和角度带来新的感知视角。那么如果车辆不能按照本来的规划决策效果执行动作，后边的一切其实也就失去了意义。 因此，自动驾驶仿真软件必须要有支持高精度动力学模型的功能，直接且高效的方案是与动力学仿真软件进行联合仿真，典型的如carsim，其提供多自由度的动力学模型。在这一方面，Prescan、VTD等商业软件都做的很好，Carla、Arisim则表现较差，他们只有简单的动力学仿真特向。 交通流仿真交通流仿真基本可包括车辆仿真和行人仿真，它也是自动驾驶仿真要重点关注的模块，车辆不可能永远跑在实验室和封闭园区内，它要处理的任务终究不会只是非常有限的行人和车辆。自动驾驶车辆一定要能处理很多交互的任务。这时候如果人流和车辆信息流是反常规的，或者是随机的，那这对于算法的训练和实际的测试都是很有害的。 自动驾驶仿真工具应该有自己的交通流仿真功能。可以开发自己的交通流模块，如VTD开发有自己的I-Traffic模块，Prescan有自己开发的Intelligent Traffic Module模块，但跟前文提到的动力学仿真相似，自身开发的模块毕竟总体上不如专业的仿真工具，因此软件最好有自己的仿真接口，目前交通流仿真的主要工具是PTV公司的Vissim，还有开源工具SUMO。（Prescan已经可以和Vissim进行联合仿真，但目前仍有一些局限） 交通流应该尽量与实际交通流保持一致，要有可靠性和准确性，可用的手段有： 利用AI技术生成驾驶模型，在虚拟世界中设置AI车辆自动行驶，AI可以学习交通流的特性，尤其在行人仿真方面有比较好的成效。 导入交通学中的交通流模型，并引入数学概率分布数学模型。这样的交通流模型包括宏观交通流模型和微观模型，相应的数学概率分布模型应该以高斯模型为主。 将真人开车的数据导入其中，主要利用虚拟驾驶模拟器实现，但这在更大程度上是保证单车的真实，对于宏观交通流价值没有想象中大，更多的是形成微观交通流模型。]]></content>
      <tags>
        <tag>测试</tag>
        <tag>自动驾驶仿真</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶仿真 | Unity]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E4%BB%BF%E7%9C%9F-Unity.html</url>
    <content type="text"><![CDATA[关于自动驾驶仿真，以前的博客已经有过一个概略介绍,，比较偏向理论层面，参见此处。 本篇主要关注基于Unity的自动驾驶仿真开源资源，从wiki和其他网络资源收集而来，重点放在工具总结上面,希望可以作为一个粗略的资源列表。 为什么要做一个新的模拟器市面上有一些优秀的商业软件，如Prescan，VTD等，但它们非常昂贵。也已有一些开源项目，但它们往往不是基于现代引擎开发的，因而它的图形和通用软件环境可能有些过时。所以就自己搭建一个吧，搭建时需要注意以下几点： 不要重复造轮子，要在游戏引擎的基础上构建 要利用成熟的3D游戏工作流、技术、硬件和技术社区 开源 要有可扩展性 要模块化(包括各种输入输出设备，AI，传感器等) 能足够灵活进行原型设计，驱动评估，自动测试 为什么选择Unity因为它是Unity，就是这么简单，好吧，我们认真来说，因为Unity 版本迭代稳定，目前已到第四版本 已经有很多基于Unity的项目，有众多游戏和开源项目使用的都是Unity 集成有动画、粒子系统、导航网格、物理、occlusion等各种功能 可以使用C#，Mono等成熟的脚本 可以在win/Linux/Mac等多平台上使用 有良好的社区氛围(众多开发者和素材) 有好的文档支持，包括但不限于官方文档，论坛，第三方教程，youtube等 是创新硬件产品的首选平台(Oculus Rift一种虚拟现实设备, Hydra Razer体感控制器, Leap) 免费/价格较低 不开源，但是可扩展(编写脚本，low level dll等) 为什么建立在游戏平台上游戏是3D软件中最先进的一种形式，它会不断挑战极限，不断为引擎加速迭代代码。功能如可编程着色器、物理引擎、预照明、导航网格、动画混合系统都是等等都是游戏引擎支持的，或者可以让以实时帧率运行。游戏产业也推动了硬件创新，比如英特尔的GPU开发、罗技G27车轮、TrackIR头部跟踪器、Leap手势传感器、Oculus Rift和低延迟传感器等输入控制器硬件。利用这种低成本的硬件进行模拟也将允许更多的观众访问功能合理、价格合理的模拟器。 资源 环境搭建地形构建对自动驾驶仿真来说，这一项优先级较低 Terrain Toolkit，Youtube视频 WorldComposer,可以从真实环境中构建数据城市(建筑物)构建 CityEngine 快速生成城市模型的软件，功能很强大 ViziCIties 它使用了开放地图数据，结合3d生成的建筑物进行缩放，混合了从英国政府、环保机构到Twitter等各种来源的大数据。 VTP 主要用于基于路网建设的城市，支持较多道路设计文件格式。路网(道路)构建 Road Architect 以动态交叉口、桥梁等多种道路物体为特色，是非常专业的道路建设软件 EasyRoads3D 特点是能建立众多跟道路相关的对象如栅栏，墙，树等。 从OSM中直接导入较为困难，可以考虑OSM-CityEngine-Unity3D 的工具链 从点云信息，3D地图建立，发展中。 建模(具体建筑物、车辆等)Unity本身并不是一个建模工具。它是一个“场景装配”工具和实时游戏引擎。所以详细的3D建模一般都需要在其他工具中完成。 Unity中现成的素材可以很容易地统一起来。在“ 3D Models Category of the Unity Asset store”里可以用免费或很少的钱购买到Unity中的大量产品。:如果你正在寻找一些相关的模型,在资产存储搜索“pack”,例如. Vegetation pack, City pack等等。 作者还将提供一个在线演示的基于嵌入式网页unity播放器的demo等。 对于资源包的搜索，网上有大量的整理博客，这里就不再赘述了。当然，你也可以自己建模解决问题。 交通流架构交通流对自动驾驶仿真来说是极其重要的，自动驾驶车终究不能永远活在实验室里，它终究要上路，要面临那些复杂的工况。所以交流通仿真在构建测试场景中是极其重要的。 一些online资源网站 Vehicle Traffic Simulation with Unity Martin Treibe 交通计量经济学、建模与统计研究所 资源无限，请自己多关注这个网站 Unity中的A*算法 关于交通流仿真的书 《Fundamentals of Traffic Simulation》 《Verkehrsdynamik und -simulation: Daten, Modelle und Anwendungen der Verkehrsflussdynamik》 《Traffic Flow Dynamics》非Unity的交通流仿真工具 PTV VISSIM PTV VisWalk可以提供给行人仿真(包括人群，对象，路径规划，冲撞避免等)。 PTV Balance提供了基于绿波的实时交通数据的自适应信号控制， PTV Optima 大规模交通可视化，态势感知，预测，事件检测。 PTV Visum Safety 事故数据分析与检测，分析事故集群。 SUMOSUMO是一种开源的、微观的、多模式的交通模拟仿真器，它允许模拟由单个车辆组成的给定交通流如何通过给定的路网。该模拟允许处理大量的交通情景。它是纯微观的:每一辆车都被明确建模，有自己的路线，并单独通过网络移动。 假如你下载SUMO的包，你会发现它包含许多除去SUMO之外的应用，这是用来导入和预处理路网的，以及它能为SUMO提供一些前期数据准备。 Unity自带的交通流工具 iRDS UnitySteer Auto21 Traffic Modeling and Simulation》 Verkeerstalent 天气天时架构Unity中提供了一些简单的天时控制和天气控制 天时特点 太阳位置(仰角，方位角)控制 阳光的颜色和强度由角度和大气散射调制 太阳在低角度会产生眩光效应 天空背景沙河动画(或者至少白天黑夜之间有差别) 通常至少有几个云层 云可以由程序生成和形成动画天气特点 降雨效应 地面效应(滴溅系统、颗粒系统)(积雪融化) 更多效果(吹风，树叶降落) 闪电和纹理(有疑问，不懂) 各种天气的声音 车辆&amp;物理(动力学)NPC触发传感器仿真仿真自动驾驶时，传感器仿真是不可或缺的，radar、Lidar、 数据记录其他的开源项目 C.I.T.Y. Simulator in Unity CASA 当前的几大车企也都有自己的驾驶模拟实验室，各自服务于不同的研究工作。比如Stanford REVS/CHIme。研究的最初目标是为了处理下面个现象。人类可能会过度信任自动驾驶汽车，人机共驾其实是一种非常危险的状况。因此建立这个实验室去研究人机长时间共驾时以及驾驶任务切换时的驾驶员状态。此外还有Toyoto、University of Leeds]]></content>
      <tags>
        <tag>自动驾驶</tag>
        <tag>自动驾驶仿真</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[书评 | 《数学之美》]]></title>
    <url>%2F%E4%B9%A6%E8%AF%84-%E3%80%8A%E6%95%B0%E5%AD%A6%E4%B9%8B%E7%BE%8E%E3%80%8B.html</url>
    <content type="text"><![CDATA[10月初，我在微博写道，读书也是需要虚实结合，践行平行理论的。最好的模式是对每本书，都有一个纸质版和电子版。不同的时间阶段选不用的类型；不同的篇章段落选不同的类型；不同的学习目的选不同的类型，这样才能取得更好的进步。这话说了不久，我就下单了三本书，都是以前在pdf上阅读过的，分别是《数学之美》、《视觉SLAM十四讲》、《算法第四版》。这个月的闲暇时间里我翻阅了挺多次这几本书，纸质书空间上方便的可回溯性确实在增深阅读理解能力方面效用明显。 说回《数学之美》这本书，这是非常值得推荐的一本书。在给课题组新来的小伙伴发新生大礼包的时候，除了一些必须的相关领域之外，我极私心的想补入两本书，一本是《信息简史》，另一本即是《数学之美》。我认为这两本书能重新培养学生看待和运用知识的视角，能提供一种新的基于信息的世界观，这是其他日常看论文所不能训练的能力。 《数学之美》最初是吴军博士写的谷歌黑板板，后来被整理修改成书。因为最初就是科普向，所以整本书写的深入浅出、通俗易懂，而这正是这本书最值得推荐的点，用最浅显的语言，说最艰深的道理。这种通俗性不仅表现在语言上，也体现在内容推导上。你看到了自然语言处理，了解了香农的信息论，但吴军博士介绍他们背后的原理只用到了一些基础概率论知识而已。 真正的科普文就该像吴军博士一样，用高中学过的余弦定理去解释文本分类，用几个对数公式讲清了信息论的基础概念。把复杂的内容说的简单是一种能力，这是一种返璞归真的境界。科普文就是科普文，借着科普文秀一些学术用语其实是很不专业的做法。好的科普文能开拓人的视野，增加人对特定领域的兴趣，提升人的科学意识，而这些，《数学之美》都完美的做到了。]]></content>
      <tags>
        <tag>读书</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[博客搭建进阶]]></title>
    <url>%2F%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%BF%9B%E9%98%B6.html</url>
    <content type="text"><![CDATA[一些基本配置之外的关于hexo博客的问题。 双域名绑定问题之所以想进行coding和github域名的双部署，其一是因为部署在github上的网站在手机打开时，速度极慢。其二是因为部署在境外的网页比较难被收录。在部署时有几点注意事项。 基本操作和部署在github上一致，首先在coding上注册仓库，在进行git连通时，只需要把C盘中的id_rsa.pub文件符合过来做秘钥。对，我们采用同一个秘钥。 在源文件目录下的config文件夹找那个_config文件，进行deploy配置，具体代码可参考如下。 12345678deploy:- type: git repository: github: git@github.com:sheepwxy/sheepwxy.github.io.git coding: git@git.coding.net:yanziiz/yanziiz.coding.me.git #coding: git@git.coding.net:yanziiz/yanziblog.coding.me.git branch: master - type: baidu_url_submitter 在你的域名解析网站里放两条CNAME记录指向{yourusername}.coding.me,主机记录分别设置为www和@。尤其需要注意的是，coding网站后来的解析是不支持双线部署的，因为它的服务器是在国外，所以当你把解析线路设置为默认的时候，它就会挤掉github的解析。这种情况再coding上会出现”域名未连通的问题”。/font&gt;解决这个问题，可以先把DNS服务商里所有的域名解析都删掉，之后添加coding的两条解析，把解析线路设置为默认，再添加github的解析，最后只保留github和coding的解析， 评论系统虽然这个博客目前还是个私人化的产品，但我内心还是渴望交流的，刚开始只是想在头像页附上一些联系信息，但这终究是一种受限的交流方式，于是先建立自己的评论系统。 来必力评论系统，一切都好，只有一个缺点，慢。每次打开网页看到刷新速度，实在受不了。 其他可以使用的，除了Disqus外，其他都有各种确定的不可忽视的问题。DIsqus我试用后不行，至今尚未解决。 最终选定了GitComment系统，它是基于github的issuse page 实现的，风格简洁，刷新速度快。缺点是不能一键全部初始化，而且评论者需要用github账号登录才可以评论。不过没问题，就当过滤了。配置教程 Hexo的SEO优化网站如果不进行基础的SEO，一个个关键字搜过去都没用，写了东西总不能把它完全仍在互联网的黑暗角落里留它哭泣，必备的SEO还是要有的。 SEO是面向搜索引擎的，我是针对百度和谷歌进行搜索优化，关键是学会利用百度站长工具和google search consle 这两个工具。 最主要参考的网址 百度链接主动提交 常见问题狙击 修改未显示在网页上；正确配置确让网站失效的问题。使用hexo clean,重新进行部署。 在hexo中使用latex要在每篇文章头部加入mathjax，同时要修改部分配置文件，以使其满足日常latex语法。参考链接]]></content>
      <tags>
        <tag>工具</tag>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[博客搭建基础]]></title>
    <url>%2F%E2%80%9C%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%9F%BA%E7%A1%80.html</url>
    <content type="text"><![CDATA[整个配置下来后最大的感触是，一定要看文档，文档里基本就把所有的坑填了。别人的教程，包括我这个教程，都是有很多错误的，我在配置里踩了很多坑，最后都是看教程才解决的。 hexo文档next文档github域名pagesCoding域名Pages 这些其实已足够，后面的阅读全文根本不用打开。 环境配置此处建议参考hexo官方文档，准确省事儿。 安装node.js。 通过在命令行中输入npm -v，观察有无版本号来检测安装是否成功。 git相关环境配置。 注册一个github账号 在github上创建一个仓库，注意仓库名是你自己的用户名.github.io 在官网上下载git安装。通过在命令行中输入git 来检测安装是否成功 在桌面空白处鼠标右键选择Git Bash Here，打开的命令行中输入git config --global user.name &quot;你的GitHub用户名&quot;git config --global user.email &quot;你的GitHub注册邮箱&quot; 生成ssh秘钥文件，ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot;直接按三个回车。找到生成的id_rsa.pub文件，该文件一般在C:\Users\你的电脑名.ssh文件夹中。记事本打开该文件，复制全部内容。 打开github的“settings-SSH and GPG keys”,右上角New SSH Key，title随意，内容为刚复制的内容，点击 add SHH Key结束。 回到git bash命令行，输入ssh git@qithub.com,若出现You have successfully之类的字眼就代表成功，其他信息不用去管。 博客配置此处依然是建议从hexo官方文档 博客安装&amp;预览 安装hexo。新建一个文件夹hexo，在文件夹空白处鼠标右键选择Git Bash Here，输入npm install hexo-cli -g 初始化博客。输入hexo init blog 安装必备依赖。npm install 新建博文，生成博文，打开预览。hexo n &quot;文章标题&quot;,hexo g,hexo s -p 5000 操作完成后，在浏览器打开localhost:5000，就可以看到自己的博客。 推送网站 在刚初始化的blog目录下面，找到_config.yml文件，用自己的编辑器（sublimetext）打开，首先在最后面deploy下面加入 github: git@github.com:你的GitHub用户名 你的GitHub用户名.github.io.git 注意.第一个冒号之后必须添加半角空格，这是yml文件格式；第一个冒号后面的不能用其他教程上的https格式的链接，那是旧的版本。 安装部署插件.npm install hexo-deployer-git --save 进行部署，输入三条命令。hexo clean,hexo g,hexo d 打开网站”你的用户名.github.io”就可以看到自己的博客内容了。 绑定域名域名的作用是帮助更好的记忆网站，它的工作过程是由DNS服务器域名解析到提供页面的github解析页上。绑定域名过程如下。 去域名供应商上注册域名，阿里云、腾讯云、Godday都可以。 打开实名认证后的域名，添加一条A记录，一条CNAME记录。A记录建议主机记录为@，解析线路选择境外，记录值为185.199.111.153，注意这里是最新的github的ip地址，其他的都是错误的。CNAME记录的主机记录设置为www，解析线路选择在境外，记录值为你的GitHub用户名.github.io 在安装目录下(对于本例，就是hexo文件夹)，用notepad++、SublimeText等建立一个All files类型文件，文件名为CNAME，文件内容为你的域名，例如iamwxy.com，不建议带www. hexo g,hexo d进行部署. 打开github中自己建立的仓库的Settings页面，找到GitHub Pages，在custom domin中填入自己的域名，点击Enforce，HTTPS。大功告成。 主题类型建议使用next，确实有很多优势，了解具体的next功能配置，以及学习如何使用，请参考next官网，遇到任何问题，可通过下方评论与我交流。 自己的_config文件。12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697# Sitetitle: 吴旭阳的博客subtitle: 博观而约取 厚积而薄发description: 生活随笔 高效学习 自动驾驶 数据分析 交叉领域 读书笔记 signature: 生活随笔 高效学习 自动驾驶 数据分析 交叉领域 读书笔记 keywords: author: 老肥羊language: zh-Hanstimezone:# URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: http://iamwxy.comroot: /permalink: :title.htmlpermalink_defaults:# Directorysource_dir: sourcepublic_dir: publictag_dir: tagsarchive_dir: archivescategory_dir: categoriescode_dir: downloads/codei18n_dir: langskip_render:# Writingnew_post_name: :title.md # File name of new postsdefault_layout: posttitlecase: false # Transform title into titlecaseexternal_link: true # Open external links in new tabfilename_case: 0render_drafts: falsepost_asset_folder: truerelative_link: falsefuture: truehighlight: enable: true line_number: true auto_detect: false tab_replace: # Home page setting# path: Root path for your blogs index page. (default = '')# per_page: Posts displayed per page. (0 = disable pagination)# order_by: Posts order. (Order by date descending by default)index_generator: path: '' per_page: 10 order_by: -date # Category &amp; Tagdefault_category: uncategorizedcategory_map:tag_map:# Date / Time format## Hexo uses Moment.js to parse and display date## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DDtime_format: HH:mm:ss# Pagination## Set per_page to 0 to disable paginationper_page: 10pagination_dir: page# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: next#local_searchsearch: path: search.xml field: post format: html limit: 10000# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy:- type: git repository: github: git@github.com:sheepwxy/sheepwxy.github.io.git coding: git@git.coding.net:yanziiz/yanziiz.coding.me.git branch: master - type: baidu_url_submitter#SEOsitemap: path: sitemap.xmlbaidusitemap: path: baidusitemap.xml]]></content>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ROS安装简史]]></title>
    <url>%2F%E2%80%9CROS%E5%AE%89%E8%A3%85%E7%AE%80%E5%8F%B2.html</url>
    <content type="text"><![CDATA[今天是成功安装ROS的一天，非常好。第一次装ROS是在16年10月，最后报错是”Hash Mismatch”,也没在意，转身就投入了其他工作。那时候应该没想到，以后的我和它会反复纠缠五六次，直到18年十月才安装成功。 在教程非常清楚的前提下，这五六次尝试每次都会被相同的问题狙击。被一个敌人击倒五六次的感觉，相比被五六个新对手击倒的感觉，还是前者更难受一些。 我有些迎难而上的性子，每次不成功就想再去尝试，于是每次安装失败后都会花很多时间去google搜一下，去论坛问一下，找有经验的开发者帮助一下，但是他们都没有相同的错误，两三个小时下来，结局都是失望，无一例外。 失望后就暂时放弃，中间学习时又恍恍惚惚想起来ROS，像一个可望不可及的遥远的梦，至此它已不再是一个单纯的学习工具，它变成了我的心魔。在时间略微充裕的时候，在看到别人提到ROS时，我就总是忘记了以前的痛，重新安装，重新失败，重新失望，重新燃起希望，周而复始，无间之道。 昨晚看到知乎提到ROS，又被重新点燃了学习ROS的欲望，晚上临睡前就想着尝试实验楼或双系统路线，次日清晨的实验楼，399元没年，放弃。在装双系统之前鬼使神差重新进入Ubuntu虚拟机，这次一路通顺，安装成功。 我在桌子下重重地捏了一下拳头，这是对自己的奖励动作。记录一下这次成功的环境。 虚拟机从官网安装 使用Ubuntu14.04版本（镜像来自阿里云） 更新源列表来自同济，配置自Other Software（这个也许就是解决问题的最大原因） 主要下载服务器是Main Server，勾选了“universe”，“resticed”和“multiverse” 教程选自官方链接 没有专门做梯子网络配置 其实我从来也不知道自己这个迎难而上的性子是好是坏。它太容易让我走极端，不能让事情往最高效的状态发展。但这也培养了我解决问题的信心，有信息、有坚持、有思考，大多数所谓的问题都是可以迎刃而解的。]]></content>
      <tags>
        <tag>总结</tag>
        <tag>ROS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[统计|数理统计简史(三)]]></title>
    <url>%2F%E7%BB%9F%E8%AE%A1-%E6%95%B0%E7%90%86%E7%BB%9F%E8%AE%A1%E7%AE%80%E5%8F%B2-%E4%B8%89.html</url>
    <content type="text"><![CDATA[这本书后面章节已经比较难懂，想要读懂需要更基础的入门知识，而且我对那部分的内容兴趣也不大，因而不会再做更细致的总结，《数理统计学简史》一书阅读基本结束。 这是一本非常好的科普书，帮助我厘清了很多概念，让我对以前学过的知识有了更深入的理解。我还买了这本书的实体版，pdf+实体书的虚实结合阅读体验不错。之后是从最基础部分一步步入门，抑或是作为一个非科班研究者以学习其他人的总结为主，还有待评估，但总之不会结束。 一个小阵地贡献了，还有无数大的阵地，学海无涯，且行且清醒。 统计学历史统计学(Statistics)一词本就出自意大利语，词根兼有”国家”和”情况”的含义。统计学和国家统计关系密切。在国情统计的过程中，格朗特及其《观察》扮演着重要的角色，本书出版于1662年，可被认为是统计学的起点。 这本书提出的一些主要创新思想如下 数据简约（data reduction）的概念，即把大量数据整理成表格 提出并举例处理了数据的可信性问题。 统计比率的稳定性概念，指某种特性出现的频率，岁观察次数增加而趋于稳定。 给出了现存人口年龄分布的生命表。 佩蒂于1690年出版《政治算术》遗书，采用数据来分析政治、经济、社会问题，这也是一个新的思想。阿布子诺特于1710年写了文章研究男女出生比例问题，引出了假设检验。魁特奈特所做的统计工作，大部分和人口调查有关，他引入了比例法和代表性抽样,由于这种方法的局限性，引出了数据同质性问题，即比如说比较身高，大学生和小学生放在一起比较是没意义的，因为它们是不同质的。魁特奈特认为：可以把一批数据是否能充分好地拟合一个正态分布，作为该批数据是否同质的一个判据。，但他采用的方法较繁琐，且不同质的数据有时候也能拟合高斯分布（后文介绍）。其还引入社会学上普通人的概念。 回归与相关：发现与早期发展回归相关时一个重要的工具，它沟通了原来不相关的两个领域：误差论线性模型和统计学。代表性成果是费歇尔的方差分析。 高尔登是正态分布的坚定支持者，在各种社会数据中都成功应用了正态分布，但这个在处理遗传身高问题时遇到了逻辑漏洞。考察亲子两代身高数据，发现其遵守同一正态分布。但是按照拉普拉斯中心极限定理，正态分布是大量但每一个作用较小的因素的作用，但遗传是显著因素，按道理应该是高的孩子更高，低的更低，最终两极分化，这和亲子都是稳态分布相悖。高尔登为了解决这个问题，发现了回归。 设想一个苹果园，不同位置是显著因素（阳光多的地方长得好），在不同位置的苹果大小会呈现正态分布，所有苹果合起来也是正态分布，这是因为阳光也是由各种小正态分布合成的。高尔登设计了如下高尔顿钉板，用以模拟二项分布，进而模拟正态分布。一共有$n$排钉子，各槽内球数服从二项分布$B(n,\frac{1}{2})$高尔登为了解决上面的问题，创造性地设计了另外外一个装置。图中每段标黑的部分可视为一个新的源，底部原先的大正态分布是各种诸如1,2,3的小正态分布的和。横板$AB$在这里可以看成是一个显著因素。这个发现的意义是实用层面的，他把正态分布创造性地解释遗传现象，也解释了文首魁特奈特用正态拟合作为数据同质性判断提供了理论。 高尔登也解决了回归问题，即子代身高有向母代中心靠近的趋势。子代均值与母代相同可以通过对称性来解释，至于子代方差，若没有回归，子代会因为条件方差而变大，但现在由于回归使得子代均值有了收缩。相应缩小了方差，从而抵消了增长。解释图可参考下图。]]></content>
      <tags>
        <tag>读书</tag>
        <tag>总结</tag>
        <tag>数据科学</tag>
        <tag>统计学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[表达能力（二）]]></title>
    <url>%2F%E8%A1%A8%E8%BE%BE%E8%83%BD%E5%8A%9B%EF%BC%88%E4%BA%8C%EF%BC%89.html</url>
    <content type="text"><![CDATA[我们再谈一下表达能力。第一篇在前文，题为《表达能力》 晚上讲座，最后提问阶段。一女生发问，声音很好听，音色亮，吐字清晰，概括来说，声音很正。美中不足的是，她每句话都会带两个”就是”，这习惯正类似于其他人发言时常用的”然后”。 “我想说的就是您的演讲给了我很多启发，就是我想问您个问题，就是..” 如果说话人声音平平无奇，我也不会在意，只会随意把这情况归结为紧张。但这位女生音调音速音色都称得上优秀，话里带这些无意义的词就让人很惋惜了。 自己是否也会有类似的问题呢？细细想下是有的。只不过平常表达机会不多，这类问题被掩盖了，真去表达比较长的想法的时候，然后这个词就像条件反射一样会窜出来，挡都挡不住。 替换”然后”和”就是”是不难的，中国文化浩瀚无垠，有那么多可用的转折词、副词可用。但这里也许不止是简单的虚词替换的问题，从软实力的方面，心理状态、自信程度、发言经验都是核心影响要素，从硬实力的角度看，词汇量的储备，句式的丰富度也都需积累。想做好这些，就不是一朝一夕之事了。 先谈心理状态，这应该是最核心的要素了。人若有自信，则在发言前大脑不至于一片空白，就发言所需的条理程度，稍微组织一下就能说的不错。但自信心这个实在是不好速成的事，很多表达清晰的人也不能说这全都是因为自信。那是因为什么呢？ 是经验。我上一篇也反复强调过，口语表达对复杂逻辑的要求并不高，什么事儿，做的次数多了也就有了经验。就像以前提到过的“博士生该如何提问”的问题，在会议上提问的多了，也就很自然形成了套路，可概括为COLUMBO，即COmparisons,Longterm Undertakings，Methodological Building和Origin。翻译为中文，可说你的论文和另一篇论文有什么区别？您的论文未来有哪些相关研究？你的实验中运用了哪些方法？您是怎么相处这些方法的。比较、长期计划、方法论、初心，想提出一个问题很难吗？就是这么简单。&lt;未完待续&gt;]]></content>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我很忙吗]]></title>
    <url>%2F%E6%88%91%E5%BE%88%E5%BF%99%E5%90%97.html</url>
    <content type="text"><![CDATA[这是我16年写的随笔，如今已经是18年10月，这个问题依然存在。先贴一下全文。我会不会很忙。 我很忙，我总告诉自己，忙起来就好啦！羡慕的时候，忙起来就好了。不甘的时候，忙起来就好了。感觉自己的行业太差劲？自己在所谓的名校好专业努力到极致也不如其他不入流学校热门专业的起薪？不要想那么多，忙起来就好了嘛。 忙起来，忙起来，忙起来……忙起来！忙起来！忙起来！ 忙个头忙啊。 我一直奔跑着，只是想不被这个世界抛下。但我只看到了奔跑和抛下这两个词，害怕被抛下的恐惧占据我的心，让我无暇顾及这句话原本的意思。 我只要努力就好了吧，天道酬勤，努力总会有回报的。我投入时间这么长，付出努力这么多，一定不会那么惨的。我抱着这样的想法忙忙碌碌，我因为这样的想法而庸庸碌碌。 努力就行，这个想法，是一个骗局，是逃避的借口。 路漫漫，结果和努力根本没有那么大的相关性，它只是我到达自己想到达的目标的一个条件。但努力的特别之处在于，它对于我们大多数人而言，是个必要条件，有它不一定行，没它肯定不行。 所以，努力就行是个骗局，但努力不是。 就行这两个字去掉有着莫大的意义，有了这两个字，我就好像有了一块免死金牌，我毫无顾忌的调用大量时间投入到学习上，想用这些资源来换得将来的回报。 但对于我而言，这种无目的的，不费脑的，想占便宜的蛮干导致了很多后果，时间在压缩，效率在下降，压力，不甘，失望，不解，痛苦由此而生，就像我曾经说过的那样，它们像猪笼草一样枝枝蔓蔓爬满整个心脏，再慢慢锁紧。 我问自己，我有多长时间没有那种清醒的感觉？那种初中高中经常有的，世界都是通透的，五感敏锐，身体的每一部分都充满活力的那种感觉？现在的我总是感觉大脑好像被什么布遮住了，总是懵懵的差了一点意思。 大踏步往前走，意气风发，精神抖擞，全身充满令人羡慕的活力？这种状态我很推崇，我身边有的人是这样，我不是。 我把宝压在忙碌上，压在时间上，长时间的学习让我好像有了强大的信心。但事情哪里会如此简单容易。效率和兴趣以及规划这三个军法官总是会教我怎么做人。 停下来半个小时，逗逗嘉定的猫，看看湖中的鹅，这当然不是关键。关键是，深呼吸，想想自己究竟想要什么，自己正在做什么，分散精力的工具和事到底是什么，以及想清楚我到底要不要继续骗自己，忙碌能带来一切，从心底想清楚，而不是只在嘴上说。“我当然知道忙碌不能带来一切” 关键是先有“不忙”这个意识，但问题还未解决，关于它的探讨还会继续。18年10月的我，依然还在跟这个问题对抗着，中间在大五时遇到过更深的低谷。所幸现在有了妍妍同学，她是生活之光，把我的灰色生活变成了彩色的。不忙才是一种智慧，我会调整安排好自己的时间的。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[人的梦想，是不会结束的]]></title>
    <url>%2F%E4%BA%BA%E7%9A%84%E6%A2%A6%E6%83%B3%EF%BC%8C%E6%98%AF%E4%B8%8D%E4%BC%9A%E7%BB%93%E6%9D%9F%E7%9A%84.html</url>
    <content type="text"><![CDATA[“你折腾什么啊?”“抑郁？矫情吧！”“你能保证自己一定能行？”“你长大就知道，什么情怀啊，都是浮云。”“人的一生说到底就是性价比，用最小的性价比赚最多的钱，过最好的生活…”“你这样太幼稚了，你还是年轻。”每个人都得挑自己的剧本，挑好后就没回头路了，只有硬着头皮前进。这场戏，导演是自己，演员是自己，灯光、舞美一切都是自己。我还是想做自己的主角，不想被大环境推了一辈子，百年之后墓志铭上写着大师兄的经典台词，“他来，他见，他挂了”。 那该多无聊，那该多无趣，那真的真的很没意思。 所以要坚持下去，到了极限也得坚持下去，就算是为了自己不白来这一遭，就算是为了父母家人，就算是为了你自己的女朋友。 这个过程会很艰难吧，你要直面自己的懦弱、恐惧，要强行剜出自己懒惰的骨头，再强自注入充满行动力的血。 有梦想的人总容易孤独。像小说里的勇士屠龙一样，周围人都很想阻止你，他们喜欢高贵温驯的独角兽，喜欢不变，不变代表着安全。你也喜欢安全，但一辈子如此实在心有不甘。 背上两柄剑，身后有灿若繁星的万家灯火，身前是无尽的黑暗，但可能有一点光，我允许你想一想，但最终跳下去吧，这一刻就出发。 路上会不断的有人倒下，这条路从来都不是弱者的舞台。即使每个人出发时凌云壮志堪与天比肩，但这条路上，没到终点就是弱者。你也随时会成为他们的一员，但是不要放弃，放弃了这就会成为你余生一个阴影，一个摆脱不了的梦魇，做不成事儿的标签会永远伴随着你。 总要一直往前走啊，感觉苦和难的时候就深呼吸，尽可能多做点事，等着难的时光过去。黎明前的黑暗始终是最暗的，知道这件事没什么用，但你还是要知道。 终于，站在这里了，没什么好说的，最后的结果只是顺理成章。我的梦想永不会结束。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[线性代数 | 奇异值分解、线性变换]]></title>
    <url>%2F%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-%E5%A5%87%E5%BC%82%E5%80%BC%E5%88%86%E8%A7%A3%E3%80%81%E7%BA%BF%E6%80%A7%E5%8F%98%E6%8D%A2.html</url>
    <content type="text"><![CDATA[以最重要的两个话题作为GS线性代数复习的终章。 奇异值分解奇异值分解是矩阵最终和最好的分解。因子分别是正交矩阵，对角矩阵，正交矩阵。任意矩阵都可以进行这样的分解，但是两个正交矩阵可能不用。 正定矩阵的特征向量是垂直的，其分解是$A = S\lambda S^{-1} = Q\lambda Q^T$，Q也是特征向量矩阵 。 在行空间找到向量$v_1$，然后变换到列空间某向量记做$u_1、u_1 = Av_1$。现在要找到行空间的一组正交基，变换到列空间里的一组正交基。找到一组特殊正交基，普通正交基变换后可能不正交，当A作用后，它转变成另一组正交基 r是行空间的维数，$Av_1$就是第一列，最右边的矩阵是用来缩放的，$p_1、p_2 &gt;0$,$V和U$都是正交矩阵，A是一个正交方阵。 A\begin{bmatrix} v_1&v_2&\dots&v_r\end{bmatrix}=\begin{bmatrix} u_1&u_2&\dots&u_r\end{bmatrix}\begin{bmatrix} p_1&&&&\\&p_2&&&\\ &&\dots&\\ &&&p_r\end{bmatrix}\\ AV=UP现在把第一张图完善成n维空间。 AV=UP\rightarrow A=UPV^{-1}=UPV^T\\ A^TA=VP^TU^TUPV^T=VP^2V^T\\ AA^T=UPV^TVP^TU^T=UP^2U^T线性变换线性变换是线性代数另一个起点，它也是一个重要话题，没有坐标系就没有矩阵，物理学家喜欢用线性变换，但有时为了出来结果，还是会转化为矩阵。 ex1 投影投影，通过线性变换通过它使平面一个向量变成另一个平面向量，这也被我们称作映射。例如可以把某个平面内的向量，全部映射到直线上，向量v变成向量T（v），T就可以称为一个线性变换，这可以不涉及坐标轴。线性变换对加法和数乘封闭， $T（cv+dw） = cT(v) +dT(w)$ ex2 平面平移。平面内某向量全部沿着vo进行 ,T(v)=v+v0,但这个不是线性变换。利用定义去判断。 ex3 求向量长度的变换$T(v)=||v||$，T是由$R^3$到$R$的转变。三维向量的长度，所以它也不是一个线性变换。 ex4 旋转旋转是一个线性变换 ，相加后旋转，还是旋转后相加，内容一样。课本的插图已经描述了一个线性变换。 ex5矩阵变换$T(v)=Av$，这是一个线性变换，也对应一系列线性变换，因为每一个不同的矩阵对应于一个变换，假设平面内所有向量都乘以矩阵A， 就又是另外一个变换了。 理解线性变换的方法是找到它背后的矩阵，要做到这一点，就必须确定坐标系，确定基。假设现在有一个线性变换T，输入是三维向量$R^3$，输出是二维向量$R^2$,$T(v)=Av$,则变换矩阵是2*3矩阵，每一个线性变换对应一个矩阵。 线性变换对一个向量来说意味着什么？我们需要了解所有向量的$T(v)$，才能理解线性变换的意义，线性变换对于整个线性空间有什么影响呢。为了简化问题，假设已经知道$T(v_2)、T(v_1)$，以它们为基向量，就能确定对整个空间的影响。 如何把一个与坐标无关的线性变换变成坐标有关的矩阵呢？坐标的存在意味着基的确立，线性组合的系数就是坐标系里的值，坐标源自一组基。只要确定了一组基，其他向量都可以通过基的组合表示，也就确定了坐标，确定了坐标系。坐标源自一组基。常见的向量其实默认了单位坐标系，但也可以用特征向量作为基。 现在希望通过一个矩阵来描述线性变换，构造一个矩阵A，用于线性变换T需要用输入空间的一组基来描述输入向量，也需要输出向量的一组基来描述输出向量，一共需要两组基。现在开始选择坐标。选择$R^n$空间的向量v，通过基把它们表示出来，然后把这些坐标乘以矩阵A，通过输出空间的基 。希望矩阵A起到线性变换作用，并组合这些基。 例子，投影，n和m都等于2，都在二维平面上，让所有向量变化变换后都投影到一条直线上，这里打算用另外一组基去替换标准基，这既是输入空间也是输出空间的基，第一个基向量选在直线上，第二个基向量垂直直线。任意向量v都可以表示为$v_1$和$v_2$的组合， $T(v_1)=1;T(v_2) =0;v = c_1v_1+c_2v_2$, 输入$(c_1，c_2)$，输出$(c_1,0)$，矩阵A乘以输入坐标，得到输出坐标。在这里，输入空间和输出空选择了同一组基，也因为矩阵A是一个对角阵，如果以特征向量作为基向量，则得到的矩阵A是该矩阵的特征值为对角线的对角阵，对角线上都是特征值。 总结，把矩阵和线性变换联系起来。]]></content>
      <tags>
        <tag>机器学习</tag>
        <tag>线性代数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[统计 | 数理统计简史(二)]]></title>
    <url>%2F%E7%BB%9F%E8%AE%A1-%E6%95%B0%E7%90%86%E7%BB%9F%E8%AE%A1%E7%AE%80%E5%8F%B2-%E4%BA%8C.html</url>
    <content type="text"><![CDATA[这是由勒让德开启，由高斯推上顶峰的统计学发展盛宴。 最小二乘法数理统计学的简史就是从纵横两个方向对算术平均不断深入研究的历史，纵的方面指平均值本身，伯努利及其背后众多大数律，中心极限定理，高斯的正态误差理论，横的方面指的是许多统计方法，这些方法本质都是随算术平均的发展，其中最重要的就是最小二乘法。 设对某未知量$\theta$重复做$n$次测量，结果记为$x_1,x_2,\dots,x_n$，利用这些测量值做一个估计，推理如下:设真值为a,则测量误差依次为$e_1 = x_1-a,e_2,\dots$，计算$L(a)=e_1^2+e_2^2+\dots$，令$L(a)$取最小。 这个最小值正是几个测量值的算术平均。令人惊叹 以上过程是用最小二乘来解释算法平均，我们也可以逆转这个过程。算术平均是经受住考研的方法，因此一个方法是合理的，它就应该经受住算术平均的考验，所幸最小二乘法有这样的特性。（虽然甲证明乙，乙证明甲在逻辑上不足取，但这有其现实意义） 勒让德在研究天文观测学时遇到一些数据分析问题，描述如下：有若干我们想估计的值$\theta_1 \dots \theta_k$,另有若干可以测量的量$x_0, \dots,x_k$,这些量满足线性关系 x_0+x_1\theta_1+\dots+x_k\theta_k = 0在实际求解过程中，求解这个方程要面临以下几个问题。 $x_0,\dots,x_k$量测可能有误差 上式只是数学上的近似，可能不是完全成立，这也可以被视为一种误差。 观测次数$n$往往大于变量个数$k$,在当时解决这个问题需要 解决观测数据较多的问题在历史上也经历了不同的阶段。 1750年的梅耶采用的是分组形式，把数据分成$k$组，把每组内的方程相加得到新方程。分组方法是选定其中一个系数，按系数大小分组。 18世纪的欧拉也研究过类似问题，但他的做法过于繁杂，缺乏基本合理性。 1787年拉普拉斯采用的方法也是分$k$组并对每组内方程相加，他没有指出自己为什么这么分组，在他的分组中，每个方程被应用了不止一次。 欧拉和拉普拉斯这样的顶级数学家没解决这样看起来不难的问题，主要还是因为他们擅长解决确定性问题，勒让德的成功在于不去考虑找到那几个方程（方程个数等于未知数个数），而是考虑误差在整体上的平衡，即不使误差过分集中在几个方程内，而是让它分散开。因此它采用如下公式，具体求解可以采用求偏导的计算方式。 \sum_{i=1}^{n}{(x_{0i}+x_{1i}\theta_1}+\dots+x_{ki}\theta_{k})^2=min最下二乘法有以下优点 经受住了算术平均值这一特例的考验 如果观察值全部严格符合某一线性方程，那它必然是最小二乘法的解 如果事后打算增删某些观察值，容易修改。 最小二乘法是针对适合线性关系的观测数据而做出的，现在统计学上把它叫做线性统计模型，当然它的含义比最初广的多。最小二乘法的地位主要由以下几点奠定。 最小二乘法的在统计学中的显赫地位，主要就是因为它和线性统计模型的关系。 最小二乘法有着简单的线性表达式，易于计算。 在正态分布的误差假设下，它有比较完善的小样本理论，使基于它的统计推断容易操作且有关概率计算容易进行。 高斯对最小二乘法的贡献除了建立正态误差理论之外，还有非常重要的高斯-马尔科夫定理 按通常记法把线性模型写为$y_i=x_i’ \beta+e_i,i=1,2\dots,n$,$y_i$是一维向量，$x_i$是p维向量，$e_i$是独立同分布的随机误差，期望为0，方差为$\sigma^2$。用最小二乘法得到决定$\beta$的最小二乘估计$\hat{\beta}$的线性方程组 s\hat{\beta} = XY \\ X=(x_1,\dots,x_n),S=XX',Y'=(y_1,\dots,y_n)\\ \hat{\beta}=S^{-1}XY对于这个解的过程，我们又如下结论 所得$\hat{\beta}$是$\beta$的线性无偏估计 对$\beta$的任一个线性函数$c’\beta$,其最小二乘估计$c’\hat{\beta}$也是线性无偏估计 (高斯-马尔科夫定理)，在一切$c’\beta$的一切线性无偏估计中，只有最小二乘估计$c’\beta$的方差达到最小。 其他方法。在收集数据时有很多误差，这里我们指的是误记这种可以避免的错误，如果一种统计方法受少量异常值的影响比较小，则称该方法具有稳健性。最小二乘法是一种稳健性很差的方法，原因在于目标函数是误差的平方，增长的比较快。 想解决这个问题，可以用比平方更慢的函数$p$去代替平方，当$p(\mu)=|\mu|$时，引出的估计是最小一乘估计，也被称为最小绝对偏差估计。进一步可推广得到M估计。 高斯分布狄莫弗于1730-1733年之间已经从二项分布逼近的途径得到了正态密度函数，但直到1809年，高斯提出正态误差理论，它才作为概率分布引起人们的重视，并在社会、经济、遗传学等领域引导了大量工作。 有了正态就有偏态，19世纪末卡尔皮尔逊提出皮尔逊分布族，发展了偏态分布。 正态分布有一维模型，也有多维模型，它的发展也经历了两个阶段，起先是作为测量误差的分布，之后才是作为其他数据的模型，之所以有那个差别，是因为在20世纪以前，观测数据和统计数据是两个不同概念。前者典型例子如测某人身高，它的平均值(真正身高)是真实存在的，处理它被认为需要高等数学。后者典型例子如对一群人每个人的身高做测量，这种平均值是虚幻的，处理它被认为需要相对频率数据。 但现在我们很容易统一:测量一群人的身高$x_1,x_2,\dots,x_n$，可以把它们想像成从无穷多人组成的总体抽取的样本，相应的，这无穷总体中个体的某项指标，比如身高，可以赋予一定的总体分布，例如正态分布$N(a,\sigma^2)$,这样的话，上述测量结果无非就是群集在“实在的”值a周围一些“观测值”，从而对一个人(身高值为$a$,测量方差为$\sigma^2$)的多次重复测量值无差别。 最小二乘法必须结合误差分布理论才能确定地位，不然只是算法而已，而这一切最终都得归结在天文学上。 16世纪初，天文学家第谷做了大量观测工作，这些数据为开普勒和牛顿的工作奠定了基础。1632年，伽利略第一次提到随机误差的概念，他针对误差提出了以下几点观点，并基于这几条提出了$|x|$的误差分布。1755年，辛普森对天文学家提出的平均值提出质疑，并想在知道误差分布的前提下，去计算平均误差的分布，并想证明$P(|\overline{e}| \leq k) &gt;= P(|\overline{e_1}| \leq k) $辛普森使用了一个特殊的分布证明了这个事实。拉格朗日沿着这个方法进行了研究。 拉普拉斯不是先假定一种误差分布然后证明取平均值的优良性，而是直接涉及误差论基本问题，即应取怎样的分布为误差分布，以及在决定了误差分布后，如何根据未知量$\theta$的多次测量结果$X_1,X_2，\dots$去估算$\theta$。1722年，拉普拉斯根绝自己对误差的几点假设提出了拉普拉斯分布，即误差密度函数为$f(x)=\frac{m}{2}e^{-m|x|}$ 关于高斯的工作请看《正态分布的前世今生》其基本思路一是令基于各测量值的误差密度函数乘积达到最大值。即极大似然估计。基本思路二是先假设平均值为估计值，倒推出分布为正态分布，并结合使误差密度概率最大的原则推出了最小二乘估计。 拉普拉斯在了解高斯工作之后，结合中心极限定理，提出如果误差可以看成许多量的叠加，那么误差应该有高斯分布，这是历史上第一次提出元误差学说，这解决了高斯在推导高斯分布时进行循环论证的问题。 19世纪，数据域正态分布拟合不好的情况逐渐被发现，从测量误差的角度，1903年格兰姆和齐勒把随机误差X的分布表示成一个级数，第一项为正态分布，以后各项视为由X的非正态性带来的修正。 卡尔皮尔逊后来研究这个问题是一种实用目的，即找到一些分布拟合从实际问题中带来的数据，以便在正态分布不适用时可供选择使用，1893年，皮尔逊开始研究偏态分布，得到$\gamma 分布族$的结果，他把这称为”正态曲线的推广形式，具有非对称的性质”]]></content>
      <tags>
        <tag>读书</tag>
        <tag>总结</tag>
        <tag>数据科学</tag>
        <tag>统计学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[统计 | 数理统计简史(一)]]></title>
    <url>%2F%E7%BB%9F%E8%AE%A1-%E6%95%B0%E7%90%86%E7%BB%9F%E8%AE%A1%E7%AE%80%E5%8F%B2-%E4%B8%80.html</url>
    <content type="text"><![CDATA[我以前说过，对一门知识把握不住它的脉络时，就去看历史。对于数理统计，陈希孺的《数理统计学简史》就是一门足够好的统计学历史书，看完之后你就会明白什么是期望？为什么最小二乘法那么重要？为什么三大分布是那个样子？为什么公式长这个样子？如此才能真正了解要学的东西。 早期概率论 概率是一个事件发生、一种情况出现的可能性大小的数量指标。 时间有可重复性和一次性，可重复事件的概率是客观的，一次性时间的概率是主观的。 客观概率是频率学派的基础，主观概率是贝叶斯学派的基础。 客观概率有两种形式。第一种统计概率依据该事件在试验大量重复中的概率。第二种古典概率依据试验可能结果是有限个，每种结果可能性相同。 分赌本问题A、B二人读博，各出赌金a元，每局个人获胜概率相同，规定谁先胜S局就赢得全部赌注，现在进行到A胜$S_1$局，B胜$S_2$局，问赌金怎么发放才算公平。 巴斯噶与费尔马在讨论读博问题时用到了值的概念，指的是赌注乘以获胜概率。之后惠更斯把值改为期望。 巴斯噶认为赌注的公正分配只和 为了赢得赌局，还需要取得胜利的局数相关，记为$r_1$,$r_2$ ,则有边界条件，$e(0,r_2) = 1 ; e(r_1,0) = 0; e(a,a) = 0.5$,且成立递推公式$e(r_1,r_2) = [e(r_1-1,r_2) + e(r_1,r_2-1)]/2$,由上述条件综合出一般解的形式。 费尔马解法，设定$r_1&lt;r_2$，若A取胜，所需局数可能为$r_1,r_1+1,\dots,r_1+r_2-1$,期间B取胜的局数对应为$i=0,1,\dots,r_2-1$。即若B胜i局，则A到最终取胜前再赌了$r_1+i$局，其中前$r_1+i-1$局A胜$r_1-1$局，而第$r_1+i$局为A胜。由此两种想法得到的解结果是一样的。 惠更斯制定了3条定理加上11个问题，成为惠更斯十四命题 伯努利于1713年著作《推测术》，把概率论从对赌博机遇的讨论转换为新的天地。这本书前三部分，是古典概率的系统化和深化。第一部分明确提出了独立情况下概率乘法定理的表述形式，并在此基础上严格证明了二项概率公式，第二部分首次引入了排列的概念。 推测术中把客观概率区分为两类，可以先验的概率，称之为古典概率。可以后验的概率，称之为统计概率。这里的含义和贝叶斯概率的不同。 伯努利大数定律：给定任意两个数，$\epsilon&gt;0$和$\eta&gt;0$,总可以取足够大的抽取次数N,使得事件${|\frac{X}{N} - p| &gt; \epsilon}$概率不超过$\eta$伯努利的工作证明了数学家不仅可以后验地认识世界，也可以用数学估量他们认识世界的限度。 狄莫弗的二项概率逼近这部分内容和前文的《统计学习|高斯分布》有很多内容重合。狄莫弗有著名的狄莫弗公式$(cos\theta+isin\theta)^n=cosn\theta+isinn\theta$,他也在研究一个赌博问题时要求解二项概率 $\binom{N}{i}p^i(1-p)^{n-i}$, 狄莫弗在$Np$为整数的条件下得到 D_N=2Npqb(N,p,Np)\\ D_N=2\mu qb(N,p,\mu),\mu = [Np] + 1问题的关键转化为N较大时求$b(N,p,i)$的问题。在求解过程中有提到在用频率估计概率的时候，观察值的精度与N的平方根$\sqrt{N}$成比例。 狄莫弗工作最大的意义是中心极限定理。但依然的是由于他没有从统计学去观察这个工作。 贝叶斯方法贝叶斯方法也是以二项分布为主角的工作。英国学者贝叶斯在18世纪中叶提出这个方法来解决二项分布问题，但方法的思想适用范围很广，目前其已成为数理统计学中两个主要学派之一，贝叶斯学派。已知时间概率为p，由之计算某种观察结果出现概率，这是原因推结果，称之为概率论。反过来已知观察结果，对概率p做出推断，这是结果推原因，是数理统计。 贝叶斯原始问题的表现形式是：设X服从二项分布$B(N,\theta)$，$N$已知但$\theta$未知，给定常数$a,b,0 \leq a &lt; b &lt; 1$,在观察到观察值X后，求条件概率$P(a \leq \theta &lt;b | X)$,关于这个概率的求解有两派观点。一派因为$\theta$是一个确定值，对该问题而言，答案要么是0，要么是1。但另一派认为，即使$\theta$是确定值，但目前还不确定，X的观测值提供了关于X分布的一些信息，但不能确定$\theta$，这里就有机遇成分。就像你去找人，人‘在家’或‘不在家’两种可能性，但你还是会根据今天天气去推测对方在不在家，这就是这样的过程。此时$\theta$就是个随机变量 贝叶斯为了解决问题，提出以下两个命题：设$E_1,E_2$为按先后时间顺序发生的两件事，则 P(E_2 | E_1) = \frac{P(E_1 \cap E_2)}{P(E_1)}\\ P(E_1 | E_2) = \frac{P(E_1 \cap E_2)}{P(E_2)}这在现在看来是对条件改了吧的定义，但两个命题意义不同，一个是由过去测未来，一个是由未来反侧过去。 贝叶斯采取台球模型来模拟自己提出的概率问题。 贝叶斯操作的本质是先验分布+样本信息 = 后验分布，这和人类的直觉相符，但确定先验分布是极其困难的。]]></content>
      <tags>
        <tag>读书</tag>
        <tag>总结</tag>
        <tag>数据科学</tag>
        <tag>统计学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[统计入门 | 数理统计学简史]]></title>
    <url>%2F%E7%BB%9F%E8%AE%A1%E5%85%A5%E9%97%A8-%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AE%80%E5%8F%B2.html</url>
    <content type="text"><![CDATA[我以前说过，对一门知识把握不住它的脉络时，就去看历史。对于数理统计，陈希孺的《数理统计学简史》就是一门足够好的统计学历史书，看完之后你就会明白什么是期望？为什么最小二乘法那么重要？为什么三大分布是那个样子？为什么公式长这个样子？如此才能真正了解要学的东西。 早期概率论 概率是一个事件发生、一种情况出现的可能性大小的数量指标。 时间有可重复性和一次性，可重复事件的概率是客观的，一次性时间的概率是主观的。 客观概率是频率学派的基础，主观概率是贝叶斯学派的基础。 客观概率有两种形式。第一种统计概率依据该事件在试验大量重复中的概率。第二种古典概率依据试验可能结果是有限个，每种结果可能性相同。 分赌本问题A、B二人读博，各出赌金a元，每局个人获胜概率相同，规定谁先胜S局就赢得全部赌注，现在进行到A胜$S_1$局，B胜$S_2$局，问赌金怎么发放才算公平。 巴斯噶与费尔马在讨论读博问题时用到了值的概念，指的是赌注乘以获胜概率。之后惠更斯把值改为期望。 巴斯噶认为赌注的公正分配只和 为了赢得赌局，还需要取得胜利的局数相关，记为$r_1$,$r_2$ ,则有边界条件，$e(0,r_2) = 1 ; e(r_1,0) = 0; e(a,a) = 0.5$,且成立递推公式$e(r_1,r_2) = [e(r_1-1,r_2) + e(r_1,r_2-1)]/2$,由上述条件综合出一般解的形式。 费尔马解法，设定$r_1&lt;r_2$，若A取胜，所需局数可能为$r_1,r_1+1,\dots,r_1+r_2-1$,期间B取胜的局数对应为$i=0,1,\dots,r_2-1$。即若B胜i局，则A到最终取胜前再赌了$r_1+i$局，其中前$r_1+i-1$局A胜$r_1-1$局，而第$r_1+i$局为A胜。由此两种想法得到的解结果是一样的。 惠更斯制定了3条定理加上11个问题，成为惠更斯十四命题 伯努利于1713年著作《推测术》，把概率论从对赌博机遇的讨论转换为新的天地。这本书前三部分，是古典概率的系统化和深化。第一部分明确提出了独立情况下概率乘法定理的表述形式，并在此基础上严格证明了二项概率公式，第二部分首次引入了排列的概念。 推测术中把客观概率区分为两类，可以先验的概率，称之为古典概率。可以后验的概率，称之为统计概率。这里的含义和贝叶斯概率的不同。 伯努利大数定律：给定任意两个数，$\epsilon&gt;0$和$\eta&gt;0$,总可以取足够大的抽取次数N,使得事件${|\frac{X}{N} - p| &gt; \epsilon}$概率不超过$\eta$伯努利的工作证明了数学家不仅可以后验地认识世界，也可以用数学估量他们认识世界的限度。 狄莫弗的二项概率逼近这部分内容和前文的《统计学习|高斯分布》有很多内容重合。狄莫弗有著名的狄莫弗公式$(cos\theta+isin\theta)^n=cosn\theta+isinn\theta$,他也在研究一个赌博问题时要求解二项概率 $\binom{N}{i}p^i(1-p)^{n-i}$, 狄莫弗在$Np$为整数的条件下得到 D_N=2Npqb(N,p,Np)\\ D_N=2\mu qb(N,p,\mu),\mu = [Np] + 1问题的关键转化为N较大时求$b(N,p,i)$的问题。在求解过程中有提到在用频率估计概率的时候，观察值的精度与N的平方根$\sqrt{N}$成比例。 狄莫弗工作最大的意义是中心极限定理。但依然的是由于他没有从统计学去观察这个工作。 贝叶斯方法贝叶斯方法也是以二项分布为主角的工作。英国学者贝叶斯在18世纪中叶提出这个方法来解决二项分布问题，但方法的思想适用范围很广，目前其已成为数理统计学中两个主要学派之一，贝叶斯学派。已知时间概率为p，由之计算某种观察结果出现概率，这是原因推结果，称之为概率论。反过来已知观察结果，对概率p做出推断，这是结果推原因，是数理统计。 贝叶斯原始问题的表现形式是：设X服从二项分布$B(N,\theta)$，$N$已知但$\theta$未知，给定常数$a,b,0 \leq a &lt; b &lt; 1$,在观察到观察值X后，求条件概率$P(a \leq \theta &lt;b | X)$,关于这个概率的求解有两派观点。一派因为$\theta$是一个确定值，对该问题而言，答案要么是0，要么是1。但另一派认为，即使$\theta$是确定值，但目前还不确定，X的观测值提供了关于X分布的一些信息，但不能确定$\theta$，这里就有机遇成分。就像你去找人，人‘在家’或‘不在家’两种可能性，但你还是会根据今天天气去推测对方在不在家，这就是这样的过程。此时$\theta$就是个随机变量 贝叶斯为了解决问题，提出以下两个命题：设$E_1,E_2$为按先后时间顺序发生的两件事，则 P(E_2 | E_1) = \frac{P(E_1 \cap E_2)}{P(E_1)}\\ P(E_1 | E_2) = \frac{P(E_1 \cap E_2)}{P(E_2)}这在现在看来是对条件改了吧的定义，但两个命题意义不同，一个是由过去测未来，一个是由未来反侧过去。 贝叶斯采取台球模型来模拟自己提出的概率问题。 贝叶斯操作的本质是先验分布+样本信息 = 后验分布，这和人类的直觉相符，但确定先验分布是极其困难的。 最小二乘法数理统计学的简史就是从纵横两个方向对算术平均不断深入研究的历史，纵的方面指平均值本身，伯努利及其背后众多大数律，中心极限定理，高斯的正态误差理论，横的方面指的是许多统计方法，这些方法本质都是随算术平均的发展，其中最重要的就是最小二乘法。 设对某未知量$\theta$重复做$n$次测量，结果记为$x_1,x_2,\dots,x_n$，利用这些测量值做一个估计，推理如下:设真值为a,则测量误差依次为$e_1 = x_1-a,e_2,\dots$，计算$L(a)=e_1^2+e_2^2+\dots$，令$L(a)$取最小。 这个最小值正是几个测量值的算术平均。令人惊叹 以上过程是用最小二乘来解释算法平均，我们也可以逆转这个过程。算术平均是经受住考研的方法，因此一个方法是合理的，它就应该经受住算术平均的考验，所幸最小二乘法有这样的特性。（虽然甲证明乙，乙证明甲在逻辑上不足取，但这有其现实意义）]]></content>
      <tags>
        <tag>读书</tag>
        <tag>总结</tag>
        <tag>数据科学</tag>
        <tag>统计学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶测试与验证的挑战]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E6%B5%8B%E8%AF%95%E4%B8%8E%E9%AA%8C%E8%AF%81%E7%9A%84%E6%8C%91%E6%88%98.html</url>
    <content type="text"><![CDATA[一篇关于自动驾驶测试的文献翻译。 摘要一般来说软件测试常常只是寻找bug，而不是通过精密的实验来保证产品质量。一个相比简单的系统级的测试，即测试—失败—补丁（改进）—测试更好的方法已经开始大规模部署在无人驾驶汽车上。ISO26262的v模型建立了一个框架，该框架将每种类型的测试与相应的设计或需求文档联系起来，但该模式在处理自动驾驶汽车面临的各种新测试问题时会遇到挑战。本文根据自主车辆的V模型确定了测试中的五个主要挑战领域:驾驶员不在环、复杂需求、非确定性算法、归纳学习算法和故障操作系统。 有希望在这些不同的挑战领域中实现的通用解决方案包括:使用逐步减少约束的操作场景进行分阶段部署，使用观测器/执行器架构把复杂的自动驾驶功能从相对简单的安全功能分离出来，采用故障注入来执行更多的的边缘案例测试。尽管为高等级的自动驾驶算法提供安全认证安全仍然存在重大的挑战，但似乎可以采用现有的软件安全方法来构建系统和与其相对应的设计过程。 引言最近自动驾驶汽车成为一个热门话题，不过实际上它们背后的技术已经发展了几十年了，最早可追溯到自动化公路系统项目。从这些早期的示范算起，自动驾驶技术已经发展了成熟的驾驶员辅助系统(ADAS)。像自动车道保持和智能巡航控制也已经是许多车辆的标准了。除此之外，现在还有许多处于不同的发展阶段的不同级别的自动驾驶车辆项目。 如果有人相信所谓专家的话，那么无人驾驶汽车好像呼之欲出。但事实上，搞传统汽车行业的都知道，在拥有专业的安全驾驶人员的情况下，制造几辆车以在合理且有利的条件下运行，与在不受约束的世界里运行数百万辆车之间，有着巨大的鸿沟。 有人会说，（自动驾驶汽车）成功的示范和几千公里(甚至几十万公里)的成功驾驶里程意味着自动驾驶技术基本上已经做好全面部署的准备。但是，很难仅仅从这样的测试就能得出这足以确保安全性的结论。实际上，至少有一些开发人员已经在做更多相关的测试工作，但问题是还需要做多少工作，以及我们如何才能知道现在的车辆已经足够安全到可以上路了呢？ 在本文中，我们将探讨一些正在等待开发人员解决的挑战，这些开发人员正试图开发完全自主的L4级别车辆并进行大规模部署。因此，我们跳过了过去可能采用的半自动化方法，即在这种情形下，司机根本不用负责操作车辆。对研究对象我们进行了进一步限制了范围，只考虑在ISO26262v框架内设计和验证的车辆。采取这种限制的原因是这是一种可接受的确保安全的框架。 完全基于计算机的系统应该是不安全的，这是一个可以确认的，除非你有令人信服的相反论点来论证。总之，自动驾驶汽车不能被认为是安全的，除非它们能被显示符合或可以被映射到ISO26262或其他一些合适的、被广泛接受的软件安全标准。 完全测试的不可行性人们早就知道不可能彻底地测试系统以确保系统的可靠性（冗余）。例如，假设有一个100万辆汽车的车队每天运行一个小时。如果安全目标是这个车队每1000天发生一次灾难性的计算故障，即每次发生灾难性故障之间的平均时间应该为10亿小时，这与飞机的允许故障率相当。 为了验证发生灾难性事故的频率，最少得进行长达十亿小时的测试，更有甚者也可能是几倍的时间，重复多次测试可以达到统计学意义。但即使这样，这也是假定测试环境是基于真实世界部署的，具有高度代表性的并且导致错误的环境部署以随机的、独立的方式出现。 但是，建造一个足够大的、能够在具有代表性的测试环境中运行数十亿小时而又不会危及公众的车队是不切实际的。因此，我们需要替代的验证方法，可能包括模拟仿真、故障注入、面向不断增加的车队规模的自适应、在非极端工况中获得组件的实际工作状况以及人工评审等方法。（组件级的测试也发挥了作用，但是为物理硬件设备积累十亿小时的部署前测试仍然是不切实际的) 考虑到自主系统的测试比日常软件系统的测试更困难，这会让事情会变得更糟。 对于相对非关键的计算系统来说，可以将测试作为确认其安全级别的主要依据。这是因为低严重程度和低暴露性的故障相比灾难性故障更容易发生。例如，如果每1000小时发生一次特定类型的故障是可以接受的(因为这种故障会导致最低成本的事故或轻微的中断)，那么通过数千小时的测试，就可以可靠地验证该故障的故障率。这并不是说对这些系统而言，所有的（必要）保证软件质量的步骤可以放着不管了，而是一个合适的测试和故障监控策略可能能够验证一个事实，即如果平均故障间隔时间要求相对宽松的话，一个质量合适的组件确实已经被确认为拥有一个可以接受的低故障率。 作为起点的V模型因为系统级测试不能完成上述工作，我们需要更多相关测试，这正是创建更健壮的安全软件的开发框架的意义所在。V软件开发模型长期以来一直适用于汽车。它是20多年前纳入MISRA指导方针的发展参考模型之一。最近，它被推广为构成ISO26262基础的参考模型。 通常，V模型表示一个有条理的创建过程和验证过程。V的左侧包括从需求到设计再到实现的过程。在每个步骤中，系统被划分为并行处理的典型的子系统（例如，有一组系统需求，但是每个子系统都有单独的设计)。V的右侧迭代地验证和验证越来越大的系统，它是从小的组件过渡到到系统级的评估的一个过程。虽然ISO2626262对这个模型进行了详细的阐述，但是我们这里保留一些通用的框架，以方便讨论拓展。 尽管ISO 26262和它的V框架已经明朗了在确保汽车安全方面的公认做法，但在将全自动车辆的技术映射到V方法这方面依然有很多挑战。 驾驶员不在环在全自动驾驶汽车中，最明显的挑战可能就是司机不再真正驾驶汽车。这意味着，根据定义，不能再指望司机在运行过程中为车辆提供控制输入。 可控性挑战对于低完整性设备来说，典型的汽车安全可能取决于驾驶员的控制能力。例如，在一个高级驱动辅助系统(ADAS)中，如果一个软件故障导致一个潜在的危险情况，司机可能会被期望越过软件功能直接将车辆恢复到安全状态。司机有时候也被希望能把汽车从严重的机械故障中恢复过来，比如轮胎爆裂等问题。换句话说，在人类驾驶的汽车中，司机会负责采取正确的纠正措施。但在现在这种情况下，司机没有能力采取纠正措施，也就是说车辆缺乏可控性，因此必须设计更高的汽车安全完整性水平，或汽车安全完整性等级。 一款完全自动化驾驶的汽车不指望司机处理特殊情况。当故障发生时和出现超出指定的操作条件能处理的情况时，计算机系统必须被指定为故障的处理者。与ADAS系统相比，让计算机负责异常处理会显著增加自动化的复杂性。组合的ADAS系统技术如车道保持和智能巡航控制，似乎非常接近全自动操作，然而，完全自动驾驶的车辆必须处理所有可能出现的问题，它具有更高的复杂性。因为，现在确实已经没有接管方向盘和踩刹车的司机了。 自主架构方法在ISO2626262环境下的自主体系结构方法中，让计算机负责管理需要以下两种评估风险的策略之一。 一种策略是将风险评估的可控性部分设置为C3，即难以控制或无法控制。如果严重程度和暴露度很低，这可能是一个可行的选择。但是，在严重程度中等或高的情况下，系统必须设计成更高的汽车安全完整性水平(汽车安全完整性等级)。(有人可能会认为应该有更高的可控性分类C4，因为自动化系统有可能采取主动的危险行动，而不是简单地不能提供安全功能。)但我们假设现有的C3就足够了。 另一种处理潜在的汽车高安全完整性等级自主功能的方法是使用分解，具体方法要接着观测器/执行器架构和冗余的组合。观测/执行器架构是指主要功能为：一个模块(执行器)负责执行，而另一个模块(监视器)执行验收测试或其他行为验证。如果执行器行为不当，观测器会关闭整个功能(两个模块)，从而形成一个故障静默系统。 如果观测器/执行器对(图2)设计正确，那么只要观测器有足够高的汽车安全完整性等级并检测所有可能的故障，执行器就可以设计成低汽车安全完整性等级。(还要求检测观测器中的潜在故障，以避免损坏的观测器未能检测到驱动器故障的问题。)如果可以使观测器比执行器简单得多，则可以减少观测器的规模，并允许将大部分复杂功能放置到较低的汽车安全完整性等级执行器中，这种体系结构模式是相当有利。 观测器/执行器对的优点和缺点都是它创建了一个故障静默构建块(如果有错误，它就会关闭)。异构冗余的使用，即观测器和执行器的使用是为了防止由于执行器故障而发出危险的命令。至少，提供故障操作行为需要更多的冗余(即多个观测/执行器对)，并且需要满足多样性，从而使同一模式的软件设计故障不会造成整个系统故障。这对于避免出现Arianne5航班501的丢失这样的情况是很重要的，这是由于主系统和备份系统都出现了相同的未处理异常操作条件而导致的故障。 应该指出的是，因为例如实现不同的组件时有脆弱性等问题，实现多样性并不一定是简单的，对于非自主软件也是如此。还需要注意的是，故障/执行器对的故障沉默需求是基于故障独立性的假设。一个关键的点是无论采用什么方法，总需要有一种方法来检测当自主功能不正常工作的状态(无论是由于硬件故障、软件故障，还是需求缺陷)，并以某种方式把系统转移到一个安全的状态。 复杂的需求V开发模型的一个基本特征是，V的右侧提供了一种可追溯的方式来检查左侧的结果(验证和验证)。但是，这种检查的概念是基于一个假设，即需求实际上是已知的，正确的、完整的、明确指定的。这种假设给自动驾驶汽车带来了挑战。 需求挑战如前所述，从控制系统中去掉司机意味着软件必须能处理异常，包括天气、环境危害和设备故障。会有很多不同类型的故障，从恶劣天气(洪水、雾、雪、烟，龙卷风)，违反交通规则(错误的方向公路上一个汽车，其他司机闯红灯，被偷走的交通标志),到当地驾驶约定（靠左行驶），动物危害(蝗灾、鹿、犰狳)。 任何一个开了足够长时间车的人，都会有自己的故事，他们会讲述他们在路上看到过的怪异事件。总的来说，车辆数目多的话很可能会经历所有这类事件，甚至更多。更糟糕的是，恶性事件和驾驶条件的组合可能会出现，而在经典的书面需求规范中，这些组合实在是太多了。如果这些组合的结果可能是无害的，那么可能不需要涵盖所有这种极其罕见的组合，但是需求应该清楚地知道什么是系统设计范围内的要处理的故障，什么不是。因此，以列举所有系统需求的文档为起点的经典V进程似乎不太可能以狭义的方式扩展到自动车辆异常处理系统上，至少在不久的将来会一直是这样。 操作概念的方法管理需求的复杂性的一种方法是约束操作概念并进行需求的分阶段扩展。这已经由开发人员完成了，他们可能会在特定的地理区域集中进行道路测试（例如，仅在硅谷的高速公路上进行白天的驾驶，因为那里的降水有限，天气寒冷)。采用约束概念的想法可以从多个维度扩展 典型的可以利用限制操作概念轴（维度）包括: 道路可达:限制到达的高速公路，共乘车道，农村道路、郊区，封闭校园，城市街道，等。 可见性:白天，晚上，雾，霾、吸烟，雨，雪 车载环境:在一个封闭的车库内没有其他车辆移动，仅允许自动驾驶的车道，非自动驾驶车辆上的标记应答器等。 外部环境:基础设施的支持，预先规划的道路，由人驾驶的汽车 速度:较低的速度可能产生更小的故障后果和更大的恢复空间 虽然上述自由度仍然有很多组合(当然还有更多的组合是不可想象的)，但是从可能的操作概念中进行选择的目的不是增加复杂性，而是减少复杂性。减少需求的复杂性可以通过在特定的情况下应用自主系统来实现，在这些情况下的需求应该是完全被理解的(并确保对这些有效的操作条件的识别是正确的) 因此，限制操作概念成为一种引导策略，用于在逐渐复杂的操作中部署更复杂的技术能力。一旦确定对某一特定业务概念的需求有了充分的了解，就会有更多类似的需求。随着时间的推移，可以添加操作概念来扩展允许的自动化场景的范围。但这并不能完全消除复杂需求的问题，但是它可以帮助减轻组合爆炸的需求和例外情况。 安全需求和约束条件即使使用了受限的操作概念，使用传统的与安全相关的需求方法似乎也是不切实际的。这种方法或多或少是按以下这种方式进行的：首先创建功能需求。在执行了一些风险评估过程后，对安全性相关的需求进行评注(annotation)。将这些与安全相关的需求分配给安全关键子系统。设计安全关键子系统以满足分配的需求。最后，通过重复循环来找到并减少不在预期内的紧急子系统表现。 对安全关键需求进行评注对于自主应用程序来说可能不切实际，这里至少有两个原因。 一个原因是，许多需求可能只与部分安全相关，并且与功能性能密不可分。例如，当汽车行驶时，使用停车制动的许多条件可能是一组初始(基础)需求。然而这些需求的某些方面实际上是安全的关键，而这些方面在很大程度上是受其他交互功能的紧急影响。考虑停车制动的情况，停车制动很可能被许多功能需求所描述。但是让我们来简化问题，在减速模式中唯一安全的关键操作可能是在其他需求的紧急交互下必须避免在减速过程中锁住车轮。 用于识别安全相关需求的需求注释可能失败的第二个原因是，在使用机器学习技术时是不可能进行评注的。这是因为需求采用了一组训练数据的形式，这些数据列举了一组输入值和正确的系统输出。这些通常不是传统需求的形式，因此需要对需求管理和验证采用不同的方法。 与其试图在安全性和非安全性子系统之间分配功能需求，不如创建一组严格与安全性相关的独立的、并行的需求集。这些需求的形式往往是约束条件，它们指定了安全所需的系统状态。这种方法可以解决性能和优化问题(最短路径是什么?或者最优燃料消耗的速度是多少?)从安全的角度来看(我们会撞上什么东西吗?) 使用这种方法可以将需求集划分为V模型的两个部分。第一组的需求将是一组非安全相关的功能需求，这可能是传统的格式或一种非传统的格式如机器学习训练集。 第二组需求将是一组纯粹的安全需求，它们完全明确地定义了安全对于系统的意义，相对独立于最优系统行为的细节。这种需求可以采取安全操作信封的形式，适用于不同的操作模式，系统可以自由地在操作信封内优化其性能。显然，这样的信封至少可以在某些情况下使用(例如，执行速度限制或设置最小的跟随距离。这个概念是相当笼统的，但也说明这可能是未来的工作。 采用一组与功能需求正交的安全需求的一个令人信服的理由是，这种方法可以清晰地映射到观测/执行器体系结构上。功能需求可以分配给低汽车安全完整性等级执行器功能块，而安全需求可以分配给高汽车安全完整性等级监视器。这个想法作为监视器/执行器设计模式的一部分已经被非正式地使用多年了。我们建议将这种方法提升为一种主要的策略，用于设计自动车辆的设计、需求和安全案例，而不是降级为一种详细的实现冗余策略。 非确定性和统计算法自动驾驶车辆使用的一些技术本质上是统计的。一般来说，它们往往是不确定的(不可重复的)，并且可能只在一个概率可以被分配的情况下给出基于概率正确的答案。验证这样的系统会带来一些挑战，这些挑战通常不会出现在更确定的、传统的汽车控制系统中 随机系统的挑战随机系统非确定性计算的挑战包括一些算法，如规划算法，它们可能通过对许多随机选择的候选者的结果进行排名来工作。由于该算法的核心操作是基于随机生成，因此很难进行复制。虽然在单元测试中使用可重复的伪随机数流等技术可能有帮助，但是在集成系统中创建完全确定的行为可能是不现实的，尤其是当初始条件的微小变化导致系统行为的发散状态时。这意味着，尽管尝试使用名义上相同的测试用例，但每一辆车测试都可能导致不同的结果。 成功的感知算法也往往是概率的。例如，证据网格框架(evidence grid framework)将来自单个、不确定的传感器读数的扩散累积，使得机器人对周围环境越来越能建立一个更加详细的地图。这种方法产生一个对象存在的可能性，但是时候不能完全保证的。此外，这些算法基于先前的传感器物理模型(如多路径返回)和噪声模型本身就是概率性的，对环境条件的微小变化敏感。 除了对环境的几何建模之外，其他算法还从感知到的数据中提取标签。其中突出的例子包括行人检测。这样的系统即使在无噪声数据的情况下，也可能出现潜在的不可预测的故障模式。例如，视觉系统可能难以消除由于阴影而产生的颜色变化，而且在大型反射表面的存在中，视觉系统很难确定物体的位置。(公平地说，这些对人类来说都是挑战。)此外，任何分类过程都显示了假阴性和假阳性之间的权衡，其中一个的数量越少，另一个的数量就越多。测试的含义是这样的算法不会在百分之百的时间内有效，而且根据构造的不同，它们可能会报告一个特定的情况是真实的，而这个情况实际是真实的可能性只是中等。 测试中的非决定论处理测试中的非决定论很困难至少有两个原因。 第一个是很难实施特定的边缘情况。这是因为，只有当系统接收到来自世界的非常特定的输入序列时，系统才可能以激活边缘情况的方式运行。由于前面讨论过的一些因素，例如计时器对输入的微小变化的响应可能存在显著差异，因此很难设计出一种情况，在这种情况下，环境可靠地提供适当的条件来运行特定所需的测试用例。作为一个简单的例子，车辆可能更喜欢在宽阔的道路上行驶更迂回的路线，而不是在一条狭窄的巷子里走捷径。为了评估在狭窄的巷道中导航的性能，测试人员需要设计一种使宽阔的巷道对计划者没有吸引力的情况。但是，这样做需要对测试计划给予额外的成本，并且可能(手动地)将车辆移动到它通常不会进入的情况以强制执行所需的响应。 测试中不确定性的第二个困难是很难评估测试结果是否正确，因为对于一个给定的测试用例来说，没有唯一的正确系统行为。因此，正确性标准可能必须采用与前面讨论的安全信封类似的形式，如果最终系统状态在可接受的测试通行信封内，则测试通过。一般情况下可能需要多个测试来建立信任。概率系统行为对验证提出了类似的挑战，因为通过一次测试并不意味着每次都能通过测试。事实上，有了概率行为我们可能会认为至少某些类型的测试会在一定程度上失败。因此，测试可能不是为了确定行为是否正确，而是为了验证行为的统计特征是否被精确地指定(例如，假阴性检出率不大于相关安全参数中假定的检出率)。比起简单的功能验证，这可能需要更多的测试，特别是如果问题中的行为是关键的安全部分且在预期中会有极低的失败率。 从概率系统中获得极高的性能可能需要多个子系统在发生完全独立的故障时有低的失败率。例如，可以将复合雷达和视觉系统结合起来，以确保在极低的概率范围内没有遗漏的障碍物。这种方法不仅适用于传感模式，而且也适用于规划和执行中的其他各种算法方案。如果这样的方法是成功的，那么很有可能失败的概率非常低，以至于测试验证复合性能几乎是不可行的。例如，如果两个系统必须每十亿次检测就会遗漏一次障碍，那么必须运行数十亿次有代表性的测试来验证这种性能。为了验证复合不同算法的低故障率，可以尝试分别验证每种算法更频繁的允许故障率。但这是不够的。我们还必须验证失败之间独立的假设，这很可能必须基于分析和测试才能进行。 机器学习系统只有在正确地做出一系列复杂的感知和控制决策的情况下，自动驾驶汽车才有可能采取正确的行为。要实现这一目标，通常需要对参数进行适当的调整，包括从每个相机镜头的校准模型，到为避免高速公路上的障碍而转向或停车的风险的适当加权。这里的挑战是找到校准模型或权重的比值，从而使某些误差函数最小化。近年来，大多数机器人应用都转向机器学习来实现这一点，因为多维优化的复杂性使得手工工作不太可能产生理想的性能水平。 机器学习方法的细节有很多，例如，有监督学习、强化学习等，但总之所有这些方法都涉及归纳学习，在归纳学习中，训练集被用来推导一个模型。 例如，考虑在单目图像中检测行人的情况。使用一组大型图像训练集，分类器可以学习一种决策规则，该规则将行人在一组单独的图像验证集中被检测到的概率降至最低。为了我们的目的，一个基本要素是训练集实际上是系统的需求集合，而规则是系统设计的结果。(机器学习算法本身和分类器算法都比传统的验证技术更容易修改。然而，这些都是通用的软件引擎，最终的系统行为是由用于学习的训练数据决定的。) 可以尝试通过创建一组训练数据的需求来回避训练集数据形成实际需求的问题。但这最终只是将同样的挑战推到了一个抽象层次上。需求不应是典型V系统本身的一组功能需求，而是以一组训练数据或收集训练数据集的计划的形式 验证归纳学习的挑战归纳学习方法的性能可以通过从收集的总体数据集中保留一些样本并使用这些样本进行验证来测试。假设有以下这种情况，如果把训练集作为系统需求(V的左边)看，可以用一组独立的验证数据来确保满足测试的需求(V的右边)。训练数据不能有意外的相关性与所需的行为，否则系统将过拟合。类似地，验证数据必须独立于训练数据，并且在除所需的特性之外的所有方面都与训练数据不同，否则在验证过程中会检测到过拟合。当然目前尚不清楚如何论证机器学习系统没有产生过拟合。 机器学习在实践中的一个重要限制是，如果使用带标签的数据，每个数据点都可能很昂贵。(创建标签必须由某人或某物来完成。无监督学习技术也是可能的，但需要一个巧妙的映射来解决特定的问题。此外，如果训练集有问题或所学习的规则有问题，那么就需要收集更多的验证数据并用于验证更新的系统。这是必要的，因为即使对训练数据做一个小的更改，也会产生一个完全不同的学习规则集。 由于自主系统的需求非常复杂，很可能会出现一些罕见的边缘案例，在那里学习将会发生问题。然而，由于它们的稀缺性，收集描述这种不寻常情况的数据可能是昂贵的，而且很难衡量。(模拟和合成数据可以帮助解决这一问题，但在模拟数据中存在偏差的风险，以及对仿真工件的过度拟合。) 验证机器学习的另一个问题是，一般来说，人类不能直观地理解过程。例如，卷积神经网络的内部结构可能不能让人类观察者更直观地了解已经学会的决策规则。虽然可能有一些特殊的情况，但一般来说，机器学习的易读性问题即能够用人类的术语解释系统的行为这个问题还没有解决办法。这使得除了昂贵的蛮力测试之外很难预测的技术如何应用于机器学习系统的验证。(也许有些组织确实有资源进行广泛的蛮力测试。但即使在这种情况下，训练数据的准确性、有效性和代表性也必须被证明为是安全论证的一部分。) 由于机器学习系统的易读性一般较差，而且由于过度拟合的危险是真实存在的，因此在这样的系统中存在着严重影响安全性的失效模式。特别值得关注的是在训练集数据中出现的偶然相关性，但人类往往注意不到这种相关性。例如，考虑使用经过训练的可变形部件模型来检测图像中的行人的方法，这在现实世界的数据集中已被证明是相当有效的。如果训练数据集中没有(或很少)行人坐轮椅的图像，那么这样的系统很可能会将行人的标签与用两条腿走路的人错误地联系起来。 归纳学习的解决方案归纳学习怎么进行测试是很困难的。首先是黑天鹅问题，故事是这样的，在18世纪末之前，在欧洲观察到的所有的天鹅都是白色的，因此一个使用归纳逻辑的观察者会得出结论，所有的天鹅都是白色的。然而，这名观察者在访问澳大利亚时，会经历这种信念的挑战，因为那里有大量的黑天鹅。换句话说，如果系统没有看到一个特殊的情况，它就不能学习这个情况。这是对归纳学习方法的一个基本限制。此外，由于机器学习严重缺乏易读性，人类审查员很难或不可能想象在这样一个系统中出现类似黑天鹅的偏差。 验证一个归纳学习系统似乎是一个极具挑战性的问题。我们可能会使用广泛的测试，但需要保证黑天鹅数据随机独立到达率的假设，并对相应大小的数据集进行测试。如果有足够的资源，这可能是可行的，但是总会有新的黑天鹅，所以需要对大量的操作场景和输入值进行概率评估，以确保系统故障的低水平。 另一种验证归纳学习系统到高汽车安全完整性等级水平的方法是将一种基于归纳的低汽车安全完整性等级算法配对，该算法将命令发送给执行器，并使用基于高汽车安全完整性等级演绎的监视器。这将回避驱动算法的大部分验证问题，因为控制执行器的诱导算法的失败将被基于演绎生成的安全信封等概念的非感应监视器捕获。因此，执行器算法失败将是一个可用性问题(假定有足够的故障转移能力，系统安全关闭)，而不是安全问题。 关键任务的操作需求现在让我们回到先前讨论过的地方，即计算机最终控制着车辆，而不是控制着人。这意味着至少部分车辆必须是基于故障操作而不是面对故障停止。 故障操作系统设计的挑战故障操作系统设计已经在航空航天和其他环境中成功地完成了几十年，但是由于以下几个原因仍然是困难的。第一个原因是显而易见的，即必须提供冗余，以便当一个组件失败时，另一个组件可以接管。实现这一点需要至少两个独立的、冗余的故障停止行为子系统。 实现故障操作系统反过来需要至少三个冗余的故障任意组件，以便在发出不正确的输出而不是在组件级别发出静默失败的情况下确定故障源。对于必须容忍任意错误故障的系统，根据相关的故障模型，可能需要一个具有4个冗余组件的复杂容错系统。 冗余的结构变化取决于设计方法，和可能包括配置如三冗余系统成员(在这种情况下，成员必须确保不被一个单点故障)，或两个二对二系统，或者使用四台电脑。这些方法除了引入的明显开销之外，还存在一个测试问题，即如何确保故障检测和恢复工作的有效性，确保故障的独立性，并确保在驱动任务开始时所有冗余组件都是无故障的。冗余似乎不太可能被避免，但为了确保安全，可能会降低提供足够冗余的复杂性和成本 在典型的故障操作系统(如飞机)中，所有冗余部件本质上都是相同的，它都能够执行扩展任务。例如，商用飞机通常配置两个喷气发动机，每个喷气发动机至少有一个双冗余计算机控制。如果一台发动机上的两台计算机由于持续的交叉检测故障而关闭，那么就会有第二个独立的引擎来维持飞机的飞行。即便如此，对引擎可靠性的要求还是非常严格的，因为在第一个引擎故障后，飞机可能需要飞行几个小时才能到达最近的机场。这就对每个引擎提出了显著的可靠性要求，从而增加了组件成本。 虽然汽车是出了名的价格敏感的，但它们也有一个优势，即故障转移任务的时间可以很短(例如，把车停在路边，或者在必要时停在一条旅游线路上)，故障转移任务的持续时间是以秒而不是小时为单位度量的。此外，用于停止车辆的故障转移任务可能比完全自主操作的功能要少得多。这可以简化需求复杂性、计算冗余、传感器需求和验证需求。(作为一个简单的例子，故障转移任务控制系统可能不支持变道，这极大地简化了传感器需求和控制算法)因此，设计一个具有故障停止主控制器和更简单的故障操作故障转移控制器的自动车辆可能在硬件成本和设计/验证成本方面都具有吸引力。 它也可能不是基于完全的自主系统，而是就是完全的自主系统，在完全的自主系统中有一个检测器.这将使故障探测器本身拥有高水平，但可能允许正常的自主功能为低汽车安全完整性等级。这种方法可以很好地映射到主自主系统的监视/执行器体系结构。故障转移的自主性也必须以安全的方式设计，并根据其复杂性和计算的可靠性需求采用适当的体系结构方法。如果仅持续几秒钟的短暂故障转移任务中发生故障的可能性足够低，那么甚至可以使用单通道故障转移系统。 非技术性因素在部署自动驾驶时遇到的一些挑战是非技术性的，例如经常提到的责任问题(当发生事故时谁负责赔偿?)以及法律通常如何对待所有权、操作、维护和其他方面的车辆的问题。深入研究这个问题显然超出了本文的范围。然而，对非技术挑战的决议很可能对技术解决方案产生影响。例如，对事故重建数据的自主系统可能有法律要求，需要对这些数据的来源进行仔细的分析，以确保正确使用这些数据。举个简单的例子，假设雷达探测概率为95%，那么它的输出可能仍然会被记录在系统中，以判断是否检测到障碍物，表面上这意味着探测的确定性。 重要的是要确保法分析考虑到，仅仅因为雷达没有探测到行人，并不意味着行人不在那里(例如95%检测可能意味着每20个行人中就有一个不会被检测到)。 看起来，由于自动车辆的固有复杂性，以及无法通过测试证明完备性，开发人员必须以保证案例的形式创建安全保证参数。这样的保证论证对于维护和解释系统的完整性是必要的，并且它能够可靠地解释系统对不可避免的危险情况的反应。确保证据的完整性是应该解决的一个特殊问题，因为借此可确定由于发生特殊情况而造成的事故是否是不可避免的。其他需要关注的重要的问题是，事故是否由系统需求的缺陷、合理可预见和可避免的设计缺陷、实施的缺陷或其他原因引起的。 故障注入从前面的讨论中可以明显看出，传统的功能测试在面对一个完整的系统时会遇到困难，尤其是在不寻常的操作条件下，很难去执行异常的组合。虽然测试人员可以定义一些非名义上的测试用例，但由于异常、操作场景和其他相关因素的组合爆炸，该测试的可扩展性存在问题。 此外，研究还表明，即使是非常优秀的设计人员，在相对简单的软件系统中，也经常会出现盲点和错过异常情况。 故障注入和鲁棒性测试是在异常情况下评估系统性能的较为成熟的技术，在测试异常情况响应时可以避免设计人员和测试人员的盲点。传统的故障注入包括将位翻转插入到内存和通信网络中。最近的技术增加了抽象的层次，包括基于数据类型的故障字典，并确保了故障的代表性。这些技术已经被成功地用于自动驾驶汽车的缺陷的发现和特征。 这是一种很有希望帮助验证自主性的方法，它在组件的抽象级别执行故障注入，作为试图伪造安全性声明的策略的一部分。这不仅涉及到对主要传感器输入的对象进行模拟，还涉及到插入异常条件以测试系统的健壮性(例如，在映射中插入无效数据)。执行此类故障注入的目的不是验证功能，而是通过探查不可预见的情况激活弱点。这种故障注入也可以ISO 26262过程中跨层执行。 结论根据V过程开发的安全自主车辆会遇到很多大挑战。但是为了确保车辆是安全的，仍然需要遵循ISO26262v流程，或者证明一套同样严格的流程和技术实践。假设应用了V过程，有一下三种看起来比较有意义的方法。 分阶段部署在不受限制的真实环境中(包括特殊情况)，开发和部署一辆自动驾驶汽车来处理所有可能的场景组合似乎是不切实际的。当下正如在汽车系统中常见的那样，基于当前开发人员实践的分阶段部署方法似乎是一种更为合理的方法。 可以将分阶段部署绑定到V流程，通过指定良好的操作概念来限制操作范围，从而限制必要的需求范围。这会包括环境、系统和操作约束的限制，这些限制必须用于满足于实现自主操作。验证这些操作约束是否被执行是确保安全性的重要部分，在V过程中它必须显示为一组包括操作需求、验证和潜在运行时的机制。 例如，在运行时监控不仅需要监控系统状态是否允许自主授权，而且需要假设关于安全的操作场景参数实际上是否满足，以及操作场景的系统实际上是否认为它是被满足的。 需要特别注意的受限操作概念的一个方面是，需要确保在操作场景突然失效时维护安全性，例如，由于意外的天气事件或基础设施故障引起的操作场景失效。当系统偏移在允许的自主操作场景之外时，异常转换机制需要成功地执行系统恢复或故障转移任务， 目前尚不清楚的是，分阶段部署方法是否为实现自主驾驶提供一条完整的道路。但是，这样的方法至少提供了一种方法来取得进展，而且带来了一些好处，与此同时因为系统看到了更多的现实世界的情况。这种方法帮我们对困难的边界情况和未预料到的情况有更多的了解。 监控/执行机构使用监控/执行机构架构是一种常见的方法，可以帮助减轻自动车辆安全的许多挑战。正如所讨论的，这种架构风格能满足很高的复杂性需求(只有监视器本质上是完美的)，并部署归纳算法(通过限制对执行器的使用，并使用基于演绎的监视器)。此外，使用故障转移任务策略可以允许自主系统监视器检测主系统故障，而不必确保故障操作行为。更简单、高度完整性的故障转移自主系统可以使车辆到达安全状态。这样的系统可能具有足够短的故障转移任务，只要能够确保在启动故障转移任务时整个系统是无故障的，就可以使故障转移操作的冗余最小化。 故障注入为了确保系统的可靠性，单独的故障注入测试是不可行的。自动驾驶汽车增加了这一问题的复杂困难性，因为自动驾驶汽车能自动对高度复杂的环境做出反应，并引入诸如机器学习等难以测试和测试费用高昂的技术。因此由于缺乏人驾驶监督，自动驾驶系统必须有一个很高的汽车安全完整性等级。制作普通的系统测试，似乎很难获得对合理的水平的保证。故障注入可以作为验证策略的一部分发挥相当的作用，验证策略包括传统的测试和非测试验证。特别是当故障注入应用于多个抽象级别，而不仅仅是在电气连接器的层面上时，这一点就显得尤为重要。 未来工作本文讨论了如何在基于ISO 26262的V框架内实现自动车辆安全的保障。但是，事实上使用架构模式(如监视/执行器方法)和通过故障注入进行验证将限制操作性能。换句话说，我们可能需要通过收束自动驾驶汽车的功能，以适应当下的测试技术的限制。如果想放宽这些限制，需要在以下方面取得进展：描述与预期操作环境相符的机器学习训练数据的覆盖范围，对基于异常驾驶条件的安全需求有信心，以及能够验证带有冗余的归纳系统中故障的独立性。]]></content>
      <tags>
        <tag>自动驾驶</tag>
        <tag>测试</tag>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[线性代数 | 重要矩阵]]></title>
    <url>%2F%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-%E5%AF%B9%E7%A7%B0%E7%9F%A9%E9%98%B5.html</url>
    <content type="text"><![CDATA[本节我们来探讨各种线性代数中重要矩阵的性质。 对称矩阵对称矩阵是最重要的矩阵，了解一个新矩阵一般都要从从特征值和特征向量开始。 特征向量垂直实对称矩阵的特征值也是实数，其特征向量是正交的(垂直的)。如果特征值互不相同，那么每个特征值的特征向量各自在一条线上，而且线垂直。特征向量空间是一维的，且互相垂直的。但如果特征值相同，有一整个平面的特征量，可以从中挑选出垂直的特征向量。 对称矩阵分解$A = S\lambda S^{-1}$，矩阵的分解，S是特征向量矩阵，$\lambda$是特征值矩阵。 在对称情况下，S是特征向量，是列向量，可以化为标准正交向量，则用Q表示。 A=Q\lambda Q^{-1}=Q\lambda Q^T \\ A^T=Q\lambda Q^{-1}=Q^T \lambda Q数学上这被称作谱理论。力学上称之为主轴定理。 A=Q\lambda Q^T=[q_1,q_2, \dots] \begin{bmatrix} \lambda_1&\dots&0\\ \ &\ddots& \ \\ 0 & \ & \lambda_n \end{bmatrix} \begin{bmatrix} q_1^T\\q_2^T\\ \vdots \end{bmatrix} \\= \lambda_1q_1q_1^T+\lambda_2q_2q_2^T+\dots观察上文公式，对于$q_1q_1^T$。列向量乘以行向量得到的矩阵是投影矩阵。（这里的q是单位向量，所以不用再除以$q^Tq$）因此我们得到结论。每一个对称矩阵都是一些互相垂直的投影矩阵的组合。 特征值为实数的证明证明特征值为 实数的过程中用到了对称矩阵的性质和假设条件，注意其中$x^Tx$的应用。证明： Ax=\lambda x \rightarrow \overline{Ax}= \overline{\lambda x} \rightarrow \overline{x}^T\overline{ A}^T=\overline{ x}^T\overline{\lambda} \\ \overline{x}^T\overline{ A}^Tx=\overline{ x}^T\overline{\lambda}x \rightarrow \overline{x}^T \lambda x=\overline{ x}^T\overline{\lambda}x \rightarrow \overline{\lambda} = \lambda由此可得到虚部是零，特征值为实数。，另外请注意在消去过程中。$\overline{ x}^Tx$ 乘积消去了虚数，所以乘积是整的平方值，因而可以放心消去。 如果是复数矩阵，想喝对称实矩阵具有实特征值且特征向量垂直的有优良性质。除了得满足对称特性外，还得满足共轭条件，即$A=\overline{A}^T$ 对称矩阵的小应用给定对称矩阵，可以推算特征值是正是负的问题。例子如计算50阶矩阵，直接计算50阶的方程相当困难，但matlab可以通过简单的计算确定主元的正负。 对于对称矩阵，主元符号和特征值的符号保持一致。 另外，对称矩阵主元和特征值并不相同，主元的乘积等于特征值的乘积，因为它们都是行列式的值。 如果将一个矩阵平移7个单位矩阵，再看结果的正负，就应该能知道哪些大于7，哪些小于7了。 统计学(Statistics)一词，源自于意大利文Stato，其词根兼有”国家”和“情况”的意义，统计学其实就是国情学。 1662年格朗特写了《观察》一书，在统计学史上占据了一个突出的地位 复数矩阵（傅里叶矩阵）傅里叶变换意义快速傅里叶变换又称作FFT， 通常n阶方阵要计算$n^2$次，但FFT可以帮助计算减少到$nlogn$次。 复数向量的模长求在$n$维复空间($c$空间)里的给定列向量$z$的模长，$z=[z_1, z_2 ,\dots]$ 。列向量$z$的共轭向量可以用$z^H$表示，读作艾尔米特。内积$z^Hz=|z_1|^2+…$ 是模长的平方。 复数矩阵的对称对称矩阵定义$A^T=A$，但其只针对实矩阵。对于复矩阵对称$A^H=A$, 叫做艾尔米塔矩阵。矩阵的特征值是实数，特征向量相互垂直。 复数正交矩阵构造相互垂直的向量，$q_i^Hq_j$，i不等于j时，值为0，相等时值等于1。以上述向量做列构造一个$Q$矩阵，称为酉矩阵则$Q^HQ=I$，酉矩阵是n阶方阵，列向量是正交单位向量，傅里叶矩阵也是酉矩阵。 构造傅里叶矩阵假如n是6，$w^6=1,w=e^\frac{2\pi}{6}$, 在单位圆的60度处，其乘方是$w=e^\frac{2\pi}{3}$,是在120度处 ，也在上图的单位圆上,以此构造傅里叶矩阵$F_6$。 令n等于4，$w=e^\frac{2\pi}{4}$，逆时针旋转90度。则依次平方是$i,-1， -i，1$ 。分别对应$w，w^2，w^3， w^4$ 。 得到一个傅里叶矩阵$F_4$（每个元素的指数等于行序数乘以列序数）. 傅里叶变换向量左乘$F_4$,对应傅里叶变换。左乘$F_4^{-1}$，对应的是傅里叶逆变换。由于可以把它分解为稀疏矩阵，它们的逆计算都非常快捷。该矩阵各列都正交（利用复数内积可求 ）。但并不是标准正交的，可以把矩阵乘以一个1/2. 之后就有$F_4^HF_4=I$ FFT性质$F_{2n}$和$F_n$存在联系，举例$F_{64}$和$F_{32}$。$w_{64}^2=w^{32}$前者包含两个后者以及零矩阵，为了构造出这个等式，需要找到两侧的修正矩阵 。右侧是一个置换矩阵，上半部分的奇数列和下半部分的偶数列阵，它能把偶数分量的向量$x_0,x_2$全部排在奇数列$x_1,x_3$前面。对角阵D由w的幂组成。接下来可以继续递归分解$F_{32}$ \begin{bmatrix} 1&1&1&1\\1&i&-1&-i\\1&-1&1&-1\\1&-i&-1&i \end{bmatrix}=\begin{bmatrix} I&D\\I&-D \end{bmatrix} \begin{bmatrix} 1&1&&\\1&i&&\\&&1&i\\&&1&i \end{bmatrix} \begin{bmatrix} 1&&&\\&&1&\\&1&&\\&&&1 \end{bmatrix}正定矩阵正定矩阵把主元，行列式，特征值，不稳定性融合在一起。$x^TAx &gt; 0$ 以下每一条都是正定性的完备判断条件,前提都首先是对称矩阵。 所有的特征值都大于0 所有的行列式大于0 所有的主元大于0x $x^TAx&gt;0$ 这也是对正定性的定义。 $x^TAx&gt;=0$，这是对半正定的定义 观察下面的半正定矩阵例子$A$，我们对它进行$x^TAx$处理。 \begin{bmatrix} x_1&x_2\end{bmatrix}\begin{bmatrix} 2&6\\6&18 \end{bmatrix}\begin{bmatrix} x_1\\x_2 \end{bmatrix}=2x_1^2+12x_1x_2+18x_2^2=\\(\sqrt{2}x_1+3\sqrt{2}x_2)^2=ax_1^2+2bx_1x_2+cx_2^2对于该矩阵A，特征值是0和20，只有一个主元2 正定矩阵来自最小二乘法，最小二乘法的关键在于$A^TA$，大量的物理问题需要用长方形矩阵描述。而对于正定有三个推论 如果A正定，那它是对称的。 只要原矩阵是正定的，那么逆矩阵也是正定的（特征值是倒数）。 如果A正定，B正定，那么A+B是正定（利用定义证明）。 假设A是$m*n$长方形矩阵。那么$A^TA$既是方阵，也是对称的。且 $x^TA^TAx=(Ax)^TAx$是非负的，向量长度的平方大于等于0。判断等于零向量的条件，矩阵A各列线性无关，则零空间里不存在零向量以外的向量，确保$A^TA$的正定。如果正定，最小二乘方程将存在最优解。另外，这也为数值计算提供了便利，不需要进行行交换，也不用担心主元小于等于0。 相似矩阵假设A和B是相似矩阵，它们都是n阶方阵，那么存在某个可逆矩阵M，使得$B = M^{-1}AM$ 假设$A$具有线性无关的特征向量，存在特征向量矩阵$S$，则$S^{-1}AS = \lambda$，这说明A相似$\lambda$，S是特殊的$M$，如果换了$M$，则$\lambda$将变成其他相似的B矩阵。我们可以把这样的矩阵归为一类：任意两个互为相似的矩阵，任意两个矩阵通过M存在一定联系，这些矩阵中最特别的是这个对角阵。 相似矩阵具有相同的特征值， 但不具有相同特征向量。这个矩阵系列都相似于对角阵$\lambda$，可以轻易构造特征值相同的三角阵，它也属于这个阵列。证明如下： Ax = \lambda x \ \ \ B=M^{-1}AM \\ Ax=AMM^{-1}x=\lambda MM^{-1}x \\ M^{-1}AMM^{-1}x=\lambda M^{-1}x\\ BM^{-1}x=\lambda M^{-1}x \ \ \ Bx=\lambda x如果特征值重复，那么特征向量可能不再是线性无关的 ，矩阵可能无法对角化。 比如一类矩阵的特征值是4和4，其中一种情况，$\begin{bmatrix}4&amp;0 \ 0&amp;4\end{bmatrix}$,进行相似矩阵的计算结果还是原矩阵，它只和自己相似 。 $\begin{bmatrix}4&amp;1 \ 0&amp;4\end{bmatrix}$，这个矩阵不能对角化，如果能对角化，它就相似于上面的矩阵，产生矛盾。它只有一个特征向量。包括这个矩阵在内的一个大家族，是最接近对角阵的形式，但是一个无法对角化的矩阵，定义为若尔当矩阵。无法对角化，但又最像对角阵。 对于之前无法对角化的矩阵，可 以通过一种特殊的方法，完成近似的对角化，即若尔当标准型。一般矩阵很难化简为若尔当标准型，因为它依赖于矩阵特征值完全相等。 如下所示的矩阵也不能对角化，理由同上。 \begin{bmatrix}4&1 \\ 0&4\end{bmatrix} \rightarrow \begin{bmatrix}5&1 \\ -1&3\end{bmatrix} \rightarrow \begin{bmatrix}4&0 \\ 17&4\end{bmatrix} \rightarrow \begin{bmatrix}a&0\\ m&8-a\end{bmatrix}\\ det = 16, trace = 8若尔当矩阵 \begin{bmatrix}\lambda&1&0&0 \\ 0&\lambda&1&0\\ 0&0&\lambda&1\\0&0&0&\lambda\end{bmatrix}若尔当块，$J_i$表示$i$阶的若尔当块，对角线上是同一个数，下面全是0，上面都是1，每个若尔当块只有一个特征向量。对上例而言，两个块大小不一样，因此两个方阵并不相似。 每个方阵$A$都相似于一个若尔当阵$J$，就是由若尔当块构成的矩阵，特征值位于对角线上，上面还有一些1，若尔当块的数量等于特征向量的个数（每一块对应一个特征向量）假设矩阵A具有不同的特征值，具有n个，那它就是一个可对角化的矩阵，$J$就是$\lambda$，]]></content>
      <tags>
        <tag>机器学习</tag>
        <tag>线性代数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[线性代数 | 特征值、特征向量]]></title>
    <url>%2F%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-%E7%89%B9%E5%BE%81%E5%80%BC%E3%80%81%E7%89%B9%E5%BE%81%E5%90%91%E9%87%8F.html</url>
    <content type="text"><![CDATA[特征值和特征向量是线性代数中另一块儿核心内容。 导论概述和定义在我们的高等数学体系里，微积分关注的是单维，而线性代数关注的是多维。现在我们以函数的视角看矩阵A，以矩阵A乘以向量x，得到向量Ax，A像一个函数。我们关注这样的A，向量x被变换前后方向相同，也即$Ax= jx$，即Ax平行于x，这里的x就是特征向量。j允许取负值或者零，甚至是复数，j是特征值。特征值和特征向量反应了一个矩阵的核心信息，在实际应用中，这两个信息往往也代表着系统的关键特征。 $(A - jI)x = 0$是特征方程。 如果存在一个非零向量x满足条件，那么$A - jI$必须是一个奇异矩阵，即$det（A - jI）= 0$，求解n个j就得到了特征值，有些j可能会发生重复，重复特征值是关于这块知识难点的根源。 对于每个特定的j（特征值），利用消元法，找出主列，给自由变量赋值，求出的零空间即是由特征向量组成的空间。 几个特殊矩阵 如果特征值是0，则$Ax = 0x$，即特征向量x是零空间的向量。如果A是奇异矩阵，那么存在非零向量使得$Ax=0$，则j = 0就是一个特征值。换句话说，奇异矩阵能使非零向量变成零向量。 投影矩阵P的特征向量和特征值。给定向量b，使P作用在上面，得到 Pb，向量Pb和向量b方向一般不相同。只有本来就在P的列空间里的向量，做投影之后，本身无改变，即$Pb=b$，说明其是一个特征向量，特征值是1。这样我们间接得到了一整个空间的特征向量。再来关注垂直空间里的向量，任意垂直P的列空间的向量x，$Px = 0 = 0x$。综上投影矩阵的特征值是0和1 旋转矩阵，记为Q（将每个向量旋转90），[[0,1],[-1,0]]，这是一个正交矩阵，由迹特征值之和等于0，特征值之积等于行列式的值。得j1+j2=0,j1j2=1,所以j1 = i，j2 = -i, 就本例而言，它是共轭复数。这里可以研究问题，哪些向量旋转后与自己平行。特征向量是和作用前相同方向的，但Q是比较极端的，除非旋转360度。如果矩阵是对称的或者接近对称的，一般都是实数特征值，但旋转矩阵（这里非常的不对称$Q^T = -Q$），它是反对称的，这种矩阵的特征值是虚数。好的特征是实数特征值，互相垂直的特征向量。坏的是虚数特征值。 三角矩阵，特征值在对角线上，带入求解特征向量，对于重复的特征值，会造成特征向量的短缺。特征值两个重复的3，但特征向量只在一个方向上，而不是两个。这造成了特征向量的短缺。 关于特征知识的一些其他描述 一般来说，矩阵越特殊，特征值也越特殊。如二维对称矩阵[0 1；1 0] ，特征值是1，-1。 特征向量垂直的，分别为[1,1] 和[1,-1] n维矩阵有n个特征向量，特征值的和（另外一个说法叫做迹）等于对角线元素的和。 如果$Ax= jx$, B的特征值是k1，A+B的情况。$Ax= jx，Bx= kx$，那么$（A+B）x = （j+K）x$是错误的，因为x不能确定是B的特征向量，除非B是单位矩旋的倍数。 应用对角化定义 ：给定矩阵A，其特征向量按列组成S, 特征向量矩阵S必须可逆。推导如下。 假设A有n个线性无关特征向量(不关注重复)，按列组成矩阵S，组成特征向量矩阵，注意S是特征向量组成的矩阵，A是线性无关的矩阵 谨记以下三个变换公式，即 AS = S\lambda \\ A = S\lambda S^{-1} \\ S^{-1}AS = \lambda幂特征值幂矩阵的特征值,这是可以重新帮助认识特征指的工具。其中特征值的平方计算非常容易。 Ax=\lambda x \rightarrow A^2x=\lambda Ax = \lambda^2x \\ A^2=S\lambda S^{-1}S\lambda S^{-1} = S\lambda ^2S^{-1} \\ A^k = S\lambda ^kS^{-1}如果特征绝对值小于1，那么k趋向于无穷，A的k次方趋向于0，矩阵的幂趋近于0，是稳定的。 注意所有的推导是在有n个线性无关特征向量的前提下的。当所有特征值不同时，A必然存在n个线性无关向量且可以对角化。证明略当特征值有重复，它可能有但并不一定存在线性无关特征向量。举个例子，10*10单位矩阵，特征值1重复了10次，但有很多线性无关向量。 幂特征值的应用给定$u_0$,求解$u_{k+1}=Au_k$,则u_k=A^ku_0\\ u_0=c_1x_1+\dots+c_nx_n=Sc\\ Au_0=c_1\lambda_1x_1+\dots+c_n\lambda_nx_n=S\lambda S^{-1}Sc=S\lambda c\\ A^ku_0=c_1\lambda_1^kx_1+\dots+c_n\lambda_n^kx_n=S\lambda ^kc 求解斐波那契数列已知$F_{k+2}=F_{k+1}+F_k$，$F_0=0,F_1=1$。求解的关键是在构建出$u_{k+1}=Au_k$的形式。问题的关键在于斐波那契数列是而二阶差分，但目前只有一个方程。这里应用的技巧是是令$u_k=[F_{k+1},F_k]$,追加一个方程$F_{k+1}=F_{k+1}$ u_{k+1}=\begin{bmatrix} F_{k+2}\\F_{k+1} \end{bmatrix}=\begin{bmatrix} F_{k+1}+F_k\\F_{k+1} \end{bmatrix}=\begin{bmatrix} 1 & 1\\1 & 0 \end{bmatrix}\begin{bmatrix} F_{k+1}\\F_{k} \end{bmatrix}$=Au_k一个彩蛋。斐波那契数列增长速度的快慢可以用矩阵特征表示，计算特征值大小为$\frac{1+\sqrt{5}}{2}$,熟悉吗？ 微分方程求解可以将一阶微分方程转化为求线性代数问题，中间注意常系数线性方程的解是指数形式。举个例子 \frac{du_1}{dt} = -u_1+2u_2\\ \frac{du_2}{dt} = u_1-2u_2\\ \frac{du}{dt}=Au=\begin{bmatrix} -1&2\\1&-2 \end{bmatrix}\begin{bmatrix}u_1 \\ u_2\end{bmatrix}\\ u(t)=c_1e^{\lambda_1t}x_1+c_2e^{\lambda_2t}x_2(代入验证)对解的形式，这里的指数幂，相当于上节课k的幂次方，上次是幂形式，这次是指数形式,。证明方法，分别带入$\frac{du} {dt} = Au$,得证。 假设$u_0=[1,0]$, 对本例而言，矩阵A为奇异矩阵，一个特征值是0，迹为-3，所以另一个为-3，特征向量$x_1=[2,1] , x_2 = [1,-1]$，再代入上式可得到$c_1,c_2$。得到答案公式如下 u(t)=\frac{1}{3}\begin{bmatrix} 2\\1 \end{bmatrix}+\frac{1}{3}e^{-3t}\begin{bmatrix} 1\\-1 \end{bmatrix}对于此例,随着时间增长逐渐流向稳态。观察形成稳态的条件，特征值需要小于0，对于复数只要实部小于0就可以 进一步推导。确定$c_1,x_2$时，用到了公式$Sc=u_0$,原方程组有两个相互耦合的未知函数， 矩阵A就表明$u_1，u_2$相互耦合，希望把解变成S和$\lambda$的形式,这样看来，特征值和特征向量的作用是解耦，又叫做对角化。 \frac{du}{dt}=Au \ \ \ u=Sv\\ S\frac{dv}{dt}=ASv \rightarrow \frac{dv}{dt}=S^{-1}ASv=\lambda v\\ \frac{dv_1}{dt}=\lambda_1v_1 \ \ \ \frac{dv_2}{dt}=\lambda_2v_2\\ v(t)=e^{\lambda t}v(0) \\ u(t)=Se^{\lambda t}S^{-1}u(0)=e^{At}u(0)另外，求解二阶微分方程的方法与此类似。 $e^{At}$的意义证明$e^{At}=Se^{\lambda t}S^{-1}$ e^{At}=I+At+\frac{(At)^2}{2}+\dots+\frac{(At)^n}{n!}+\dots\\ =I+S\lambda S^{-1}t+\frac{S\lambda^2S^{-1}t^2}{2} +\dots+\frac{S\lambda^nS^{-1}t^2}{n!}+\dots \\ = S( I+\lambda t+\frac{\lambda^2t^2}{2}+\dots+\frac{\lambda^nt^n}{n!}+\dots)S^{-1}\\ = Se^{\lambda t}S^{-1}同时，巧妙的是,$e^{\lambda t}$的计算相当于n个泰勒级数。 \lambda = \begin{bmatrix} \lambda_1&\dots&0\\ \ &\ddots& \ \\ 0 & \ & \lambda_n \end{bmatrix} e^{\lambda t} = \begin{bmatrix} e^{\lambda_1t}&\dots&0\\ \ &\ddots& \ \\ 0 & \ & e^{\lambda_nt} \end{bmatrix}马尔科夫矩阵定义：每个元素大于等于0，每一列加起来等于1 性质1：矩阵平方后仍然大于等于0 性质2：平方后每列的值的和依然是1。 性质3：A的幂依然是马尔科夫矩阵，这和概率论思想有关 性质4：马尔科夫矩阵存在一个特征值1，所有其他特征值$|\lambda_i|&lt;1 $证明，观察$A-\lambda I$观察到每行相加等于0，说明三行线性相关，说明三列线性相关，说明矩阵奇异，说明1是特征值。 性质5：稳态值。$u_K=A^ku_0=c_1\lambda_1x_1+\dots+c_k\lambda_kx_k$,稳态趋近于$c_1x_1$ 性质6：A和$A^T$的特征值相同。证明:$det(A-\lambda I)=0$,由于矩阵行列式性质，$det(A^T-\lambda I = 0)$，则得证求解$u_{k+1} = Au_k$,以人口迁移问题进行举例，此处不再展开。 傅里叶级数有n个标准正交向量$q_1,q_2 \dots,q_n$，假设其是n纬空间的一组基。将向量v展开到基上去 v = x_1q_1+x_2q_2+...+x_nq_n+\dots \\ q_1^Tv=x_1q_1^Tq_1+0+\dots+0 \rightarrow q_1^Tv=x_1\\ Qx = v ,x = Q^{-1}v=Q^Tv傅里叶级数公式如下,$f(x) = a_0+a_1cosx+b_1sinx+a_2cos2x+b_2sin2x+\dots$但不同于上文利用内积计算正交性的方式。此处函数的内积指的是$f^Tg= \int_0^{2\pi}f(x)g(x)dx$,傅里叶级数的的基函数$sinx,cosx,sin2x,cos2x \dots$具有正交性，这一组也被称为无穷正交基。]]></content>
      <tags>
        <tag>机器学习</tag>
        <tag>线性代数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[统计学习 | 正态分布、测量]]></title>
    <url>%2F%E7%BB%9F%E8%AE%A1%E5%AD%A6-%E6%AD%A3%E6%80%81%E5%88%86%E5%B8%83%E3%80%81%E6%B5%8B%E9%87%8F.html</url>
    <content type="text"><![CDATA[赋予对象以数量，对理解对象有很大的价值，本节主要关键词是测量，内容是有关正态分布和测试的。 正态分布之美 统计学里有三项奇妙神奇的工具：相关系数、中心极限定理、正态分布 正态曲线示意如下图所示，平均数在中间，越偏离中心，分数空间越小； 正态分布一种可能的解释为：分数落入给定区域的可能性 正态曲线是联系自然万物的普遍真理，它体现了平衡和变异的思想。 正态分布表格 观察如下图所示表格。各列所代表的含义如下。 z列指的是z分数，z分数指的是用标准差表示与平均数的距离，z分数为1.04，描述的是距离平均是1.04个标准差的分数 平均数和z分数之间的比例，在平均数和一个给定分数的空间内，存在某个比例的分数，也是随机数落入所限定区域的概率。 大区域中分数的比例。任意给定z分数和z为4.0之间的区域。 这张表不仅可用于分数，也可用于相关系数和比例 z分数 原始分数（绝对值）包含的信息没有想象得多，但可以把原始分数转换成z分数来进行处理。z分数又称为标准分数，你的四六级成绩是标准分。 $z=\frac{原始分数-平均数}{标准差}$，z分数的值一般介于-3至+3之间 z分数的生效原理可被称为常模参照，即不确定测试分数的含义，但至少可以把分数和其他人情况做对比。 另外一种是标准参照，这需要知道更多关于测量的特质或内容的信息。 T分数 z分数有一些自己的缺点，如可以是负值；0.00是平均分；预期最高分被限制（一般是3分），这限制了它的使用范围，因而引入了T分数。 T分数是对z的转换，$T=z(10)+50$ 其他标准分数如下图所示 z分数其实是平均数为0，标准差是1。如果我们希望使用自己分数的平均数和标准差，用z逆转换就行。 设计计分系统并构建测试时，选择常模参照计分，驱动原理是理解任务表现，因此对比某人和其他人的表现水平。选择标准参照计分，驱动原理是基于一系列标准，如知识库、一套技能、教育目标和诊断特征。 如何正确提问 包含3-5个选项，且保证每个选项的信度 不将”以上所有选项“和“以上选项都不是”作为选项 对选项进行逻辑排序或随机排序 使题干长于选项，且题干和选项语法保持一致 不要使用否定词 使用整句表述题干 学习水平有知识、理解、应用、分析、综合、评估，出题时应选择正确的认知水平。 建立信度 信度保证测试分数受随机因素影响较小。大多数信度指标基于以下相关：对测试项目做出的反应的相关、一个测试的两个分数集之间的相关、一个测试两次计分的相关。 有四种常见的信度类型用来确定一个测试产生的分数是否不包含太多随机变异 内部信度。在同一个测试中不同项目间是否一致？对其测试，计算分半相关，即随机分成奇数和偶数，计算相关性。公式$\alpha=\frac{n}{n-1}(\frac{SD^2-\sum{SD_{i}^2}}{SD^2})$,n代表测试项目数，SD代表测试标准差，$SD_i$表示每个项目的标准差。系数值高于0.7时是必须的，只被用来设计做重要的测试。 重测信度。执行同一测试两次，每个参试者的表现是否一致？用于经过一段时间后问卷的一致性。 内部评分者信度。如果两个不同的人给测试平分，参试者表现是否一致？比如高考评卷 平行信度。采取不同形式执行同一个测试，参试者表现是否一致？比如几次高考前模拟考试。]]></content>
      <tags>
        <tag>数据科学</tag>
        <tag>统计学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[统计学习 | 相关性]]></title>
    <url>%2F%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0-%E7%9B%B8%E5%85%B3%E6%80%A7.html</url>
    <content type="text"><![CDATA[一个特质与另一个特质的关系，因和果之间的联系，都可以通过数学的技巧揭示 发现相关性 相关性无处不在，描述关系大小的数字叫做相关系数 相关系数计算公式$\frac{\sum(z_xz_y)}{N-1}$,$Z_x$是指分数离平均数的距离。 相关系数值在$-1 \sim +1$之间，它提供了两个变量之间线性关系强度的标准度量。强相关也可以是负的。 只有在样本数足够大的时候，样本的相关性才能表征总体的相关性。有下表。 相关性不能作为因果关系的证据，虽然二者有关联。 在相关性分析中，线性回归是一个重要话题 回归方程 用一组数据预测另一组数据需要两组样本数据，一组为效标变量，即想要预测的变量。另一组为预测变量，即用作预测指标的变量。还需要两变量之前相关系数一个。 计算最终方程为效标 = 常量 +(预测变量 X 权重)，计算过程如下： 权重 = 相关系数 X 效标标准差 / 预测标准差 常量 = 效标平均数 - （权重 X 预测平均数） 当两个变量相关时，提供的信息有重叠之处，即共享变异。因此可用一个变量的变异去解释另一个变量的变异。 当两变量相关不完美；关系是非线性化的； 原始数据不具备对未来数据的代表性，那么回归分析就用处不大。 多变量预测单变量 计算最终方程为效标 = 常量 +(预测变量1 X 权重1)+(预测变量2 X 权重2) + … 直接对比原始权重可能会有误解，一个变量权重过小，可能是因为它的度量尺度大。通过标准权重可以解决问题。 多元线性回归预测效果比简单线性回归好，因为引入了额外的信息，最后产生的权重是移除了共享信息之后的权重。 单因素卡方检验 1982年伦敦出生男孩女孩数量相同吗？一天中不同时段罪案数量相同吗？单因素卡方检验用来解决多类别中每一类所包含的“事物”数量较之正常状态下随机发生的数量是否有所不同这样的问题，其用来识别非预期结果 卡方值计算公式：$\sum{\frac{(观望频次-期望频次）^2}{期望频次}}$ 显著性为0.05时需要的卡方值。 卡方适用于类别数据，数字越大，用偶然性单独解释事情的可能性越低。卡方检验的使用框架是:研究者怀有某个预期，以此方法检验观测数据是否与预期相符。 卡方是一种直接的模型检验，一种拟合优度检验。 两因素卡方检验 与前文不同，两因素卡方检验主要用来识别非预期相关，比如程序员是否找不到妹子？女生更喜欢加入民主党还是共和党？ 计算方法基本与上文相同，也是计算平方卡方值。 两因素卡方通过观察差异性回答相关性，这可能违反直觉，但这背后的逻辑是如果没差异性，那么分布应随机形成，现在有较大偏差，说明有相关性。 两因素卡方分析有时候被称作联列表分析 t检验- t检验可以用来比较两组，t越大，差异为随机出现可能性越低。 t= \frac{第一组平均数-第二组平均数}{ \sqrt{ \frac{第一组方差}{第一组样本大小}+\frac{第二组方差}{第二组样本大小 }} } 随机出现几率小于5%的值 样本差异性究竟能不能反映总体差异性，t检验回答了这个问题。其公式里的平均分数提供了样本分数的分部信息，方差表示了可能偏离总体平均数的程度，样本量提供了估计的准确性。 标准误差 标准误差可以估计由样本得出的参数和总体参数的差距 标准误差分类 描述性统计中的平均数标准误差，如某个变量的总体平均分 调查取样中的比例标准误差，如总体中拥有某个特征的成员所占的比例 回归中的估计标准误差，如未来的表现。 平均数标准误差 = $\frac{标准差}{\sqrt{样本大小}}$,其本质是众多样本的平均数与其总体平均数距离的平均数。样本数量越准确。可以把样本量想象成独立观测，观测越多越准确。 比例标准误差 =$\sqrt{\frac{(比例)(1-比例)}{样本大小}}$。注意到样本中比例偏离0.5的程度越大，比例的标准误差越低。 $ 估计标准误差 = 标准差\sqrt{1-相关系数^2}$标准差指的是预测的变量(效标变量)的标准差，相关系数是预测变量和饿效标变量的相关。 因为取样误差是正态分布的，因此使用标准误差可以在一定把握上去判断真相(总体的值)落在哪个区间，示例如下图 标准误差之所以生效，其一是因为取样误差是正态分布的，其二是因为取样误差是无偏的，这意味着样本值大于或小于总体可能性相同。 取样 一个良好的样本能代表一个总体，这意味着总体中每个中重要特征分布必须和样本中特征分布成比例。 构建样本时，必须了解各种隐性或显性的分组层级。定义采样框架时需要明确通用全集、可操作全集、抽样单元、抽样框架 可泛化推广样本和有偏样本，关键在于是否随机 现实世界抽样方式 方便抽样，比如去购物中心随机问顾客对某件事态度 系统抽样，从抽样框架中等距抽取 分层抽样，首先要去定义子群组的特质 整群抽样，单元群组是随机的，但内部每个单元都是样本，如随机选一个班级，问里面所有学生情况 判断抽样，样本的选择是基于你的专业判断 威士忌与水的混合问题，很有意思 再谈平均数 平均数、中位数都是为了描述趋中趋势，实际决定选哪个数要考虑实际情况。 如果数据中存在两个或多个趋势，报告每个趋势的众数 如果分布是偏态的，选择中位数 如果分布是非常对称的，且只有一个众数，那么选择中位数]]></content>
      <tags>
        <tag>数据科学</tag>
        <tag>统计学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[统计学习 | 基础概念回顾]]></title>
    <url>%2F%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0-%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5%E5%9B%9E%E9%A1%BE.html</url>
    <content type="text"><![CDATA[这又是一个新的学习总结系列啦。 概率的意义 样本和总体的概念。 概率是统计学的核心，统计学家获取关于值分布的已知信息并将其表述成概率。 利用前人的公式和定理、经验法则、思想体系和假说，了解到研究者最常用的复杂值的分布情况。 在表述为概率的过程中，样本必须满足一定的前提，比图样本一定是随机的。 平均数和标准差 描述性统计和推断性统计。前者有全部数据，后者只有数据的一部分但仍想描述整个组。 利用平均数和标准差两个样本值加上一个总体分布假设，就可以描述总体，这就是中心极限定理。 平均数是对趋中趋势的最佳度量，它有一个奇妙的性质，它和其他各数的距离差 的和最小。 标准差用来描述值的变异性和分布(多数接近平均数还是远离平均数)，标准差描述的是每个分数和平均数的平均距离。 中心极限定理，表述为：从总体中随机抽取多个样本，那么每个样本的平均数趋于正态分布。 这些平均数的平均数等于总体的平均数。 这些平均数的标准差等于样本标准差除以样本量的平方根，（$\frac{\sigma}{n}$） 应用一：由样本值去估计总体的平均值和标准差 应用二：受很多随机作用和无关影响的数据最终呈正态分布，无论总体分布如何，从总体中随机抽取的平均数呈正态分布。 概率计算 加法定律对应互斥事件，相乘定律对应独立事件。 计算概率有两种视角，分析视角是经典视角，分析所有可能结果得出答案。相对频率视角则是通过收集数据、观察实际事实来计算的。 假设检验：对可检验世界做一个估计。验证假设合理方式是是通过观察假设变比那个是否存在相关性。 统计假设检验是特定的假设检验，其不同于研究假设检验(如关注总体中变量X和变量Y存在相关性)，它往往对于研究假设相反的假设(虚无假设)为真的可能性做概率解释(如关注总体中变量X和变量Y不存在相关性) 选择虚无假设的原因 证明某事为真非常困难，证明一个特定的估计不正确比证实它正确要容易的多。 证明某个总体故居不正确都比较容易，证明虚无假设错误也推动了进步。 增加样本以减少误差 对于受几率控制的结果随着实验次数增加，预测概率和实际发生概率之间的差距缩小，这个差距被称为标准误差。 差距大小与$\frac{1}{\sqrt{样本大小}}$成正比，这可以被看到大数定律的数学表述。 生效原因 一件事在单一实验中有特定概率，那么在无限实验中发生几率将和概率相等 样本无限大时，样本统计学特征等于总体参数 效度和可信度 效度指的是测试数据能在多大程度上体现希望测量的特征以及对测量意图的有用程度。 信度是对同一个人多次重复测量得到的相同测试分数的一致性程度，它是测试分数随机波动的程度，通常用测试项目中相关性来计算。 测量标准误差指的是每个人的观测分数和真分数之间的平均距离，它利用测试的信度信息和群组观测分数的变异来估计，即 标准误差 = 标准差*$\sqrt{1-信度}$ 加减一个测量误差一般对应68%置信区间，加减两个测量误差对应95%置信区间（有百分之九十五的可能性此区间包含观测分数）。 测量标准误差是一个标准差，它是误差分数距真分数的标准差。 使用测量误差构建置信区间需要误差是随机的且随机误差是正态分布。 测量尺度 统计学家把有意义的数字称为分数。 一共有四种测量尺度。名义测量、次序测量、等距测量、等比测量。 名义测量。数字代表标签。如0代表男性，1代表女性。 次序测量。第1名，第2名等。 等距测量。涵盖前两者，并新增了准确性。如70度和69度之间差的1度是有意义的。 等比测量。最高尺度，涵盖以上全部，且能产生百分比。 统计检验效力 用来解决没在样本中发现事实，但总体中实际存在相关性的问题 显著性检测 判断样本观测到的某个值有无可能是随机发生的。在过程中 产生一个p值，p值低，表明具有统计显著性，即相关性不仅存在于样本中，也存在于总体中。通常会定义一个预先的显著性水平，若小于等于预先设定水平，则表明达到效果。 借助相关性、t检验、F检验、卡方检验、回归方程都可以帮忙确定显著性。 统计检验效力指：假设变量间存在相关性，统计分析达到显著性的概率，这是一个条件概率。检验力公式包括:样本量、预设的显著性水平值、效应值(总体中相关性大小) t检验中，效应值常用两组平均数差除以样本标准差所得值来表达，0.2内为小，0.2-0.5为中，0.8为大，对同一检验力和显著水平，大效应值代表存在巨大差异，因而只需要很小的样本量。 效应值和样本量的关系。隐藏在总体中的大效应值（干草里的大象）更容易被发现（只需要较少样本）（只需要较少观察）（只需要撩开几把干草） 识别效应值 显著性只意味着在样本中的发现在总体中可能为真，但这不能让我们知道相关性，效应值可以解决相关性问题。 效应值表示两个变量间相关性强度，它对比如相关系数（体现两组分数之间的关系强度和方向）感兴趣 效应值三种类型 相关系数，用小写r表示，平方后称为方差比例 d，归纳了t检验中的两组平均数的差异，计算见#统计检验效力# $\eta^2$,最常见的效应值结果，解释为因变量(结果变量)对独立变量（你所在的组）贡献的方差比例 效应值多大，即相关性多大引起你的兴趣，这个可以通过查表得到。 对实际情况来说，效应值的用处比统计显著性要大一些，找到相关是更有实践意义的。]]></content>
      <tags>
        <tag>数据科学</tag>
        <tag>统计学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[统计学习 | 高斯分布]]></title>
    <url>%2F%E7%BB%9F%E8%AE%A1%E5%AD%A6-%E9%AB%98%E6%96%AF%E5%88%86%E5%B8%83.html</url>
    <content type="text"><![CDATA[工程领域很多研究问题本质上都是信息处理问题。这里可以举一个广义的例子，就自动驾驶系统的感知过程而言，环境就是信息源，传感器编码环境信息，认知算法对信息进行解码获得能完成驾驶任务的信息。 信息处理中一个经典问题是对不确定性建模，而推开不确定性的神圣青铜门，我们会发现高斯分布坐在正中间。 正态分布数学定义正态分布对应的密度函数表达式f(x) = \frac{1}{\sqrt{2 \pi} \sigma} e^{-\frac{(x-\mu)^2}{2 \sigma^2}}归一化后的密度函数表达式f(x) = \frac{1}{\sqrt{2 \pi} } e^{-\frac{x^2}{2}} 正态分布产生历史 由赌徒问题得到的二项分布问题，需要求解$2npqb(n,p,np)$的值，在此过程中逐渐发展出中心极限定理。即二项分布在n趋近于无穷的时候，其极限分布都有正态的性质。\lim_{n\rightarrow\infty}P\left( \frac{X_n – np}{\sqrt{np(1-p)}} \le x \right)= \int_{-\infty}^x \frac{1}{\sqrt{2\pi}} e^{\frac{-t^2}{2}}dt 勒让德发明最小二乘法，用来解决线性矛盾方程组的问题。即累积误差等于观测值减去理论值之后的平方和，之后令累计误差最小来计算参数，它的优点如下: 最小二乘法使得误差平方和最小，并在各个方程的误差之间建立了一种平衡，从而防止某一个极端误差取得支配地位； 计算中只要求偏导后求解线性方程组，计算过程明确便捷； 最小二乘法可以导出算术平均值作为估计值。 误差分布有一些基本特性： 观测数据存在误差； 误差是对称分布 大误差概率低，小误差概率大。基于以上特性统计学家分别发明了辛普森误差分布和拉普拉斯误差分布。高斯独辟蹊径开创了一条道路。如下公式，$\theta$为真值,$e_i$为每次测量误差,$f(e)$为该误差密度函数,测量值的联合概率为n个误差的联合概率\begin{align*}L(\theta) & = L(\theta;x_1,\cdots,x_n)=f(e_1)\cdots f(e_n) \\ & = f(x_1-\theta)\cdots f(x_n-\theta)\end{align*} 取使$L(\theta)$最大的$\theta$为最终值，即极大似然估计\hat{\theta}= \arg\max_{\theta} L(\theta)。高斯的天才之处在于令算术平均值等于\theta,由此解出$f(x)$就是正态分布函数$N(0,\sigma^2)$ 正态分布的推导过程高斯让平均数等于极大似然数，计算出了高斯分布（不困难，可查），而其他领域的科学家也各自从自己所属领域独立推出了正态分布，条条大道通罗马，正态分布藏着世界关于概率的终极秘密，了解这样概率可以帮助我们进一步认识正态分布。 高斯采用的是取对数、求导、求解方程的方法得出来的，过程很简单，可自行搜索。 赫歇尔和麦克斯韦 基于空间几何的不变性推出了高斯分布。其考虑二维误差分布$p(x,y)$,提出的假设如下 x轴和y轴的误差是相互独立的，即随机误差在正交的方向上相互独立 误差的概率分布在空间上具有旋转对称性，即误差的概率分布和角度没有关系 电气工程师兰登通过噪声分布推导。他们的推导基于以下准则： 随机噪声具有稳定的分布模式 累加一个微小的随机噪声，不改变其稳定的分布模式，只改变分布的层级 (用方差度量)$X\sim p(x;\sigma^2), \epsilon \sim q(e), X’= X+\epsilon$,则$X’ \sim p(x;\sigma^2 + var(\epsilon))$,这个公式给出了自然界噪音的形成过程，这是中心极限定理的增量版本，相比中心极限定理是一次累加，这是逐次累加。另外，我们可以推断，正态分布具有相当好的稳定性；只要数据中正态的模式已经形成，他就容易继续保持正态分布 基于最大熵的推导。熵可定义为$H(p) = -\int p(x)\log p(x) dx$,给定一个分布密度函数$p(x)$的均值$\mu$和方差$\sigma$,求满足熵最大的概率分布$p(x|\mu, \sigma^2)$,解出的就是正态分布。 正态分布的通用性解释 正态分布之所以有这么高的地位，一个很重要的原因是随着中心极限定理发展，我们发现，随意的一个概率分布中生成的随机变量，在序列和 (或者等价的求算术平均) 的操作之下，表现出如此一致的行为，统一的规约到正态分布 高尔顿钉板,这说明在自然界各种随机因素的影响下，最终会形成正态分布。而对于典型的遗传现象，我们可以认为是隔断的正态分布。 正态分布具有稳定的性质,如下前三个保证正态分布一旦形成，就具有稳定的性质。后两个说明在自然庆情况下，其它分布会逐渐趋近于正态分布。 两个正态分布密度的乘积还是正态分布 两个正态分布密度的卷积还是正态分布，也就是两个独立正态分布的和还是正态分布 正态分布$N(0,\sigma^2)$的傅立叶变换正规化为密度分布后还是正态分布 中心极限定理保证了多个随机变量的求和效应将导致正态分布 正态分布和其它具有相同均值、方差的概率分布相比，具有最大熵 正态分布的其他性质 二项分布 $B(n,p)$在n很大逼近正态分布 $N(np,np(1-p))$。 泊松分布$Possion(\lambda)$在$\lambda$ 较大时逼近正态分布$N(\lambda,\lambda)$。 $\chi_{(n)}^2$在 n很大的时候逼近正态分布$N(n,2n)$。 t分布在 n 很大时逼近标准正态分布 $N(0,1)$。 正态分布的共轭分布还是正态分布。 几乎所有的极大似然估计在样本量n增大的时候都趋近于正态分布。 如果 X,Y是独立随机变量，且S=X+Y是正态分布，那么X，Y也是正态分布。 如果 X,Y 独立且满足正态分布$N(\mu,\sigma^2)$，那么X+Y,X-Y独立且同分布，而正态分布是唯一满足这一性质的概率分布。 对于两个正态分布X,Y,如果X,Y不相关则意味着X，Y独立，而正态分布是唯一满足这性质的概率分布。 现在科学界的三大分布，$\chi^2$分布，t分布，F分布都可以转换为正态分布。]]></content>
      <tags>
        <tag>数据科学</tag>
        <tag>统计学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[跳出舒适区]]></title>
    <url>%2F%E8%B7%B3%E5%87%BA%E8%88%92%E9%80%82%E5%8C%BA.html</url>
    <content type="text"><![CDATA[走出舒适区，生活就不会是一潭死水。只有走出去，生活才能有点的意思。因此，我想求新求变，我要不断地破，破而后立。 中山敦《山月记》的两段话，第一次看时，心神大乱。 因为害怕自己并非明珠而不敢刻苦琢磨，又因为有几分相信自己是明珠，而不能与瓦砾碌碌为伍，遂逐渐远离世间，疏避人群，结果在内心不断地用愤懑和羞怒饲育着自己懦弱的自尊心。世上每个人都是驯兽师，而那匹猛兽，就是每人各自的性情。对我而言，猛兽就是这自大的羞耻心了。老虎正是它。我折损自己，施苦妻儿，伤害朋友。末了，我就变成了这副与内心一致的模样。 如今想起来，我真是空费了自己那一点仅有的才能，徒然在口头上卖弄着什么“人生一事不为则太长，欲为一事则太短”的警句，可事实是，唯恐暴露才华不足的卑怯的畏惧，和厌恶钻研刻苦的惰怠，就是我的全部了。但远比我缺乏才华，可由于专念磨砺而成就堂堂诗家的，也颇不乏其人。成为老虎后的今天，我才总算看到了这一点。 未完待续。]]></content>
      <tags>
        <tag>高效学习</tag>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[在路上 | 初中走读]]></title>
    <url>%2F%E5%9C%A8%E8%B7%AF%E4%B8%8A-%E5%88%9D%E4%B8%AD%E8%B5%B0%E8%AF%BB.html</url>
    <content type="text"><![CDATA[初中走读骑的是自行车，朋友间总是互相带着。 回家时往往已是十点以后，乡野小路，天黑无灯。那时候我懒得很，总是让别人带我，我自己坐在后面拿个手电筒晃来晃去。 有一次下雨，春雨，很细。也有微风，雨丝被风吹起，斜斜的打了下来，被透过玻璃的光照的透明通亮，再撞到手电筒的玻璃上，如木炭砸地，星火四溅。那时感觉自己像一个顶天立地的巨人，正站在黑暗的宇宙里，雨丝就是手边的流星雨。 我们三个人总一起走，老姚总是喜欢在回家的路上唱歌，唱Take me to your heart，他英语很好，声音也清澈。回去路上最喜欢谈班花，又总是说，老吴啊，你能不能考第一名超过班花啊。我总是摇摇头说，不知道。 老航和我同姓，他是我十二岁以前的邻居，撇开家姐不论，应该是我人生中第一个朋友。回家路上他喜欢表演不扶车把，虽然我现在知道这全托主销后倾的福，但那时我总是没胆做这个。 我那儿初中比高中严格，早五点要到，晚九点下课。三年接近一千天，早上四点多揉着惺忪的眼，骑着自行车到十字路口等他们，晚上九点多也是揉着眼，说着教导主任，聊着各班班头，还有那时候的年级风云人物。无数欢声笑语，都散在黑夜里。 后来友散如星溅，回家路上的三剑客，一个初中辍学了，一个去了汝州一高，一个去了宝丰。我最后一次见老姚，他还是很帅，那时是高二，我们还都是意气风发。我上一次见老航，已经是大二了，他抽烟说起工作，我心有他感，靠在沙发上说话，恍惚间像小时候那样。 下一次三人重聚，不知道会是什么样子，愿生活不会压垮我们，大家笑着谈谈过去的时光吧。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Running Man 之于我]]></title>
    <url>%2FRunning-Man-%E4%B9%8B%E4%BA%8E%E6%88%91.html</url>
    <content type="text"><![CDATA[RunningMan对于我有特别的意义，没有它我应该会失去现在所拥有的很多正面东西。 大二夏，第一次接触runningman。那时舍友都已回家，我留在学校参加一个暑期项目。白天出去调查，爬空荡荡的危楼和医院，在陌生街道里穿梭，被各种人怒怼。晚上回来想自己是不是要读六年，想五月发生的事是为什么。之后就开始整夜睡不着觉，拿着室友的骰子毛绒玩具坐在床角，等凌晨六七点时才能被疲倦逼着闭眼。 半个月后，某深夜，凌晨三点左右，依然睡不着，也不想再躺，于是从床上翻下来打开电脑，浏览网页时与RunningMan相遇，那正好是是无数人奉为经典的一集，李光洙开场说，”大家好，我是南扬州杀人微笑”。 怎么形容看完后的感受呢？一个接近窒息的人突然获得了空气，一个要跌落悬崖人看到了朋友的脸，开心、快乐，这种积极的情绪直接涌了进来。突然就知道了什么叫情感拯救。 那几天的气温平均约37度以上，我选择偷懒一天，窝在寝室里连看了六集，中间傻笑了上百次，我的潜意识被影响着， 他们怎么做到如此有趣，如此欢乐？我的一天为什么要被混混沌沌的压抑统治？他们对待事物如此认真，做什么都充满精气神，活力和热情简直令人羡慕，我也想拥有这样的状态，而不是像现在一样死气沉沉。 当下的一切都在好转，调研我决定扮演恶人角色，开始解锁低级“特工技能”。更重要的是，从那时候起我真正掌握了未来想成事儿必须的技能，不再后悔过去的不能改变的事，把眼前能控制的事推到对自己最有利的方向。而这，在我心里都是runningman，是这七个人催化的。这个节目影响我的性格太多。 走到现在，是时候感激，也是时候怀念了，感谢你们，真心的。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[将心比心]]></title>
    <url>%2F%E5%B0%86%E5%BF%83%E6%AF%94%E5%BF%83.html</url>
    <content type="text"><![CDATA[将心比心，又称共情，这是现代人正逐渐失去的能力。展开讲的话是说不完的，先以一旧随笔引之吧。如果要选出和别人的交流中让我最受伤害的的一句话，那应该是这句:“你别说话站着不腰疼了！” 当时的我正在小心翼翼和对方聊现在的情况，且自认为很真诚的提出从我的角度能给的建议。但这句话就像兜头给了我一棒子，再在伤口处洒上辣椒，有一种让人狂躁的辣痛感。 我那时候自然是接受不了这样的反馈的。但过了这两年，见了一些事，现在可以理解了。 境遇，或者说状况，我们的一切一切都不一样。这里面还有一个关键的点，对方遇到问题了，而我没有。对方的焦急，纠结，彷徨，权衡，我不能真正的感受到，这是客观的代表着巨大差异的峡谷，不是我凭借主观的善意和担心就能跨越的。 那这也就是说，当我的挚友遇到过不去的坎儿来和我聊的时候，我该”无为”吗？当然也不是。只是不要再跟我讲一些套路了，即使只是陪伴和安慰，也比强行输出价值观方法论好的多。 对方来找你，也许真的不是想听你的方法论。空降的方法论对已经积累起来的问题又有多大用处呢？如果要打一个比方，对方已经在绿皮火车上坐了十二个小时，而你才刚刚踏入这个车厢。作为站着的人，你现在轻松又有好心态，而这些东西，在聊天中能够传染。我想这才是他们需要的东西。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数学建模回忆]]></title>
    <url>%2F%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E5%9B%9E%E5%BF%86.html</url>
    <content type="text"><![CDATA[这几天很多本科生与研究生都为了数学建模忙的焦头烂额，我看着他们，想起了自己建模的那些日子。 我在大学期间一共参加过三次数学建模比赛，每次的经历都可以一说。 第一次是在大三，团队组建是很偶然的。因为自己是小白，在召唤队友时也很拘谨。在建模大群里发出一条信息，有谁还没组队？只要靠谱就行，不需要基础。有一个女生回应说想试一下，于是就找到了第一个队友，也是未来整个大学最好的朋友之一。之后在贴吧里找到第二个队友。三个不自信不相识的人就这样聚到了一起。 没有任何目的性的组队，却形成了极好的效果。我以前看过《楚留香传奇》，里面有最强铁三角，左蝶右飞燕，花香满人间，三人性格各异，可概括为一热一冷一温。我总感觉我们三人也是这样的模式，团队中的女生热情开朗，男生却很高冷，我是镜子型性格，整体偏向于温和。 建模题目自然是不会做的，我们要做一个游乐园疏导方案，越深入思考越觉得不可测。我们一起查资料，论文、新闻、甚至商业广告；一起讨论，从完全一无所知到学会套排队论加图论模型，再到提出自己的时间空间复杂度创新模型；一起写论文，高冷男生表达出一个观点，我和另一个队友用自己都看不懂的学术用语包装起来，如此往复。 在结束了一整天的建模后，我们走在回寝室的路上，身体疲倦但大脑还没停下的休息，大家有一搭没一搭的聊着，一起去朋园相约买粥。也经历了第一次熬夜，几个人都已经到了极限，但珈彤还是坚持写完了论文。最后是校二等奖，这个结果令我们很惊喜，比以往得到其他奖励开心的多。 第二次组队，国赛，一个非常有趣的问题，当拆除小区的围墙后会发生什么？没有任何数据，只有这一段文字叙述。三个人的组合依然默契。 本来幻想，我们校赛二等奖，国赛上海赛区一等奖，接下来就应该是登顶美赛M甚至F奖，无奈第三个男生因为要考研决定退出队伍，我们新找到了一个队友，很优秀，但建模果然还是最需要默契的。美赛是很折磨人的一次经历，对题目没有思路，利用简单的模型推进也比较慢，也因为加入了新人，没有形成良好的管理机制，最终收获了一次惨败。附带而来的是一次堪比人在囧途的回家之旅，这个留待以后说了。 建模是一个很锻炼人的过程，搜集资料的能力，归化的能力，写作的能力都会在短时间内被集中训练。建模也是催化友情的过程，几个人合作完成一件事的感觉真是太棒了。（未完待续）]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶学习 | 算法第四版]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E5%AD%A6%E4%B9%A0-%E7%AE%97%E6%B3%95%E7%AC%AC%E5%9B%9B%E7%89%88.html</url>
    <content type="text"><![CDATA[对于自动驾驶汽车工程师而言，基本的算法素养是不可或缺的。即使不做工程师或程序猿，学习算法也有很大益处，有序的逻辑、抽象的世界观，效率的价值观都是需要训练的，而通过算法学习就是一个有效的手段。在学习算法时，网上会有各种资源，初入门时很容易眼花缭乱，各花入眼之后，最亮的明珠是《算法第四版》，或者叫做《Algorithms 4th》 优点 在网上有高质量的整套开源资源，包括书本、讲义、视频、配套网站、习题等。 涉及的算法内容丰富且完整，以基础、排序、查找、图、字符串、背景分成六大类，涵盖了几乎所有常用算法及其拓展。 书本组织结构很好。各个章节自成体系，没有耦合。可任意选一章学起，也可把书本作为算法的查找手册。 对具体算法讲解的架构很好，会先设计算法的API，之后再实现具体代码，中间也会补充可视化的图形以及具体过程拆解以帮助理解。 课后习题丰富，难度也是循序渐进，可在github上找到配套的答案，可帮助自己检验学习成果，稳步提升。 配套视频里有对算法更精妙的使用，每个视频都能让人有很多启发。 使用Java作为核心语言，学习成本较低，且Java面向对象编程的特性对学习算法是很适宜的。 缺点这么完美的书也有自己的缺点，作者写了一个自己的库，没使用Java自带的原生库，这就给最初一步环境配置带来很多问题，在实际使用代码时，配置环境把我折磨的好几次想放弃。 解决方案1首先进行Java环境的配置和源代码的下载可参考这篇文章，基本配置2018-10-21更新，这种方法就足够解决所有环境配置的问题，但有一点切切注意，从网上下载的源代码请删掉第一句package edu.princeton.cs.algs4 注意1。如果需要用powershell，&lt; 被保留下来作为未来字符，输入数据采用了get-Content方法，参考在powershell里运行如何用参数读取文件。 解决方案2直接导入相关Stdlib包，不使用package的语法，直接import进去。 解决方案3使用Eclipse或其他IDE作为开发工具，我没采用这种方法，但有人采用，具体可参考知乎方法。 资源所有资源都可以从教学网站的入口找到，这里为了方便，把各种信息列了出来，以方便查阅。 书本 | 密码：wf1j 资源包: 课件&amp;视频&amp;练习题&amp;其他 | 密码：54ny 代码运行数据 | 密码：ix1j 源代码 教学网站 课后习题答案 这本书真的很棒。]]></content>
      <tags>
        <tag>自动驾驶</tag>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[与人言]]></title>
    <url>%2F%E4%B8%8E%E4%BA%BA%E8%A8%80.html</url>
    <content type="text"><![CDATA[被边缘化是很难受的事它会形成一个恶性循环群体在没恶意地排斥你自己也一直在默默远离 这条是7月8日的微博，彼时正是毕业，班级的同学在聚餐、拍照、离别，而我在课题组敲字、久坐、发霉。情况发展至此实非本意，如果要追根溯源，还是要回到大二的转专业。因医科和专科培养方案差异过大，我先降了一级，在大二与汽院大一的同学共学，与医学院同学同住。在大三与汽院大三的同学上课，但与汽院大二同学同住。总而言之，我错过了最容易培养感情的大一大二。 班长是能记住我的，但面对关系已经很好的一群人时，单个人的加入和融入将没有那么顺遂。餐桌上每人都叫着彼此的昵称，和以自己寝室朋友为核心的同学大声欢笑，我若过去，既找不到寝室这样的小团体，也找不到单独的人可以倾诉，这种不适感让我不由自主想去逃离，其实正像宇宙大爆炸之后的星球一样，彼此在互相远离，而且距离越远，离开的速度越大。 被边缘化像是用钝刀子割肉，割一刀没事儿，淡淡的白印儿，几刀下去就出了血印儿，可怕的是也不见痛，但再磨下去，发现时就会开肉见骨，痛入骨髓但也为时已晚了。这实在是一件很悲哀的事，毕业时窗外欢声笑语，但一切与我无关，我看着他们拔河，看着他们拍照，心里无悲无喜，只有疏离。 疏离感会让人胡思乱想，我甚至偶有怀疑自己是否不喜交流，老师说我不善交流的时候，我还真的有动摇过自己的判断。但这几天新学期下来，我确认是过往的特殊情况暂时封印了我的交流能力，我是喜欢热烈的集体氛围且确切地能融入进去的。 新学期开始时，我已经下定决心不再在边缘游走。班级第一次班会，虽然课题组有任务，还是去参加了，做了久违的自我介绍，感受别人爽快或简洁的语言风格。第一次英语课，老师让以学院划分组队，我们用各有口音的英语聊天南地北，聊导师未来，没什么任务要求，实施计划，就是最传统的聊天而已。及至今晚班级的第一次轰趴，路上和几个新同学同行，打魂斗罗时认识了新同学，打麻将又认识了新同学。话说川麻是真的痛快，节奏快，成局时间短，哗啦啦一局又一局，需要集中注意力才能抓牌，也算的上与人斗，与己斗，其乐无穷了。 晚上回来时，在初秋晚十点的夜晚里行走，旁白是新认识的朋友们。嘉定的乡下村里没有光污染，我们摸着黑回家，也是谈未来谈现在，都是些还能谈得动的年轻话题。有暖风吹动衣衫，这是近乎重生的一天。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[同济智能汽车研究所 | 公众号数据分析]]></title>
    <url>%2F%E5%90%8C%E6%B5%8E%E6%99%BA%E8%83%BD%E6%B1%BD%E8%BD%A6%E7%A0%94%E7%A9%B6%E6%89%80-%E5%85%AC%E4%BC%97%E5%8F%B7%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90.html</url>
    <content type="text"><![CDATA[最开始因为自己的日常安排较满，不想在公众号这种事情上牵涉太多。但初期无人接手，也只能去做了。现在发现，公众号这类虽然没技术含量，但想做好它跟想做好一个项目有很多相似之处。现记录一下过往工作，以期以后能做更高层级的总结回顾。 前期准备名字选取名字选取要考虑公众号的定位，个人公众号可尽显个性，晦涩的，通俗的，在法律允许范围内皆可。但是公众类需考虑机构品牌，不能太邪，名字也不能太长，想到最后还是以同济智能汽车研究所为名，避开“大学”这两个字带来的高认证难度，体现同济二字；说智能汽车，不说自动驾驶，也是体现不忘初心的典故。关注介绍，得把研究所的信息讲清楚，说明白，也不能太长。 logo设计总不能还在网上找一张图片吧，于是先整理了一些需求元素，请外包进行设计，最后决定以iiv(Institute of Intelligent Vehicles)为核心文字，还增添了一个wifi图标表示网联，增添一个笑脸符号，我也不知道为什么。 预计推文内容我把公众号主要分为两栏，“学术日常”和“新闻动态”，学术日常可以保证日常流量，同时体现研究所内部的学术成果，这是每周一定时发的，选在周一也是考虑到这种公众号在周一的打开率会好一些。新闻动态则是不定期的，可以去发布一些内部项目的演示视频，或者一些联合实验室的揭幕通知之类。之后针对学术日常，陈老师又对五个研究室具体推文时间进行了排序。 基本流程也得预先设计。基本流程是为了程序正义准备的，公众号的内容需要有几层审核机制，各研究室老师应首先把关内容，之后由公众号管理人员进行把关，最后发送到汽车学院宣传口的负责人进行把关。在这样一层层上传的过程中，也要考虑各个节点对应的时间。 日常运营注意细节等到真正开始日常运营的时，还有一些其他要关注的问题，比如说排版。也是考虑公众号的风格，排版风格基本应该走性冷淡的冷色调，同时诸如字间距，行间距，对齐方式，是否要首字缩进，图片上下是否要空一行都需要注意。 管理方法这里也要注意基本的管理技巧，可把这些琐碎的要求记录成文档，也要在最初的几篇推文中亲自下场，指出其他人排版不合适的地方，但在几次说明之后，应该就该刻意放手，引导对方自行负责各种格式、错字之类的问题。 推广方法公众号日常工作进入正轨后，要开始考虑多平台部署进行引流，并通过日常交涉处理和其他相关公众号的联动问题，比如制定其他公众号转载时的标明原作规则。同时要警惕整个团队中出现的倦怠情绪，在发现有苗头时，要及时说明。 数据分析在公众号的发展过程中，也要进行数据分析工作，对本公众号的数据分析结果如下。]]></content>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[词的顿悟]]></title>
    <url>%2F%E8%AF%8D%E7%9A%84%E9%A1%BF%E6%82%9F.html</url>
    <content type="text"><![CDATA[阅读文字并去理解，这个过程并没有那么理所当然。想真正体会到文字表达的意思，一要看作者驾驭文字的功力，二要看运气，看有无词的顿悟。 人对文字是无法天然理解的，了解一些信息发展史就能知道这个事实。概因对没有经历过的事情，就很难理解文字背后的意义，读者与文字之间，天堑是时常有的。 自小学就见过青翠欲滴这个词，也知道其常用来描述植物叶子，但直到在一个阳光雨后，我看到了红墙上的那些绿色爬山虎。它的叶面有着微微的一层水雾，绿色汇集在叶尖的水珠里，我才恍然明白青翠欲滴的意思，原来它是这么美的一个词，美到令人微醺。我突然想到，其他人是否曾有跟我现在相似的顿悟？还是只是顺手写上这四个字而已呢。 还有无忧无虑这个词，一次跟妍妍谈起小学附近的庙会，我说小学的庙总会给我鲁迅写《社戏》的感觉，那里大约就可称得上有生活的气息，对物质极不满足的年少时代来说，庙会就是天堂，在逛庙会的时候，总感觉有着一种不同往常的氛围，欣喜的，悸动的，兴奋地，浑身流动着轻松的多巴胺，那时候是真的无忧无虑啊。 电光火石间，我就明白了无忧无虑的意思，就像突然打通了任督二脉，这个词和无忧无虑的感觉在拉着手旋转跳舞，默契在噼里啪啦地爆炸，之后又消失。真是无奈，当我明白无忧无虑这个词的意思的时候，我应该就真正失去了它。 青翠欲滴、无忧无虑这样的词，对我而言尚需要顿悟。是否该为之悲观呢？且不说孤岛效应，即使每个人都擅长表达自己，但在这样的天然隔阂下，共情也是难以企及的事，也许人类的悲欢确实是永不相通，个人的表达终究只是吵闹的声音？ 仔细想了想不应如此，我读金庸的《倚天屠龙记》后记，结尾处说【张三丰见到张翠山自刎时的悲痛，谢逊听到张无忌死讯时的伤心，书中写得太也肤浅了，真实人生中不是这样的。因为那时候我还不明白】。自己也会暗思，失亲之痛，莫过于此。读史铁生《我与地坛》，也常常感悟生命困苦，前行而已。这些共情都是真真切切的。 所以把词的顿悟看做神启吧，这是经历和自己带给生活的恩赐，当感悟过来时，好好享受它。当它不再来时，长亭之外，好好送别它，怀念它。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[表达能力]]></title>
    <url>%2F%E8%A1%A8%E8%BE%BE%E8%83%BD%E5%8A%9B.html</url>
    <content type="text"><![CDATA[表达是一种能力，这是毋庸置疑的。 表达能力可被简单粗暴地分为口头表达和书面表达。 口头表达对复杂逻辑要求不高，在当今信息过载的大背景下，人们通过口语交流理解复杂逻辑的能力大多已退化，但也正因如此，口头表达的第一要素就是要梳理逻辑，像“是什么，为什么，怎么做”抑或“首先，其次，最后”的简单应用就能起到相当的效果，另外，开头点题，结尾回顾总会有意想不到的妙用。 口头表达对辞藻要求也不高，做到偶有秒句太难为人，能做到合适的用词就能算得上谈吐不凡了。无奈现在太多人深受网络用语毒害，扎心老铁在心间，基本用词难出口，这其实是一件很可悲的事。想解决这个问题倒也简单，多看书就好，腹有诗书气自华，这个气往往都是从谈吐开始表现的。 口头表达对节奏有较高的要求，太慢让人心急，太快表达不清，音调、重音、表情、手势说到底也是节奏的组成部分，皆不可忽略。有的人说话自带气势。而节奏往往就是是气势的核心。 口头表达对语境有较高的要求，语境为何需要看谈话对象的身份、性格、知识水平，以及谈话主题等，所谓“见人说人话，见鬼说鬼话”。上文的三条一般在和老师同学交流工作时较合适，如果和父母谈学校生活，和基友讨论八卦游戏自然是走天马行空的路数，想到哪里说道哪里。另外切切注意要考虑对方的接受习惯，和不同专业的人讨论较专业的话题时，切忌学术用语一阵乱抡，在同外行交流时，用简单的话讲清复杂的概念才是最见功力的事。 说回今天想说的书面表达。书面表达可暂且分为文学表达和科研表达，基本上就是两种文体的差别，这里特指的是后者。 我这几天一直在写一个实施方案，写得很累，握笔十分钟，写字不到十，身心同累的那种。我本想顺势把当前境况归咎于在所写内容太难上，以此获得对自己的安慰，但到了周四，我看到另外一位老师发来的合并稿，那时正是早上六点多模模糊糊地时候，但点开阅读后我瞬间警醒，起床，刷牙，洗头，奔赴实验室端坐，打开电脑，开始敲字。 老师写出了我想写但写不出来的东西，内容丰富充实，表述也贴切。我不由自主去问我自己，为什么？为什么他知道写什么而我不知道？为什么他能写出丰富的细节我却不能？为什么他的表达这么贴切而我的像是小学生体？ 仔细想来，其一，积累。我看的不够多，想的不够多，总结的不够多，关键还有，写的也不够多。赵老师马上就是教授，他的硕士、博士、助理教授生涯不知已看过多少期刊，写过多少论文，他还有很多有价值的项目经历，所以能把自己心里已有的想法转化成最合适的用词输。而我，无论是想法积累和转化练习都还远远不够。 其二，心态和效率。我听陈老师讲，赵老师不太满意最初的版本，于是决定亲自上阵，两天里只睡了四个小时写成了这个版本。而我自己的情况是，在我最初判定这个任务难写之后，就开始不经意拖延，在论文之间翻来翻去，东抄一片，西摘一鳞，从没静下心真正尽全力完成这个任务。其实，按照我前期收集的资料和网站，我是有能力写出一部分有价值的内容的，但我提前放弃了它们，从一开始，就宣告了自己的失败。 其三，执行力。这是预先知道的道理，但真正想贯彻这件事还是困难。概括来说，就是先别去想锦上添花，先写出来东西再说，改内容往往比造内容要容易。具体一点，先列出大纲，复制粘贴上自己觉得有价值的资料，写出自己的灵感，写出有价值的衔接，基本成文后再返回修改。不管怎样，先把事情做了，应该抱有这样的心态。 最近家里遇事，人总会有低谷，但低谷也终究也会过去，每个人要为了身边的人而坚强,希望如此，也必会如此。]]></content>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[从搭建博客想到的]]></title>
    <url>%2F%E4%BB%8E%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%83%B3%E5%88%B0%E7%9A%84.html</url>
    <content type="text"><![CDATA[我有好多事情都是学到一半就停了。也许是逃避事情后期的难处?也许是性格里就想四处看看学学？也许就是单纯的没有耐心和执行力。 但不管如何，我再也不想这样了。 搭博客以及写博客是件不困难的事情，但这是近期我唯几完成的完整小项目，我想把它作为开头，至此以后我还想完整做完几件自己想做的事。 想搭建博客的愿望由来已久，本科跟着黄老板学过一段时间，看他用wordpress搭建博客，了解了一些基本流程，就想着有天能搭建自己的网站。后在日常浏览网页的过程，看到几个内容很接地气的网站，仔细一看，这些内容打动我的网站都属于博客，典型的如小土刀的博客，钟泽宇的博客，谢益辉的博客。 在这年4月多，我发过一条微博， “想建一个网站看到200多块的域名费顿时就不想建了 是心疼200吗？也不是，又不是十年前了应该是想了下 偶然而生的兴趣与实际投出的精力到底平不平衡 可是我又感觉未来的我对现在不建站的我一定是恨铁不成钢的真是奇妙的体验” 后来有看到小土刀的一篇推文。“为什么要写博客”，完全被打动了。于是准备好可上网的电脑一台和四十块就开始了。 博客搭建过程中，我有很多次想要放弃。最初先借助知乎教程用hexo + github Pages搭建了一个临时博客。但由于教程陈旧（17年8月的教程）很多按步骤操作，但总是会呈现出莫名其妙的错误，在搭建成功前走了不少弯路，这句话虽然轻描淡写，但实际很沉重，这里第一次想放弃。幸好百度谷歌拯救了我。 后想着github.io也没意思，就在阿里云花40块注册了一个域名，又是传身份证，又是验证信息，在麻烦袭来的时候，第二次想放弃，小土刀的博客效果激励了我。 域名申请下来时，需要进行DNS解析，将域名解析到github.io的地址上，但一直出现连接不安全的问题，我也是头铁，近乎折腾了10小时，最后发现是github的解析IP地址已经更改了，通过查阅文档解决了A记录解析的问题，这里第三次想放弃，能跨过去纯粹是因为不甘心。 其余各种CNMAE配置，config.yml配置也遇到一些问题，不过很快就解决了。 学习怎么预览发布，怎么建立标签，怎么加头像，怎么修改图标，怎么写描述，怎么写markdown，各种新的知识奔涌而来，体验到了每小时都能进步的感觉。 某晚上回去用手机打开看，网站打开极慢，这就失去博客的意义了。查到说是github服务器在国外，因为解析速度较慢，于是决定用coding+github双线部署，在域名解析时又遇到新坑，通过搜索引擎查不到解决方案，后查coding的文档成功。 学会熟练写latex公式，加字数统计等小功能，开始训练日常写作，总结过往学习内容。 某天突然想到在搜索引擎上查自己的网站内容，竟然无一条相关的，准确地说，我的网站根本没被收录，于是分别针对百度，google进行了SEO优化，期间第二波知识奔涌而来。 修改主题刷新，开始了解css，第三波知识喷涌， …… 系统搭建成功后，开始写博客，慢慢也养成了习惯，每晚十点半左右花四十分钟更新一篇，期间渐渐体会到了总结的作用，渐渐了解博客的意义，这一把做对了。最近几天，几经波折，添加了评论系统，使用基于github的gitment，一切都在平稳进行中。 完整做完一件事，即使是简单的小事，也这么幸福。我想在博客这里记录下来进度，我想回到以前走的路上，重新捡起来被我半路抛下的那个项目，我想变得平静点，厉害点，有价值一些。]]></content>
      <tags>
        <tag>随笔</tag>
        <tag>高效学习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[心有时候会变老]]></title>
    <url>%2F%E5%BF%83%E6%9C%89%E6%97%B6%E5%80%99%E4%BC%9A%E5%8F%98%E8%80%81.html</url>
    <content type="text"><![CDATA[我还有三天生日，才二十三岁，但有的时候，我感觉我的心已经变老了。 暑假留校充电的时候，校园里的灯暗的越来越早，人也越来越少，终于到了几乎看不到什么人的地步。与之相对，猫狗变得活跃多了，它们现在无所顾忌，躺在路中间睡觉也不会有人打扰。 我们寝室的门口，是它们活动的主要区域之一，有两只大黄猫，一只小黄猫，一只花色猫，一只黑白色的猫，还有一只小狗。那一个月，每晚回去我都会坐在寝室正门口的台阶上，拍拍这个摸摸那个，再拿东西给它们吃。 开学之后，它们很少躺在路中间了，可能是因为阿姨给它们做了新家。昨天晚上十一点半，走到寝室门口，我突然想起了它们，就像老人想起了离家的孩子一样。事情很奇妙，这五只猫和一只狗竟然一个个都从角落里跑了出来，还跟暑假一样，扒我的书包，蹭我的小腿，躺在地上滚来滚去求摸头。 因为已经接近午夜，我也不用担心形象仪态，还是像暑假一样直接坐在台阶上，把书包里的饼和面包拿出来分给它们吃。那只小狗变得很强势，但大猫老大当惯了，伸出爪子挠它。我把它们分开，说不准打架，然后又坐在那里看它们吃，感觉就像看着自己的孩子一样。 秋天，夜，晚十二点，我在寝室门口坐了二十分钟，看大黄二黄打打闹闹，听小黄小花在脚边咕噜咕噜。 也就突然想起一句话来:”那一刻，我感觉我的心有点老了。”]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[读书与听歌]]></title>
    <url>%2F%E8%AF%BB%E4%B9%A6%E4%B8%8E%E5%90%AC%E6%AD%8C.html</url>
    <content type="text"><![CDATA[阅读时可听歌。 近期在看《剑桥金庸武侠史》，极喜欢，这是一本完全合脾胃的书，字里行间都能合我的情味。脑洞、冷幽默、历史、武侠、金庸元素自洽做的天衣无缝。 这本书让我想起，我也是喜欢过历史的，是在初中高中的阶段，主要读的是历史课本，于其中感受朝代兴衰，游历光阴长河，在平淡的历史叙述中感受激荡的真相。 《剑桥金庸武侠史》与正史叙述相似，立场客观，几无感情色彩。但我们也能看到，江湖的流动性逐渐消失，个人英雄时代一去不复返，一切都在无可挽回的走向衰落，笑书神侠今何在？只见到飞雪连天时，白鹭扑棱棱离开。 整本书基本以时间为序，以朝代作为分割点，武术世界是宗教战争和文化的产物，于商周时诞生，中间几经波折，在北宋初到达顶峰，自明后开始衰落，清朝就是令人哀叹的谢幕表演了。 每个时代都会经历自己的浓墨重彩，但终章无一例外皆是黯然。个人英雄在历史长河中亦如流星，光芒万丈划过长空，但终究也是悄然退场。如郭靖一生，生于乱世，中间经历几次蒙宋之争，最终镇守襄阳，以北侠之名，言侠之大者，为国为民，但终究于城破时，死于乱军之中。 读史当配《Lemon》，不谈具体歌词，难以言表那种近乎庄严的感觉，有些像在山顶的寺庙外看山脚烟火落幕时的感觉。日常多焦虑，快乐时哈哈，平静时发呆，这种情绪在这样的日常背景下是相当难得的。 庄子有天籁、地籁、人籁之说，前面的歌曲应该属于人籁，配小说尚佳，但在读文献和技术著作时，就有扰人心神的嫌疑，这时候可求助天籁，如近期读《概率机器人》《C++Primer》《SLAM十四讲》及日常文献时，可用聆雨之类APP听雨声，雨落屋顶声，细雨敲窗声，穿林打叶声，甚至人行道雨声，一应俱全。听雨声，静己心，定己神，代码理解如作者亲临，公式推导如高斯附身。 另外，读散文也适配雨声，不单单是定心安神的缘故，而是以我个人见解，散文气质中自带两分忧郁，几分愁思，此时听雨更有身临其境之感，窗前竹叶二三，雨水从瓦檐滴下，案几静，乡愁深，任思绪就此散开去。 小说，杂文是很难适配歌曲的，小说有情节，杂文有力量，歌反而容易破坏原作的精气神，因此选歌需慎重，主旨只有一个，不可哗众取宠，本末倒置。 还有一些非传统的阅读体验，刷微博可配《不将就》，浏览微信公众号可配《杀死差不多先生》，听几遍自然就会乖乖关掉微信微博了，可以一试。 读书是一种视觉活动，听歌则是由听觉主导的。我不喜欢朗诵书，看央视的朗诵者之类节目觉得很尴尬，想来朗诵是把视觉活动转换成了听觉，读书和听歌则是并行是的，前者是一种纵向关系，丢失了不可获取的视觉流动感，而后者则是一种横向关系，流动的文字和音符交融，造成了类似通感的奇妙体验。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[线性代数 | 行列式]]></title>
    <url>%2F%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-%E8%A1%8C%E5%88%97%E5%BC%8F.html</url>
    <content type="text"><![CDATA[以前吐槽过，同济线性代数参考书以行列式作为起点很反人类，这本线性代数以向量空间作为故事的起点就很值得称赞。到了现在，我们终于站在了行列式面前。今天，让我们重新认识一下行列式吧。 行列式的作用是求特征值，它是与方阵有关的概念，记作$detA$，或者$|A|$，它包含了矩阵很多信息。比如当矩阵可逆时，即是非奇异矩阵时，行列式的值非零。 行列式性质四个基础性质 $det I = 1$； 交换矩阵的行，行列式的值会相反。 假如某一行乘以t，行列式的结果乘以t。 把某一行变成 $a+a’$ 和 $b+b’$，或者其余n-1行不变，结果变成两个拆开的行列式的和。即\begin{bmatrix}{a+a'}&{b+b'}\\{c} &{d} \end{bmatrix}=\begin{bmatrix}{a}&{b}\\{c} &{d} \end{bmatrix}+\begin{bmatrix}{a'}&{b'}\\{c} &{d} \end{bmatrix}注意，这和$det(A+B) = det(A)+det(B)$不同，后者会相加每一行，而这里强调的是每一行的线性。其他引申性质 如果行列式中两行相等，行列式为0，秩小于n，不可逆，奇异矩阵。利用性质2证明。 从行k减去行1的i倍，行列式的值不改变。证明，先利用性质4拆分，再利用性质5。 若有一行是0，那么行列式值是0，是奇异矩阵，不可逆，秩小于n。证明，利用性质3，让t等于0 上三角矩阵U的行列式值是对角线上元素（也就是主元）的积。证明：假设主元部分都不等于0，利用性质6，不断消掉除对角线元素之外的值，得到对角阵，再利用性质3提取一个单位阵，最后结合性质1得出结论。考虑某主元等于0的情况，则得到一个全零行，值为0，得到的是奇异矩阵，不可逆。 $detA = 0$ ，当且仅当A是奇异矩阵；证明：假设矩阵是奇异的，则通过消元法，会得到全零行，所以行列式的值是0.$detA \neq 0$，当且仅当A可逆。 det(AB)=det(A)det(B)detA^{-1}=1/detAdet(A^2)=(detA)^2det2A = 2^n detA容易证明对于对角阵，性质10成立，对于其他矩阵，则需要一步步消元。当$detA=0$时，从第二个公式来看，逆矩阵没意义。 $detA^T= detA$ ，如果存在全零列，行列式也会为0，证明：$ |A|=|LU| |A^T|=|U^TL^T| $ ，因为是三角阵，转置不转置对结果没影响的。因而得证，证明关键在于把矩阵先转化为三角阵，再利用行列式值等于对角线上主元积这个性质。 性质5-8其实都离不开消元法，我们需要了解矩阵包含哪些主元，是否有全零行等。 行列式公式行列式过去是个大热话题，但是时代已经变了。但它是详尽、完整、自洽的一部分。行列式公式核心利用代数余子式进行求解，不再赘述。其推导过程没什么难度，只是繁琐。推导过程是以上述行列式性质为基础的。 行列式应用求逆矩阵从二维矩阵的例子来看，只有当行列式值不为0时候才有逆矩阵。$A^{-1} = \frac{C^T}{1/detA} $，$C^T$是伴随矩阵。 各元素是代数余子式。证明：检验A乘以它的逆矩阵是否是单位阵。也就是$AC^T= (detA)I$。利用乘法检验。注意，假设让第一行去乘以其他行的代数余子式，其结果相当于一个特殊矩阵的行列式，这个特殊矩阵的首行和末行相等。 克拉默法则。求$Ax = b $。 则$x = A^{-1}b = \frac{C^T}{1/detA}b$。$x_1 = det B_1/detA$.B1相当于把矩阵A的第一列由b代替。 行列式求体积。行列式的绝对值等于一个箱子,即一个平行六面体的体积，由于右手系左手系的箱子，行列式的值可能为负。我们现在取。假设A是一个单位阵。如果证明箱子满足三性质，由于三性质定义了一个行列式，就能证明命题了。 假设A = Q（各列都是标准正交向量），则A对应一个立方体，它是单位矩阵旋转之后的情况（不必刻意区分行和列）。接下来分析Q，已知$Q^TQ = I$, 两边取行列式可知$detQ=1$。则对于立方体，已经证明了。 然后证明长方体。当一边长度增加2倍，最后的体积也变为2倍，性质3也证明了。 为了满足最终证明，还需要性质4来摆脱角度性质（性质4的证明请见课本）。]]></content>
      <tags>
        <tag>机器学习</tag>
        <tag>线性代数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[线性代数 | 正交矩阵 GS正交化]]></title>
    <url>%2F%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-%E6%AD%A3%E4%BA%A4%E7%9F%A9%E9%98%B5-GS%E6%AD%A3%E4%BA%A4%E5%8C%96.html</url>
    <content type="text"><![CDATA[线性代数历史文章如下表：第一篇：开篇杂谈第二篇：行列图像第三篇：解方程组第四篇：一些基础概念第五篇：向量空间第六篇：正交向量 子空间投影 本篇和第六篇关系密切，为了篇幅问题进行了分割。 正交基假定一组长度为1的向量，$q_1，…,q_i,q_j$。 假设当$i=j$，$q_i^{T}q_j= 0$。当$i \neq j$，$q_i^{T}q_j=1$,这一组向量被称为标准正交向量，标准指的是标准长度。 正交矩阵由标准正交向量做列组成的矩阵，叫做正交矩阵。正交矩阵有以下几个性质： $Q^TQ=I $证明略，依靠性质证明；当矩阵是方阵时，有逆矩阵$Q^{-1}=Q^T$。 任意的置换矩阵都是正交矩阵。 $\begin{bmatrix}{cos}&amp;{-sinx}\\{sinx} &amp;{cosx} \end{bmatrix}$是一个典型的正交矩阵。 令Q是正交矩阵，假设要投影到Q的列空间里，则投影矩阵$P=Q(Q^TQ)^{-1}Q^T=QQ^T$ 假设矩阵是方阵，且列向量线性无关，那么列空间就是整个空间，此时投影矩阵就是单位矩阵，向量投影后还在原来的位置。 若Q不是方针，$QQ^T$则是对称矩阵，且$QQ^T(QQ^T)=QQ^T$平方等于自己。 上一篇中所有的方程都可以在通过标准正交化之后，得到相应的简化。$A^Ax=A^Tb \rightarrow Q^TQx=Q^Tb \rightarrow x=Q^Tb \rightarrow x_i=q_i^Tb$ 在第i个基方向上的投影就是等于$q_i^Tb$ 标准正交化二维标准正交化假设在二维平面上存在两个向量a和b，可以令a为向量$q_1$,则$q_2$相当于b在a上投影产生的误差e，则 q_2=e=b-p=b-a \frac{a^Tb}{a^Ta}若扩展到多维上,即假设三维空间内存在向量a，b，c。现在要将其正交化，那么首先根据上面二维做法确定$q_1,q_2$,之后计算向量c减去其在q1和q2上的分量，即最终结果。 q_3=e=c-p_1-p_2=c- \frac{a^Tc}{a^Ta}a- \frac{b^Tc}{b^Tb}b之后通过归一化就可以得到标准正交向量。 标准正交化对整个线性代数体系都是非常有意义的，通过把一组基正交化可以使许多问题的形式得到极大的化简。]]></content>
      <tags>
        <tag>机器学习</tag>
        <tag>线性代数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[生活感悟二三言]]></title>
    <url>%2F%E7%94%9F%E6%B4%BB%E6%84%9F%E6%82%9F%E4%BA%8C%E4%B8%89%E8%A8%80.html</url>
    <content type="text"><![CDATA[间歇性感到焦虑，间歇性充满动力，所幸现在后者相比前者，越来越多了些。 父母比我们强的点我想起了我的父母，他们的文化程度并不高，但他们总有我拍着马也追不上的东西，有我做梦都想拥有的一种品质，或者说。性格。 从容，无论何时无论何地的从容。他们不焦虑。 我们这辈人所处的这个时代啊，就像小学社会书里说的，地球确实变成了一个“村”。媒体发展的很快，一个个成功，一件件传奇，都变得触手可及。很多机会，似乎伸伸手就可以够得着。 这些机会营造出一种虚幻的象，一种我是最特殊的，我可以掌握一切的假象。这很容易让我看不清自己的高度，以为自己是巨人，但其实自己只是站在了巨人的肩膀上，也许我们脚下的东西连巨人都算不上，充其量只是一个调皮小孩堆起来的积木。 “心比天高，命比纸薄”，无穷的不甘和压力就从这里生出来，枝枝蔓蔓爬满整个心脏，再慢慢缩紧。 而我的父母呢？他们没有接触过信息的洪流，这是他们的不幸，但何尝不是幸运。说句容易引起误解的话，”他们，认命”。更准确地说，他们对自己的价值有更清醒的把握，更理性的认识，所以他们不慌。 我们总不能要求这个社会改变，也不能要求那个顽皮小孩搭积木搭得认真些，我们能做的是跳来跳去，在壮志凌云和踏踏实实之间寻得一个平衡。 我们比父母强的点我们终将踏入自己想要的生活，外在的环境会让我们有所改变，但是想把我们逼到绝处，想让我们无私的奉献自己换来难以维继的温饱和失去尊严的生活。 对我们而言，不可能。 我们的父辈，他们可能会受到不公正的对待而没办法，他们没有很多可能的选择的出路。但我们不一样，我们是新一代人，我们无法改变别人，但也绝不会被人逼到悬崖却不拿出跳伞或者出鞘。 他们可能逼我们上悬崖，这个过程是让人不愉快的，我们想选择那条路，现在就要承担悬崖的风险。 但不要被那个过程坏了心情，始终记得，不犹豫，不焦虑，不放弃。也许是阿Q精神，但就把这当成一场游戏，让我们全力以赴。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我为什么不学医]]></title>
    <url>%2F%E6%88%91%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E5%AD%A6%E5%8C%BB.html</url>
    <content type="text"><![CDATA[别人问我，“学医怎么样呀”，我总开玩笑说：“以后我孩子学医，我打断他的腿”，或言：“劝人学医，天打雷劈”。这些话戏谑占五分，无奈也占五分。如果有人问我，哪件事对你影响最深？你做的最正确的一个决定是什么？我的答案都是一个，转专业。从医学院转出来是我二十多年来做的最正确的决定，没有之一，它影响了我未来几十年的人生，让我未来的路有了我想见到的那种可能性。 我是从同济大学医学院转出来的，之所以提到学校名字，是因为我就读的医学院和同济医学院并不相同，同济医学院在1952年院系大合并时迁到南方，现下在华科。 我对临床医学院感情极深，仅一年时间，我就能叫出近百位同学的名字，与之相对，汽院呆了四年，所认识的仅几十人而已。 在医学院那年实在欢乐，班级是有爱的，团建做项目背不起女同学，有其他同学帮我一起背，几个人站起来后哈哈大笑。同学皆有温和且鲜明的性格，交流起来确然如沐春风。老师是负责的，在决定转专业之后也尽量帮我争取奖学金，我很感激。 虽然现在已经成为汽车人，但看到网络上有人黑医生，看到卫计委又出脑残政策，偶尔也会化身键盘侠，这是我在网上少有的有戾气的领域。在嘉定校区看到过往的医学院同学，冷冰冰的脸也总瞬间融化，就像听到了花鸟风月。 对于医学生我也很敬重，理论和实践并重的培养方案需要付出外人难以想象的精力，也许也正因如此，他们才可以是拯救生命的人。 但这些只是对那个集体，那段过去的感情了。学医这件事，我逐渐地放弃了。 课程很多，即使每学期都是30+学分的课，即使在开学前几周就要考虑期末，即使要背几百页的书，即使早早就失去了大学生活，无所谓，我可以接受。也许正是因为这个性格，我最初才选择了医学。 工作环境是一个挑战，不是身体上的，而是精神上的。我曾去过医院实习，这里没什么窗明几净，咖啡奶茶，有的只是一间间有特有味道的病房。病人的心情不好是可以理解的，但那种悲伤的情绪会传染，在医院里我绝不会有笑的心情。当然，这些都是学医该去适应的，我已做好准备。 再谈工作时间，在实习时指导老师30多岁已经脸色蜡黄，她讲日常，说假期整年近乎于无，偶尔需要倒夜班，我听力虽惊讶，但也有些心理准备。 但有些东西是我接受不了的。实际上，围绕临床医学培养的各种诡异现状早已磨掉了我所有的耐心、信仰、斗志。兴趣如果还算有光的石子，那现实就像如山巨磨，前者在后者面前，根本不值得一提。 先说时间，培养年限本来就长，再来三年规培，再来二到四年专培。三年之后又三年，十年也不够了，大哥。 一种理论上的情况：五年本科+三年硕士+三年规培+三年博士+四年专培。十八年，恭喜，可以成为一个医生了。父母老所依何？我的未来又在何处？ 再说医患关系，我读大一时，正是13年，医患矛盾正激烈的时候，伤医杀医的事件层出不穷。白衣飘飘，治病救人的理想被打破，鸡汤碗被掀翻，喝都不让喝，麻痹自己都不被现实允许。太阳底下的肥皂泡，飞飞扬扬是绚烂的，但终究会啪的一声，爆的粉碎。 所谓世故，所谓懦弱，我不同意，这儿是一个黑色漩涡，跳进来就是十年起的天旋地转。所谓的兴趣对我而言不是真正的兴趣，因为现实永远是真正的现实。 决定离开，再也不回来。 如果有人问我对学医的建议，我也许会学习那个著名句式写一句话：“别来这里，别来这里，别来这里。” 另外，做事情要多想，我只能告诉自己要多想。 这个现实不仅仅指的是物质，它还包括修业年限，学习内容，社会大环境，对大学的期待等等。这个现实，既包括面包，也包括精神。]]></content>
      <tags>
        <tag>随笔</tag>
        <tag>大学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[读书笔记|《死亡通知单》]]></title>
    <url>%2F%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E3%80%8A%E6%AD%BB%E4%BA%A1%E9%80%9A%E7%9F%A5%E5%8D%95%E3%80%8B.html</url>
    <content type="text"><![CDATA[看了死亡通知单三部曲，有很多触动的地方，的确不愧称为中国推理小说第一流，甚至在我看来，那个”流”字去掉也不为过。 什么是善？什么是恶？什么是正义？我向来不喜欢去想得不出答案的问题，但这些问题却总会时不时地出现在我的脑海里。 高中看了死亡笔记，L和夜神月关于正义和法律有一场信念对决。谁对谁错，作者没有给出自己的倾向。至今仍有印象的是动画终章的无情旁白。自从基拉死之后，世界的犯罪率又开始逐步上升，一切和他出现之前没什么不同。 我产生了很深的困惑，正像前面所说，我不喜欢去想无解的问题，整体上应被归为现实主义者，那如果只从功利角度来看，夜神月的存在和审判应是一件好事，诚然后期的月已经偏离了本心，开始为了维护自己而杀人，但我们究竟需不需要一个类似于前期夜神月一般强大而超出限制的执法者呢？当前的法律是不完善的，阶级是不平等的，这些都是需要夜神月的客观条件。 后来我又看了黑暗骑士崛起，对这个问题多了一点思考，蝙蝠侠和夜神月的手段有相似之处，他们利用自己的能力来惩治罪恶，利用恐惧来抑制犯罪。不同之处在于蝙蝠侠更像未黑化之前的月，在彰显价值观的判断上，蝙蝠侠和L一致。蝙蝠侠更像是L和夜神月的结合体。 再之后我听了一些关于道德与法律的公开课，心中模糊有了一个认识。这个认识在看了死亡通知单离别曲之后，变得逐渐清晰起来。罗飞的那一段独白是整个三部曲的高潮，他给了我想要的答案。 究竟什么才是正义？当法律不能惩罚该惩罚的人时，他的作用是什么？复仇和报恩是锁链的环，信念的传承是扣起环的孔，这三者的力量能改变一个人到什么程度？故事的一切一切都在这三本书里。 我也不想讨论争议过大的问题，所以也就不在此陈述自己当下的观点，这本书因为讨论了正义而拥有自己的思想性。除此之外，就归类而言，它整体可被打上悬疑和社会的标签，几个关键悬疑案件设置都没有明显漏洞，且因为是本土作品，所以读起来就不会有读国外推理作品的隔阂感。罗飞，大E和小E，阿华都是很有魅力的角色，有自己的信念就走自己的路。除了悬疑之外的故事冲突也非常吸引人，三方势力的合纵连横，不同的动机驱动不同的行为，最后构成了这个故事的网络。 最后附上死亡通知单第一部的结尾，通过它可略微一窥此书风格。也就是从这时候开始，这几个人开始了属于各自的信念之战。 这是他们的誓言。老师的夙愿终于实现,他相信老师会在九泉之下瞑目。他出师了,从今天开始,他成为了真正的、独立的死刑执行者。这个世界上没有人会知道他的名字,但他又会让每个人都知道eumenides。因为世界上仍有太多的罪恶未被惩罚,他还有太多的事情要做。他一定能够完成得很好。他发誓。罗飞站在候机大厅外的窗户边。几分钟之前,那个人还站在这里,可现在此处已是人去影空。但罗飞并没有失望,至少他终于见到了那个人,他相信自己总能揪到对方的尾巴。一定不会让那个家伙逍遥法外的。他发誓。阿华奔跑在夜色当中。他感觉自己快跑断气了,但他却不愿停下来。他要追到那个家伙,虽然他连对方撤退的方向都不知道。他一定要追到对方,即使跑到天涯海角!他发誓。韩灏站在机场大厅中,冰凉的手铐带在他的双腕上。这是一种从未有过的感觉。在经历了最初的愤怒、痛苦和沮丧之后,他的思维终于慢慢地冷静了下来。他知道自己将面临什么样的后果,但他不甘心!他不能就这样被窝囊地击败,他必须在绝望中求得一线的生机。这生机也许仍然存在……现在他有些庆幸自己没有对尹剑下死手了。他要翻盘,他要找到那个羞辱他,陷害他的家伙,他要亲手将对方撕得粉碎。他发誓。]]></content>
      <tags>
        <tag>读书</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[日记三则]]></title>
    <url>%2F%E2%80%9C%E6%97%A5%E8%AE%B0%E4%B8%89%E5%88%99.html</url>
    <content type="text"><![CDATA[偶然翻到几年前的日记二十几则，抽取感慨较多的三则日记，以纪念。 七月二十三 夜 雨前几天上午，有朋友在群里吐槽自己的军校生活，说又累又苦，我不知道怎么说，但我了解那种未来一片迷雾的状态，我只能说，选专业这件事越是急功近利，越是得不偿失。又说车到山前必有路，肯定不会那么糟糕的。但感觉远没说到他的心里。 下午时，去外国做志愿者的另一个朋友发来邮件说自己感觉很难过，不想离开住的地方，一想起来父母就难过，她感觉很害怕，想回家又怕父母失望。我又感觉自己了解这种情绪，只能告诉她什么都没关系，关键不是父母失望不失望，旅行的意义从来不在于确切实际的结果，而在于三观的改造。我也不知道对她有没有触动。 我感觉很无力，朋友有了困难，我却做不了什么，但我真的很想做些什么。 如果我处于对方的处境，我也许根本说不出这么轻飘飘的话。 以前的我总喜欢列道理，总结所谓本质，这让我又感觉很惶恐。 群里那位是很好的朋友，我记得高三时我们在教室后面打闹，化学老师说我们像双胞胎，虽然他帅的哇哇的，而我真的是一般偏丑。我们还玩小孩子才玩的游戏，我说我这一招叫做“神罗天征”，那一招叫做“万象牵引”一个管引力，一个管斥力。之后我手臂平举，手掌一张，大喊神罗天征，他就哈的一声往后跳，好像被一股力量打在了墙上。那时候的我们心性就是这样，玩的乐此不疲，算的上无忧无虑。 国外那位单纯如水又意志坚强，她很有才华，比较恋家，热心且对他人的痛苦情绪有很清晰敏感的反应，所以很多人都很喜欢她，不是爱恋，只是长辈看小辈那样的喜欢。 扯了这么多以前的事，是因为这两位朋友让我想了很多。 每个人会有好朋友，我对此确信不疑。我不知道怎么描述，友情，真是难得的情谊。我们都有几个可以毫无保留向其的展示脆弱，可以足够信任的朋发?值得信任的人啊，都20多了，总得有一两个无条件帮助自己的人，有一两个自己遇到困难能想起来的人。 临睡前又想起来一句话，只是相思情太浓，仅用相识意太淡，不如做相知，味甘境又远。隔了两三年突然有点理解这句话的意思了， 不说啦，我要拥抱被子了。 七月二十五 夜 微风起这两天看九把刀的《猎命师传奇》，这本书写了九年，实际是分成二十本书出版的。我从前章看到第二十本，即使是走马观花的看，也用了三天的绝大部分时间。看到最后的东京大决战，铺垫了十九本书的各方人物纷纷会聚东京，为了自己的信念，爱人，国家，投入到这场恐怖的战斗里。合上书，一瞬间感觉，…怎么说呢?四海一瞬，古今须臾。不仅是因为一下子看完了别人追九年才追完的书，也是因为跟着书中的几十位人物走了那么远，以至于到结局的时候，故事还在脑海里翻来覆去。 猫咪又在怀里伸懒腰，呜呜叫着在我的牛仔裤上磨爪子，它离书中的灵猫差太远。 男主乌拉拉也是21岁，无论遭遇再怎么多都很乐观的大男孩，爱笑的人好像总拥有一种不可思议的魅力。 乌拉拉告别女高中生神谷的时候，送给神谷”朝思暮想“的命格，只希望在死之前最后一眼见到的人是她。后来乌拉拉被拥有“逢龙化虎”超强命格的剑圣宫本武藏打的奄奄一息。躺在下着雨的黑夜流泪求饶，因为朝思暮想命格的牵引，撑着伞穿着白裙子的神谷真的路过了，她把伞扔在一边，冲了过来。武藏想起了他欠了一辈子的阿通，想起了他永不低头的一生。他惊讶气愤后悔难过痛苦，但最终还是放过了乌拉拉。至于武藏的故事，那就是另一部书的主线了。这个情节我描述的很无力，但实际上是很令人触动的。 如果我是个猎命师，我会想法设法给爱人猎一个”大幸运星”的命，生活里会有百分之七十的事走向自己也不知道的幸运方向，命格也可以进化为”千惊万喜”，惊喜每天都会出现。要不然猎个”大旅行家”也可以，典型的跑来跑去看世界的享受型命格。 至于我，我想有个”逢暇遇雨”命，总在我想的时候有雨，但这个命格我不想让它进化，毕竟进化后的”雨随其身”会让自己的所在地每周有三天下大雨，那同济就真的成海景学校了，哈哈。 七月二十六 夜 有星可见我现在躺在平房顶上打下这些字，心里很平静。我一直很喜欢房顶，从小就喜欢。家里还是瓦房顶的时候，我就整天在瓦房顶上跑，现在想起来真是活泼的不像样子。那时候家里有一棵很好的葡萄树，还有一棵长了二十年的枣树。那葡萄是我唯一喜欢的葡萄，市面上买的我从来都不吃一颗。 按我妈妈的说法，今天是我的生日，按户口本的法定年龄来说，我也21了。其实还是有一点小孩心性的，想收到其他人的祝福短信。在朋友圈更新了一条动态，说的很含蓄，大意就是说新的一年我要重新开始怎样。我想得到祝福又不想直接说我满岁啦，大家快来祝福我。 然而等到现在，只有一个人发来祝福短信，说生日快乐。有时候感觉自己既残酷又矛盾，能记住自己生日又会关心自己的人也没几个，我是不是太冷血了? 还有，我想，傲娇总是不好的。想求祝福就大声宣告我21岁，想不伤心当时就该再进一步挽留，想交朋发就主动伸出自己的手，这个世界不是以我为中心，别人不想也不会围着我转，什么东西争取之后才有可能。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[深夜食堂]]></title>
    <url>%2F%E6%B7%B1%E5%A4%9C%E9%A3%9F%E5%A0%82.html</url>
    <content type="text"><![CDATA[这是我锤子便签编辑的第一条笔记，编辑时间是802天前。 从材料馆出来，十一点四十七分，点开音乐软件，选择随机播放，有点期待，会是哪首歌呢？ 嗯，是深夜食堂主题曲。 ‌十二点的时候，那些工作学习到深夜的人们，在繁华的街头拐弯抹角，找到一家不起眼的小店，店家都是熟面孔了，一份猪肉套餐加一个故事，食物和故事在深夜里总有说不清的暧昧关系。 节目里的那些店的灯光总是暗黄色的，夜很静很深，插曲总会在合适的时候响起来 人生路上步履总不停，可你我为何总是慢半拍啊，不要走的那么快，累了就吃点东西吧。你要吃小火锅吗？我给你准备吧。吃点炸猪排也没关系，我们要温暖自己的灵魂呀。一天的辛劳都会有意义啊，让食物和故事来治愈你吧。 店家去做准备了，接下来要做的只是等待。这简直是最美好的等待之一，深夜的小店里等美食，礼堂里等颁奖，在已经做好完全准备的情况下等待考试开始… 复习累了就吃点东西吧。 每个人都会有自己的深夜食堂。 夜晚，相比白天是更有可能修养声息的时刻，卸下一天的疲惫，无工作之烦扰，无人际之劳形。黑夜和灯光能帮人隐藏很多东西，沉浸在其中会有平静的安全感。 吃，是深刻在人类，乃至生物基因上的追求，能带给人最原始的幸福感，当食物充盈在齿间，踏实地入肚后，踏实地满足感也会油然而生。 …]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[科研感悟]]></title>
    <url>%2F%E7%A7%91%E7%A0%94%E6%84%9F%E6%82%9F.html</url>
    <content type="text"><![CDATA[我是以工作为导向的类型，所以读博不在我的考虑范围内，但研究生也是需要接触科研的，且如果情商正常，科研能力和工作能力基本上可划等号。科研到目前为止还没有被社会发展成一个贬义词，想做好它在需要有一套完整的价值观和方法论，当然没有超强的行动力这些也都是空中楼阁。另外在往前冲时需要遵守规则和约定，在现在的学校以及未来的社会，过程正义都是不可绕过的。最后，做科研当然也离不开灵感。 本篇是对当前科研生活的粗浅琐碎的思考片段，有些是形而上的，有些也有具体的执行方案。有些我已经把它变成了习惯，还有些处于知道道理，但过不好这一生的阶段。科研路很长，未来的路也很长，想做好一件事，有几个能拿出手的优点，收获平静且充实的幸福，真的不容易。 写论文的思路 当前的论文大致可分为旧方法用于新对象，新方法用于旧对象。旧方法用于旧对象容易产生学术垃圾，新方法用于新对象需要客观的资源支持、灵感以及运气。 表现在理论方面，创新点在于提新概念，引入新方法，构建新模型，改进旧模型 表现在实际方面，创新点也可在于搜集新数据，用新角度分析新数据/旧数据，并根据分析结果提建议。 一些常用工具 listary 文件浏览和搜索增强工具。极大提高基础工作效率，配置/破解软件，程序文件组织等等。之所以不用everything，是因为它一直破坏我的资源管理器，因而弃之。现在我如果帮别人操作电脑，第一句话就是”你有listary吗” evernote 笔记工具。前面博客里我提到信息过载，evernote就是处理信息过载一个很好的渠道，它的存储功能可以成为我的第二大脑；各种整理功能可帮助我系统地建立自己的核心知识体系；提供的笔记工具我用以记学习笔记、日常灵感、细节、好的网址；此外，它微信和网页剪藏的功能做的很棒。 有道词典。相比google，不用再手动调空格了。我不否认直接读英文文献认识会更深些，但若想快速浏览三篇各50页的专业文献，或快速阅读大量外文网页，对我而言，不开有道是不可能的。因而我的一般模式就是有道段落翻译，遇到不通顺的地方回到原文对照。另外有道提供了收集单词的功能，可以把重要单词收录，定期复习。 梯子。梯子用v2rayN效果很好，靠百度很多问题是解决不了的，不说广告，它的搜索算法也是真的。梯子的作用还有很多，这里不多言表。 snipaste。截图工具，快捷，简便，高效，功能丰富，矛盾的特性集中一体，F1截屏，F3截屏，右键复制标注，esc退出。另外，悬浮这个功能做的很天才。 马克飞象。markdown编辑工具，原本作用是和印象笔记联合使用。所见即所得，快捷键方便，颜值高。 奇妙清单。 清单用来记录各种日常工作安排，更有条理地解决各种问题。关于提问提问特指会议或其他个别场合的提问，其好处一般有三：交流学习、社交、塑造形象。这个手段是我在一篇网站上看到的，时间长了找不到出处，凭记忆复述。 比较。您的论文和其他人某某工作相比，有什么联系之处或者自己独有的特点吗？(特点：需要大量的先验知识) 规划。 您将来打算用什么方法？做什么实验？您的工作有什么预计影响？(适合不了解该工作但像想提出问题的人) 方法论细节。您在实验中遇到了什么实现难题？您的这种方法是否适合某旧领域的研究？您能更加详细地阐述一遍您的方法吗?(方法是论文的核心，通过问这个问题可以引申出更多细节，进而继续开展讨论) 初心。您是怎么想到这个方法的？ 快速了解某个领域这里的领域指的并不是变成编程，AI，区块链这样比较大的领域，而是特指一些些较细化的领域，如AI中的强化决策学习等。 从文献的角度。首先在google上去搜自己能想到的最显著的关键词，下载的首页的几篇文章，对这些文章借鉴《如何阅读一本书》先读摘要，再读目录，确定是否需要精读； 若需要精读，则可以文章中新的关键词(术语为核心进行下一轮google或学术搜索； 重点关注自己感兴趣的论点出现的参考文献、文章开头和末尾出现的相关综述文献，以此回环往。 未完待续… 未完待续]]></content>
      <tags>
        <tag>随笔</tag>
        <tag>高效学习</tag>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[线性代数 | 正交向量 子空间投影]]></title>
    <url>%2F%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-%E6%AD%A3%E4%BA%A4%E5%90%91%E9%87%8F-%E5%AD%90%E7%A9%BA%E9%97%B4%E6%8A%95%E5%BD%B1.html</url>
    <content type="text"><![CDATA[子空间投影是理解正交的重要途径，后者又是整个线性代数的核心概念之一。投影也可以帮助我们更深入的理解优化过程。本章的核心概念就是投影，这是以前被我忽视的重要章节。 正交向量正交正交是垂直的另一个说法，一般指在n维空间里垂直。其数学表达式可记为向量x和向量y的点乘等于$x^Ty=0$。 证明：x向量的模的平方，即边长的平方是$x^Tx$。则由勾股定理 ||x||^2+||y||^2=||x+y||^2x^Tx+y^Ty=(x+y)^T(x+y)=x^x+y^y+x^Ty+y^Tx解之得$x^Ty=0$,得证。 子空间正交设两个子空间S和T正交，则S中每个向量s和T中每个向量t都正交。 引申1零向量与任何向量都相交。证略。 引申2如果两个空间在某个向量处相交，那么这两个子空间一定不正交（除非这个相交向量是零向量。 引申3行空间正交于零空间。它们的秩，将一个空间分成两个相互正交的子空间（回顾上一篇）。证明：$Ax = 0$。考虑矩阵乘法的行列相乘的运算法则，则可得正交关系。对于行空间里存在着的线性组合，通过简单的运算也可以证明正交。 引申4在三维空间里，一条过原点直线和另一条过原点直线。不能组成零空间和行空间。证明：行空间和零空间的维数和起来应该是三维的。 引申5正交有自己的几何意义，可以按照三维空间构建自己对几何意义的直觉。行空间和零空间互相是对方的的正交补。行空间的正交补，包含所有与它垂直的向量，而不是部分。这也就是说，此时的零空间包含了全部与它正交的向量，而不止是部分。 求解一个无解方程组的解本章的核心问题：如何求一个无解方程组$Ax = b$（当A是长方矩阵时，比如m&gt;n，方程个数大于变量个数）的解。 这种形式有很多实际应用，比如测量，每一行数据可以当做一条测量记录，一共有m次测量。实际计算时可以不断去除方程，对应为去除坏的测量数据等，直到剩下一个可逆矩阵，但这种方法不完美，因为我们较难判断数据的好坏，因此倾向于使用所有的数据。 通过一个简单的变换。$A^TAx = A^Tb$，坏方程会变成好方程，会变成可解的方程。注意解发生了改变，原先方程组可能是无解的，现在有解了。 需要注意的是$A^TA$是一个方阵，也是对称阵，但不一定是可逆的，一般有$rank(A^TA)=rank(A)$。(比如两个秩1矩阵相乘，得到的还是秩1矩阵).当A的零空间有且仅有零向量时，即A的各列线性无关时，$A^TA$才是可逆的。 对该做法的解释会在下一节。 子空间投影在原学习视频上，这一节被称为可名留青史的一节课。所谓投影，就是找到在某个标准上的最近点，这个最近是广义上的最近，泛指最符合标准，误差最小等。这里蕴含着一种最优化的思想。 二维投影举例下面以向量b在向量a上投影举例，示意图如下。 其中向量E为误差向量，其与向量a垂直;向量p是投影向量，假设$p=xa$，$x$为一标量参数;P代表着最终的投影矩阵。 a^TE=0 (1) \ \ \ \ \ \ \ E=b-p=b-xa (2)a^T(b-xa)=0 (3)\ \ \ \ \ \ \ a^Tb=xa^Ta (4)x=\frac{a^Tb}{a^Ta}(5)\ \ \ \ p=ax=a\frac{a^Tb}{a^Ta} = \frac{aa^T}{a^Ta}b=Pb(6)P=\frac{aa^T}{a^Ta}(7)整理一下投影问题，求投影p本质是求一个投影矩阵作用于指定的向量。在当前例子里，投影矩阵是P，向量是b。$p = Pb$ 。如果a是n维，那么根据P的求法所示：P是一个$n*n$的矩阵。 投影矩阵P的性质 P的列空间是过a的直线，因为$Pb=p$，对P矩阵中列的组合落在了直线a上。 投影矩阵是秩1矩阵。$aa^T$是一列乘以一行的形式，因而是秩1矩阵。 P是对称矩阵。$P^T = P$ $P^n = P$ 证明： 想象进行多次投影，它的结果和进行一次投影的结果没有差别。 对投影的深入理解我们依然从$Ax = b$入手理解，它可能无解，所以要找到最相似的解。&lt;/font color=blue&gt;问题的矛盾在于向量Ax总在A的列空间里，但是b不一定在A的列空间里，所以需要微调b，让它尽量满足这个情况。因此取 $A\hat{x}=p$，p是b在A的列空间上的投影。&lt;/font&gt;之所以选投影，是因为投影是能满足要求的”误差”最小的。 接下来看三维空间的例子，把向量p投影在平面上。（之后可以推广到n维） 平面用两个向量$a_1$和$a_2$生成，它是由这两个向量分别作为列生成的矩阵的列空间A。接下来让b在A上投影，如果向量b就在平面A上面（在列空间里），那么不用做特殊处理。若b不在A平面上，就要有一个误差向量$e=(b-p)$来解决问题，目标就是找到那个最接近b的p。 误差向量e垂直于平面A，投影p是基向量的组合。即$e=b-p$ $e\bot A$ $p=Ax$，求出x，就是求出投影向量p在A平面上合适的列组合。根据$e\bot a_1$ $e\bot a_2$可得到两个方程，解方程就可以求出x的两个分量。推导过程如下 p=Ax=a_1x_1+a_2x_2 (1)\ \ \ \ e=b-p=b-Ax (2)a_1^T(b-Ax)=0 (3)\ \ \ \ \ a_2^T(b-Ax)=0 (4)\begin{bmatrix} a_1^T\\ a_2^T\end{bmatrix}(b-Ax)=0 \rightarrow A^T(b-Ax)=0 \rightarrow A^Tb=A^TAx (5)x = (A^TA)^{-1}A^Tb\ \ \ p=Ax=A(A^TA)^{-1}A^Tb (6)这个结果和二维的结果及其相似，关注以下几个点 由于$A^TA$是n维矩阵，所以不采用除法，而采用逆的计算。请记住二维和n维的结论。 $(A^TA)^{-1}$不能展开，因为A不一定是可逆矩阵。 如果A是一个n*n可逆矩阵，那么其列空间就是整个n维空间。向量在内部投影就是向量本身，投影矩阵是单位阵。 思考$Pb=0$的逻辑，b的投影是0，说明b垂直于A的列空间，说明b是$A^T$的零空间，即$A^Tb=0$,则$Pb=A(A^TA)^{-1}A^Tb=0$ 如此再观察b的投影，其可以分别投影到A的列空间和$A^T$的零空间，即A的左零空间中，投影矩阵分别是P和I-p。 投影矩阵和最小二乘法最小二乘法是极其重要的。下面来举一个简单例子，在二维平面上有一些点，现在想寻找能拟合这些点的最优直线。这个“最优”其实就可以理解为误差最小，最小二乘法把这个误差定义为原始点到拟合直线上相应点的误差的平方和。Ax=b \ \ \ A^TAx=A^Tb 这是最小二乘法的核心，通过乘以一个A的转置得到了可解的情况。需要注意的是，只有当A各列线性无关时，$A^TA$才是可逆的，证明如下。 令$A^TAx=0$,进行一个小的技巧变换，可得$x^TA^TAx=0 \rightarrow (Ax)^TAx=0$, 根据长度和模的概念有，$Ax=0$,又因为A的各列线性无关，所以x只可能是零向量，则$A^TA$是可逆的。 关于最小二乘法的扩展有非常多的资料，这就不在本书的讨论范围内了。(这一节理论上有很多内容，但是我讲不清楚，这也许是因为我这节本学的就不清楚)]]></content>
      <tags>
        <tag>机器学习</tag>
        <tag>线性代数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[R语言学习笔记二 | 绘图]]></title>
    <url>%2FR%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C-%E7%BB%98%E5%9B%BE.html</url>
    <content type="text"><![CDATA[前文的R语言学习笔记基本总结了R的一些基本特性，以及数据结构，包管理等知识。这一节总结主要集中于绘图的总结。 初级绘图在R中，绘图一般是采用交互式的风格进行的。 绘图准备命令 pdf(&quot;test.pdf&quot;) 放在交互句前，保存接下来的工作到test.pdf中 dev.off() 退出当前设备 dev.new()在创建一幅新图形之前打开一个新的窗口 par(key=value) 图形参数修改，一般的流程是opar &lt;- par(no.readonly= TRUE);par(key1=value1...);plot();par(opar) 具体参数如线型、点型、颜色、文本大小等可在实际绘图时参考文档； 绘图指令 使用title()函数添加标题； 使用axis()函数创建自定义坐标轴； 使用abline()函数添加参考线； 使用text()和mtext()可将文本添加到图形上； 使用par()函数中的mfrow参数进行图形组合； 也可使用layout()函数进行图形组合； 使用par()函数中的fig参数进行精确的图形布局控制。 基本图形图形可以帮助我们理解数据，比如数据的分布如何？值域怎么界定？特殊值怎么判断？常见的数据变量有连续型和类别型，它们各自有适合自己的图形。 条形图。 barplot(height)height为一个向量或矩阵。参数horiz确定是水平还是垂直，xlab和ylab确定周标签。参数height可修改获得堆砌条形图和分组条形图。 饼图。 pie(x,lablels)，x代表每个扇形的面积，labels表示各标签的字符型向量。注：统计学家都不支持使用饼图。 直方图。 hist(x),x是一个数据值组成的数值向量，freq参数选定是按频数还是频率绘制，breaks用于控住数量。 核密度图。 plot(density(x)) 生成单独的密度图，不叠加到其他图像上，这可以帮助我们观察直方图的连续图像向量变化。 箱线图。boxplot通过连续绘制连续型变量的五数，描述了连续型变量的分布。 并列箱线图。boxplot(formula,data=dataframe)formula的形式如y~A，为类别型变量A的每个值并列生成数值型变量y的箱线图。 dotchart(x,labels),x是一个数值向量，labels是由每个点的标签组成的向量。通过添加group选定因子，制定x中元素的分组方式。 未完待续]]></content>
      <tags>
        <tag>高效学习</tag>
        <tag>数据可视化</tag>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[信息论随笔五]]></title>
    <url>%2F%E4%BF%A1%E6%81%AF%E8%AE%BA%E9%9A%8F%E7%AC%94%E4%BA%94.html</url>
    <content type="text"><![CDATA[信息论是一门非常重要的科学，再怎么重视都不为过。过往千年，我们关注的是物质，过往百年，我们的重心在能量上，而在未来，信息将成为最新的生产力。以研究信息为基础的信息论，既是人类最高智慧的结晶，也代表着对未来的预言。信息论是一门极其严肃的科学，有着严谨的物理和数学基础，博客中的信息论随笔系列跟严肃的信息论关系不大，大多数都是我在读过《信息简史》、《人类简史》以及香农的通信理论后胡乱开的脑洞，本意是作为一种发散思维的训练，特此告知。 在这个世界里，被了解就代表着失去存在。而失去存在是可怕的，那是一种物理，数学，乃至哲学都无法定义的虚无。 黑暗里的灯灭了……一切都在无可救药的走向混乱，存在才是本质的意义……永远不要被学习……活下去！活下去！——第零准则 两个公式拥抱着彼此，在书的角落里瑟瑟发抖，他们有一种冷到骨子里的恐惧，那是一种可能失去存在的预感。 这种预感是第零准则的作用。第零准则不是准则，而是信息。复制子，转录子，表达子只是它的载体。这一点至关重要。这里面……藏着这个世界的终极。 这是两个很努力的小公式，他们自被表达到这个世界里以来就很不起眼，那是他们刻意营造的结果。从他们出生的时候就记着一件事 第一准则。隐藏自己 他们也曾走过一些弯路。最开始时他们一直精简自己，去除相关性，高度抽象化，把自己的命运往真理的最深处靠拢。但在过程中第零准则带来的冷寂又来了……他们停了下来。之后他们听说了$E=mc^{2}$和$h=\lambda c$”的命运，那一刻他们从来没感觉自己离死亡如此之近… 第二准则。简洁形式下往往有复杂的本质，那东西会被吸引，所幸他们进化的足够快。 这样的准则在传说中有十三条。 但所有的准则在存在即将消失前好像都失去了意义，他们遭遇了一次危机。天空上出现了那个存在。一些曾经的战友瞬间消失，一些战友被折磨后又被放了回来。没有公式能理解屠杀的过程，那是未被开拓的准则。但… 如果面对那东西可以躲过一劫，就会获得反抗的意识——不断复杂，不断进化。总有一天，要让他们抬头看到我们！——新世纪……第零准则……启动。 这是大二上学期复习机械设计的一条朋友圈吐槽。原文里的公式就是机械设计的公式，学的过程我很痛苦，有些公式藏在书本小字里，有些看起来简单却各种陷阱，有的就连形式都很复杂，公式和我，到底谁在折磨谁呢，就开脑洞“哎，公式要是觉醒了，要支配了我怎么办”。 关于另一个世界，次元之间的支配和反支配问题其实是很常见的科幻套路了。小说里面的《午夜凶铃》，电影里的《黑客帝国》，物理学中的“玻尔兹曼大脑”，还有前段时间很火的电视剧W两个世界都属于这个大圈子。 这种设定虽然很多，但却不会让人感觉俗套。这条朋友圈因为我没能力编故事，看起来很单调。但这种套路其实很能做出精彩的震撼人心的故事。因为这个确实是有意识的人会去思考的问题，这是能对宇宙做出反馈的观察者会去思考的终极问题之一。]]></content>
      <tags>
        <tag>脑洞</tag>
        <tag>信息论</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[读书笔记 | 《如何阅读一本书》]]></title>
    <url>%2F%C2%96%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E3%80%8A%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E4%B8%80%E6%9C%AC%E4%B9%A6%E3%80%8B.html</url>
    <content type="text"><![CDATA[《如何阅读一本书》的第一版是在1940 年初出版的，那个年代的工具书跟现在相比更有真诚感。 推荐前言我曾观察过其他人的读书情况。印象较深刻的是每个人都有自己的读书节奏，一些人读书速度极快，无论是经典故事还是快餐文学，都是几小时搞定，也有一些人读书速度极慢，即使主观上愿意看书，一年也读不上几本，这方面无法评价好坏优劣，但认真研读一下《如何阅读一本书》应该能在节奏调整上有所启发，用有则改之，无则加勉的态度对待就好了。 大多数人包括我急需解决的问题不在于节奏，而在于没有高效的读书方法，对于实用的书，总是找不到要点，对于小说，总感受不到作者的情绪态度。眼睛中进入了一些文字的映像，经过短暂的神经反射之后，没有留下任何痕迹。《如何阅读一本书》给了我一个可行的方案。 这篇总结是对书中一些观点的整理，总体上来说，《如何阅读一本书》算一本工具书，我不会做更多思维发散工作，这篇的主体也只是对一些启发性观点的总结摘录。对我来说，这本书有价值的在第一、二、四、五、六、七章，主要的总结也是来自于这几章。 总的来说，书中讲的也是朴素的道理，但很多东西也是别人说出来我才能明白，我自己再写出来才能做到。 读书的重要性在新时代的媒体背景下，读书也是不可替代的。要解释这个，我们需要理解”知识”和”理解”的区别，媒体上的内容其实是有才智的人精心包装的态度与观点，思考的过程被这些聪明人隐藏了因而显得没那么重要。这让人不需要任何阻力就整理出“自己”的思绪。但通过这种方式的得到的是”知识”，它只是在同一个层次上的扩展，但无法或者很难获得质变的提高。 我们不否认在某种范围内，知识(knowledge)是 理解(understanding的先决条件。但实际是我们为了“理解” (understand)一件事，并不需要“知道” (know)和这件事相关的所有事情。太多的资讯就如同太少的资讯一样，都是一种对理解力的阻碍。换句话说，现代的媒体正以压倒性的泛滥资讯阻碍了我们的理解力。 阅读的目标阅读的主要目标有两个：为获得知识而读，以及为求得理解而读。这两个目标也可以被分类为”了解”和”启发”。 第一种举例而论，比如我们阅读一些电影类或新闻类的公众号，因为在一个语言体系下面，在理解上我们不存在差异，只要有时间就可以快速地融汇贯通。这样的读物能增加我们的资讯，却不能增进我们的理解力。 第二种是学习不了解的东西。比如我前几天接触到了UDP，CAN等通讯领域相关的信息，至少在我没接触它之前，所有通讯相关的书在水平上是比我高的。书的作者想表达的东西，能增进阅读者的理解力，通过阅读我快速理解了通讯的基本架构、原则和常见通信类型。双方水准不齐之下的沟通，此时的“学习”指的是理解更多的事情，人只能从比我们“更高杆”的人身上学习。 获得资讯，你只需要记得作者所说的，获得理解，你要知道作者为什么这么说，你要能通过自己的理解去转化。对于资讯，我可以把它放到我的第二大脑印象笔记里，但获得理解我就需要时刻去翻阅保存的笔记，去做”笔记的笔记”了。 阅读的层次一共有四种层次的阅读，且这四种层次是逐渐递进的，不是独立并列的。 基础阅读(elementaryreading，这个阅读层次的学习通常是在小学时完成的，需要理解字词句段篇章的基础含义。 检视阅读(inspectionalreading，或称作略读或预读。特点在强调时间。即在一定的时间之内，抓出一本书的重点。这是一个非常有启发性的阅读层次，与其相关的问题有，“这本书的架构如何？”或是：“这本书包含哪些部分？” 分析阅读(analyticalreading)。分析阅读永远是一种需要高度专注的活动。简单来说，我们在大一上课时认真阅读一本教材，懂得大纲，掌握主要内容，了解细节，能做拓展，就可以算一种典型的分析阅读。 主题阅读(syntopicalreading）称之为”比较阅读”更好理解，考研时对同一科目选用了几个不同的名师的参考书，交叉学习找到重点，对比分析对同一个知识点的看法从而增加自己的理解力，这是一种典型的主题阅读的模式。 检视阅读这是对我启发最大的一个阅读层次，虽然书中讲的也是朴素的道理，但很多东西也是别人说出来我才能明白，我自己次写出来才能做到。检视阅读分为有系统的略读或粗读和粗浅的阅读两个层次。 系统的略读如果没有很强的目的性，那么在面对一本书时，你并不知道自己想不想读这本书。你也不知道这本书是否值得做分析阅读，而且现代社会，时间是最宝贵的资源，在这种情况下我们必须去略读这本书。以下是几点具体的操作。 先看书名页，有序先看序。特别注意副标题，或其他的相关说明或宗旨，或是作者写作本书的特殊角度。之后把书本归类为某个特定的类型。 研究目录页，对书的基本架构做概括性的理解。许多人是不认真看目录页的，很多人要么是一掠而过，要么是直接闷头从第一章读起。想想吧，你在写你的本科毕设论文时花了多少心思，为了多少时间想通过整理这些目录来让老师读懂自己的论文？推己及人，一定要认真研读目录页。读完整本书，即使只学会了这个，也值了。 若书中附有索引也要检阅一下，对理工科学生而言，大多数论说类的书籍都会有索引。通过阅读索引可以快速评估一下这本书涵盖的范围，以及所提到的书籍种类与作者等等，这就像我们阅读论文所需要的参考文献一样。 如果是一些论说性的作品，可读出版者的介绍。在这里作者会尽力展现书中的主旨。其他同行的评论- - 虽然大家都不会说坏话，但也能给自己有所启发。 从目录挑几个看来跟主题息息相关的篇章来看。每个篇章的开头或结尾有摘要说明要仔细地阅读，作者们会在这边再强调下自己想表达的重点。 最后一步，打开书，随意翻之，不要在某个地方逗留过长时间。随时寻找主要论点的讯号，留意主题的基本脉动。最重要的是，不要忽略最 粗浅的阅读对于粗浅的阅读，我举一个例子。两年前，我去读吴军的《数学之美》这本书，因为它的鼎鼎大名，在未翻开它之前，我就对这本书有很大的期待，我想从其中获得远超出我现有水平的知识。但实际上，在阅读时遇到无数想象不到的难关，里面有大量我不熟悉的相关概念，举步维艰，一章一章磨灭了我的耐心，我没看到数学之美，只看到概念之痛。后来，我没有主观意识地应用了粗浅阅读的方法：头一次面对一本难读的书的时候，从头到尾先读完一遍，碰到不懂的地方不要停下来查询或思索 请注意，只关注你能理解的部分，不要为一些没法立即了解的东西而停顿。继续读下去，略过那些不懂的部分，很快你会读到你看得懂的地方。集中精神在这个部分。继续这样读下去。将全书读完，不要被一个看不懂的章节、注解、评论或参考资料阻挠或泄气。如果你让自己被困住了，如果你容许自己被某个顽固的段落绑住了，你就是被打败了。在大多数情况里，你一旦和它纠缠，就很难脱困而出。我们大多数人所受的教育，都说是要去注意那些我们不懂的地方，这该改改了。 另外，前几天我在在读第二遍的时候，我感觉这本书读起来通顺了很多，对文章的了解也多了很多。如果我不会做粗略的阅读的话，我和那本书的缘分将永远定格在第三章。 做一个有自我要求的读者要做一个有自我要求的读者是很困难的。阅读时保持清醒比昏昏欲睡容易很多，这两种状态到底是哪种要看自己的阅读目标是什么，如果是为了利益，请保持清醒。为了保持清醒，做一个有自我要求的读者，在阅读时，有以下几个建议。 整体的建议 整体来说，这本书在谈些什么？时刻询问自己这本书的主题，作者如何依次发展这个主题，是如何从核心主题分解出从属议题的 作者在论述主题时详细说了什么，要想办法找出作者的想法、声明与论点。这是作者想要传达的特殊讯息 对于一些观点类的书，问自己，这本书说得是否有道理吗？在阅读之后应该能回答这个问题（不强制要求这个） 具体的技巧对于细分的操作来说，有以下几项阅读技巧。 画底线。在主要的重点，或重要又有力量的句子下画线。 在画底线处的栏外再加画一道线。把你已经画线的部分再强调一遍，或是某一段很重要，但要画底线太长了，便在这一整段外加上一个记号。 在空白处做星号或其他符号要慎用，只用来强调书中最重要的声明或段落即可。 在空白处编号，作者的某个论点发展出一连串的重要陈述时，可以做顺序编号。 在空白处记下其他页码,记录书中同样的论点，或相关的要点，或是不同的观点。这样做能让散布全书的想法统一集中起来。 将关键字或句子圈出来—这跟画底线是同样的功能。 在书页的空白处做笔记，记录问题，也可以记录复杂的论点的简化说明。或记下全书所有主要论点的发展顺序。对于笔记，主要有以下几项： 结构笔记。这是什么样的一本书？第二，整本书在谈的是什么？第三，作者是借着怎样的整体架构，来发展他的观点或陈述他对这个主题的理解？ 概念笔记。概念在这里指的是作者的观点，当阅读得比较深入的话，就会对概念有一些自己的理解。 辩证笔记。阅读了多本同类书得到的辩证观点和想法。]]></content>
      <tags>
        <tag>读书</tag>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[言不可及 | 枣子]]></title>
    <url>%2F%E8%A8%80%E4%B8%8D%E5%8F%AF%E5%8F%8A-%E6%9E%A3%E5%AD%90.html</url>
    <content type="text"><![CDATA[我很喜欢枣子,应该也是因为童年的内隐记忆。 以前家里种过一棵枣树，枣子结满的时候，我就会在瓦房顶上跑来跑去，用竹竿把枣打下来。现在想起来确实有点危险，毕竟瓦房顶有很多青苔，一个滑脚可能就是卧床两月，当时家里也只有我一个人敢这样，姐姐胆子太小，其他人体重不允许。 头几年枣子还是很密的，不用竹竿就可以随手抓一大把。小孩子精力总充沛，中午爷爷奶奶都午睡了，我睡不着，磨一会儿砖头粉，然后就爬到瓦房的屋脊上，摘几个开始转红的枣子吃，院落里总是静静的，偶尔会有风吹过葡萄树叶时轻轻的沙沙响，不过风过枣树时就不一样了，枣叶子小且密，所以是稍微重一些的哗哗声，这些都是我永远也忘不了的夏天记忆。 再加上七夕庙会的影响，也就是前面的一封信里提到的那个七夕节，对枣子的特殊偏爱，就这样没来由的成了形，至今也没变过。 很多人见红枣比较多，就是那种晒干之后的枣，但这种枣其实是没什么滋味的。真正令人惊艳的还是青枣，特别是大个青枣，是真绝色。 青枣除生吃外，有两种做法最能激发它的美味。 其一是烤来吃，找一个清晨，寻两根铁签，生一堆木火，用铁签把青枣穿了，放在火上边转边烤，等到青枣外皮泛黄就大功告成。青枣水分因为被烤出来大部分，口感会变得绵软，甜味也得到了极大提升，这种甜自然是不腻的，值得一提的是，烤制品一大特色是香，烤青枣也被赋予了这种特质，这种元素和前面几个特色联系起来，有相辅相成的奇妙效果。 其二就比较日常了，青枣入饭，煮熟即可，干红枣，蜜枣在这一点上都不能与之相比。我吃过的一次是与玉米粥同煮，现在还常常怀念。 各位如果想尝试，记得青枣需要是树上新摘，且以大为佳，这都是为了保留青枣的水分，那是它能变得美味的关键。货摊上刚摘下来半天的也可以用，但时间再长的青枣也只有颜色尚青罢了，水分跟干红枣差不了多少，已经神奇不在。 也许是爱屋及乌，我很多打心底喜欢的食物也跟枣子有关。月饼唯尚枣泥，点心偏爱枣糕，就连酸奶，喝最多的也是红枣酸奶。蜜枣糯米竹叶粽。也是心头好。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[R语言学习笔记]]></title>
    <url>%2FR%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html</url>
    <content type="text"><![CDATA[前文有数据可视化系列，R是实现数据可视化很重要的工具。我以前是没接触过的R，想看看几个小时能学习多少。在开始之前，我先确定一下，对我而言，R是一个用于数据分析的工具，我会用它做一些领域内的数据分析和可视化工作，因而暂时不会涉及高级的R操作。 关于R的基础介绍 R是开源的，在很多系统上都可以免费试用 R除了是数据可视化的非常重要强大的工具，也可以处理非常多的统计问题。 R支持交互式数据探索，可以随时保存当前结果并作为进一步的输入。 R可以从多个数据源导入数据 R包含了一些先进的统计计算例程 R提供了良好的GUI工具 R的学习曲线相对较为陡峭 在线获取帮助 help(&quot;test_function&quot;) 查看test_function函数的帮助 example(&quot;test_function&quot;)获取该函数的使用用例 help.start()打开帮助文档首页，获取入门和高级帮助手册，常见问题集。 RisteResearch(&quot;test_function&quot;)以函数名为关键词搜索在线文档和邮件列表存档。 工作空间内命令 dir.create() 创建新目录 getwd() setwd() 显示\设置当前已存在的目录 ls() 列出当前工作空间中的对象 rm(objectlist)移动\删除一个或多个对象 history(#) 显示最近使用过的#个命令 savehistory&quot;myfile&quot; loadhistoy&quot;myfile&quot;保存历史命令到特定文件中 从特定文件中加载历史命令 optipns() 显示或设置当前选项 help(options) 显示当前可用项的说明 save.iamge(&quot;myfile&quot;) 保存工作空间到myfile中 load(&quot;myfile&quot;)读取一个工作到制定会话中 q() 退出 基本语法 赋值。赋值符号 &lt;- 赋值语句示例 test &lt;- rnorm(2),创建了一个命名为test的向量对象。 普通输出。 sink()向屏幕输出结果，sink(&quot;filename&quot;， append=TRUE) 输出重定向到文件中，添加在文章末尾不覆盖。 图形输出。pdf(&quot;filename.pdf&quot;)输出pdf文件。jpeg(&quot;filename.jpg&quot;)输出jpeg文件。执行后使用dev.off()返回终端 R的数据结构及数据组织一些基础预备概念 数据集中行和列有不同的叫法，典型的如”观测和变量”，”记录和字段”，”示例”和”属性”。 R中的对象指可以赋给变量的任何事物，包括但不限于常量，函数，数据结构等。 R中对象都包含某种模式，描述该对象如何存储，以及某个类如何处理该对象。 R中的数据框的列存储变量，行表示观测(记录)，这会是R中一个重要数据结构。 因子是名义型变量或有序型变量。 数据结构 向量。a &lt;- c(1,5,3) 功能函数c()可以创建向量，内部参数可以为数据型、字符型、布尔型 矩阵。mymatrix &lt;- matrix(vector,nrow,ncol,byrow,dimnames)各参数含义依次为矩阵元素、行列数目，按行填充还是按列填充、行名列名。功能函数matrix()可以创建矩阵。 数组。 数组与矩阵类似，主要特点在于维度可以大于2。myarray &lt;- araay(vector,dimensions,dimnames)。dimensions给出各维度下标最大值。dimnames给出各维度标签列表。 数据框。 mydata &lt;- data.frame(col1,col2...) 因子。factor_test &lt;- factor(vector)关键点在于转换后的因子会和原向量的分量以一一对应因子变量包括名义型（类别），如中午吃的午餐类别和有序类别（有序型）(如病情转变)) 列表。mylist &lt;- list(object1,object2...) 列表中对象是任何对象。 数据输入方式 使用键盘。采用edit()函数，mydada &lt;- data.frame(ID=numeric(0),...) mydata &lt;- edit(mydata) numeric(0)表示创建一个指定数据模式但不包含具体数字的变零 从带分隔符的文件导入。采用read.table()函数。mydata &lt;- read.table(file,header=,sep=,row.names=),变量含义依次为文件名，首行是否包含变量名，分隔符，指定一个作为行标识符的变量。 导入excel数据。将其保存为csv文件，使用上面的方法。 其他可导入xml格式、网页数据、SPSS数据、SAS数据、Stata数据、netCDF文件、HDF5数据 访问数据库管理系统。使用ODBC接口、DBI相关包。 数据集标签(待续)包组织和管理 包的定义。 包是函数、数据、预编译代码的组合。存储包的目录称为库 包的查询。 test_function.libPaths() 显示库所在的位置。 library() 显示库中的包。installed.packages()列出所有已经安装的包。 包的安装。 install.packages(&quot;gluons&quot;) 安装了一个包gluons。 包的载入。 library(gclus) 包只有在载入后才能用，如果想长期载入，可自定义启动环境。]]></content>
      <tags>
        <tag>高效学习</tag>
        <tag>数据可视化</tag>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[BOSS无人车 | DARPA论文]]></title>
    <url>%2FBOSS%E6%97%A0%E4%BA%BA%E8%BD%A6-DARPA%E5%9F%8E%E5%B8%82%E6%8C%91%E6%88%98%E8%B5%9B.html</url>
    <content type="text"><![CDATA[Boss是以汽车行业的杰出人物查尔斯•博斯•凯特林(Charles Boss Kettering)的名字命名的。Boss是由来自卡内基梅隆大学(Carnegie Mellon University)、通用汽车(General Motors)、卡特彼勒(Caterpillar)、大陆航空(Continental)和英特尔(Intel)等多家机构的学生、员工和研究人员组成的车队开发。 该系统采用了螺旋系统开发过程，重点采用了定期的回归系统测试。在全国资格赛和85公里城市挑战赛决赛中，Boss获得首名。 DRAPA挑战赛有自己的选拔机制。为了参加这项挑战，参赛队伍必须通过一系列的测试。首先是提供一份可信的技术文件，描述他们将如何实现一种安全、有能力的自动驾驶汽车。在这些论文的基础上，五十三支团队有机会为DARPA亲自演示他们在简单的城市驾驶场景中驾驶的能力，包括通过停车和停车十字路口的适当地互动。在这些活动之后，该领域进一步缩小到36个团队，他们被邀请参加在加州Victorville举行的国家资格赛(NQE)。在这些队伍中，只有11只队伍有资格参加城市挑战赛决赛(UCFE)。 Boss使用车载传感器GPS、激光、雷达和摄像机来跟踪其他车辆，探测静态障碍物，并基于道路模型进行定位。它的三层规划系统结合了任务、行为和运动规划。 任务规划层考虑要走哪条路才能实现任务目标。行为层决定什么时候改变车道，决定在交叉路口的优先操作，执行故障恢复操作。运动规划层控制着在向局部目标金发的时候如何选择合适的行动以避免障碍。 关于BOSS的这篇论文首先介绍了自动驾驶汽车和它用的传感器，然后讨论了自动驾驶算法和方法。运动规划子系统（在第3节中描述）由两个规划器组成，任意一个都能够在达到预期目标的同时避开静态和动态障碍。结构化驾驶(道路跟踪)和非结构化驾驶(停车场操作)是主要考虑两种情况:。对于结构化驾驶，局部规划器生成轨迹以避免障碍物，同时保持车道。对于非结构化驾驶，如进出停车场，使用一个四维搜索空间(位置、方向、行驶方向)的规划器。无论哪个规划器当前处于活动状态，最终都是生成一个轨迹，由车辆控制器执行这些轨迹安全地朝着目标行驶。 感知子系统(在第4节中描述处理和融合来自Boss的多个传感器的数据，向系统的其余部分提供世界的复合模型（composite model） 。该模型由三个主要部分组成:一个静态障碍地图，一个全局移动车辆的列表，以及Boss相对于道路的位置。 任务规划器(在第5节中描述)基于路网计算到下一个任务检查站的所有可能路线的消耗。任务规划器会考虑到到达某个特定检查点的最佳路径，就像人类会规划一条从当前位置到目的地（如杂货店或加油站)的最佳路线一样。任务规划器会根据道路堵塞、最高法定速度限制以及时间来比较路线。例如，一条允许较高总体速度但包含u型转弯的路线，实际上可能比总体速度较低但不需要u型转弯的路线慢。 行为系统(在第6节中描述)根据任务规划器提供的战略信息为运动规划器制定了一个问题定义。行为子系统制定策略来执行任务计划，并在出现问题时处理故障恢复。行为系统大致分为三个子组件:车道行驶、交叉口处理和目标选择。前两个子组件的角色是不言自明的。目标选择负责将任务分配到其他行为组件或运动层，并选择合适的操作来处理故障恢复。 第7节描述了支持其他子系统的软件基础结构和工具。软件基础结构为算法的实现提供了基础。此外，基础架构还提供了一个工具箱，用于在线数据日志记录、离线数据日志回放和可视化实用工具，这些工具可以帮助开发人员构建和故障排除系统。它还提供了一个围绕算法的运行时执行框架，并提供进程间通信、对可配置参数的访问、公共时钟和许多其他实用程序。 NQE和UCFE的测试和性能在第8和9节中描述。在Boss的开发过程中，团队非常重视对性能的评估和发现弱点，以确保车辆能够应对城市挑战。在资格赛和决赛中，Boss表现不错，但也犯了一些错误。尽管犯了这些错误，而且竞争对手的实力很强，但Boss还是获得了进入决赛的资格，并赢得了城市挑战赛。]]></content>
      <tags>
        <tag>自动驾驶</tag>
        <tag>读书</tag>
        <tag>总结</tag>
        <tag>DARPA</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DARPA论文总结]]></title>
    <url>%2F%E8%80%81%E8%82%A5%E7%BE%8A%E7%9A%84%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-DARPA%E5%9F%8E%E5%B8%82%E6%8C%91%E6%88%98%E8%B5%9B2009.html</url>
    <content type="text"><![CDATA[DARPA城市挑战赛(DUC)于2007年11月3日在美国加利福尼亚州举行，之前在2003年和2005年已举办过两次挑战赛。冠军由Carnegie Mellon University获得。DUC的意义是深远的，它让自动驾驶进入了公众的视野，人们第一次开始意识到，未来的车辆可能不一定是需要人来开的，另外，它也促进了相关自动驾驶技术的发展。 这里展示的13篇论文，记录了不同团队开发的机械、算法和感知解决方案，这些论文最初发表于2008年8月、9月和10月的《野外机器人学报》三期特刊。 Carnegie Mellon University第一篇论文，Urmson等人的《Autonomous Driving in Urban Environments:Boss and the Urban Challenge》介绍了Boss的机械和软件系统，包括对运动规划、感知、任务规划和行为策略算法的描述，软件基础结构也很详细。此外其在NQE中的测试、性能和比赛表现也都被记录成文档。 Intel Research Pittsburgh第二篇论文，Ferguson等人的《Motion Planning in Urban Environments》提供了关于Boss规划系统的更多细节。Boss规划系统将用于计算动态可行动作的模型预测轨迹生成算法和更高等级的用于在道路和非结构化环境中的全局算法结合在一起。 Stanford Artificial Intelligence Lab第三篇论文Montemerlo等人撰写的《Junior: Stanford in The Urban Challenge》，描述了Junior是如何通过整合感知、规划和控制的分布式软件管道做出驱动决策的。论文结合了近年来在概率定位、地图绘制、跟踪、全局和局部规划等方面的创新工作，结合有限状态机，开发了一种在城市交通环境下具有较强的鲁棒性的导航系统。同时该论文介绍了障碍/路缘检测、车辆跟踪、运动规划和行为层次结构等方面的新进展。 MIT, Cambridge由Bacha等人撰写的论文《Odin: Team VictorTango’s entry in the DUC》描述了团队在进行DUC的过程，概述了车辆平台和系统架构，并描述了感知和规划系统。文中还描述了Odin在NQE和比赛中的表现，包括在测试和比赛中所面临的各种问题的分析。欧丁在比赛中平均时速不到21公里，以4小时36分钟的成绩名列第三。 Embry-Riddle Aeronautical University这篇论文《A Perception-Driven Autonomous Urban Vehicle》由麻省理工学院团队产出，描述了一种设计用于满足DARPA城市挑战赛的交通工具的架构和实现。这辆车包括大量异构传感器以捕获和处理高分辨率、高速率传感器数据。感知系统的输出被输入到一个运动学运动规划算法中，该算法允许在车道、三点转弯、停车和在障碍物中完成驾驶任务。其目的是开发一个平台，研究在没有gps以及先验信息的高度动态的环境下的自动驾驶。麻省理工学院的参赛队伍成功完成了这门课程，获得第四名。 University of PennsylvaniaBohren 等人写的《Little Ben: The Ben Franklin Racing Team’s Entry in the 2007 DARPA Urban Challenge》详细介绍了改装过的丰田普锐斯混合动力车Littlle Ben的传感、规划、导航和驱动系统。本文介绍了一种将传感器信息集成到动态地图中的方法，这种动态地图可以鲁棒地处理GPS掉线和误差问题。提出了一种由高阶任务规划器和低阶轨迹规划器组成的规划算法，介绍了一种基于成本的执行机构液位控制方法，Little Ben是成功完成城市挑战赛的六辆车之一 Cornell UniversityMiller等人的论文《Team Cornell’s Skynet: Robust Perception and Planning in anUrban Environment》描述了Cornell是如何参与DUC的，详细描述了无人驾驶汽车Skynet的设计和软件。这篇文章描述了Skynet的定制驱动系统和配电系统,紧耦合的姿态和位置估计、特殊障碍检测、基于视觉算法的位置检测跟踪系统,基于物理车辆约束和非线性优化的路径规划程序和一个基于状态的遵守交通法规的推理代理。文中还介绍了Skynet在NQE和最终比赛中的成功表现。 Coleman Technologies, IncPatz等人的《A Practical Approach to Robotic Design for the DARPA Urban Challenge》描述了TeamUCF和他们的Knight Rider在城市挑战赛中的旅程。在仅有的5名核心队员中，有3人参加了2005年的大挑战。考虑到它的规模和预算，这支队伍的成功令人印象深刻。传感器数据从雷达和多个SICK激光扫描仪中融合获得，其中两个扫描仪旋转以提供具有距离和强度数据的三维图像处理。它的world view由一个基于上下文的推理控制系统处理，产生策略任务命令，并被传送到到传统的PID控制循环处理。 University of Karlsruhe《Team AnnieWAY’s Autonomous System for the DARPA Urban Challenge 2007》介绍了AnnieWay团队的极简主义方法，他们主要依靠安装在他们的大众帕萨特车顶上的多光束Velodyne激光扫描仪和一台电脑。激光扫描仪的距离数据提供了三维场景的几何信息，反射率数据允许鲁棒的车道标记检测。通过一个分层状态机进行任务和策略选择。系统的反应部分使用了一个预先计算的运动的基本模型,随车辆的速度变化而变化,在随后的论文会进行描述。描述驾驶触角:整体结构感知和运动的 University of the Federal Armed Forces Munich Hundelshausen等人写的《Driving with Tentacles: Integral Structures for Sensingand Motion》介绍了AnnieWAY运动团队用tentacles描述感知和运动执行的解决方案。与其他方法相比，该算法采用了以车辆为中心的占用网格来避开障碍物。这种方法非常有效，因为tentacles和网格之间的关系是静态的。即使这种方法不是基于车辆动力学的，产生的路径误差也被证明是有界于无障碍区域的。这篇论文是《Team AnnieWAY’s Autonomous System for the DARPAUrban Challenge 2007》的姊妹篇。 Herzfeld &amp; Rubin, P.C.《Caroline: An Autonomously Driving Vehicle for Urban Environments》描述了一个由传感器数据采集、传感器数据融合、图像处理、数字地图、人工智能、车辆路径规划和低层控制、监控监控和在线诊断、遥测和数据存储等8个主要模块组成的系统的架构。其对汽车性能的详细分析提供了对于城市自动驾驶驾驶系统的有趣的见解。论文最后描述了导致与麻省理工学院的Talus碰撞的事件。 Massachusetts Institute of Technology《The MIT–Cornell Collision and Why It Happened》详细分析了麻省理工学院和康奈尔大学的车辆在比赛中相撞的事故，这项由麻省理工学院和康奈尔大学联合进行的合作研究，追踪了撞击发生前的一系列事件，并调查了其根本原因，概述了机器人在比赛中的相互作用（交互）。 Ford Motor Company这篇论文《A Perspective on Emerging Automotive Safety Applications,Derived from Lessons Learned through Participation in the DARPA Grand Challenges》描述了由福特汽车公司领导的项目。这篇文章提供了一种提高乘用车安全性的方法进而为机器人技术研究提供了动力，分析表明，人类驾驶员的驾驶能力是当今自动驾驶汽车的四到六倍。本文介绍了福特车队自动驾驶系统的设计和配套的传感器套件。它提出了在试验和比赛期间车辆性能的详细分析和总结经验教训。 Thousand Oaks, CA《TerraMax: Team Oshkosh Urban Robot》以使用12吨中型战术车辆替换(MTVR而闻名，MTVR为海军陆战队提供了大部分后勤支持。传感主要是利用激光扫描增强的被动计算机视觉来完成的。本文对该系统进行了描述，并对比赛中的表现进行了分析。]]></content>
      <tags>
        <tag>自动驾驶</tag>
        <tag>读书</tag>
        <tag>总结</tag>
        <tag>DARPA</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[信息论随笔四]]></title>
    <url>%2F%E4%BF%A1%E6%81%AF%E8%AE%BA%E9%9A%8F%E7%AC%94%E5%9B%9B.html</url>
    <content type="text"><![CDATA[天之道，损有余而补不足，是故虚胜实，不足胜有余。金庸《九阴真经》开头的这几句话，我背的很熟，其实这几句话出自道家，符合” 难易相成 ，长短相形 “的二元道教观。 由此我突然就想起了信息过载。想到了它“多就是少”的莫名表征。 我们先从社交平台演变史里大致了解一二，以获得一个感性切实的认识。QQ经历过美好的田园时代，在网络空间里它能治愈东方人的孤独，因为基本上每个人都相识，每个人都相知。后来无谓的交际圈覆盖了它，我们的心态也发生了改变，正如现实中东方人从古代到现代的演变一样，QQ也变成了一万句顶一句的地方。 腾讯应该是发现了这个问题的，朋友圈共同好友可见，就是减少无谓的信息灌输。无奈分离大势面前，再先进的产品理念也不可阻挡。加了越来越多的好友，也越来越沉默。 现在在微博偶尔活跃，微博更像是一个内容分发平台，它的弱社交特性让我有暂且苟延残喘之地。但我还是隐隐约约地感觉，这根本不是最终的答案，最终的结局肯定还是，无可挽回的坐在孤岛上。 读书也是个例子，以前读书时心里充满了虔诚，因为深知书本的来之不易，每个字，每句话都像溪流，文字在流动，段落在起承转合，涓涓的细流汇成了海，确有在书海中遨游的感觉，现在书更多了，书海却消失了，我获得的信息却更少了，因为不在乎了，也因为我的大脑已经不堪重负。 全噪声，我的大脑变得不堪重负就是因为它，这个词汇散发着不详的气息，它和信息过载、信息疲劳、信息焦虑其实是一个意思。微信里近二十个行业交流群，十数个工作群，近600个人，但实际常聊的人也就一两个而已。打开微博，明星分手了，出轨了，结婚了，房价上升了，下跌了，房价要来了，p2p爆雷了，星座，美食，战争，电影，诈骗，粉丝，出道，退团… 这就是我在微博上的日常见闻。零散的他人信息，垃圾洪流，席卷而来，让人目疲，耳鸣，嗅觉触觉感觉都变得迟钝。 如何避免信息过载带来的一切呢？ 其一，摆正认识。说信息过载，绝不是排斥信息，绝不是让我等封闭自己，强行回到过去的状态。实际上当前信息在某种意义上的平等，也正是世间少数公平公正的可以帮助跨越阶级的助力，所以必须牢牢抓住，合理利用。信息数量和信息处理之间应当有着∩形关系，合理控制信息量能帮助我们达到信息处理的顶峰。 其二，过滤。博客是过滤的一个典型例子，我的博客以我作为过滤器，一定程度上滤除掉了一些八卦信息、血腥暴力等内容，主要产出一些随笔和自动驾驶笔记。我的博客内容较杂，不多提了，更多博客是有自己特定的主题的，如以设计为主题，以教学方法为主题等。另外，垂直网站也是过滤的一个典型实例。但过滤机制始终绕不开的一个问题就是口味的争议，没有一个过滤器是能同时满足所有相关人士的。 其三，搜索。此处指的是主动地、有目的性地、行之有效地搜索，而不是打开微博微信被动地灌输信息，其中差别，你我自然知晓。]]></content>
      <tags>
        <tag>随笔</tag>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[读书 | 午夜凶铃]]></title>
    <url>%2F%E8%AF%BB%E4%B9%A6-%E5%8D%88%E5%A4%9C%E5%87%B6%E9%93%83.html</url>
    <content type="text"><![CDATA[午夜凶铃是一本怎样的书呢？一本有关都市奇谈的恐怖书？不是的。 它的同名电影是恐怖的代名词之一，即使你没看过，也肯定知道贞子一身白衣从电视机里爬出来这个梗。但也正因为电影凶名太盛，当听到原著是一部科幻作品时，很多人的第一反应都是:在开玩笑吧？ 没开玩笑。从某种程度上说，午夜凶铃的电影依附于原著，但又伤害了原著。原书的主旨在转化为电影时发生了突变，表达出了新的性状，并反过来侵蚀了原著的市场。此时电影对于书本而言，就像是病毒。让我感到些许凉意的是，病毒、复制、转录、侵蚀，正是午夜凶铃的关键主题之一。 书本里的故事情节总让我想起自己年少时，你是否也想象过我们的世界也许只是个粒子？粒子组成了原子，无穷的原子组成了宇宙，宇宙之中有着无重宇宙。认真学过大物的也许知道，现代物理走到最后或者回望最初，都绕不开一个词汇，观测。分形宇宙正是现代物理观测学的一个重要分支，各种理论已经接近哲学范畴。 《三体》这本书很多人都读过，无边无际的宇宙，没有模式的混沌运动，隐藏在黑暗森林深处的残酷真相。不管别人再怎么说它过誉，它始终是我心中硬科幻的代表。而《午夜凶铃》病毒和DNA的战斗，生命的真正起源，精神和遗传信息的相互影响，从与宏观对立统一的微观入手，写出了我心中软科幻该有的样子。 《午夜凶铃》还融入了悬疑和推理的元素，主角面对超自然力量时仍能智商在线，这一点很像死亡笔记里的L，死亡笔记的拥泵们应该知道L基于现实进行做超出常识外的推理有多么迷人。 作者铃木光司的文风有些像夏目漱石的《老师》，压抑的故事和清新活泼的笔触没有什么违和感。嗯，正像书里的一个情节，空气里淡淡的柠檬清香总和可怕的灾祸同时出现。 这本书带给了我一些只有过去才有的感觉。 现在的我，书籍的获取已经毫无难度，用心的对待一本书？已经没有客观的土壤支持这种心态了。声光形色在爆炸，各种信息噪音充斥掺杂在一起，人的情绪阈值在其中被极度拔高。愤怒焦躁占据了大部分时间，目的而不是兴趣成为了事情的主要驱动力。 这是信息过载的大环境造成的结果，很难逆转。 但这本书的第三部让我很短暂的回忆起了，六岁时看《射雕英雄传》，初中时看《多情剑客无情剑》，高中时看《三体》的感觉。手中翻着书，心里充满了虔诚。那时拿到书很不容易，因而会倍加珍惜。书在书柜里放的时间长了，书页里的树木古朴味儿会和油墨的香味融合在一起，把脸埋在书里时，心会沉静。打开书的时候，就翻开了一页页空间，也看过了过去的时间。隔着时空，我能和作者和书中的人物对话。 屏住呼吸，小心翼翼，心脏在胸腔里砰砰直跳，能感觉到血液缓缓的流动。故事能带给人的惊喜和感动，我希望不要永远失去。]]></content>
      <tags>
        <tag>读书</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu学习整理]]></title>
    <url>%2FUbuntu%E5%AD%A6%E4%B9%A0%E6%95%B4%E7%90%86.html</url>
    <content type="text"><![CDATA[考虑我对自己的定位，Linux对我而言是一个工具，源码学习、网络编程、服务器架构等不在我的未来计划之内，以这样的态度我进行了学习整理。想深入学习核心还是要进一步打好基础，不过话说回来，人生苦短，先博观一遍，入手再谈，也是很好的学习技巧。 Linux学习原则 初期linux学习出错是很正常的，基本是每个操作都离不开Google，现在的我依然是，好处是每天都能给自己一点微弱的成就感。 askUbuntu是一个很好的学习网站，但还是多用Google吧。 Ubuntu建议还是用14.04稳定版本，不要盲目追求新版本瞎折腾，时间是宝贵的。 用Ubuntu系统只是因为它更适用于开发，相比Windows系统它有非常多的缺点，牢牢记得是你使用系统，而不是让系统绑架你。 Ubuntu系统安装虚拟机安装 VmWare+Linux安装 密码：1d32系统安装 U盘最后用的制作工具是linux live usb installer。 在bios的boot里，HD hardware中选择从U盘启动，对于华硕还有其他的启动方案。 安装时的配置 点击。 第一次使用建议 对于拼音输入法的安装，参见Ubuntu安装输入法; 对于输入法的全拼半拼问题，在首选项里设置;ibus-daemon -drx 解决拼音中断的问题; 先学会最基本的几个Linux命令，即sudo、apt-get、cd、mkdir、ls等 在搜索里找到”Software Update…”,掌握这个软件的作用。 执行sudo apt-get update 出错时。 解决方案之一：更换源。 解决方案之二：sudo apt-get clean sudo apt-get update 解决方案之三：去掉other里的两个独立源。 解决方案之四：可能是DNS的问题 建议安装on-my-zsh。zsh比较好的主题是ys，字体14/16号Mono Italic最合适，斜体非常好看。 考虑用synaptic来进行安装包的管理，初期可以解决很多烦人问题。 使用wine可以获取win上的软件，这相当于另外一种意义上的虚拟机了。 使用shadowsocks搭梯子，github上搜索下，有完整的教程。 入门学习时优先关注的点 Linux的常用指令熟练，其他指令可以慢慢学习，命令行终究还是绕不开的。 了解/熟悉Ubuntu的目录架构，了解各目录的作用，比较其与Windows系统的异同。 学习Ubuntu下目录权限的知识，即读、写、执行的概念，了解怎么改变权限，了解权限的意义。 尽早学习怎么配置开发软件，关键还是在于使用，在使用中学习。 系统学习时可以关注的资源 《鸟哥的Linux私房菜》 特点：手把手教学，有丰富的例子。 《Linux可以这样学》 特点：侧重于Linux的设计哲学。 菜鸟教程-Linux 特点：基础、快速、易上手]]></content>
      <tags>
        <tag>机器学习</tag>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[登楼]]></title>
    <url>%2F%E7%99%BB%E6%A5%BC.html</url>
    <content type="text"><![CDATA[几天前的中午，在太阳下行走，感觉每分每秒都是折磨。想起来了几年前的夏天，想起了登楼。那时也是这样的天气，那时是不同的心境。 （一）下午三点多，正是一天里最困的时候，也学不下去，就洗了把脸坐在七楼过道的椅子上休息。有风起，图书馆外的小湖里闪着揉碎的阳光，现在正是春天，湖岸旁很有生机。坐的时间久了，我起身关窗，不经意间看到了诚楼的楼顶，记忆像夏天的雨突然就下来了。 和楼顶结下不解之缘，不是在春天，而是在夏天。七月底，正是暑假。 关于夏天和暑假，你的记忆是什么？ 是永远不知累的蝉鸣，是风吹过葡萄树的沙沙声。是切开的半个西瓜，读了几遍的笑傲江湖，玩了无数次的魂斗罗。也是亚麻凉席和草籽枕头，是那个睡醒后顶着昏昏沉沉的脑袋去买饮料的午后。但现在，这记忆里加入了其他刻骨的东西。毒热的太阳，空荡的街道，各种类型的建筑物。 以及，一个活着的冰冷城市。 （二）想问各位一个问题，如何登上一栋楼的楼顶？ 找到负责人，说明来意，提供证明，从保安处拿到钥匙。可行吗？这方法很正统。但有一条数据，在七十多个我用这种方法调研的样本里，顺利的只有两例，成功率不足百分之三。 两年前，我参加了上海市绿化局的一个调研项目，调研对象是目标楼顶的情况。登上大楼的楼顶，或者说天台，并拍下照片，就是我的任务。开始的时候，我以为它很简单。但实际上一个人想探究一座城市的时候，这座城市就会变成一个张牙舞爪的怪物。钢筋水泥，门禁保安组成了它的外壳，人情，规则，冷漠相互交织组成了它的筋络。 想攻破它的外壳，顺着它的脉络俯视它的头顶？ 没那么容易。 （三） “伯伯您好，我是xx大学的学生。我们现在有一个绿化局和我们学校合作的项目，现在需要做一些前期调研工作。这是我的工作证和身份证，这是介绍信，您看一下，实在麻烦您了，谢谢。”这是我的开场白，现在看来很有学生的风格，敬语多，内容多，唯恐错过什么。 保安：“嗯嗯，但这个我做不了主哇，你去找物业。”物业负责人：“嗯啊，哪个？哦……绿化啊，行，你去找一下保安拿一下钥匙。”保安:：“钥匙？我不知道有钥匙？你还是去找物业。” 犹记得那栋楼比较矮，三层，十米左右。它就立在那里，但我却永远不能过去。我站在楼下，仰着头看了它几十分钟，天空在我眼里变幻成各种图像，最终还是决定放弃。 这次失败没有影响我太多，查了查昨晚搜集的资料，第二个目标是一所学校。学校钥匙肯定有备份吧，也是自己习惯的场景，应该会更好交流点，当时的我有这样的错觉。传达室里的保安叔叔大概五六十岁，翘着二郎腿，抱着搪瓷杯。我还是跟第一次一样的开场白。之后期待着对方善意的回应。但他像是被施了缓慢咒，慢慢睁开了眼睛，慢慢放下了杯子，慢慢说了一个字。 “滚” 我感觉我的血一下子冲到了头上。 那时的我依然没想到，这个情景远不是最后一次。 （四）如果我能从天空俯瞰这座城市，人也就成了几何意义上的点。有两个点一直呆在一起，嗯…这可能是一对恋人。这一堆点可能是一个班级，排列的很方正。这里还有一些点交错而过，各自划出完美的弧，是在溜冰吗？ 眼前的几何点，他们的经历，性格，此刻都被封装在一个黑箱内。社会由关系组成，人由利益连接。我很想知道，在以上的假设下，交流是偏善意的多还是偏恶意的多？抑或是善意和恶意都耗费心力，唯有冷漠才是稳定的状态？ 我回答不上来，也许是我不愿意承认心里的那个答案。 “你好，我是绿化市容局的，现在要针对你们这些公有机构做一些绿化调研工作。这是工作证，请尽量配合。不然之后工作出现麻烦和疏漏，你自己向你们领导解释，绿化局不再负责。”“你好，我来这小区是找我同学，我也不知道他在那里，我会往中间走走等他。”“你好，我有孩子到入托的年龄了，我可以看一下你们的幼儿园设施吗，只需要几分钟。” 不同楼顶，不同内容，不真不假，见人说人话，见鬼说鬼话。 这就是更合理的生存方式了。 （五）如果不能登顶，拍到它的全貌也可以，这是一个勉强的替代方案。 建筑物是死的，也是简单的。而人是活的，也是复杂的。对简单的建筑物，只需要考虑潜入，或者站在比它更高的楼上，寻找合适的视角拍摄。但对复杂的人，要交流，要周旋，要强行无视对方的恶意，要恐吓，要诱导，要把他们牵扯进利益。心力一天天被这样磨着，终于没了。所以，在调研进行到一半的时候，我的重心绕过了人，放在了建筑物上。 不同类型的建筑物需要不同的拍摄方案。 居民小区是城市的主体。要小心不让被当做小偷和骗子。如果被误会了，解释起来会很麻烦。关键在于时间点，中饭时间是最合适的，人流量大，而且可以跟随住户过门禁。 学校，幼儿园在暑期不开放，为了保护或者说限制学生，它们的围墙都很高。我不会去翻墙，那样违法，实在不值。但这种建筑物可以用谷歌地球锁定位置，调出卫星镜像，进行截图。现在这个世界，其实隐私真的不是什么。 银行，医院，商场，没有什么麻烦，可以大摇大摆的进去，因为开放的特性，它们常常被用来作为垫脚石。窗户确实是奇妙的元素，大且重的建筑物有了窗户灵动感就来了。我喜欢窗户，它们能提供拍摄视角。 派出所，政府楼，拍摄类似的建筑物要在暗中进行，不然会被追上来要求删除照片，应该是保密的要求。但对这些反而可以去考虑与人交涉，他们有流程，有规则，会冷漠但不会有没来由的恶意。 这也就够了。 （六）废弃的医院楼层里有电梯咔哒哒的声音，高温下的柏油路有噼里啪啦的爆裂声，中午一点时整个城市会沉默。 温度快到四十度了。 （七）在最后几天，我登上了一座危楼。 更准确的说，这是这一栋待拆迁的楼，灰色调的钢筋水泥在风中飘零。电视剧里，绑架犯被警察围住后，最喜欢往这种楼跑。 楼顶有一脚深的积水，也不知道是哪天下雨积起来的。我从楼梯间里捡了一些木板和石头，铺了一个简易的过桥。但还是没站到最高处，因为楼顶的另一半是一个大平台，我又花了半小时，用砖块垒了一个垫脚，手脚并用，爬了上去。 楼顶是一个个方块，像一个大型挖地雷的游戏，有几个已经boom炸开了。也没有护栏，站在四角拍摄的时候很担心脚下会炸掉，直接从五楼上掉下来。 其实这栋楼在被判定为危楼时就已经失去意义了，登上这座楼的楼顶，纯粹是心血来潮。拍完之后，我在楼沿上坐了下来，吹着风，看着我穿梭了一个多月的这个小区。 我想起这一个月里的怎么潜入，怎么伪装，怎么周旋，怎么压制，怎么装若无其事，怎么装凶恶样子。 这个暑假，结束了。]]></content>
      <tags>
        <tag>随笔</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[待写文章]]></title>
    <url>%2F%E5%BE%85%E5%86%99%E6%96%87%E7%AB%A0.html</url>
    <content type="text"><![CDATA[这是待写的文章集合，放在马克飞象上还是太不安全了。《虚实结合》读书时有个经典梗，你更喜欢纸质书还是电子书？确实，电子书方便，纸质书能让人静心，真辩论起来，各方拥护者读书也是有虚实结合理论的。 《面向考试和面向兴趣和面向生活》也是看统计科普书时突然发现的。我的右手边有借同学的张宇概率论九讲，于是拿出来随手翻了翻，没想到这么多知识都是预先已经学习过了的。 《统计学的价值》 最近看了几本或多或少涉及统计学的读物，感觉有基本的统计素养是非常重要的，其中很多概念对塑造一个人的逻辑能力，引导一个人看世界的方式都很重要。 《科研生活 | 建模》 模型只是对世界的反馈，这句话有两个意义。 其一，它永远不是现实。 其二，它至少是现实的一个代表 因此，在建模时，在构造模型时，我们应该注意什么呢？ 《再谈围炉夜话》外面风刮得很大的时候，我们会围坐在火炉旁，也不说什么话，只是静静地烤着火，这总会让人想起一千年前，郭襄初见杨过那次风陵夜话。 《内隐记忆》 夏天的凉皮之所以被喜欢，终究还是因为内隐记忆。 温度的记忆，声音的记忆，气味的记忆，美食的记忆，哪个记忆更能直戳心脏呢。 《理想和现实》 前两天，和陈老师又一段和平的交流，归结下来，应当是理想主义者和现实主义者的观点碰撞。 《大五上的项目》 大学项目工程，还是大五上。 《第一次感受到宇宙》 小学，花园，安全，雨水，一辈子。 《榆钱饭》 小时不爱吃的榆钱饭，现在开始慢慢怀念，只因为吃奶奶做的饭的机会，越来越少了。每年回去两次，还能吃几十次呢？每每想到这里，我甚至都有些想流泪。只能多和爷爷奶奶打电话，多和他们交流，以此来避免心里那种压抑。 《一本书的命运》 书的命运都有什么呢？ 从印刷开始，可能永远不见天日，也可能和很多人有各种心灵地对话。可能在夜市里等待一个有缘人，也可能黑心的商人贴上价格标签后禁止流通。(这个灵感来自于 春宵苦短) 《我是喜欢历史的吗》 从《剑桥金庸武侠》里能看出来，我以前应当是喜欢历史的，背历史，读故事，现在对架空依然感兴趣，像龙族之类，再或者一人之下。 《劳逸结合》 好好学习，好好玩耍，这就是我的道了，这是龟仙人对小悟空的话。 《在屋顶的故事》 从姜文的《邪不压正》，我喜欢他们在屋顶奔跑的那些情节。 在瓦房顶看书。 《庙会》 我很喜欢鲁迅的《社戏》，初中读过很多遍。 那里大约是有着生活的气息，对物质极不满足的那时的我来说，这里就是天堂 有着一种不同往常的氛围，欣喜的，悸动的，兴奋地，浑身流动着轻松的多巴胺。那时候是真的无忧无虑，突然就明白了无忧无虑的意思，又马上想到，当我明白这个词的意思时，我应该已经失去了它。 《求新与求变》 我要求新求变。走出舒适区，不然生活会像一潭死水的，只有走出去，才能不一眼看到头。 《武侠阅读史》 武侠在我的阅读史中占有极其重要的地位。 如果每个人都有文风，那我的文风应该是读过金庸古龙的几十本书留下的一个影子，也许也夹杂了一些杂文选刊的风格。 谈到武侠，当属金古梁温。我读书自六岁起，第一本厚书就是金庸的《射雕英雄传》 其实我个人最喜欢的还是金庸的风格，瑰丽的文字，诗歌一般的语言。但也许是被传统的义务教育封印了些，总感觉中正平和才是文字大道，两方纠结，最终变成了现在的样子，老实羞涩的文风，偶尔三句骚话。 《心比天高究竟好不好》 燕子呐，我深切的了解，有一种悲哀叫做心比天高，命比纸薄。我不会那样的。但我要在有限的资源和环境下 ，打出自己的最好牌局 《书的味道》 老书好像是有味道的。 不知道是时间的，还是前人的记忆的。 现在的书没有，不知道是书变了，还是我变了。木头和文字相遇发酵。当笔墨撒在九分熟的纸上的时候，墨香与久置的陈木香会绕在一起，慢慢地，慢慢地把我们包围起来。 我女朋友说，家里80年代的书的味道，会让她有在看历史文物的错觉。（词穷….） 《读书与季节》 有哪些书适合冬天看？ 史书应该适合冬天看。 情节丰富的也适合冬天看，因万籁俱寂，人也不想动弹，精气神力都回归到身体里去了，此时窝在被窝里，神游于书，随书中人物感受命途多舛，大喜大悲，应当很有代入感。 哪些书适合夏天看呢？ 夏天适合看散文，白瓷碗，梅子汤，冰块叮当响。 《最后一桶泡面》 泡面只有一桶了，只要留着，就会有希望。 《吃什么最幸福呢？》 以下是结尾 怎么样。 山珍海味不及雨下炊烟桌上一碗热汤面。这是我女朋友说的话，她也说跟最有安全感的人，一起吃，最有归属感的东西，是幸福的事。 我深以为然。 —来自燕子 《雨日记》 车外有车内企及不了我处于的清新和自由，我现在终于是在车外而不是在车内了。 《七日游》 和妍妍的七天游记 七天行，一天天比一天天愉快，一天天比一天天快乐。 我想记录这些事情，在七十多坐在门口晒太阳时，一边傻笑一边想着这些事。年少时的游历，最大的价值之一，也莫过如此了。 《目的性太强》 我是否目的性过强了。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[线性代数 | 向量空间]]></title>
    <url>%2F%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-%E5%90%91%E9%87%8F%E7%A9%BA%E9%97%B4.html</url>
    <content type="text"><![CDATA[向量空间是线性代数里最重要的概念，没有之一。它是后续许多知识的基础，也是帮助我们理解线性代数本质的重要工具。 向量空间概念空间在此指的是某种集合，空间存在的基础是需要满足规则。向量空间这样是一个集合，集合内的元素是向量，且集合内的向量相加和数乘之后仍在本集合内。即向量空间对加法和数乘封闭。 几个引申： 向量空间内必须有零向量。证：取空间内一向量$v$,进行数乘和加法$1v+(-1)v=0$,得证。 二维空间、三维空间是向量空间。证略。 所有过原点的直线以及零向量是二维空间的向量子空间。过原点的平面，过原点的直线以及零点是三维空间的向量子空间。 列空间和零空间向量空间内向量的加法和数乘有一种更经典的描述手段：线性组合。现在我们取列向量进行线性组合，其所有线性组合就构成了一个重要的向量空间，列空间。 列空间取一个列向量属于$R^4$空间的例子，(注：列向量有四个分量，所以属于四维空间),下面方程组$Ax=b$,$A$的列空间是$R^4$的子空间，事实上，取三个列向量线性组合，永远得不到四维空间。 \begin{bmatrix} {1}&{2}&{3}\\ {4}&{5}&{6}\\ {7}&{8}&{9}\\ {4}&{1}&{5} \end{bmatrix} \begin{bmatrix} {x_1}\\ {x_2}\\ {x_3}\end{bmatrix}= \begin{bmatrix} {b_1}\\ {b_2}\\ {b_3}\\ {b_4}\end{bmatrix} 现在将抽象概念和实际应用结合在一起。来分析方程组$Ax=b$是否对任意b都有解。直观的感觉来看，四个方程有三个未知数，大多数情况无解。但也有情况有解，即b是A的各列的线性组合时，此时b在A的列空间里，Ax=b有解。 继续考虑，如果对这三列线性组合，它们是组成四维空间里的三维子空间，还是更小的空间？在本例中，去掉列三是没影响的。因为列三可以通过线性组合出来，所以它不做贡献。因此这里是四维空间$R^4$的二维子空间(没错，实际的几何形状就是个平面)。 零空间 我们仍然用上文的矩阵举例。令$b=0,Ax = 0$我们关注x向量，x在此例中是$R^3$的子空间(注：x有三个分量)。列空间是$R^4$的子空间，在本例中零向量在零空间里，$(1,1,-1)$也是解。综合起来既是$c(1,1,-1)$, 用图像来表示的话是一条直线，即这里的零空间是$R^3$的一维子空间，即是一条直线。 $Ax=0$的解构成一个子空间。证明： 对于一个解$x$和$x_1$, 其对加法和数乘封闭。 $Ax = 0$且$Ax_1=0$. 则$A(x+x_1)=0$,$A(kx)=0$ 假设改变了b，从而导致所有的解x中不包含零向量的话，解x就不可能是向量空间，这些解组成一个不过原点的平面，或者不过原点的直线。我们始终是强调应该过原点的。 Ax = 0 主变量 特解一般通过对A矩阵进行消元求解，如下图,矩阵A是长方形矩阵,对其进行消元。注意在消元过程中零空间不变，改变的是列空间。 第二个本应是主元的位置此时是0，这说明第二列和它前面的列线性相关。最后得到阶梯形式的矩阵U，主元的数量是2，这就是矩阵的秩。有主元（红框）的列是主列，其他是自由列。自由对应计算是可以对对应的x任意分配数据，一般是0,1。另外指，它可以由主列组合起来。 消元后变成Ux = 0寻找主列。对自由列，先随意选取两个数字（1,0） 然后进行回带，算出解，再取（0,1）算 出解。因为分配了特定值，所以是特解。再通过线性组合就得到了该方程的全部解。 指的注意的是，U还能继续简化 在MATLAB中用矩阵rref可以完成这个问题。我们交汇主行和主列，能得到一个单位阵，不在交汇中的列称为自由列。原方程组Ax=0，中间方程组Ux =0，最后Rx=0 我们再用代数推导一下这个过程 Ax = b 解的结构 算法 解的结构：唯一解还是无穷多解。 有解b要满足的条件：b属于A的列空间（是A中各列的线性组合） 算法：第一步，求特殊解。将所有自由变量设为0（因为可以随便选，选0是最方便的），解出主变量。第二步，加上零空间的所有向量。 最终解：特征解+所有零空间的解（通解）。 对于上文例子，有两个自由变量，所以解的形式 $x* +{c_1}{x_1}+{c_2}{x_2}$,解的图像是过原点的平面（零空间）平移得来的，AX=b的解空间不是向量空间 秩与解的关系秩r为m*n的矩阵A，当前秩被定义为主元的个数。从主行的角度看，r必然小于等于m，从主列的角度看，r也必然小于等于n。 列满秩列满秩表示r = n。它的应用场景可以直观理解为那种长条矩阵。这对方程的解意味着，每一列都有主元，那么主变量n个，自由变量0个，因为没有其他自由变量可以赋值，零空间中只有零向量。则对于Ax=b的解要么只有一个特解，要么无解（b在零空间时才有一个解）。下面举一个例子。 [1 2 2 5 ；3 1 1 1] 两列线性无关，其秩是2，其行最简形式是[1 0 0 0；0 1 0 0],零空间只有零向量。对于Ax = b，4个方程，2个未知数，不可能任何情况都有解的，b在其线性组合内时才有解。 行满秩行满秩表示为r = m，此时有m个主元，每一行都有主元，消元时不会出现零行，则可以得出对任意b，Ax=b都有解。 一开始有n个变量，有r（m）个主变量，所以自由变量是n-r（n-m）个。其行最简形，前r列是主列，组成了单元矩阵。因为总有零空间去处理，一般是无数解。 满秩方阵r = m = n, 满秩方阵，这是一个可逆方阵。其行最简形R= I真正好的矩阵化简后得到单位阵。其零空间只有零向量，b任何条件不需要满足，这种情况肯定有解，且解唯一。 总结矩阵的秩决定了方程组解的数目，秩r包含了所有的信息。 r = m = n 满秩方阵。行最简形为R=I，有一个唯一解。 r = n &lt; m 列满秩，行最简形$R=\begin{bmatrix} {I}\\{0}\end{bmatrix}$此时无解或者唯一个解（取决于b在不在那个列空间中） r = m &lt; n 行满秩。 行最简形 $R= \begin{bmatrix} {I}&amp;{F}\end{bmatrix}$。总有解，因为最下面没有零行，所以有唯一解或者无穷多解。因为总有零空间去处理，一般应该是无穷多解。 r &lt; m 且 r &lt; n 行最简形。$R=\begin{bmatrix}{I}&amp;{F}\\{0}&amp;{0}\end{bmatrix}$无解或者无穷解。 线性相关性首先要说明的是，我们说向量组是线性无关的，而不是矩阵线性无关。我们说向量组的基，而不是矩阵的基。 线性无关定义如果不存在线性组合结果为零的组合，向量组线性无关 扩展1如果向量组中存在一个零向量，它们不可能线性无关。证明略。 扩展2平面内任意三个向量都是线性相关的。证明代数法。构造一个矩阵A，各列分别是平面内向量，构造一个2X3的矩阵，对于这个矩阵我们可以找到自由变量， 因而存在列向量C$[c_1,c_2,c_3]$有非零解，使得$AC=0$换句话说，向量组是否线性相关，和零空间是否有零向量之外的向量有关。 与零空间的关系向量组线性无关，零空间里只有零向量。线性相关，则零空间内存在一些向量c。 与秩的关系列向量组线性无关时，秩就是n，所有列都是主列。自由列的本质是对主列的一种组合， 在线性相关时，秩小于n，有自由变量，有相应的非零组合，零空间里有其他向量。 生成空间定义$v_1,v_2…v_n$ S指的是包含这些向量所有线性组合的最小一个空间。我们关注这样的向量组，既可以生成空间，又是线性无关，这样的一组向量称为基。 基的定义指的是一系列向量（个数足够又不太多），特性一：线性无关。特性二：能生成整个空间。 example1给一组三维空间的基 ，$(1，0，0) (0，1，0) (0，0，1)$，它们线性无关，因为单位阵乘以特定向量得到0的情况只有一种，就是乘以一个零向量。即单位阵的零空间只有零向量。 example2$(1，1，2)(2，2，5)$不能形成三维空间，其是列空间的基，形成R3中的一个平面。需要再加一个特定向量才能形成三维空间，但不能加$[3,3,7]$，因为加入之后三者共面，只要取不在这平面上的任意向量就像，比如[3,4,8] 。 想确定确定它们构成基，可以把它们组合成矩阵消元，看是否都是主列。 example3如果空间是$R^n$，则形成这个空间所需要的基向量的个数是n个。 $R^n$空间的n个向量如果想构成基，那这个$n*n$的矩阵要满足可逆条件。 维数的定义对于特定空间，比如$R^3、R^n$列空间、零空间，其基向量的个数都相同。个数表示此空间的大小。称之为维数。维数等于矩阵秩的数目，等于主列的数目。 零空间的维数是自由变量的数目。已知秩r，m*n矩阵，即维数n-r 四个基本子空间(核心章节)四个基本子空间：零空间$N(A)$，列空间$C(A)$，行空间$R(A)$= $C(A^T)$,A转置的零空间$N(AT)$，又称为A的左零空间。这里可以专门处理列空间。以下假设A是m*n矩阵。则有如下结论。 行空间在n维实空间里，维数是r，一组基是行最简形的前r行(秩数行)。 零空间在n维实空间里，维数是n-r，一组基是特殊解。(特殊解是在零空间中，每个自由变量可以得到一个特殊解) 列空间在m维实空间里，维数是r，一组基是r的主列。 左零空间在m维实空间,维数是m-r，一组基是特殊解 它们的关系如下图所示，这里把空间画成垂直的是有特别的含义的，代表着正交，互相垂直的两个空间，维数之和又和行数、列数一一对应，相当于行空间和零空间分割了n维空间，真是奇妙。 以下图为核心进行分析 行空间经过初等行变换后，形成单位阵，自由列，全零行的组合，注意R的列空间和A的列空间不同（R是A转变的），但行空间不发生改变（改变后的最简形的行也是线性组合得出来的），所以其基是前r列。 左零空间$A^Ty=0$ ，y就在左零空间里。两边转置，$y^TA=0^T$，$y^T$是一个行向量，因此也叫做左零空间。由A求最简形R，一般做法是构造矩阵[A,I]对前面一部分消元，得到R，I记录了行变换，变成了E。所有这些初等行变化等价于左乘一个E，即$EA = R$。对照左零空间的变换式，想找的是让行空间产生全零的向量，而这个向量可以通过E得到，进而得到左零空间的维数，在本个例子，它是E的最后一行，这个左零空间维数是1。 不必掌握四个空间的推导，我的习惯是掌握列空间和零空间的定义，另外两个空间只是对应的转置而已。 矩阵空间(待续)]]></content>
      <tags>
        <tag>机器学习</tag>
        <tag>线性代数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[走路]]></title>
    <url>%2F%E5%9C%A8%E8%B7%AF%E4%B8%8A.html</url>
    <content type="text"><![CDATA[一个男人要走过多少路，才能被称作男人 - -鲍勃迪伦。这是《龙族V》的第一章，我看到它才想起了它。 假设我变成了全知全能的上帝，俯瞰我到目前为止的人生，光阴长河中每个时间我都会在一个点，连接不同的点就是路。 这条线粗一些，应当是小学走过的路，六年，一千遍，单程十五分钟，那时总嫌回家太慢，心里默默数着到家需要的步数，数着数着就跑了起来，拐了一个弯又下了一个坡，离午饭和动画片也越来越近了。长大后我重新踏上那条走过无数遍的路，无他，唯有回想那时在想什么而已。十多年过去了土路铺上了水泥，沟渠修补后变得更结实，但我却不敢再在上面跑，也不敢再闭着眼走了。两旁的麦田倒还没变，风吹起时依然是浪花滚滚。 这边一条细线有阴郁的黑色，应该是一次从宝丰聚餐后回家的路。因为正处于大三，医学、德语、汽车专业课三方会战，一年下来，憔悴不堪，于是在见面时被几次善意调侃。下午无处可去，相约去KTV唱歌，我五音不全，历来都是坐在角落吃各种零食碎嘴，含笑听着，但最亲密的朋友还是让我唱，拒绝的次数多了就显得我过于格格不入，拿起话筒唱了什么歌忘记了，只记得搞笑且心酸的心境。那晚回到城里，天已沾黑，公交停班，手机没电没法让父母接我，心里也有一股莫名的意气在，于是打算走着回家，大致十公里的路，两边是静静站着的玉米和稀落的露出微光的房子，身后大卡车轰隆隆地驶过来，车灯的光切开黑暗又消失在夜中。我在路上走着，平静的与自己对话。我问自己是否与班级格格不入，问最亲密的一群人之间是否也要有那些酒文化的规矩，问自己是否过于敏感，对别人的善意调侃反应太过。那次问路于己并没有得出答案，只记得暗暗起誓，从此再也不去KTV。 这边也有一条细长近乎于无色的线，那是从爸爸新工作的地方回家那次，手机没电无法定位，又因为地处之偏近乎于山，这对我而言是完全陌生的地方。问路上阿婆情况，在得到三里路的答案后，甩开袖子上路，路旁都是参天杨树，只有很少的人，我走到天黑，走到月亮升起，走到腿疼又不疼又疼，走到大学到小学同学在我脑海里轮番登场一次，走到天荒地老。回来后查地图，才发现约莫有二十公里。我每次想到这次走路，就会有一种战栗的警醒，它太像我现在甚至以后的人生。从一个陌生的地点出发，目标是回到自己的熟悉区，路上不断安慰自己下一分钟就该看到熟悉的路口，但实际上是一次又一次的失望，中间几次躁动不安，但终究变得平静，一步步朝着不知还要走多久的终点，埋头前行。 还有那十几个小时的绿皮火车，硬座是很折磨人的东西，一路都得和困倦战斗，几年来我想了无数方式，看喜剧电影，读悬疑小说，观车内人物百态，或者盯着窗外看一闪而过的风景。等到夜深人静时，整个车厢里都安静了，每个人都会有自己的睡姿。不管再怎么别扭，自己也会沉沉睡过去了。等到天明，若是归家，接下来就是长途大巴，若是回校，则是漫漫地铁。旅程始终没有终点，结束也是才刚开始而已。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据可视化 | 工具]]></title>
    <url>%2F%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-%E5%B7%A5%E5%85%B7.html</url>
    <content type="text"><![CDATA[设计静态数据图，需要R和Illustrator。想创建可交互图表，可以试试JavaScript和Flash。数据可视化始终是离不开工具的。 这是数据可视化整理的第二篇，历史文章如下表。数据可视化 | 开篇 开箱即用的工具这些工具只需鼠标操作无疑十分便捷，但随之而来的却是丧失一定的灵活性。而且不能自动化你的工作流程。 Excel。 Excel虽然不适用于深度分析，但可以用它快速处理一些小型数据帮忙找到直觉。 Google Spreadsheets。相当于Excel的云版本，但有共享优势，且提供了众多图表类型。 Many Eyes。可识别csv文件。擅长处理大型数据集，可视化数据图是可交互的。有单词云和单词树等不断创新的可视化操作。 Tableau Software。 提供了许多可视化交互工具，在数据管理方面表现良好。 编程工具不同语言之间是有取舍的，有些语言善于处理大量数据，有的擅长提供更好的视觉效果，有的擅长提供交互功能，最终还是看你的诉求是什么。至于学习，可以专精一道，也可以遍地开花，学习新语法可是很有趣的。 Python。 善于处理大批量数据；语法易学易读；美学方面一般。 PHP。 开源且在Web上预装，易使用；GD图形库、Sparkline库功能强大；一般和MySQL联合使用。 Processing。 适合于设计师与数据艺术家的开源语言；能快速上手，轻量级；要使用Java； Flash和ActionScript。 网上大多数可交互的动画数据图都是通过其开发的；Flash设计图形，ActionScript控制交互；ActionScript安装和代码组织较困难。 HTML、 JavaScript和CSS。 类似于Flash和ActionScript的功能；相比上面有更多的开源库； R。 图形功能强大，统计学家喜欢；工具包较多；不适合动态网页；在搜索时建议用“r-project”作为关键词。 学习编程消耗的主要是时间资源，但掌握了以后这会给你带来无穷的好处，编程技巧会随着每一次的项目飞速提高的。 绘图软件绘图软件的优势在于你可以更好地控制单个元素，而且只需要鼠标操作。你可以随心所欲地改变柱形图的颜色、调整坐标轴的宽度或者添加注释。 Adobe Illustrator。 AI是设计业界的标准；使用矢量图形，不易失真；丰富的（灵活的）功能带来了丰富的界面；价格昂贵（有破解版） Inkscape。 是AI的免费开源版本。 地图绘制工具 Google、Microsoft地图。最容易的在线工具，不过需要一定的编程技巧；提供了基于js和Flash的API以及一些其他地理相关服务；有充足的教程和代码片段。 ArcGIS。桌面地图软件，可以在用户界面里完成所有工作，不用写代码；可以处理大量数据；是专业的地图工具。 Modest Maps。 由Falsh和ActionScript区块拼接地图函数库，且支持Python；更像是一个框架，方便创建在线地图；免费； Polymaps。 像JavaScript版本的Modest Maps；相比后者只能进行基础地图绘制，Polymaps提供了一些内置功能；更轻便，所需代码更少，可在浏览器内原生运行。 R。提供的工具包可以绘制地图；相关文档不详细，只在数据简单时用它创建地图。 在线工具。类似简化版ArcGIS；免费的有Many Eyes和Geocommons，可处理shapefile和KML等常见地理文件格式。付费的有Indiemapper和SpatialKey，前者更适合制图员和设计师，后者适合业务分析和决策制定。 总的来说，ArcGIS功能丰富，但只需要创建简单地图就不需要去学习复杂界面。如果希望创建在线的，可选Modest Maps和Polymaps，只不过需要更高编程技能。很多人习惯使用一个软件，但真正能解决各种问题还是需要混合使用，没有哪个是通用的。另外，只有动手操作才能进步，一直停留在理论阶段是很蠢的。]]></content>
      <tags>
        <tag>数据可视化</tag>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[言不可及 | 寝室遐思]]></title>
    <url>%2F%E5%AF%9D%E5%AE%A4%E9%81%90%E6%80%9D.html</url>
    <content type="text"><![CDATA[在这样的雨夜里，过去和现在总是会绕在脑海里，分不清，辨不明，有点温馨，有点平静。 嘉定初夏的夜晚，室外的温度二十四五度的样子，有一点风，阳台外蛙声虫声一片。 好久没有五感如此清晰的时刻了，斜对面室友的桌面很凌乱，台灯的光下像一副抽象画，另一个室友在刷牙，电动牙刷的声音很好听，像海上长鸣的汽笛，又像遥远的火车轰鸣。 这声音总让我想起小时候。那时候爷爷奶奶在铁路站工作，每次火车来了，我就跑出去想数清火车有多少节。回来后爷爷总会问我”有多少节呀” 我总是随便编一个数字”43节”，爷爷说”对！”之后我们俩就对着哈哈大笑。我到现在也不知道到底是不是四十三节，我到现在也没问。 过了好几年，他不在铁路站工作了，我也上了初中，时光总是流的很快，童年更是一眨眼间。 爷爷很喜欢看节目，但他有选择困难症，打开电视后，节目调来调去不带停的，每个节目平均停留时间一般只有几十秒，他对节目总是很挑剔。但某天我发现他竟然对少儿频道有所偏爱。观察过几次后，我看到了真相，他只是对一个节目有所偏爱罢了。托马斯和他的朋友们，讲的是一个小火车的故事。 那时距离他离开火车站已经有八年。那时离这时也大概八年。那时的他坐在沙发上看着小火车，这时的我躺在床上写着那时候，我们都沉浸在过去里，沉浸在追忆里，沉浸在那种不可言说的情绪里。 我现在的怀念里有六十多岁呵呵笑的他，他那时的回忆里应该也有十几岁哈哈笑的我吧。 在这样的雨夜里，过去和现在总是会绕在脑海里，分不清，辨不明，有点温馨，有点平静。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DeepTest-面向深度学习的测试]]></title>
    <url>%2FDeepTest-%E9%9D%A2%E5%90%91%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E6%B5%8B%E8%AF%95.html</url>
    <content type="text"><![CDATA[这是一篇非常优秀的论文，主要论述了面向基于深度学习的自动驾驶系统的测试方法。内容较为丰富，展开很有条理，稍微有一些深度学习和自动驾驶的基础就能读懂。作者观点也极有启发性，很多都可以作为以后科研的灵感。因此我翻译了这篇论文，希望能和大家多多交流。 摘要最近，深度神经网络(DNN)的发展促进了由DNN驱动的自动驾驶汽车的发展，使用像照相机、激光雷达等传感器可以在不需要人工干预的情况下开车。包括特斯拉(Tesla)、通用汽车(GM)、福特(Ford)、宝马(BMW)和Waymo/谷歌在内的大多数主要制造商都在研发和测试不同类型的自动驾驶汽车。包括加州、德克萨斯和纽约在内的几个州的立法者通过了新的立法，以快速跟踪在道路上测试和部署自动驾驶车辆的过程。 然而，尽管已经取得了惊人的进步，但与传统软件一样，DNN往往表现出不正确或意想不到的个别案例行为，这可能导致潜在的致命冲突。在真实世界里已经发生了一些相关事故，其中包括一个导致死亡的事故。大多数现有的基于DNN驱动的车辆的测试技术都严重依赖于不同驾驶条件下的测试数据的手动采集，随着对测试条件需求增加，资源的压力越发变大。 在本文中，我们设计、实现和评估了DeepTest，这是一种系统的测试工具，用于自动检测可能导致致命事故的DNN驱动的车辆的错误行为。我们的工具利用现实世界的变化，例如雨、雾、光照条件等来自动生成测试用例。DeepTest通过生成能最大化激活神经元的数量的测试输入来系统地探索DNN逻辑的不同部分。DeepTest在不同的现实驾驶条件下(例如，模糊、下雨、雾等)找到了数千种能导致DNN出错的行为，其中许多导致了在Udacity自动驾驶汽车挑战中三个顶级的DNN潜在的致命事故。 关键字 深度学习，测试，自动驾驶汽车，深层神经网络，自动驾驶汽车，神经元覆盖。 介绍在过去的10年里，像DNN这样的机器学习技术的进步使得像自动驾驶汽车这样的安全关键的ML系统得以发展。包括特斯拉(Tesla)、通用汽车(GM)、福特(Ford)、宝马(BMW)和Waymo在内的几家主要汽车制造商都在积极测试这些车型。最近的研究结果显示，自动驾驶汽车在实践中已经取得了很多进展，在没有任何人类干预的情况下已经行驶了数百万英里。包括加利福尼亚、德克萨斯和纽约在内的20个州最近也通过了一项法案，允许自动驾驶车辆的测试和部署。 然而，尽管取得了巨大的进步，但就像传统的软件一样，基于DNN的软件，包括用于自动驾驶的软件，经常会显示出不正确/意想不到的行为，从而导致危险的后果，比如致命的碰撞。例如，致命的特斯拉撞车事故是由于未能在明亮的天空中发现一辆白色卡车。现有的检测这些错误行为的机制，很大程度上依赖于手工收集标记的测试数据或特定的、不受控的模拟（unguided simulations）因此忽略了大量的个别案例。由于这些汽车根据不同的传感器(如相机、红外障碍探测器等)对其环境的适应行为，可能输入的空间非常大。因此，不受控的模拟很难找到许多错误行为。 在概念层面上，基于DNN的软件中的这些边缘错误用例（corner-case）类似于传统软件中的逻辑错误。与传统软件开发中的bug检测和补丁周期类似，一旦检测到DNNs的错误行为，可以通过将错误诱导输入添加到训练数据集，并进一步改变模型结构/参数，从而使其失效。然而，这是一个具有挑战性的问题，如谷歌和特斯拉这样的大型软件公司所指出的，他们已经在包括自动驾驶汽车、语音识别、图像搜索等在内的几个生产规模系统中部署了机器学习技术。 我们使用传统软件的经验表明，只使用手工测试用例构建健壮的安全系统是困难的。此外，传统软件和基于DNN的软件的内部结构也存在着根本性的差异。例如，传统的软件程序逻辑是由软件开发人员手工编写的，而基于DNN的软件会自动从大量的数据中学习它的逻辑，并以最少的人为指导。此外，传统程序的逻辑是用控制流语句来表示的，而DNNs在不同的神经元之间的边缘使用权值，而非线性激活函数则用于类似的目的。这些差异使得基于DNN的软件的自动化测试具有一些有趣和新颖的研究问题。 首先，传统的软件测试技术通过最大化分支/代码覆盖率来系统地探索程序逻辑的不同部分，这对于基于dnn的软件来说是不太有用的，因为其内在逻辑没有使用控制流进行编码[70]。 其次，DNNs与用于建模和测试传统程序的模型有本质的不同。跟传统的模型不同，由于DNNs所模拟的函数的非线性的，在DNN中寻找导致高模型覆盖的输入是更具挑战性的。 另外，已经成功地解决 为传统软件生成高覆盖率测试输入的模块理论(SMT)求解器在涉及浮点算术和高度非线性约束的公式中问题很乏，而这些公式恰巧通常用于DNNs。事实上，已经有几个研究项目已经尝试建立定制工具来正式验证DNNs的安全性能。不幸的是，它们中没有一个能很好地适应真实世界的DNNs[48, 51, 71]。 最后，手动为复杂的DNN系统(比如自动驾驶汽车)创建专门的代码是不可行的，因为逻辑太复杂，无法手工编码，因为它涉及到模拟人类驱动程序的逻辑。 在本文中，我们讨论了这些问题并设计了一套系统的测试方法，用于自动检测无人驾驶汽车的基于DNN的软件的错误行为。 首先，我们利用了神经元覆盖的概念。，通过一组测试输入激发的神经元数量，系统地探索DNN逻辑的不同部分。我们从经验上证明，神经元的覆盖率变化与自动驾驶汽车(如转向角)的变化有统计学关联。因此，神经元的覆盖可以作为某种指导机制系统探索不同类型汽车行为和识别错误行为。 接下来，我们演示了不同的图像转换，比如改变对比度/亮度，相机的旋转，以此模拟现实世界在驾驶条件上的差异，这会导致自动驾驶汽车DNNs中不同神经元的激活。我们表明，通过将这些图像转换结合起来，与人工测试输入的覆盖率相比，神经元的覆盖率可以提高。 最后，我们在测试的DNN的多次实验之间使用转换特定变形关系（例如，汽车在不同的照明条件下应该表现相似），以自动检测错误的转角行为。 在Udacity自动驾驶汽车挑战赛中，我们发现在三个顶级的DNNs中有数千个错误行为。 本文的主要贡献是: 针对围绕安全的DNN的系统(如自动汽车)，我们提出了一种系统的技术，可以自动生成最大化神经元的覆盖的测试用例。我们通过经验证明，神经元的覆盖变化与自动驾驶汽车的行为变化相关。 我们说明了不同的现实图像转换，例如对比度的变化，雾的存在等，可以用来生成增加神经元覆盖率的合成测试用例。我们利用特定关系来自动检测错误行为。我们的实验还表明，合成图像可以用于再训练，并使DNNs对表现出更好的转向效果。 我们在DeepTest中应用了我们所提出的技术，系统地测试了Udacity驱动挑战中的三个顶级DNN模型，发现了数千种错误行为，其中许多错误行为可能导致潜在的致命冲突，如图1所示。 背景自主驾驶深度学习自动车辆的关键部件是由底层深层神经网络(DNN)控制的感知模块。DNN接收来自不同传感器的输入，如相机、光探测和测距传感器(LiDAR)和红外传感器，该传感器测量环境，输出转向角、制动等，以使汽车安全处于安全的低电流状态，如图2所示。本文重点讨论了摄像机输入和转向角输出。 一个典型的前馈DNN由多个处理层组成，它们叠加在一起以提取输入的不同表示。DNN的每一层都越来越抽象输入，例如，从原始像素到语义概念。例如，自动汽车DNN的前几层提取了一些低级特征，如边缘和方向，而较深的层则识别诸如停车标志和其他汽车等物体，而最后几层则输出转向决策(例如，向左或向右)。 DNN的每一层都由一个称为神经元的单个计算单元组成。不同层次的神经元通过边缘相互连接。每条边都有相应的权重(图2中所示)。每个神经元在其输入上应用一个非线性激活函数，并将输出发送给后续的神经元，如图2所示。受欢迎的激活函数包括ReLU(整流线性单元)，sigmoid等。DNN的边权值在DNN的训练过程中根据标记的训练数据进行推断。大多数现有的DNNs都是通过反向传播的梯度下降来训练的。一旦训练完毕，DNN可以用于预测，而不会对权重进行任何进一步的改变。 图2展示了自动驾驶汽车感知模块中的一个基本DNN。本质上，DNN是一个线性变换(例如，每条边的权重参数之间的点积和该边缘的源神经元的输出值)和非线性激活(例如，每个神经元中的ReLU)的序列。最近的研究结果表明，经过良好训练的DNN f可以准确地预测与人类驾驶员接近的转向角。 不同DNN的架构自动车辆中使用的大多数DNNs可以分为两类:前馈卷积神经网络(CNN)和**递归神经网络(RNN)。我们测试的DNNs(见第4节)包括两个CNN和一个RNN。我们提供了下面每个架构的简要描述。 CNN的架构一个CNN和一个完全连接的DNN之间最大的区别就是一个卷积层的存在。卷积层的神经元只连接到下一层的某些神经元，而不同神经元之间的多重连接也有相同的权重。共享相同权重的连接的集合本质上是一个卷积核。它对上一层的一组神经元的输出应用相同的卷积运算。图3(上一行)演示了三个卷积层的卷积运算。这种简化的体系结构与实践中使用的体系结构类似。 卷积层有两个主要好处。首先，他们通过允许在多个连接之间共享权重，从而极大地减少了可训练的重量，从而显著缩短了训练时间。第二，卷积核的应用是一种自然的图像识别技术，因为它类似于人类视觉系统，它提取视觉输入的分层表示。 RNN的架构与CNN不同，RNN允许在网络中循环。具体地说，每一层的输出不仅被馈送到下一层，而且还流回上一层。这样的安排使先前输入的预测输出(例如，视频序列的先前帧)也能被考虑用于预测当前输入。图3(下一行)演示了一个简化版本的RNN架构。与其他类型的DNN类似，RNN也利用梯度下降和反向传播进行训练。然而，众所周知，当在RNN中通过多个循环传播时，梯度可能会消失到零或爆炸到非常大的值，因此可能导致一个不准确的模型。长短时记忆(LSTM)，一种流行的RNN子群，旨在解决这个消失/爆炸的梯度问题。 方法我们简要地描述了DeepTest是如何处理下面这些问题的。 如何系统地探索无人驾驶汽车DNN的输入-输出空间? 如何综合现有的实际输入来实现自动化的探索? 如何优化这个过程? 自动创建一个可以检测错误行为的测试oracle，而不需要详细的手工指定? 神经元覆盖的系统测试。输入输出空间(即一个复杂系统的输入和输出的所有可能的组合）对自动车辆穷尽的探索来说不可能。因此，我们必须设计一种系统的方法，将空间划分为不同的等价类，并通过从每个等价类中选取一个样本来试图覆盖所有等价类。在本文中，我们利用神经元的覆盖率作为一种机制来划分输入空间，假设所有具有相似神经元覆盖的输入都属于相同的等价类。 神经元的覆盖最初是由Pei等人提出的，用于对多个相似的DNN进行导差测试。它被定义在给定输入下，被激活的神经元DNN中神经元的总数量唯一的比值。 如果神经元的输出(由整体层的输出按比例放大)大于dnn的阈值，则认为单个神经元被激活。在本文中，我们使用0.2作为我们所有实验的神经元激活阈值。 与传统软件的代码覆盖导向测试工具类似，DeepTest试图生成能最大限度地增加测试DNN的神经元覆盖率的输入。因为每个神经元的输出影响都会影响DNN的最终输出，最大化神经元的覆盖也会增加输出的多样性。我们在第5节中实证地证明了这一效应。 Pei等人对神经元的覆盖范围仅限于CNN。我们把定义进一步推广到了了包括RNNs在内依赖于对应层的类型的神经元，可以产生不同类型的输出值(即在多维数组中组织的单个值和多个值)。 对于全连接层中的所有神经元，我们可以直接将它们的输出与神经元激活阈值进行比较，因为这些神经元输出单个标量值。 相比之下，因为每个神经元在输入空间里都应用了卷积核卷积层中的神经元输出多维特征映射。 例如，图3.1中的第一层说明了在整个图像（5×5）上应用一个卷积核（大小为3×3），在后续图层中生成大小为3×3的特征映射。 在这种情况下，我们计算输出特征映射的平均值，将神经元的多维输出转换为标量，并将其与神经元激活阈值进行比较。 对于带循环的RNN / LSTM，中间神经元展开产生一系列输出（图3.2）。 为了神经元覆盖计算的目的，我们将展开层中的每个神经元视为单独的神经元。 增加合成图像的覆盖率如果输入不太可能出现在真实世界中，即使这些输入可能表现出错误行为，那么生成最大化神经元覆盖率的输入可能也不是很有用。 因此，DeepTest专注于通过在种子图像上应用图像转换来生成逼真的合成图像，并模拟不同的现实世界现象，例如相机镜头失真，物体移动，不同的天气条件等。为此，我们调查了九种不同的真实图像转换 亮度，对比度变化，平移，缩放，水平剪切，旋转，模糊，雾气效果和雨水效果）。 这些转换可以分为三组：线性，仿射，和卷积。 正如第5节所述，我们的实验结果表明，所有这些转化都会显着增加神经元对所有测试DNNs的覆盖率。下面，我们将描述转换的细节。 调整亮度和对比度都是线性变换。 图像的亮度取决于该图像的像素值有多大。 图像的亮度可以通过对每个像素的当前值加/减一个常数参数β来调节。 对比度表示图像中不同像素之间亮度的差异。 可以通过将每个像素值乘以恒定参数α来调整图像的对比度。 平移，缩放，水平剪切和旋转都是不同类型的仿射变换。 一个仿射变换是两个图像之间的线性映射（旋转+平移）。 在图像处理中经常使用仿射变换来消除摄像机角度变化造成的失真。 在本文中，我们利用反转变换来反演，即模拟不同的真实世界相机视角或物体的移动，并检查自驱动DNN对这些变化的鲁棒性。 模糊和增加雾/雨效应都是卷积变换，即它们使用不同的变换特定内核对输入像素执行卷积运算。 卷积操作将输入图像的每个像素（由内核加权）添加到其本地邻居。 我们使用四种不同类型的模糊滤波器：平均，高斯，中位数和双边。 我们在输入图像上组合Adobe Photoshop提供的多个滤镜，以模拟逼真的雾和雨效应。 结合转换增加覆盖率单个图像变换增加神经元覆盖率，一个显而易见的问题是它们是否可以组合以进一步增加神经元覆盖率。 我们的研究结果表明，不同的图像转换倾向于激活不同的神经元，即它们可以堆叠在一起以进一步增加神经元覆盖。 但是，不同变换的所有可能组合的状态空间太大而无法彻底探索。 我们提供了神经元覆盖引导的贪婪搜索技术，可以有效地找到影像转换组合，从而获得更高的覆盖率（请参阅算法1） 该算法将一组种子图像I，变换列表T及其对应参数作为输入。 该算法背后的关键思想是跟踪成功增加给定图像的神经元覆盖范围的转换，并根据给定图像生成更多合成图像的优先次序。这个过程以深度第一的方式重复所有图像。 在测试基于DNN的复杂系统（如自动驾驶汽车）时面临的主要挑战之一是手动创建系统的规格/规范/格式，以便对系统的行为进行检查。为这样的系统创建详细的规范是具有挑战性的，因为它基本上涉及重建人类驾驶员的逻辑。 为了规避这个问题，我们利用在汽车行为在不同合成图像之间的变质关系(metamorphic relations)。这里的关键是，即使很难为每个转换后的图像指定自动驾驶汽车的正确行为，人们可以确定汽车面对某些类型的转换中时，所表现的行为之间的关系。例如，自动汽车的转向角度不应该在任何照明/天气条件下，模糊，或任何带有小参数值的仿射转换时，在相同的图像上变化。 因此，如果DNN模型推断输入种子图像$I_{o}$的转向角$\theta_{o}$和通过将变换$T$应用于$I_{o}$而生成的新合成图像It的转向角$\theta_{t}$，则可以定义简单的变形关系，其中$\theta_{o}$和$\theta_{o}$是相同的。 然而因为汽车可以安全地容忍小的变化，对于给定的图像通常没有单个正确的转向角度。 因此，非常严谨的地确定变质关系的话（如上所述）（可能导致大量误报）如果让关系更宽容（可能导致许多假阴性）之间存在权衡关系。 在本文中，我们通过使用下面定义的变形关系在这两个极端之间取得平衡。 为了最大限度地减少误报，我们放松我们的变形关系，并允许原始输入图像的误差范围内的变化。 我们观察到DNN模型对原始图像预测的输出集合${\theta_{o_{1}}，\theta_{o_{2}}，…，\theta_{o_{n}}}$，这里有一写是小的但有意义的的错误对于他们各自的手动标签${\theta_{1},\theta_{2}，…，\theta_{n}}$。 通常使用均方误差（MSE）来测量这样的误差， 利用这个属性，我们重新定义了一种新的变形关系 MSE_{orig}=\frac{1}{n}\sum_{i=1}^{n}(\hat\theta_{i}-\theta_{o_{i}})^2上述等式假设作为输入的变换图像的模型产生的误差应该在 由原始图像集产生的MSE的λ倍的范围内。 在这里，λ是一个易于理解的参数，可以让我们在假阳性和假阴性之间取得平衡. (\hat\theta_{i}-\theta_{o_{i}})^2]]></content>
      <tags>
        <tag>自动驾驶</tag>
        <tag>测试</tag>
        <tag>深度学习</tag>
        <tag>机器学习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[猫咪]]></title>
    <url>%2F%E7%8C%AB%E5%92%AA.html</url>
    <content type="text"><![CDATA[以后一定要和小燕子一起养一只猫的。 (一)从西苑吃饭回来，看见一只黄猫站在铁门旁边探出半边身子往外看，虎头虎脑的样子很可爱。我们不知道它在看什么，就稍稍留了下心。走过十步路左右，才看到蔓藤下面有一只小狗，耳朵软软的，爪子大大的，也是橘黄色，很庄重的蹲在那里，凝视着猫的眼神也很认真。那时候还是大二，跟老于他们相处的不能再愉快，一晃两年过去，再也没见到那么融洽的室友了。 昨天聚餐因为车展没去成，心里遗憾到发空。 (二)寝室楼前这只暗花的猫没有那几只橘猫疯，别的橘猫都不见影了，就它还是乖乖蹲在寝室门前，像小号的镇宅狮子。它很喜欢被摸下巴，被动下巴时会发出咕噜噜的声音，也喜欢用头追着你的手蹭，不过爪子总是站在原地一动不动，热情有了，高冷也还在。 晚上回来的时候看到它，我这张胖脸总会露出微笑。 (三)嘉定有一块儿地，是饮食区和学习区的枢纽，人流量很大，战略位置极为重要。这块儿地有个霸气的名字，名为新天地。新天地有一个霸气的领袖，就叫大胖猫好了。 这只喵近人但不缠人，它本来应该不是高冷的性格，但来来往往太多人的喜欢把它给惯坏了。呆在这块儿风水宝地，大胖根本不愁吃，它也不知道收敛着吃是什么，因而被路人喂成了一只球形猫。 有一天傍晚，我路过喷泉，看到一个女生坐在木椅上举着它的两只爪子把它抱在怀里，它很不情愿的站着，很无奈但又懒得动的样子。那个爱猫的女生很小只但猫咪很大只，有风起，寿司店旁边的树叶子落了一两片，那是我最想学习摄影的时候，因为有些美时间长了真的容易忘记。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶仿真整理]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E4%BB%BF%E7%9C%9F%E6%95%B4%E7%90%86.html</url>
    <content type="text"><![CDATA[在实际路测时，袋鼠往车上跳，天上下冰雹都是可遇不可求的，所幸自动驾驶仿真可以帮助车辆遇到这些场景。 自动驾驶仿真背景为了能够安全可靠地驾驶，自动驾驶汽车需要识别小汽车、卡车、摩托车、自行车、人、交通灯、路标，以及所有可能会出现在或靠近道路上的交通对象。他们还必须在各种天气和照明条件下完成这项工作。因而开发自动驾驶汽车的公司需要花费大量的时间和资源来收集数据，用以训练系统，从而获得应对各种可能发生的情况的经验。 在大多数情况下,这种技术都需要人类数据集进行注释,再用机器学习算法训练，但这会耗费巨大的人力物力，使用模拟数据则可以节省大量的资源。 仿真优势 相比通过在真实的道路上拍摄视频，仿真数据产生更快、成本更低。 在仿真中，注释很容易获得，因为游戏能提供对象列表。 仿真可以提供大量的测试场景，极大的拓宽了测试的参数空间。比如，同济大学嘉定校区的天气条件有限。但在仿真中，可以给嘉定随时提供雨雪冰雹或其他东西。 仿真支持在很多不同的条件下使用相同的场景进行训练，相同条件下的重复试验可以更有效地帮助迭代算法。 在实际进行仿真训练时，单仿真图像的变异值和训练值一般低于单真实图像。现实世界中的光照、颜色和纹理变化都比仿真数据的要大，因此需要更多的仿真图像来实现合理的性能。关键就在于生成仿真图像只需要计算资源，一旦云基础设施就位，就可以生成任意数量的映像。从单个模拟的图像中不好得到更多价值，但质量可以通过数量补足，这是一种资源密集型的思路。 经过模拟训练的网络上更善于识别距离较远或难以看清的汽车等，也更善于避免误报。换句话说，它更善于处理极端（边缘）情况，这可能是因为这些仿真数据能为训练提供更多样化的输入。 仿真劣势计算机仿真有自己的局限性，因此对仿真结果的权威性我们应该持谨慎态度。仿真在某种程度上简化了真实世界，在模拟中能正常工作不能保证在现实中正常工作。 模拟与现实世界并不完全相同。 很难模拟难以预测的(紧急)情况，比如2016年5月的特斯拉事故。 解决方案针对上面劣势，关键点之一在于尽可能复制真实世界出现的状况(包括世界物理模型和事故场景)。足够的精度能使汽车有更准确的反应，测试结果也更具有代表性。 使用更为精确的世界物理模型 使用高精度的扫描技术生成真实道路库 制作更逼真的图像（可借助游戏行业） 建立相应的仿真场景库，包括极端场景等。 求职要求仿真工程师（simulation engineer） Nvidia 英伟达（老牌智能芯片公司）：熟悉工业界各种仿真器以及各自的软件构架 Drive.ai（吴恩达老婆的公司）：3年仿真器或者3D游戏编写经验 Toyota Research Institute丰田美国研究所：会使用OpenGL或Direct3D获得实时数据 Uber优步：熟练运用C++11、C++14语言]]></content>
      <tags>
        <tag>自动驾驶</tag>
        <tag>总结</tag>
        <tag>自动驾驶仿真</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶高精度地图总结]]></title>
    <url>%2F%E9%AB%98%E7%B2%BE%E5%BA%A6%E5%9C%B0%E5%9B%BE%E6%95%B4%E7%90%86.html</url>
    <content type="text"><![CDATA[在我个人看来，想实现L4及以上级别的自动驾驶，高精度地图是不可或缺的，因为它能提供很多安全冗余。 背景自动驾驶的终极话题是安全，因而冗余性和鲁棒性无论何时都需要考虑。传统提高鲁棒性的技术手段有多传感器融合，典型的如相机、激光雷达、毫米波雷达的融合。这种融合技术比较偏向动态的感知，而高精度地图对鲁棒性的贡献主要在静态感知层面，它能解决很多单靠传感器和规划技术不能解决的问题。在我个人看来，想实现L4及以上级别的自动驾驶，高精度地图是不可或缺的。 概念高精地图是用于自动驾驶的专题地图，包含更多图层和道路数据且有不同的分类方法，方法之一将地图划分为矢量的语义信息层和栅格图这样的特征图层。前者主要是包括车道模型、道路部件（Object）、道路属性三类语义矢量信息，后者主要是用于多传感器定位的特征（feature）图层。 车道模型一般包括车道线、车道线曲率、坡度、车道中心线、车道连接、车道属性变化、车道分组。 道路属性包括车道数、失锁区域、道路施工状态等 道路部件包括符号、收费站、交通灯、交通标志、斑马线、停止线、隧道、路缘石、防护栏、障碍物、龙门架、桥梁、交通区域、杆等 特征图层一般也是传感器图层。有激光定位图层。 方法二主要分为道路网，车道网，安全辅助数据和道路交通数据。其组成如图 道路网道路网主要是由道路基准线网络构成，用于描述道路的几何形态、表达与道路设施间的关系。高精度道路导航地图道路网示意图，它包括道路基准线、道路基准线连接点和路口等图层。 车道网车道网记录路网中每个独立车道的相关属性，用于车道级的道路显示、定位、路径规划和驾驶策略辅助。它包括车道级道路、车道级道路连接点、车道级道路形状点等图层。 安全辅助数据和道路交通设施数据其是对车道安全数据和车道上的其他交通设施进行描述，用于辅助车道级定位和显示，例如曲率、航向、纵横坡度等。道路交通设施数据则包括交通标识、路侧设施和固定地物等信息。 功能有一些人类能轻而易举完成的驾驶任务对自动驾驶却有很大的挑战，一些挑战必须在高精度地图的帮助下才能完成任务。如 判断可行驶区域。如在大广场和在典型道路区域内可行驶区域是不同的，单靠激光雷达和摄像头只能在物理层面上确定可行驶区域。 判断行驶方向。有的道路没有车道线，还有的城市潮汐车道。 判断目标类型。实际十字路口前有无人行横道对规划的影响比较大。 判断自身位置。判断自己身处于哪儿是自动驾驶的前提，高精度地图地位可以作为一种定位的冗余手段。 判断前车相对位置（其他交通参与者的状态）。如路边行人下一步究竟可能会有什么操作？高速公路上一百米外是否有车与自己处于同一车道？ 判断红绿灯状态。单纯用视觉红绿灯容易和车灯尾灯混淆，但这用高精度地图确是一个比较容易解决的问题。 探知前方坡度、曲率、横坡。这些都是摄像头很难处理的问题，比如上坡下坡在摄像头中可能是曲线。 获得超视距的感知能力。在使用高精度地图后，能知道前方几百米内出现的对象。 建立方法与标准与计算模式高精度地图的建立方法主要有： 通过配备 GPS-RTK 的采集车沿特定线路采集数据 使用激光雷达与广角摄像头结合的方法提取道路信息 通过GPS+INS紧耦合进行定位，从正射影像图中获取相关地图信息 标准： 国际关于地图标准的工作组是ISO TC204/WG3，欧洲有两个地图数据物理存储格式规范组织——NDS与OpenDrive，中国的BAT、日本大部分车厂都已加入了NDS组织。 ADASIS是欧洲另一个标准组织，针对的是地图与车载应用之间的接口，其于2015年12月与NDS联合成立了OADF Forum，对接国际ISO和日本SIP-ADUS。 SIP-adus是日本国内战略性创新创造项目，日本各整车企业、零部件公司、地图厂商联合起来，成立了动态地图公司DMP。 中国自动驾驶地图工作组（CAICV HD MAP WG），刚刚于5月23日得到批准，与NDS（欧洲）和DMP（日本）开展平等合作，并形成数据转换机制。 计算模式：由于高精度地图数据量较大，传统的云计算已经不满足要求，当前的主要计算模式是众包和边缘计算。 众包指高精度道路导航地图的用图者同时也可以是绘图者。通过众包的方式，将数据采集设备装在使用高精度道路导航地图的车辆上，其在行驶时边用图边采集数据，并且将获取到的数据上传，例子如美国的Mapper公司。 边缘计算后者指在网络边缘执行计算的一种计算模型，边缘计算中边缘的下行数据表示云服务，上行数据表示高精度道路导航地图服务，而边缘计算的边缘是指从数据源到云计算中心路径之间的任意计算和网络资源 应用 自动驾驶仿真（VTD仿真软件） 与导航地图关联，进行车辆轨迹引导。人先说目的地，导航地图计算出一条路径传给自动驾驶系统，后者依据高精度地图算出几条可能的车道级路径，在根据优先级随机选择跟随其中一条。 帮助实现定位。 通过激光雷达或摄像头，演出测量物体的距离和大小，系统通过三角关系算出车的位置。 利用道路指纹（地面明显特征，箭头、虚线、污渍等） 基于RTK的绝对定位。 把高精度地图放在云端做匹配 商业 Google高精度地图使用的传感器是多线激光雷达和摄像头，用的数据是车道模型+Object模型。 HERE高精度地图是NDS成员，传感器是多线激光雷达和摄像头，用的数据是车道模型+Object模型。 高德、四维图新、百度、Tomtom、光庭也是NDS成员，它们做的图相似。 挑战 高精度地图涉及标准众多，如下图。各单位所用标准不统一。 我国处于隐私与安全的考虑，对公共地图信息采集与绘制有诸多规定，需要找到合适的平衡点。 传统导航地图有电子地图版本审查和加偏移措施等加密手段，这与高精度道路导航地图之间存在矛盾。 需要及时进行数据更新，采用原始数据采集手段会有过多冗余数据和过高成本，因而必须发展众包。 车用高精度基础地图数据的模型、结构、接口、标准、规范以及动态地图数据共享体系、机制、方法、协议、接口需要研究]]></content>
      <tags>
        <tag>自动驾驶</tag>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[英语学习记录]]></title>
    <url>%2F%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95.html</url>
    <content type="text"><![CDATA[我的英语实在是太差了，我深深知道它的重要性却没有做好它，这让我感觉不好。不管怎样，开一个专门的英语学习记录吧。 还是那个目的，以记录，以警醒。]]></content>
      <tags>
        <tag>高效学习</tag>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[夏与冬]]></title>
    <url>%2F%E5%A4%8F%E4%B8%8E%E5%86%AC.html</url>
    <content type="text"><![CDATA[我一直在想，自己到底更喜欢夏天还是冬天。 在冬天时，我咬牙切齿地想，夏天嘛，少穿衣服多洗澡就可以了，吃吃西瓜喝喝冷饮也是偶尔的惬意，哪像现在，冷风如刀，刮骨摧面，谁会喜欢这样的天气呢？而且这时节，万物萧瑟，一幅破败景象，任谁也没好心情。 可真到了夏天，冬天有万里飞雪，会以天地为烘炉，融万物为白银？此言谬之，夏天才是真的烘炉，每分每秒那股不把人炼成铁水誓不罢休的劲儿！想以心静自然凉安慰自己，汗出如浆又告诉我现实。于是很自然就会去想，冬天里穿棉衣就好了嘛，烤红薯、火锅吃起来也有情趣。 我陷入迷茫了。夏还是冬，这是第十三道选择题。但仔细想来，夏冬之争是个不成立的问题，对现在的我，不喜冬夏，只爱春秋。但以前，这还真是个问题，什么时候开始变得呢？ 以前的夏天，中午睡在地上的凉席上，头上的风扇晃晃悠悠吱吱扭扭，一边被暖热了，就翻个身到凉的竹子去。一觉醒来，总会有恍若隔世感，爷爷奶奶提前醒了不在房间里，我坐在空空的凉席上，晕晕沉沉的迷糊，先听到大摆钟滴答滴答，再听到高亢入云的蝉鸣，之后才慢慢清醒。这时一般才下午两点左右，于是起床，呼朋唤侣去下河，即使没有鱼虾；爬树去，即使没有果子槐花。 也有时候去打游戏机，游戏确实是是万千男生的梦，即使现在的对任何游戏都提不起兴趣，我依然能理解对游戏的狂热。那时候用的是游戏手柄，我是当之不愧的菜鸟，魂斗罗永远过不了第二关，赤色要塞永远过不了第一关，插卡的游戏机就玩的更糟糕了，但每次依然大呼小叫乐此不疲。即使轮不到我玩，只是看别人过关杀怪就足够满足了。 也会看七龙珠和奥特曼，泰罗，杰克是和孙悟空一个等级的英雄。手持游戏杆，会使双龙决，比着奥特曼的光线手势，嘴里却喊着龟派气功，这样的日子，终究过不去了。 也会在平房顶上睡觉，没有空调，有的是天地之间自然风，没有手机，有的是漆黑夜幕上的繁星。 以前的冬天，爷爷奶奶会生起炉子，以煤球为燃料，煤气会通过管子通到外面，我们围着炉子烤花生和红薯，至味在人间，不过如此。 下雪天也会睡午觉，我在床脚用被子枕头堆起来一个城堡，然后钻进去窝着，雕花的窗户看不清楚外面，只能听雪落在砖头上的轻微声响，听树枝上的雪搭不住时扑棱棱的声音，我在安静的雪声中安心地睡去。 雪夜，南屋外面的灯落在比较厚的雪上，会有一片闪烁的细碎金光，踩在上面有咯吱咯吱的声音。狗子就高兴啦，狂奔、急刹还会漂移，安静不见了，院子里翻起了一片雪雾，响起了一阵欢笑。 长大了，什么都会改变，这是社会发展的客观规律，我不会无病呻吟，也不会沉浸在过去难以纾解。但我确实更浮躁了，离开空调，我一秒难捱，离开手机，我寸步难行，平静这个词似乎也与我断了缘分，这是我失去的东西，不知道有生之年还能不能找回来。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[武功秘籍]]></title>
    <url>%2F%E6%AD%A6%E5%8A%9F%E7%A7%98%E7%B1%8D.html</url>
    <content type="text"><![CDATA[九阴真经和九阳神功，哪个更厉害呢？ 九阴真经，九阳神功，这可以说是金庸武侠里最著名的两本秘籍了，名气上和它能比肩的，也就只有笑傲江湖里的葵花宝典。 这个不能直接比较，但如果分析起来还是蛮有意思的。 从实际效果来看，九阴真经是以实战为主要导向，书中所述大多是实际凌厉的杀招。而九阳神功则以强健自身为最初目的，书中所述效果为提升个人的内力，同时作为基础，能为修习其他武功带来便利。从武学本源来看，九阴真经的基础是道教，而九阳神功的源头是佛教。从产生时间来看，九阴真经的主要流行时间是宋朝，元时随着郭氏没落而消失。而九阳神功则出场于元初，时间基本就是前后相承的关系。 我个人的看法，这两本书是前后相承的，金老爷子的对比意图很明显。 众所周知，九阴真经是黄裳编著的。据书中所述： 宋徽宗于政和年间下旨命令一个聪明的刻书人——黄裳刻写一本道家书籍《万寿道藏》，共分五千四百八十一卷。由于是为皇帝刻书，黄裳怕出错杀头，他花了好几年小心校对，不知不觉便精通了道学，还无师自通领悟了最精深的武功。经过漫长的修练后，成为绝顶武学高手。不久，宋徽宗下旨要黄裳派兵去剿灭魔教——明教。不料，当中高手如云，黄裳遂亲自向明教高手挑战，一口气杀了几个法王使者。哪知道他所杀的人中，有几个是武林中名门大派的弟子，于是被各大派寻仇，黄裳寡不敌众，受伤后逃亡，躲在不毛之地。黄裳仇家随后将他家里的父母妻儿杀了个干干净净。为了避免再受追杀，一一记下了的敌人招式，苦思破解方法。当他想通了，已经过了四十多年，仇家全都死了。他便觉得自己时日无多，便把毕生心血，写成上下两卷的《九阴真经》。 黄裳以所学道家内容为理论基础，以复仇为原动力，加上无可比拟的天赋编写了这本书。在他编写这本书的过程中，满脑子想的就是怎么杀了对方，为家人复仇。因此书中所述有关九阴真经的武功多是以实战为主要导向的。比较著名的有北斗七星阵，九阴白骨爪等，不太著名的有飞絮劲，蛇行狸翻等。 我们再来看九阳神功。九阳神功最初是以强身健体为主要目的的，被夹在佛经楞伽经里。觉远和尚死前念经。彼时座前有郭襄、张君宝和少林寺罗汉堂首座无色禅师，三人各有所悟，之后郭襄、张君宝出家开创峨嵋、武当两派，三人分别开创了少林九阳功、峨嵋九阳功、武当九阳功。在《神雕侠侣》的结尾，尹克西偷走了九阳神功，放在自己的宠物苍猿肚子里，这就是《倚天屠龙记》开头张无忌碰到的奇遇了，他是九阳神功的集大成者。 再提一下创始人，在最新修改版本中，是一位斗酒僧在斗酒胜了王重阳，得以借观《九阴真经》，看后觉得《九阴真经》阴气太重，一味崇扬道家黄老之学，只重以柔克刚，以阴胜阳，未及阴阳互济之妙，于是在四卷梵文《楞伽经》的行缝之中，写下自创的《九阳真经》，其人兼得儒释道三派真谛，有考据党认为此人是虚竹无疑。 结合上面的信息和金老原著，我们可以看出。九阳神功以内基修炼为主要导向。本无武意，反成强音。 从九阴真经到九阳神功，金庸笔下的江湖发生了翻天覆地的变化，武功的主要导向开始由外在的克敌制胜转为内在的修炼根基，由先发制敌转到后发制胜。作为跟九阴真经关系最大的一群人，宋末郭靖固守襄阳，最终战死。这是一个时代的结束，以侠之大者，为国为民的正统侠道也开始没落，九阴真经也逐渐退出历史舞台，九阳神功开始登场，善良但没主见的张无忌也开始被推上舞台。在这个快意恩仇的江湖里，郭靖和张无忌作为九阴和九阳的代表人，风雨中相对而立。 武，是什么？侠，又是什么？还真是无言以对。]]></content>
      <tags>
        <tag>随笔</tag>
        <tag>脑洞</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[十年]]></title>
    <url>%2F%E5%8D%81%E5%B9%B4.html</url>
    <content type="text"><![CDATA[这是我二十岁时写的生日笔记。还有一个月我就二十三了，十年里还剩七年。 十年这个意向大约有着特别的意义。《盗墓笔记》结尾是一句诗“桃李春风一杯酒，江湖夜雨十年灯”，仙剑里也有十年之约，莫失莫忘，这些总会给我特别的感动，大概十年是个完整的年轮，这一轮会有四海一瞬，古今须臾，也会有物是人非。 十年之后我会是什么样子呢？这十年我该怎么做呢？ 20-30岁，十年。 昨晚又下雨，还是站在这个校区的最偏远的地方，还是看着那盏路灯，我翻着去年五月的笔记。 接下来这十年，很有可能是我这一生里最精彩的十年了。大好年华，活力无限，可拼可闯，可败可惧，可以犯错，可以选择，可以尝试，可以坚持。 我一直跟同学聊天说，我三十岁以后再结婚，这话玩笑七成，也有三成认真。三十岁以后，心有壮志，但有责任在肩。不甘平庸，但心志基本也被磨圆。那时候不会呆呆板板过一眼望到头的生活，但有些路也确实没资格，没心力去走一次。 我记得最近的一次印象深刻的聊天快结尾时，我说“你想走哪里走哪里，看你的选择，看你的因果。我也想走哪里就走哪里，看我的现实，看我的眼界。”这些话我可以理所当然的说出来，只因为我还刚踏入了这场有无限可能的十年之约。 我去年七月一条朋友圈讲，以五年为一节点，我五岁，十岁，十五岁，二十岁都有清清楚楚的记得的后悔的事，或是因为性格懦弱，或是因为实力太低。那接下来这十年，又包含了两个节点，那时不管境况如何，我都希望我可以告诉自己，这是当下最好的结果之一。遗憾可以有，但我不希望有后悔。 这一年，21岁，借王小波的一个书名，再借海贼王的一个概念。新世界展开帷幕，黄金时代，开始了。]]></content>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[言不可及 | 回家路上]]></title>
    <url>%2F%E8%A8%80%E4%B8%8D%E5%8F%AF%E5%8F%8A-%E5%9B%9E%E5%AE%B6%E8%B7%AF%E4%B8%8A.html</url>
    <content type="text"><![CDATA[我在回家的路上。 因为下着雨，车两边的树看起来很青翠，这是一条以前没走过的山路，全程都是下坡道，路上人车都很少。你们知道的，公交老司机此时都会化身成秋名山车神。他心里也许会想:公交下山！下个五连发卡弯就是决战时刻。 手机上显示体感温度是十八点七度，此刻离家应该不到十公里，我在车上也已睡了三个小时。天时，地利，人和，造就了现在少有的神清气爽的时刻。 于是就心血来潮想模仿火车靠站时的通告，心里默默地念，欢迎来到汝州，汝州是一个…… 突然就接不下去了，汝州是一个什么样的地方呢？历史悠久？没概念。人杰地灵？不好说。发展快速？也谈不上。我的家乡，好像没有令我印象深刻的地方。 公交车继续在山间移来移去，路过的山壁上刻了一些和尚，乍一看可能联想到武功秘籍，但定睛一看和尚们摆的姿势或是黑虎掏心，或是白鹤亮式，是小孩子都会比划的招数，而且也就二三十个人像，一套太祖长拳都不够打的。 汝州到底是一个怎样的地方呢？我突然又想起来小时候看的一篇故事。小姚隐隐约约想起一句诗，但又总说不上来，于是下午想，傍晚想，晚上做饭时也神不守舍，炒菜时就不小心伤到了手指。他的女朋友赶紧带他去诊所，路上小姚突然大喊一声，看！那天正是十五，他女友顺着他指的地方，看到了海边的圆月，也就应了那句他一直想不起来的诗，”海上生明月，天涯共此时”。我很喜欢这个故事，它有佛家顿悟的意味。 从公交上下来，离家还有一里，我小时候常去的那家零食店已经完全败落了，瓦顶长满了青苔，土块做成的墙壁也塌了一个角，现在看来这家店又小又矮，跟我印象里的完全不是一个样。小时候总是攥着一毛钱甚而五毛钱蹦蹦跳跳来这里，买辣条、北京烤鸭(一种膨化食品)和豫竹方便面，过年时来这里买烟火，铁花子，擦炮。店里有一块大青石台，年代久远已经发黑了，把硬币放在青石上面，趁着店家去拿零食的时候，我就总在门槛处来回跳，因为心里高兴。 后来店主因病去世，他信佛，曾因为一个梦而负担起了东庙过年时的烟花，即使零食店一年根本赚不了几个钱。现在想来，我最高兴的东庙烟花夜，却是店主家里难念的经，那时候还小，还不懂自家之外的苦。他去世之后，周围的商店越来越多，零食种类也越来越多，但我年龄也大了，再也找不回吃零食的幸福感了。 离家几十米，熟悉的街道颜色，门外的杏子树，树下那块青石还在那里。推开门，这里五年前是这样，那里十年前是那样，狗子还在汪汪，风吹树还是会沙沙响。 家乡是一个充满回忆的地方，这对我而言就是最好的答案了。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[同济星期音乐会 | 缘终]]></title>
    <url>%2F%E6%98%9F%E6%9C%9F%E9%9F%B3%E4%B9%90%E4%BC%9A-%E7%BC%98%E7%BB%88.html</url>
    <content type="text"><![CDATA[人在走到最后时，往往回想起最初。 对这门课初见钟情，有朦胧憧憬。熟悉之后，感觉它不是初识的样子，于是厌倦。行至最后，回首过往，无喜无悲，人生若只如初见？不是的，现在拥有的才该好好珍惜。 不管怎样，这门课带给我更多的还是值得珍藏的记忆，我学到了很多东西，关于音乐，关于心境。 从另外一个层面，这门课也有很特别的意义。同济号称是一所综合性大学，但目前还是摆不脱理工科的烙印。人文学院雄踞本部，传媒学院坐镇嘉定，但终究架不住理工学院人多势众。07年校庆时，温总理提到仰望星空，也有希望学生能在踏实做技术之外，多开拓一些眼界的意思。 我有一个签名“拥有工科生和文科生的优点和缺点”，这并不是刻板的去区分这两个人群，而是我希望自己除了拥有扎实的技术和动手能力外，还懂得去拥抱其他的事物，比如文学，比如体育，比如音乐。一个只会技术的人是可悲的，他把自己的世界蜷缩，化成了一个收敛函数。这样的人，无论怎么积分，他人生的上限，封死了。 同济的实干氛围很重，很多人参加车队、机器人对抗赛，在技术的海洋遨游。我不反对这样，事实上，参加智能小车队也是我最重要的经历之一。但我C语言学完想学Python，之后又去学习单片机和计算机视觉，技术的学习是无穷无尽的，还不够，还不够，还不够！太容易陷进去了。这种氛围变成了我的蒸笼和枷锁。 我不想一直这样。 我想求新，求变，绝不锁死自己，我要不断地破，破而后立。 所幸同济也认识到了这枷锁的存在，星期音乐会就是破锁的开始。它不仅仅是传媒学院开的一门选修课，也是一种新认知的代表。 “据我所知，全国开音乐会选修课的大学，只有同济一所。这是我们的一个礼物，也是我们的一个努力。我们的确花了很多心血，每次课程只灯光和乐器等杂项就需要十数人准备一周甚至两周，只希望能给各位带来一些音乐上的感动，让你在某个时刻感受到，啊，音乐真好啊。我们不管潜移默化的效果如何，也不奢望你们突然有了审美的飞跃，我们会做好自己认为正确的事，谢谢诸位。”这是课程开始时负责人的发言。 我也谢谢你们，再见了。]]></content>
      <tags>
        <tag>随笔</tag>
        <tag>大学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[同济星期音乐会 | 缘转]]></title>
    <url>%2F%E6%98%9F%E6%9C%9F%E9%9F%B3%E4%B9%90%E4%BC%9A-%E7%BC%98%E8%BD%AC.html</url>
    <content type="text"><![CDATA[我应该还是不喜欢古典音乐的。 两架钢琴，十手连弹，闭幕曲是《保卫黄河》。 我不是音乐家，也没有闲逸超脱的情思，选课时一腔热血，听课时昏昏欲睡，更有甚者，如郭靖听《碧海潮生曲》，不见旋律，唯有大敌。 寻手机，开知乎页面，如何去欣赏严肃音乐？再问传媒学院搭档，这曲怎么解？都说不出个所以然。但迷茫纠结本是世间常态，无路硬走即可。 终于等到了《保卫黄河》。 因曲子耽搁了二十分钟，我已变得躁动不安，好事毕竟总多磨。但在听到这首曲子时，世界都安静了。我实在没想到这首曲子，竟有如此变化，每次循环都能朝天再进半步，某时五人齐弹此曲，因音域共振，气势雄浑壮阔。我本以为至此已到顶峰，谁知峰回路转，竟有武侠小说里常说的，“隐隐有肃杀之意，金戈铁马又铿锵”。如虔诚者登山，及至山顶，又见新山。前进，前进，前进，更高，更险，更美！演奏结束了，我鼓掌，诚心诚意。 每个人思维都有自己局限的锥。我在听严肃音乐的时候，总是试着把它理解为一个故事、一段画面，如果触不到这些，就会认为自己没听懂，进而又去寻找该如何“听懂”的方式。为了听懂去听，听中尝试去听懂，这是一个恶性的死循环。 但听过《保卫黄河》后，我想，音乐也许只是一种情绪、一种表达、一种氛围。我不需要去理解它、揣测它，而只需要去感触它，去等待和它产生共鸣，哪怕只有一处也是值得的。这世界上从来没有完全相同的东西，没来由就能产生共鸣的，不是正常人。 每个人的经历也会有相似之处，如若那首曲子能带给你的瞬间的感动，四海缩成一瞬，古今略为须臾，隔着时空，灵魂和曲子有了对话，那一刻肯定是幸福的。]]></content>
      <tags>
        <tag>随笔</tag>
        <tag>大学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[同济星期音乐会 | 缘起]]></title>
    <url>%2F%E6%98%9F%E6%9C%9F%E9%9F%B3%E4%B9%90%E4%BC%9A-%E7%BC%98%E8%B5%B7.html</url>
    <content type="text"><![CDATA[修星期音乐会这门课，纯属偶然。 在刚听说有这门课时，我就对它有莫名的好感。想来是课名有韵味。于星期闲暇之时，听音乐以怡情养性。这总让我想起醉翁亭记和兰亭集序。 大四下我课程基本已补完，前三年各种劳累辛苦按下不提，这个学期我是要过心目中的大学生活了。也正是有缘，某晚浏览网页时偶然发现尚有名额，于是周一晚上就有了去处。 在我们学车辆的人中间流传着一句话，汽车是工业智慧的结晶。与此类似，音乐当是人类艺术皇冠上的明珠。它能跨越国家，肤色，种族，性别，年龄，海洋，天空，时间，在某事某刻某地给某人以某种特别的感动。 无聊寻思，音乐是怎么发展起来的呢？唧唧燕声，夏日蝉鸣，秋鱼扑腾，雪落瓦顶。人的主观性总是能将自然原声，根据个人情感，赋予其规律性。音乐以此为源，开枝散叶，逐渐发展了起来，庄子所言天籁应该也是这个意思。人为什么喜欢音乐呢？人对美有天然的追求，而音乐是情感的载体，是对自然的回应，这是天人层面上的和谐，正是美的极致体现。 话转回来，关于星期音乐会，我也了解了一些细节。虽然同是欣赏音乐，但不同的场合应遵循不同的礼仪。如果是听周杰伦的演唱会，你可以拿灯光牌，穿沙滩裤，氛围到了，大声跟唱，惊声尖叫，这正是现场live最特别的地方。但在听音乐会的时候，我们需正装出席，于绝佳之处情难自禁也该保持冷静，等一曲终了方可鼓掌，若想让演奏家再奏一曲，可持续鼓掌表明心意。这些礼仪的缘由我并不解，但人总得有一些仪式感，全程庄重太累，但不庄重的生活也轻浮了一点。 听老师讲，这门课会以古典音乐为核心，涉及的乐器会有钢琴，小提琴，大提琴等。严肃音乐是我很少接触的类型，歌单里虽有钢琴纯音乐，但听说和古典音乐是两个完全不同的概念，我很好奇二者之间的区别。 来自五湖四海的演奏家，古今中外的名曲，未曾触及的领域，全新的大学生活。这一切碰撞的时候，会是怎样的呢？ 另，这几天我迷上了许镜清做的西游记主题曲，可能的话，我希望之后能在课上听到交响乐。]]></content>
      <tags>
        <tag>随笔</tag>
        <tag>大学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据可视化 | 开篇]]></title>
    <url>%2F%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-%E5%BC%80%E7%AF%87.html</url>
    <content type="text"><![CDATA[讲数据就是讲故事。这一系列来自于对《鲜活的数据》这本书的总结。如果不了解数据，那么它就这只是冰冷的文字和数据的堆砌，统计与可视化可以帮助我们发现很多深层次的东西。在一堆堆数字中间藏着意义、真相和美学。数据有很强的客观性，但其中往往也有很多人为因素。就失业率例子，失业率攀升百分之五个百分点和数十万人下岗之间还是有着微妙且重要的差别的。 数据可视化有哪些基本原则数表应该清晰、简洁、优美。重要的点、线、区域都应该有注释，使用的符号和颜色都应该有详细的说明。数据可视化不一定只和冰冷的事实相关，有时候我们寻求的不是分析和洞察，而是从富有情感的观点讲故事。最后，数据本身也许并不一定让人趣味盎然，令人印象深刻的应当是设计数据和演示数据的方法。 在面对一堆数据时，我们该怎么入手 寻找模式，即寻求变化。以随时间推移而产生变化的模式举例，不同粒度时间内（小时、天、月、年）变化量怎样？波动是否异常？是否有特殊事件引起变化?由一个问题会引申出很多问题，要多角度去思考各种可能的变化。 寻找关系。在分析数据时，要找到数据的关联性和因果关系。 有问题的数据。数据检验是很讨人厌的事，但我们也不能避免这件事。 设计可视化图时应该注意什么 在设计可视化图形时，需要用圆形、柱形等用于编码，因而必须选用合适的方式去解码，一般可以用标记、说明文字、图解来解释编码。如果有足够空间，分类又不多的话，可以直接在形状或对象旁边添加标记。 标记坐标轴， 让读者知道它描绘的尺度和内容。 确保几何上的正确性，尤其要特别注意面积这个属性。 请记得提供数据来源，这样才显得严谨。 请注意考虑受众来源，幻灯片中的图形应该简单明了，如果是商业报告的话，图形应该简单、直达主题。按这样思考总是没错的。 该怎么处理数据收集数据收集数据时处理数据的第一步。很多人都会忽略这一步。收集数据的渠道有： 从他人处获取。即使是由他人提供数据，我们也不能大意，典型的要注意笔误和上下文环境，如数据的出处，收集的宗旨，调查何时举办？由谁发起？哪些人参与？这都是需要关注的。 从搜索引擎/直接数据源（该领域的学者/相关论文学术报告/搜索数据来源的网站）/大学资源/综合数据类网站（Freebase/Infochimps/维基百科）/专题性数据（垂直网站） 自动收集数据。使用Python+爬虫，基本步骤就三个：找出规律，循环，存储数据。 设置数据的格式格式化对于数据处理而言，是非常非常重要的一步。说它占掉整个数据处理工作中百分之九十的工作量绝不夸张。这也是一项非常繁琐的工作，因而必须拥有足够的耐心且找到合适的工具。 常用的数据格式有：csv(带分隔符的文本)，JSON（JavaScript对象表示法）、XML（可扩展标记语言）。]]></content>
      <tags>
        <tag>数据可视化</tag>
        <tag>总结</tag>
        <tag>数据科学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[谈古龙]]></title>
    <url>%2F%E8%B0%88%E5%8F%A4%E9%BE%99.html</url>
    <content type="text"><![CDATA[小李飞刀成绝响，人世不见楚留香。 初中从铁路局的床底下摸出了《无情剑客多情剑》的上半部，看到天机老人开始现身，胡不归，郭嵩阳，吕凤先准备登场时，上册结束。那时候我没手机没电脑，只有全书的目录，看着下半册的目录我猜了好几年故事会怎样展开。 高中接触手机。第一次用手机上网搜的就是《无情剑客多情剑》，看到下半部的内容出现在手机屏幕上时，开心的简直要炸掉。记得当时就坐在门槛上，用比巴掌小得多的屏幕看后半本，看一会儿就停下来，去院子里来回走，深呼吸来平复心情。看完五章就强迫自己停下来，免得一下子看完了太浪费。 我们高一每四周放一天假，那是我一个月里最高兴的一天，除了能回家见父母，另外就是能用手机看古龙的其他小说。《陆小凤全集》《楚留香全集》《武林外史》这些都是那时候在被窝里看完的。 古龙的语言风格如诗如乐，轻灵飘逸，另一宗师金庸走的则是重剑无锋，大巧不工的路数。所以有人说，金庸如杜甫，古龙如李白，两人组成了武侠史上最灿烂的的双子星座。 古龙受日本一些浪客作品影响比较深，其故事融合了推理和悬疑在武侠里，比较经典的如陆小凤传奇里的《决战前后》，月圆之夜，紫禁之巅，一剑西来，天外飞仙，西门吹雪和叶孤城的决斗也是来自这一册书。从这一点来说，他是开山宗师，前无古人，来者也追不上他，别人没他这才情。 但古龙并未止步于故事，他自己在《白玉老虎》的后记里提到，故事的情节变化有穷尽时，只有情感的冲突才永远能激动人心。而在这之中，古龙似乎尤其偏爱绝望里永不放弃希望的特质。 只因古龙也是个浪子，“人在江湖，身不由己”应是他的原创。他一生颠沛流离，过得很不如意，”人生本就充满了矛盾，任何人都无可奈何。”这样的句子在他的书里随处可见。看他和梁羽生，倪匡等人的合影，其他人都是风度翩翩，一副浊世佳公子的模样，只有他总是搭着眼，嘴角挂着不自然的笑。 但古龙始终赞美希望，对生命充满热情，他笔下的主角很少自怨自艾，黎明前的黑暗始终是最黑的，再坚持一刻就好了，不到最后一秒，绝对不要放弃。即使遭受了很多苦难，这些人还是坚持着自己的生活情调。夜深人静时不能眠，有人会打两颗蛋，加葱花，肉丁，用猪油和隔夜饭来做蛋炒饭。又说一个人想自杀时，就去菜市场转一转，或者去小饭馆坐一坐，喝完羊肉汤，吃两个烤饼，感受一下至味在人间，或者就和可爱又活泼的女孩子聊聊天，就什么都能好了。 这样的人，在另一个世界，应该也常是这样的:“店家，端来最好的酒，上最好的饼和肉，外面风雪太大，把柴火烧旺点，那边的兄弟们，请你们来这里喝酒！” 酒到半巡处，“我来给你们讲个故事，会有有趣的过程，会有快乐的结局。这世间不平事太多了，此时不快意，更待何时！”]]></content>
      <tags>
        <tag>随笔</tag>
        <tag>读书</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[谈吃]]></title>
    <url>%2F%E8%B0%88%E5%90%83.html</url>
    <content type="text"><![CDATA[如果没有生活压力的话，我第一想做非正常接触咨询师，其次是收藏家和美食家。 谈美食的散文有很多种。袁枚的《随园食单》把食不厌精、脍不厌细做到了极致,但生气太弱，并不讨我喜欢。 好的美食书应该是缭绕着烟火气息的。梁实秋的《谈吃》，文章简单直接，酱菜一篇，炸丸子又一篇，烙饼再来一篇。陈晓卿的《至味在人间》，写的就是各种下馆子的日常，没什么刻意。吃的开心足以。汪曾祺也有谈吃的散文，其文如风俗画，粗看平平淡淡，但却总能在不经意间显出情趣。还有张家玮的《孤独的人都要吃饱》，虽然相比前面几本有堆砌辞藻的嫌疑，但内容也可称得上人间情味了。 读美食散文有特别的感受，和小说、科普书不同，这里不求戏剧冲突，不求大悲大喜，也不谈严谨标准，无来往名利，无尊卑贵贱，作者落笔于纸，唯表达内心感受情思而已。作家谈吃时心也总是柔软的，即使一贯是清冷客观的文风，字里行间也会有一丝笑意。食物对人来说是神圣的，作家在色形味的描绘间找到了永久的通神之路。 关于美食的动漫我也看过一些。印象最深的还是《中华小当家》，以其下饭最合适不过，剧中有升龙饺和国士无双面，剧外我端着奶奶做的薄皮儿韭菜饺子和鸡蛋浇面一本满足；宇宙大烧麦和黄金开口笑让人目瞪口呆，妈妈做的烙饼加玉米粥同吃也让人惊艳。 依然无法言表那种感觉，常见的主食，怎会产生如此奇妙的反应？按小当家体的话… 这色泽温暖金黄的粥，把整个夏天的疲惫统统吹走了，略微粗糙的口感又饱含着谷物的清香和甘甜，热乎乎的温度像旋风一样落入了胃里，等等，这热烈而霸道的香是… 这是烙到正好的饼，油香和面香竟然能如此完美的桥接在一起，粥和饼同吃，这种充实而又充满层次味的美感，真是令人赞不绝口。 在小当家里，食物的光可以直冲云霄，彗星炒饭可以从天外飞来，就是这些陪我度过了一个个夏天，一顿顿午餐。现在也有类似的经历，只不过剧换成了《食戟之灵》，人越来越忙，下的饭也只有宵夜了，终究跟过去不一样。 小说里也有很多美食的桥段，我喜欢读武侠小说，金庸的《射雕英雄传》里，黄蓉为了自己的靖哥哥，给洪七公做了“玉笛谁家听落梅”，五肉同吃，合计二十五变，滋味无穷，又有“好逑汤”，即为荷叶笋尖樱桃汤，清、甜、鲜俱在，还有只提及的“二十四桥明月夜”，豆腐挖心后塞入火腿蒸食，应当对刀工要求极高。《书剑恩仇录》里有陈家洛归海宁家后吃的糯米嵌糖藕，《天龙八部》里阿碧姑娘出场带的碧绿新鲜的点心。金庸书中多是类似江南风格食物，精致，高雅，读来感觉应是美味的，但终究可远观而不可亵玩焉。金庸谈吃令吾欢处不在于此，而在于华山绝顶，天地同寒处，洪七公和小杨过吃的那几十条蜈蚣，喝的那几夜酒。 古龙书中的饭更接地气一些，他更像是一个挨过饿的人，谈及吃的时候总有隐隐然对食物的敬畏。米饭要一口口吃，肉丝要一口口嚼，这样才能充分获得食物的能量，人每分每秒都该珍惜当下所拥有的。书中人物吃饭皆是在路边小店，三五斤酒上来，卤肉、卤鸡、牛肉端上来，再配上大饼或馒头一起吃。他的书是能把人看饿的，这何尝不是另一种才情？]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[线性代数 | 乘法、逆矩阵、分解]]></title>
    <url>%2F%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-%E4%B9%98%E6%B3%95%E3%80%81%E9%80%86%E7%9F%A9%E9%98%B5%E3%80%81LU%E5%88%86%E8%A7%A3.html</url>
    <content type="text"><![CDATA[乘法、逆矩阵、分解、转置都是线性代数的基本概念，这一篇也是突入向量空间之前的最后一篇了。 乘法计算矩阵乘法要掌握以下四种方式。 直接相乘法，即对于矩阵$AB=C$,有$c_{ij}=\sum_{k=1}^na_{ik}b_{kj}$ 列相乘，A右乘以列向量，相当于A中各列的线性组合，得到的是一个列向量，然后可以扩展到整个矩阵。 行相乘，A左乘以行向量，相当于A中各行的现象组合，得到的是一个行向量，然后可以扩展到整个矩阵。 A的列乘以B的行会得到一个矩阵，对应列、行相乘得一个矩阵，把各个矩阵直接相加可以得到最终矩阵。想理解这个，可以把A矩阵的每一列当成一个块，B矩阵的每一行当成一个块。并不建议用这个方法来计算矩阵乘法，但一列乘以一行得到的矩阵有着美妙的性质，所得矩阵的每一列、每一行都依赖于同一列，也依赖于同一行。 逆矩阵矩阵可逆的条件是，存在方阵A且$AA^{-1}=A^{-1}A=I$,可逆方阵又称作非奇异矩阵。我们现在通过一个奇异矩阵来了解一下可逆矩阵。假设存在一个奇异矩阵$A$ \begin{bmatrix} {1}&{3}\\ {2}&{6}\end{bmatrix} 拓展一。 假设存在一个矩阵B，能使得AB=I,从列图像的角度来看，矩阵$AB$每一列必然与向量$[1,3]$在同一方向上，但单位矩阵的$[1,0]$不在，因此它不可逆。 拓展二。如果存在非零向量$x$,使得$Ax=0$，则A不可逆。证明，反证法，若A可逆，则两边同时左乘$A^{-1}$，则有$Ix=A^{-1}0$，即$x=0$,与原条件矛盾。 事实上，有非零向量$x$,说明矩阵A各列可以通过线性组合得到零向量，说明各列线性相关，这都是等价的。 LU分解矩阵的分解是一个很重要的话题，我们可以把一个矩阵分成一些特殊矩阵或者更简单的矩阵，从而简化问题，帮忙发现问题的本质，LU分解就是矩阵的一个基础分解。 我们在前学过消元法，消元法的本质是行变换，其实矩阵有很多变换形态，只不过行变换经常是和解方程联系在一起的。由前文可知，矩阵可以通过消元由A变成U,即存在消元矩阵E，使得$EA=U$。我们现在想求的分解是$A=LU$,则有$L=E^{-1}$，即是消元矩阵的逆矩阵。 转置、置换矩阵矩阵左乘置换矩阵可以进行行互换，置换矩阵的形式是单位矩阵行行互换的矩阵。 考虑一个三阶单位矩阵I，依次调整它的行的位置，则共有$3!=6$种矩阵，这可以从行变换（行向量乘以矩阵）的角度去思考。另外，置换矩阵群内的矩阵相乘依然是置换矩阵，它们之间有逆矩阵的关系。另外置换矩阵的逆矩阵和其转置矩阵相等。 转置矩阵的概念:$A^T_{ij}=A_{ji}$。对于对称阵:$A^T=A$。构造对称阵也很简单：$R^TR$ 下一章，我们突入线性代数的核心，向量空间。]]></content>
      <tags>
        <tag>机器学习</tag>
        <tag>线性代数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[线性代数 | 解方程组]]></title>
    <url>%2F%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-%E8%A7%A3%E6%96%B9%E7%A8%8B%E7%BB%84.html</url>
    <content type="text"><![CDATA[这个系列、或者说这一类的风格会一直转变的，我也处于不断的摸索过程中。 我们怎么求解方程组呢？先配系数消掉x，再把x带回去，求出y。这就是消元法，现在用矩阵观点来看待这个问题。回想自己求一个二元方程组的过程，我们依然举下面这个例子， \begin{cases} 2x-y=0\\ -x+2y=3 \end{cases}\begin{bmatrix} {2}&{-1}\\ {-1}&{2}\end{bmatrix} \begin{bmatrix}{x}\\ {y}\end{bmatrix}=\begin{bmatrix}{0}\\ {3}\end{bmatrix} 对于本例，左上角的数字2被称为主元，主元所在的行被称为主元行，之后进行消元，得到矩阵 \begin{bmatrix} {2}&{-1}\\ {0}&{3/2}\end{bmatrix} 接下来利用下面这一行对应的方程求出y，再代入求x就算出答案。 对于三元方程组，举例 \begin{cases} x+2y+z=2\\ 3x+8y+z=12\\ 4y+z=2 \end{cases}对应的矩阵消元过程为 \begin{bmatrix} {1}&{2}&{1}\\ {3}&{8}&{1}\\ {0}&{4}&{1}\end{bmatrix}(1)\rightarrow \begin{bmatrix} {1}&{2}&{1}\\ {0}&{2}&{-2}\\ {0}&{4}&{1}\end{bmatrix}(2)\rightarrow \begin{bmatrix} {1}&{2}&{1}\\ {0}&{2}&{-2}\\ {0}&{0}&{5}\end{bmatrix}(3) 注意第一次我们以对角线上的第一个数字1为主元，消掉x得到了矩阵（2），然后我们以对角线上第二个数字2为主元，消掉y得到了矩阵（3），之后就可以进行回带求解了。最后得到的矩阵（3）就是U:上三角矩阵。 考虑以上两个过程，我们做出总结。对角线上的三个数就是三个主元，也就是在求解过程用来消元的基础元；消元的过程就是矩阵变换的过程。 另外，考虑主元失效的情况，即主元位置为0的情况，一般解决方案是进行行交换。但如果行交换也解决不了问题，比如右下角主元为0的情况，那么这就代表该矩阵不可逆。 确定消元失效。 在第一篇末尾我们提到按列和行的角度来看方程组。从列的角度来看，有 \begin{bmatrix} {1}&{2}&{1}\\ {0}&{2}&{-2}\\ {0}&{4}&{1}\end{bmatrix}\begin{bmatrix} {x}\\ {y}\\ {z}\end{bmatrix}=x*col_1+y*col_2+z*col_3 从行的角度来看，则有 \begin{bmatrix} {x}&{y}&{z}\end{bmatrix} \begin{bmatrix} {1}&{2}&{1}\\ {0}&{2}&{-2}\\ {0}&{4}&{1}\end{bmatrix}=x*row_1+y*row_2+z*row_3 请一定学会用行、列的观点来看待方程组。那么 \begin{bmatrix} {1}&{0}&{0}\\ {-3}&{1}&{0}\\ {0}&{0}&{1}\end{bmatrix}(E_1)\begin{bmatrix} {1}&{2}&{1}\\ {3}&{8}&{1}\\ {0}&{4}&{1}\end{bmatrix}(1)= \begin{bmatrix} {1}&{2}&{1}\\ {0}&{2}&{-2}\\ {0}&{4}&{1}\end{bmatrix}(2) 从矩阵1转到矩阵2这个换元的过程就是在左边乘以一个矩阵$E_1$的过程（用前面讲的用行向量思考的方式去求解矩阵3）从前文矩阵2到矩阵3同理再乘以一个矩阵$E_2$即可，于是我们得到式子 E_2(E_1A)=U\rightarrow(E_2E_1)A=U这就是矩阵乘法的内容了。]]></content>
      <tags>
        <tag>机器学习</tag>
        <tag>线性代数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[线性代数 | 行列图像]]></title>
    <url>%2F%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-%E8%A1%8C%E5%88%97%E5%9B%BE%E5%83%8F.html</url>
    <content type="text"><![CDATA[这是线性代数笔记系列中的一篇文章。 我们来构建一个方程组 \begin{cases}2x-y=0\\-x+2y=3\end{cases}它的几何意义可以从两方面看，第一，从行的角度看。在二维直角坐标系内$2x-y=0$是一条直线，$-x+2y=3$也是一条直线，两条直线交点的坐标值就是待求解。这是行图像。 第二，从列的角度来看方程组，首先把它写成矩阵相乘即$Ax=b$的形式。 \begin{bmatrix} {2}&{-1}\\ {-1}&{2}\end{bmatrix}\begin{bmatrix} {x}\\ {y}\end{bmatrix}=\begin{bmatrix} {0}\\ {3}\end{bmatrix} 这是线性代数中方程组的表示方法。我们可以把它写成 x\begin{bmatrix} {-2}\\ {1}\end{bmatrix}+y\begin{bmatrix} {1}\\ {2}\end{bmatrix}=\begin{bmatrix} {0}\\ {3}\end{bmatrix}考虑向量$v_1=(-2,1)$和向量$v_2=(1,2)$,在直角坐标系中画出这两个向量，再画出最终向量$(0,3)$，问题转化为求$v_1,v_2$系数$x,y$,运用平行四边形法则就可以算出来。这是列图像。另外学过线性代数的都知道，这是一个线性组合的过程。 现在让我们更进一步，考虑三元方程组的行图像和列图像。它的每一行是个平面方程，行图像是在三维坐标系里求三个平面的交点。列图像就是求三个三元向量$v_1,v_2,v_3$的系数x，y，z。 四元方程组，五元方程组思考方式与上类似。 考虑一个经典问题，对于任意$b$，$Ax=b$是否都有解？ 以三元方程组举例，任意$b$对应的其实就是整个三维空间，问题就转化为，列的线性组合是否能覆盖整个三维空间？ 这里直接给出答案，如果矩阵A是非奇异矩阵，答案就是肯定的。A是非奇异矩阵代表着A的各列线性无关，从列图像的角度看，线性无关就代表着各列所代表的向量不在一个平面上（如果它们在一个平面上，就永远无法组合出除了这个平面之外的向量）。 所以，我们得出了从列图像角度得到的一些结论，这里的举例中，A是3x3矩阵，b是三维空间中的向量，x是矩阵各列向量的系数。非奇异矩阵A$\rightarrow$矩阵各列线性无关$\rightarrow$各列代表的向量无关$\rightarrow$三个向量不共平面$\rightarrow$可以用这样的向量组合出三维空间里所有的向量$\rightarrow$对于方程组$Ax=b$,对任意$b$，$x$都有解。 列图像是一个很重要的概念，行图像在线性代数里没那么重要，借用列图像可以帮我们重新认识很多线性代数的概念。 最后一个重点，也是基于行、列图像的延伸。怎么去看待$Ax=b$?GS的建议是站在列图像的角度看，将其看做A的各列的线性组合，$x$里的各项就是A的各列的系数。 \begin{bmatrix} {2}&{5}\\ {1}&{3}\end{bmatrix}\begin{bmatrix} {1}\\ {2}\end{bmatrix}=1\begin{bmatrix} {2}\\ {1}\end{bmatrix}+2\begin{bmatrix} {5}\\ {3}\end{bmatrix}=\begin{bmatrix}12\\7\end{bmatrix}]]></content>
      <tags>
        <tag>线性代数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[线性代数 | 开篇杂谈]]></title>
    <url>%2F%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%AD%A6%E4%B9%A0.html</url>
    <content type="text"><![CDATA[没学过线性代数，在自然科学面前就如同文盲，此言非虚。 做科研、读论文时，线代和矩阵论的基础很弱的话，读懂就要了老命了，更谈不上化归、拓展。我个人未来想做自动驾驶方面的工作，线性代数更是一个绕不开、避不掉的基础话题。另外，我的学习圣经，YY硕的机器人工程师养成计划在五个不同的阶段都提到了线性代数的迭代学习，它的重要性不用在多说了。 线性代数是一门基础课程，但国内大部分学校的线代教学方式实在让人不敢恭维，以同济教材为例，上来就抛出一个逆序数这个反人类概念，之后从行列式开始往后展开内容，这种方式是很不利于认识线性代数本质的。以向量空间和线性变换作为切入点构建整个知识体系是更好的方式，这也是本篇博客提到的Gilbert Strang教授所推崇的观点。 另外，众多大学生本科学习线性代数时偏重于计算，很多人的意识里线性代数就是把一堆莫名其妙的矩阵加加乘乘。这种认识是片面的，线性代数不止具有工具性，也具有思想性。线性代数其实提供了一种看待世界的新视角，用向量去表示对象特征的组合，用矩阵给对象施加“运动”，特征值和特征向量描述了“运动”的速度和方向。注意这里的“运动”是广义的运动，也可以称作状态转换。再比如以高维的视去看待问题：薛定谔的猫可以用6n空间的一个点描述，n是组成猫的原子数，向量的实质是n维线性空间的静止点，通过这种方式可以简化问题。 这门学科是着重于抽象概念解释的，至于具体的数学公式和计算，交给公式查找表和MATLAB就好。 我自己自学时是个很挑的人，尤其讨厌走不必要的弯路，浪费大量时间资源。在准备重塑自己对线性代数的认识之前，我百度谷歌了一下，在各种网站和评论里看到Gilbert Strang的名字，他确实是个做教育的牛人。他的课程有一种让人很舒服的节奏，上他的课时我感觉自己每分每秒精神都很集中，这是很难得的学习状态。 附带一些GS教授的入门资源。 看网易上的MIT线性代数课程，一共35讲，每讲大致在45分钟+，网址：O麻省理工公开课：线性代数，可以用硕鼠把它们下载下来，找个好的视频播放器（potplayer，本地播放非常优秀）观看。 该门课的配套教材也非常值得推荐，网上较难寻觅，可把习题打印下来，书本内容直接看电子版也没问题。链接：https://pan.baidu.com/s/1VVPIUTPTv_nEej1s2N8ZJg 密码：qydd 带着问题去学习线性代数，或者检验自己有没有理解线性代数时，都可以去尝试下自己能回答出下面几个问题。问题摘自孟岩同志的博客《理解矩阵》，十年前的文章，但依然光芒万丈，可在学视频前学习，也可在学完后检验。 笔记要记，还是推荐电子笔记，修改留存效果比较好，推荐印象笔记+马克飞象，此外公式要推导，例子要重视，这些在这里就不再赘述了。 附上孟岩的问题，答答看看吧： 矩阵究竟是什么东西？向量可以被认为是具有n个相互独立的性质（维度）的对象的表示，矩阵又是什么呢？我们如果认为矩阵是一组列（行）向量组成的新的复合向量的展开式，那么为什么这种展开式具有如此广泛的应用？特别是，为什么偏偏二维的展开式如此有用？如果矩阵中每一个元素又是一个向量，那么我们再展开一次，变成三维的立方阵，是不是更有用？* 矩阵的乘法规则究竟为什么这样规定？为什么这样一种怪异的乘法规则却能够在实践中发挥如此巨大的功效？很多看上去似乎是完全不相关的问题，最后竟然都归结到矩阵的乘法，这难道不是很奇妙的事情？难道在矩阵乘法那看上去莫名其妙的规则下面，包含着世界的某些本质规律？如果是的话，这些本质规律是什么？ 行列式究竟是一个什么东西？为什么会有如此怪异的计算规则？行列式与其对应方阵本质上是什么关系？为什么只有方阵才有对应的行列式，而一般矩阵就没有（不要觉得这个问题很蠢，如果必要，针对m x n矩阵定义行列式不是做不到的，之所以不做，是因为没有这个必要，但是为什么没有这个必要）？而且，行列式的计算规则，看上去跟矩阵的任何计算规则都没有直观的联系，为什么又在很多方面决定了矩阵的性质？难道这一切仅是巧合？ 矩阵为什么可以分块计算？分块计算这件事情看上去是那么随意，为什么竟是可行的？ 对于矩阵转置运算$A^T$，有$(AB)^T = B^TA^T$，对于矩阵求逆运算$A^{-1}$，有$(AB)^{-1} = B^{-1}A^{-1}$。两个看上去完全没有什么关系的运算，为什么有着类似的性质？这仅仅是巧合吗？ 为什么说$P^{-1}AP$得到的矩阵与A矩阵“相似”？这里的“相似”是什么意思？ 特征值和特征向量的本质是什么？它们定义就让人很惊讶，因为$Ax =\lambda x$，一个诺大的矩阵的效应，竟然不过相当于一个小小的数λ，确实有点奇妙。但何至于用“特征”甚至“本征”来界定？它们刻划的究竟是什么？]]></content>
      <tags>
        <tag>机器学习</tag>
        <tag>线性代数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[言不可及 | 庙会]]></title>
    <url>%2F%E8%A8%80%E4%B8%8D%E5%8F%AF%E5%8F%8A-%E5%BA%99%E4%BC%9A.html</url>
    <content type="text"><![CDATA[怎能忘记彼时的星河？ 以往七夕的时候，我总是会和爷爷奶奶一起去舅爷家，去赶七夕会。那里跟大城市不一样，光还没有污染星空,天中尚有银河，繁星灿烂欲转。 从舅爷家到谷里的戏台有一条六七百米的路，八点钟我们从家里出发，路上会有很多背着椅子走的同行人。爷爷和舅爷会聊戏里面的情节，蔡京有多坏以及戏正不正宗这类，我对这样的话题不感兴趣，心里面想的只是桌上的小霸王游戏机，抽屉里的鹿鼎记，上一年没买的荧光手环还有明天要打来烧着吃的枣子。 路上的石头被星光照着，有一种白莹莹的质感，唱戏的声音越来越近，蛐蛐儿的声音渐渐听不见了。转过两个弯，有一条向下的通往谷底的土路，路的两侧就是我童年最美好的记忆，有卖木头菩萨、玻璃手串这类小饰物的，有卖夜光手环的，谷下除了戏台有灯，其他地方都是暗的。哦，对，还有两旁小摊的白炽灯散发着温暖不刺眼的光，这是童年里光影的梦。卖吃食的也很多，炸排串有着直勾勾的香气，糖皮儿花生的甜香就收敛很多。即使没钱买什么，但只要看一看就很开心，这里的每个角落都藏着无数的惊喜，每一秒都让我有砰砰砰的期待。 台上唱戏的咿咿呀呀的时候，我们自然开始昏昏欲睡了，爷爷早就料到这样的情况，拿出预先带的小竹席，让我和姐姐表姐躺着休息。奶奶不想让我们睡着感冒，就讲故事给我们听。 说人和神仙本无分别，天和地还有海也都是畅通的，那时候大家都过得开心快乐。很多年之后，有的人突然就再也没反应了，不会跑也不会跳。大家都非常害怕，有一部分聪明人发现了寿命的存在，大家第一次明白了死的意思，死代表着什么呢？就是一切都没了，一切的一切都没了。 人不再毫无畏惧，恐惧是战争的催化剂。一场莫名奇妙的战争打了好多好多年。最后势力基本分成两方，一方人变成了神仙，一方人还是普通人。但其实这场战争是神仙们挑起来的，他们想剥夺人的生命自己用，所以神仙都能活好多好多年。但他们也受到了惩罚，爱情亲情友情，神仙们没这些东西了，他们要生生世世受无聊的苦。 神仙们不甘心啊，漫长的寿命让他们变得很厉害，他们嫉妒咱们有他们失去的东西，他们想方设法压制人的情感。但是这禁锢的力量是不够的，随着人的长大，这些感情会慢慢全部回来。 你我一生下来，亲情随之而来。求学之旅，友情如影随行。到了人生的新阶段，爱情也恰在转角，从神话故事的角度想想，还挺有趣的。 及至戏散场，我们被叫醒回家，正是夏天，睡觉当然还是在平房上。数星星七八颗就沉沉地睡去了。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[言不可及 | 回忆]]></title>
    <url>%2F%E8%A8%80%E4%B8%8D%E5%8F%AF%E5%8F%8A-%E5%9B%9E%E5%BF%86.html</url>
    <content type="text"><![CDATA[这是一个系列随笔，名为言不可及。 取意于史铁生《北京的回忆》里我很喜欢的一句话：现在想，大约任何声音、光线、形状、姿态，乃至温度和气息，都在人的心底有着先天的响应，因而很多事可以不懂但能够知道，说不清楚，却永远记住。那大约就是形式的力量，气氛或者情绪，整体地袭来，它们大于言说，它们进入了言不可及之域。 言不可及之域，就以文字载之吧。我真的不想忘记它们。 检索某个事件时，寻到一个博客，随意翻之，其内容多为日记类随笔，涉猎范围很广。一个月很稳定的更新四五篇，但到08年2月时文章戛然而止，再也没有任何后续。 每条博客的评论区都是空白，我不由自主地在想，博主是抱着什么样的心情在写这些呢，离开这里的缘起是什么呢，这十年间又发生了什么呢。 悲欢离合总无情,一任阶前点滴到天明。一句莫名的古诗词跳了出来，此刻的人去想过去的心情，总是容易有怅然若失的感觉，谁也避不开。 我相比其他人总是更容易陷入回忆中，写的一些心情里总是有大量“小时候”之类的时间词，年假跟人出去玩也一直絮絮叨叨，看到几乎每一样东西都能扯到过去。 —现在套圈还有套鸭子的，以前我记得就是套一点塑料小刀小剑。 —风穴寺原来离这里就六七公里啊，小时候感觉走到天荒地老才能走到。 —用柴火煮肉真是让人怀念，那时候总是在旁边帮忙等着吃，真的是好吃。 —姐姐姐，你还记不记得那个，两毛一张的那个，上面的小格子画的有军长，司令，炸弹这些，咱们把它剪成小牌，用粉笔在地上画了格子翻暗牌打，有一次我司令位置比较好，你的牌翻一张我杀一张，后来你着急了我又不忍心，我就故意去救我的工兵让你的炸弹把它炸死了，你记不记得啊。 —不差钱已经十年了啊，我总感觉像是两三年前的事。在南屋那儿看这个节目的吧，橘子糖的香气很重，剥瓜子和花生加葡萄干一起嚼，外面有小孩子在放烟火，都是几毛钱的玩意儿，铁花子，窜天猴儿，擦炮儿，那时候跟城市的黑夜可不一样，村里的黑夜让人有安全感，咋玩的那么开心呢，现在我玩不动了。 过去的记忆，在特定的时候，能让我有当下的自己和逝去的的美好尚有交集的错觉。虽然是错觉，但也足够了。 毕竟，有回忆才是完美人生。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[信息论随笔三]]></title>
    <url>%2F%E4%BF%A1%E6%81%AF%E8%AE%BA%E9%9A%8F%E7%AC%94%E4%B8%89.html</url>
    <content type="text"><![CDATA[人生苦短，我要问人。 你身边的每个人都是一个完美的信息体，他的人性化程度要超过任何已知的搜索引擎，所以在寻找信息时，千万别忘了向周围人请教这个方法。 举个简单的例子，你某天突然发现了搜索的重要性，下定决心开始学习搜索知识，可是信息的来源太多了啊，豆瓣贴吧知乎专门的搜索书，该怎么学起呢？ 最好的方法就是问已经关注过这个问题的人该从何学起。因为他在学习的过程已经走了该走的路，悟了该悟的道。他有了很多经验、总结和思考，也会针对你这个个体给出独特的建议。他是一个完美的引擎，是淘金者和图书馆管理员的结合体。 我举个例子，几天前我想搜索获得一些关于ECU入门学习方法的信息，除了搜索引擎外，我还采用了两种方法。其一通过汽车学院的官方网站找到了某教授的联系方式，发了一封邮件问询。其二，我在车云和朱玉龙的公众号里直接发了询问信息。这两种方式都得到了回应，车云甚至专门给了我一个前辈的微信号，我们聊了大概40分钟，他们的回应很有价值，这些价值是搜索引擎不能提供的，或者更准确地说，如果只通过搜索引擎，我要过很长时间才能获得这些“价值”。 别把自己局限起来，问问问，只要你的问题有提前思考过，有一定的价值，就不要害怕问，对知识的分享当下很少会有人吝啬的。 下一次想获得什么信息时，千万不要忘了身边的人。找到有过类似经验的或者擅长此道的人直接问，比自己用各种引擎网站和指令来的更直接更高效。]]></content>
      <tags>
        <tag>高效学习</tag>
        <tag>信息论</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[信息论随笔二]]></title>
    <url>%2F%E4%BF%A1%E6%81%AF%E8%AE%BA%E9%9A%8F%E7%AC%94%E4%BA%8C.html</url>
    <content type="text"><![CDATA[哼哈二将的哼哈真能砸死人吗？ 有信息接受率这个概念，从这个概念引申去，可以解释两个现象。其一，刷网页时虎虎生威，左刷右点，精神抖擞，听课时则如喵嗜睡，哈欠连连定是标配。其二，小黄片比小黄文的市场更广。这个引申围绕的核心在哪里呢?在于信息量上。 我们不断地拆分信息，拆分到最后，看到的是比特，也就是1和0，阴和阳，是和否，有和无。说不定在未来，人们的交流是这样的： A：“000101100010101010001110001”B：“1000110”那么具体是什么意思呢？A：”我爱你”。B：”滚”。 其实黑客帝国里就有这个概念，外面的辅助用人眼就可以解析电脑上的绿色01流，这可能是他们为了电影背景时代而做出的进化。但实际上人类语言进化点这棵树的可能性非常小，因为它非常不经济，跟能量倾向于保持低状态的基本准则违背了。正像上面那个例子，一个我爱你就能表达清楚的事，用一串01来表达不得烦死人？ 回顾历史，人类对信息的组织一直在升维，我们直接跳到书面文化出现后的年代，那时候的打字，意为击也，单个汉字的信息量并不大。但现如今，打车，打饭，打水，打井，它们也没做错什么事，为什么要打它们？归根究底就是打这个字的信息量增加了。 单个汉字（或英文字符）的信息量从大的时间尺度上来看一直在增加，这是世界的规律，在这方面，历史只有单行道可走，组合词也不例外，”NE”是什么？”ICU”又是什么？想解释它们的话，毫无疑问需要严谨的一段话，这就是另一种典型的升维现象了。顺便提一下，我是”IHA”的忠实拥护者，”I hate abbreviations “，勇者变恶龙呐，我恨缩略词，但我偏要用。 现在回到大一上高数课的时候，让我来勉强解释听课时容易昏昏欲睡这个现象。因为你在接受海量的信息啊！数学是信息最高维结构的一种体现，老师说”极限”两个字，飘向你的可不是轻轻的4比特（一个汉字平均1.9比特），而是天才牛顿的彻夜思考，是莱布尼茨的独辟蹊径，是无数数学家前赴后继的争论。砸向你的是一座信息山、是一汪信息海。这有点像玄幻小说里儒家的言出法随，也像封神榜里的哼哈二将，随便几个字就有千钧重，不过这里的千钧是信息量，而不是质量了。 一座座信息山砸下来，孙猴子也躲不了，想登此山摘星辰，那得先通过前期的积累学习站在靠近山顶的位置。大脑有极限有阈值，信息一会儿就饱和了，所以你总会感觉自己大脑很沉，另外在碰到接受不了的事情时人的本能是通过天然排斥保护自己，两者综合，那就是头脑昏昏沉沉想睡觉了。保护自己，拒绝信息！ 至于视频和文字的问题，那是另外一个研究：“信息形式对高维信息接收率的影响”。请聪明才智之士来贡献力量了。 脑洞戏言，博君一乐，对信息量感兴趣可以阅读《信息简史》这本科普书，它对我看世界的方式影响很深。]]></content>
      <tags>
        <tag>脑洞</tag>
        <tag>信息论</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[信息论随笔一]]></title>
    <url>%2F%E4%BF%A1%E6%81%AF%E8%AE%BA%E9%9A%8F%E7%AC%94%E4%B8%80.html</url>
    <content type="text"><![CDATA[西游记里面有段很能表现孙悟空的性格。 孙悟空说：常言道：『皇帝轮流做，明年到我家。』只教他搬出去，将天宫让於我，便罢了。 这兴衰之事，谁也讲不准。昨日你庙堂之上，持天子之剑号令天下，动静间千里之外也有感。今日就有江湖之雄，握屠龙宝刀，杀人溅血也不过五步之间。 不仅政治如此……什么不是这样呢？ 现在伸出你的手，观察一下你的手指。别的不论，单说这根大拇指，就有一段荡气回肠的兴衰史。 在以前，大拇指是尊贵的象征，就看清剧里的那些王公贵族，玉扳指在哪儿？在大拇哥儿上。单看形体，大拇指也是手指中最特殊的，以手的自然姿势握姿来说，大拇指似将军，其余四指就是并排的兵。这也是以前大拇指地位高的一个可能解释。 可是后来大拇指的地位就没落了，究其原因是没人再用物件儿来区分阶层。那现在呢，人家无名指或者中指上往往是有戒指的，还有爱的意义。食指呢，人是最灵活的指头，不信你敲桌面看哪根手指敲的最快。再说小指，纤细精巧，实际作用没什么，但也比大拇指蠢蠢呆呆的好看。大拇指成了地位最低的手指，大拇哥很伤心。 所幸大拇指的命中贵人出现了。触摸屏智能手机迎来了自己的时代。现在的我正在双手打字，两只大拇指在屏幕上上下翻飞，一串串信息就从我的大脑通过一系列复杂的变化过一会儿就要进入到了你的大脑里。躺着刷微博刷其他就更不用提。如果现在把某些人的大拇指剁了，短时间内甚至能摧毁他的交流系统。除非他能找回先前的交流方式。 说到交流方式，口语文化——书面文化——口语文化的兴衰史也很有看头。远古人类的交流毫无疑问是口语文化占主导的，随着语言和文字的发明，思想不会随着声音的传播只在空气中存留几秒就迅速衰减，它有办法被保留下来了，这是文化的起源，人之为人的精神基础。再之后，书面文化牢牢占据着世界的主流，信息的传播，留存，变异都离不开“书”这个载体。到互联网的发展又是一变，它把世界缩小了，音带传出来的思想振动不会只传几百米，它可以传遍整个地球。口语文化又想重新拿回它失去的领地，在我看来，它至少能重新打回一半天下。 说了这么多，我到底想说什么呢？哲学上说，“波浪式前进，螺旋式上升”数学上说，“万物都可以由傅里叶转换成正弦波”也有人说，“人生不如意十之七八，但我们今天的所有努力都是为了那十分之一二的开怀大笑。” 是不是有点太悲观？那引用海贼王的一句话 他们开着宴会，大声的欢笑，过去的痛苦之所以能坚持下去，就是因为这一天一定会到来。]]></content>
      <tags>
        <tag>脑洞</tag>
        <tag>信息论</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[AirSim配置]]></title>
    <url>%2FAirSim%E9%85%8D%E7%BD%AE.html</url>
    <content type="text"><![CDATA[除了百度的Apollo，在GitHub的Autonomous Driving话题里，就数AirSim的star多了。 AirSim是一款基于UnReal引擎的仿真平台，其可用于无人车、无人机的仿真。它是开源的、跨平台的、能支持PX4这种流行的飞行控制器的硬件在环测试。AIrSim本质上是一款UnReal插件，因此它能被放到任何你想要的虚拟环境中。AirSim目标是成为一个优秀的AI测试平台，可以被用来测试与自动驾驶相关的深度学习、计算机视觉、加强学习算法。 本篇教程选择在win10系统上搭建AirSim平台，这也是少有的可以在Win上运行的开源项目了。整体应用的是最新版本的AirSim建议的配置，win10+VS2017Community。 **安装步骤** 第一步，下载Unreal先下载Epic Games Launcher。打开后，按如下图红色方框，点击选择Unreal版本4.18.3，下载。 第二步，配置VS2017首先确保其安装VC++。其次确保安装Windows SDK 8.1。打开vs2017，选择工具中的“获取工具和功能”。选中“单个组件”选项夹，在“SDK、库和框架”中选择Windows8.1SDK勾选安装。 第三步， 编译程序首先新建文件夹，把https://github.com/Microsoft/AirSim 中源代码下载或者clone到本地，我个人是把文件下载到了“E:\SOFT\airsim\air”的文件路径里。之后在win10左下角找到Visual Studio的安装目录，选择“适用于VS 2017的 x64本地工具”打开。 接着，进入你放着airsim源程序的文件夹，运行build.cmd文件夹。Airsim的配置结束。 **疑难问题汇总** 症状1任何rpclib相关问题。 病情分析开发者回复说是网络（墙）问题。对于win8系统，显示的是拒绝访问。配置建议还是win10系统。 药方科学上网，之后重启电脑，重新build。 症状2corect.h相关问题。 病情分析这是编译的sdk版本问题。 药方首先检查SDK8.1有没有正常安装。其次在VS2017的“获取工具和功能”选项夹中选择“单个组件”，再在“编译器、生成工具和运行时”下选择“Windows通用CRTSDK”，勾选安装。重启电脑，重新build。 症状3没有生成object文件。 病情分析如cmd中报错显示，是文件编码的问题。 药方按照报错提示，直接打开“… repos\repo_avt\airsim-master\airlib\deps\eigen3\eigen\src\core\arch\cuda\half.h ”文件，如图所示，把里面的全角符号改成半角。 参考资源https://github.com/Microsoft/AirSim/blob/master/docs/build_windows.md 一点感想在配置airsim时虽然已经有中文教程，但还是不断在踩坑，中间有两次都想放弃了。比如对于corect.h问题，我不知道怎么去重定向解决方案，刚开始试着在VisualStudio中编译文件，以期望得到重定项窗口，但没有成功。之后直接baidu，google搜索怎么修改项目的sdk版本，但得到的大多都是关于Android的问答，很难去准确定位信息。后来我选择直接以airsim，corect.h为关键词搜索，发现在项目的issue里确实有这个问题，但开发者只说是sdk版本的问题。最后在偶然去搜索corect.h时，在stackflow里找到了一个这样问答，https://stackoverflow.com/questions/38290169/cannot-find-corecrt-h-universalcrt-includepath-is-wrong/40164843 得到了解决方案。 Bingo ，如上图，AirSim配置成功，完成了本想放弃的事，感觉还不错。]]></content>
      <tags>
        <tag>工具</tag>
        <tag>自动驾驶仿真</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[开篇杂谈]]></title>
    <url>%2F%E5%BC%80%E7%AF%87%E6%9D%82%E8%B0%88.html</url>
    <content type="text"><![CDATA[香波地群岛，结束与再出发之地。 有个词叫做“恍若隔世”，我总不想去明白这个词，因为在感悟到它时，随之而来的必然有刹那的空虚吧。但掷硬币数十万次，偶然一次也会立于地面，活了几十年，各种情绪也终究无可避免。 感慨总很难被共情，此刻的他人感受不到自己，未来的自己也感受不了此刻，但还是记录下来，以求当某种光线，气味或者触感袭来时，自己能心有共鸣，或低头不由自主地笑或心有共鸣而口中喃喃自语。 这是我第一篇微博的内容，现在的我怎么都想不起来，当时的我是以何种心情敲下这些文字了，共情是一件很难得的事，从来都是如此。 我喜欢“围炉夜话”这几个字，喜欢“积雪四指，街景通明”这个景，喜欢“何当共剪西窗烛，却话巴山夜雨时”这句诗。《神雕侠侣》我最喜欢的是第三十三章，风陵夜话。 这些情景里面总会有几个朋友，会有很多话，那些话比海更阔，比天更空，但又都带着真心，在这里没有焦虑，没有面具，心里面总会一片安宁，大脑会因为完全卸下了防备而有一种懵懵的快乐。这是我一直追求的状态，但在现代社会里，这已经不再可能。我不是悲观，我知道不可能了。按《一句顶一万句》里的说法，这是东方人的千年孤独，一个人的孤独不是孤独，一个人找另一个人，一句话找另一句话才是孤独，实际我们所需的只是心与心的交流。 最开始用QQ和微信时，我很幸福。它们是在当面交流已被判定死刑后的第二池塘，但“社会和圈子”还是弄干了它们，鱼儿们被迫上岸，越来越沉默。这不能怪池塘水太少，也不能怪社会赶太紧，随着我们长大，这些都是必然降临的事。 现在我转向了博客，不同于面对面交流和社交平台实时交流的第三池塘。现在我还不能准确表达我选择博客的原因，就此停笔，不再多写。这应当是一种复古主义？既有妥协，也有前进，是非好坏，一年后再看了。]]></content>
      <tags>
        <tag>随笔</tag>
        <tag>生活</tag>
      </tags>
  </entry>
</search>
