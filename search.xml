<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[控制论]]></title>
    <url>%2F%E6%8E%A7%E5%88%B6%E8%AE%BA.html</url>
    <content type="text"><![CDATA[这篇文章是转载的，我写不了这么大的题目。没有几十年积累，也写不了这么好。 我一直注重博客本身的原创性，所以对转载非常谨慎。除非遇到好的让人惊叹的文章。 前面的笔记里，我也转载了理解矩阵这个系列。这些文章是有一些相似之处的，它们都用了一种全新又自洽的体系来解释经典的知识，写出来这种技术文章的，不需要什么文笔，只需要几十年的经验和认真深入的思考。这些文章把教育的魅力挥洒的淋漓尽致。 原作者笔名叫晨枫是一个军事爱好者，也是自动化的博士，他应当是60后，后来踏入了化工领域。从他这篇文章里，我除了学到了很多关于控制的脉络外，也再一次何谓“学会”，我很感激。 说回内容。文章主要是对控制论进行了一遍梳理，从开关控制，讲到了PID，又续着说了现代控制理论和MPC等，文中没有去列一大堆公式，举的例子都非常接地气，因此让人很容量理解。当然，我没有否定公式和数学推导在学习控制时的作用。我想强调的是，要想真正理解一门学科，掌握它的脉络是事半功倍的做法，也是绕不开的一步。 说来惭愧，我本科和研究生期间也是学过控制的，但控制在解决问题时的普适性，控制要解决的基本问题，我从来没弄明白过，只是会做一些简单的要考的题目而已。也就是在近期，我在调仿真系统控制模块的PID参数、学习卡尔曼滤波、研究路径跟踪时，才猛然发现，这不就是学过的控制问题吗？这些不都可以用学习时强调的概念去概括吗。自己还在一味去瞎想，真是舍近求远了。 于是就找到了这篇文章，看完豁然顿悟。原来这些知识是这样的发展历程。人类的智慧真是无穷无尽。 控制论是大显学，搞工科的可以学学，不管你是计算机，还是自动化，亦或是理化生。甚至搞哲学的，搞文学的，搞经济的，搞管理的，都可以学学这门学科，反馈和动态，简单模型背后的万千世界。认真学学，必然深受启发。、 那现在，让我们看看这篇文章吧。 引子小时候喜欢看杂书，没什么东西看，不正在文化大革命嘛？不过看进去了两个“化”：机械化和自动化。打小就没有弄明白，这机械化和自动化到底有什么差别，机器不是自己就会动的吗？长大了，总算稍微明白了一点，这机械化是力气活，用机器代替人的体力劳动，但还是要人管着的，不然机器是不知道该干什么不该干什么的；这自动化嘛，就是代替人的重复脑力劳动，是用来管机器的。也就是说，自动化是管着机械化的，或者说学自动化的是管着学机械的……啊，不对，不对，哪是哪啊！ 有人考证古代就有自动化的实例，但现代意义上的自动控制开始于瓦特的蒸汽机。据说纽考门比瓦特先发明蒸汽机，但是蒸汽机的转速控制问题没有解决，弄不好转速飞升，机器损坏不说，还可能说大事故。瓦特在蒸汽机的转轴上安了一个小棍，棍的一端和放汽阀连着，棍的另一端是一个小重锤，棍中间某个地方通过支点和转轴连接。转轴转起来的时候，重锤由于离心力的缘故挥起来。转速太高了，重锤挥得很高，放汽阀就被按下去，转速下降；转速太低了，重锤不起来，放汽阀就被松开，转速回升。这样，蒸汽机可以自动保持稳定的转速，即保证安全，又方便使用。也就是因为这个小小的转速调节器，瓦特的名字和工业革命连在一起，而纽考门的名字就要到历史书里去找了。 类似的例子在机械系统里很多，家居必备的抽水马桶是另一个例子。放水冲刷后，水箱里水位降低，浮子随水面下降，进水阀打开。随着水位的升高，进水阀逐渐关闭，直到水位达到规定高度，进水阀完全关闭，水箱的水正好准备下一次使用。这是一个非常简单但非常巧妙的水位控制系统，是一个经典的设计，但不容易用经典的控制理论来分析，不过这是题外话了。 这些机械系统设计巧妙，工作可靠，实在是巧夺天工。但是在实用中，如果每次都需要这样的创造性思维，那太累，最好有一个系统的方法，可以解决“所有”的自动控制问题，这就是控制理论的由来。 反馈和动态从小大人就教我们，走路要看路。为什么呢？要是不看着路，走路走歪了也不知道，结果就是东撞西撞的。要是看着路呢？走歪了，马上就看到，赶紧调整脚步，走回到正道上来。 这里有自动控制里的第一个重要概念：反馈（feedback）。 反馈是一个过程： 设定目标，对小朋友走路的例子来说，就是前进的路线。 测量状态，小朋友的眼睛看着路，就是在测量自己的前进方向。 将测量到的状态和设定的目标比较，把眼睛看到的前进方向和心里想的前进方向作比较，判断前进方向是否正确；如果不正确，相差有多少。 调整行动，在心里根据实际前进方向和设定目标的偏差，决定调整的量。 实际执行，也就是实际挪动脚步，重回正确的前进方向。在整个走路的过程中，这个反馈过程周而复始，不断进行，这样，小朋友就不会走得东倒西歪了。 但是，这里有一个问题：如果所有的事情都是在瞬时里同时发生的，那这个反馈过程就无法工作。要使反馈工作，一定要有一定的反应时间。还好，世上之事，都有一个过程，这就为反馈赢得了所需要的时间。 小时候，妈妈在锅里蒸东西，蒸好了，从锅里拿出来总是一个麻烦，需要抹布什么的垫着，免得烫手。但是碗和锅的间隙不大，连手带抹布伸进去颇麻烦，我常常不知天高地厚，自告奋勇地徒手把热的碗拿出来，只要动作快，手起碗落，可以不烫手，当然喽，要是捧着热碗再东晃晃，西荡荡，那手上感觉的温度最终会和热碗一样，肯定要把手心、手指烫熟不可的。在从接触碗到皮肤温度和碗表面一样，这里面有一个逐渐升温的过程，这就是动态过程（dynamicprocess）。这里面有两个东西要注意：一个是升温的过程有多快，另一个是最终的温度可以升到多少。要是知道了这两个参数，同时知道自己的手可以耐受多少温度，理论上可以计算出热的碗在手里可以停留多少时间而不至于烫手。 反馈过程也叫闭环（closedloop）过程。既然有闭环，那就有开环（openloop）。开环就是没有反馈的控制过程，设定一个控制作用，然后就执行，不根据实际测量值进行校正。开环控制只有对简单的过程有效，比如洗衣机和烘干机按定时控制，到底衣服洗得怎么样，烘得干不干，完全取决于开始时的设定。对于洗衣机、烘干机这样的问题，多设一点时间就是了，稍微浪费一点，但可以保证效果。 对于空调机，就不能不顾房间温度，简单地设一个开10分钟、关5分钟的循环，而应该根据实际温度作闭环控制，否则房间里的温度天知道到底会达到多少。 对于政府官员，更不能只顾计划不顾变化，盲目瞎指挥。记得80年代时，报告文学很流行。徐迟写了一个《哥德巴赫猜想》，于是全国人民都争当科学家。小说家也争着写科学家，成就太小不行，所以来一个语不惊人死不休，某大家写了一个《无反馈快速跟踪》。那时正在大学啃砖头，对这个科学新发现大感兴趣，从头看到尾，也没有看明白到底是怎么无反馈快速跟踪的。现在想想，小说就是小说，不过这无良作家也太扯，无反馈还要跟踪，不看着目标，不看着自己跑哪了，这跟的什么踪啊，这和永动机差不多了，怎么不挑一个好一点的题目，冷聚变什么的，至少在理论上还是可能的。题外话了。 在数学上，动态过程用微分方程描述，反馈过程就是在描述动态过程的微分方程的输入项和输出项之间建立一个关联，这样改变了微分方程本来的性质。自动控制就是在这个反馈和动态过程里做文章的。 开关控制房间内的空调是一个简单的控制问题。不过这只是指单一房间，整个高层大楼所有房间的中央空调问题实际上是一个相当复杂的问题，不在这里讨论的范围。夏天了，室内温度设在28度，实际温度高于28度了，空调机启动致冷，把房间的温度降下来；实际温度低于28度了，空调机关闭，让房间温度受环境气温自然升上去。通过这样简单的开关控制，室内温度应该就控制在28度。 不过这里有一个问题，如果温度高于28度一点点，空调机就启动；低于28度一点点，空调机就关闭；那如果温度传感器和空调机的开关足够灵敏的话，空调机的开关频率可以无穷高，空调机不断地开开关关，要发神经病了，这对机器不好，在实际上也没有必要。解决的办法是设立一个“死区”（deadband），温度高于29度时开机，低于27度时关机。注意不要搞反了，否则控制单元要发神经了。 有了一个死区后，室内温度不再可能严格控制在28度，而是在27到29度之间“晃荡”。如果环境温度一定，空调机的制冷量一定，室内的升温降温动态模型已知，可以计算温度“晃荡”的周期。这种开关控制看起来“土”，其实好处不少。对于大部分过程来说，开关控制的精度不高但可以保证稳定，或者说系统输出是“有界”的，也就是说实际测量值一定会被限制在一定的范围，而不可能无限制地发散出去。 这种稳定性和一般控制理论里强调的所谓渐进稳定性不同，而是所谓BIBO稳定性，前者要求输出最终趋向设定值，后者只要求在有界的输入作用下输出是有界的，BIBO指boundedinputboundedoutput。对于简单的精度要求不高的过程，这种开关控制（或者称继电器控制，relaycontrol，因为最早这种控制方式是用继电器或电磁开关来实现的）就足够了。 但是很多时候，这种“毛估估”的控制满足不了要求。汽车在高速公路上行驶，速度设在定速巡航控制，速度飘下去几公里，心里觉得吃亏了，但要是飘上去几公里，被警察抓下来吃一个罚单，这算谁的？ 开关控制是不连续控制，控制作用一加就是“全剂量”的，一减也是“全剂量”的，没有中间的过渡。如果空调机的制冷量有三个设定，：小、中、大，根据室温和设定的差别来决定到底是用小还是中还是大，那室温的控制精度就可以大大提高，换句话说，温度的“晃荡”幅度将大幅度减小。那么，如果空调机有更多的设定，从小小到小中到……到大大，那控制精度是不是更高呢？是的。既然如此，何不用无级可调的空调机呢？那岂不可以更精确地控制室温了吗？是的。 连续控制和PID无级可调或连续可调的空调机可以精确控制温度，但开关控制不能再用了。 家用空调机中，连续可调的不占多数，但冲热水淋浴是一个典型的连续控制问题，因为水龙头可以连续调节水的流量。冲淋浴时，假定冷水龙头不变，只调节热水。那温度高了，热水关小一点；温度低了，热水开打一点。换句话说，控制作用应该向减少控制偏差的方向变化，也就是所谓负反馈。 控制方向对了，还有一个控制量的问题。温度高了1度，热水该关小多少呢？经验告诉我们，根据具体的龙头和水压，温度高1度，热水需要关小一定的量，比如说，关小一格。换句话说，控制量和控制偏差成比例关系，这就是经典的比例控制规律：控制量=比例控制增益*控制偏差，偏差越大，控制量越大。控制偏差就是实际测量值和设定值或目标值之差。在比例控制规律下，偏差反向，控制量也反向。也就是说，如果淋浴水温要求为40度，实际水温高于40度时，热水龙头向关闭的方向变化；实际水温低于40度时，热水龙头向开启的方向变化。 但是比例控制规律并不能保证水温能够精确达到40度。在实际生活中，人们这时对热水龙头作微调，只要水温还不合适，就一点一点地调节，直到水温合适为止。这种只要控制偏差不消失就渐进微调的控制规律，在控制里叫积分控制规律，因为控制量和控制偏差在时间上的累积成正比，其比例因子就称为积分控制增益。工业上常用积分控制增益的倒数，称其为积分时间常数，其物理意义是偏差恒定时，控制量加倍所需的时间。这里要注意的是，控制偏差有正有负，全看实际测量值是大于还是小于设定值，所以只要控制系统是稳定的，也就是实际测量值最终会稳定在设定值上，控制偏差的累积不会是无穷大的。这里再啰嗦一遍，积分控制的基本作用是消除控制偏差的余差（也叫残差）。 比例和积分控制规律可以应付很大一类控制问题，但不是没有改进余地的。如果水管水温快速变化，人们会根据水温的变化调节热水龙头：水温升高，热水龙头向关闭方向变化，升温越快，开启越多；水温降低，热水龙头向开启方向变化，降温越快，关闭越多。这就是所谓的微分控制规律，因为控制量和实际测量值的变化率成正比，其比例因子就称为比例控制增益，工业上也称微分时间常数。微分时间常数没有太特定的物理意义，只是积分叫时间常数，微分也跟着叫了。 微分控制的重点不在实际测量值的具体数值，而在其变化方向和变化速度。微分控制在理论上和实用中有很多优越性，但局限也是明显的。如果测量信号不是很“干净”，时不时有那么一点不大不小的“毛刺”或扰动，微分控制就会被这些风吹草动搞得方寸大乱，产生很多不必要甚至错误的控制信号。所以工业上对微分控制的使用是很谨慎的。比例-积分-微分控制规律是工业上最常用的控制规律。人们一般根据比例-积分-微分的英文缩写，将其简称为PID控制。即使在更为先进的控制规律广泛应用的今天，各种形式的PID控制仍然在所有控制回路中占85%以上。 PID整定在PID控制中，积分控制的特点是：只要还有余差（即残余的控制偏差）存在，积分控制就按部就班地逐渐增加控制作用，直到余差消失。所以积分的效果比较缓慢，除特殊情况外，作为基本控制作用，缓不救急。微分控制的特点是：尽管实际测量值还比设定值低，但其快速上扬的冲势需要及早加以抑制，否则，等到实际值超过设定值再作反应就晚了，这就是微分控制施展身手的地方了。作为基本控制使用，微分控制只看趋势，不看具体数值所在，所以最理想的情况也就是把实际值稳定下来，但稳定在什么地方就要看你的运气了，所以微分控制也不能作为基本控制作用。 比例控制没有这些问题，比例控制的反应快，稳定性好，是最基本的控制作用，是“皮”，积分、微分控制是对比例控制起增强作用的，极少单独使用，所以是“毛”。在实际使用中比例和积分一般一起使用，比例承担主要的控制作用，积分帮助消除余差。微分只有在被控对象反应迟缓，需要在开始有所反应时，及早补偿，才予以采用。只用比例和微分的情况很少见。 连续控制的精度是开关控制所不可比拟的，但连续控制的高精度也是有代价的，这就是稳定性问题。控制增益决定了控制作用对偏差的灵敏度。既然增益决定了控制的灵敏度，那么越灵敏岂不越好？非也。还是用汽车的定速巡航控制做例子。速度低一点，油门加一点，速度低更多，油门加更多，速度高上去当然就反过来。但是如果速度低一点，油门就狂加，导致速度高一点，油门再狂减，这样速度不但不能稳定在要求的设定值上，还可能失控。这就是不稳定。 所以控制增益的设定是有讲究的。在生活中也有类似的例子。国民经济过热，需要经济调整，但调整过火，就要造成“硬着陆”，引起衰退；衰退时需要刺激，同样，刺激过火，会造成过热。要达成“软着陆”，经济调整的措施需要恰到好处。这也是一个经济动态系统的稳定性问题。 实际中到底多少增益才是最合适的，理论上有很多计算方法，但实用中一般是靠经验和调试来摸索最佳增益，业内行话叫参数整定。如果系统响应在控制作用后面拖拖沓沓，大幅度振荡的话，那一般是积分太过；如果系统响应非常神经质，动不动就打摆子，呈现高频小幅度振荡的话，那一般是微分有点过分。中频振荡当然就是比例的问题了。不过各个系统的频率都是不一样的，到底什么算高频，什么算低频，这个几句话说不清楚，应了毛主席那句话：“具体情况具体分析”，所以就打一个哈哈了。 再具体说起来，参数整定有两个路子。一是首先调试比例增益以保证基本的稳定性，然后加必要的积分以消除余差，只有在最必要的情况下，比如反映迟缓的温度过程或容量极大的液位过程，测量噪声很低，才加一点微分。这是“学院派”的路子，在大部分情况下很有效。 但是工业界有一个“歪路子”：用非常小的比例作用，但大大强化积分作用。这个方法是完全违背控制理论的分析的，但在实际中却是行之有效，原因在于测量噪声严重，或系统反应过敏时，积分为主的控制规律动作比较缓和，不易激励出不稳定的因素，尤其是不确定性比较高的高频部分，这也是邓小平“稳定压倒一切”的初衷吧。 在很多情况下，在初始PID参数整定之后，只要系统没有出现不稳定或性能显著退化，一般不会去重新整定。但是要是系统不稳定了怎么办呢？由于大部分实际系统都是开环稳定的，也就是说，只要控制作用恒定不变，系统响应最终应该稳定在一个数值，尽管可能不是设定值，所以对付不稳定的第一个动作都是把比例增益减小，根据实际情况，减小1/3、1/2甚至更多，同时加大积分时间常数，常常成倍地加，再就是减小甚至取消微分控制作用。如果有前馈控制，适当减小前馈增益也是有用的。在实际中，系统性能不会莫名其妙地突然变坏，上述“救火”式重新整定常常是临时性的，等生产过程中的机械或原料问题消除后，参数还是要设回原来的数值，否则系统性能会太过“懒散”。 对于新工厂，系统还没有投运，没法根据实际响应来整定，一般先估计一个初始参数，在系统投运的过程中，对控制回路逐个整定。我自己的经验是，对于一般的流量回路，比例定在0.5左右，积分大约1分钟，微分为0，这个组合一般不致于一上来就出大问题。温度回路可以从2、5、0.05开始，液位回路从5、10、0开始，气相压力回路从10、20、0开始。既然这些都是凭经验的估计，那当然要具体情况具体分析，不可能“放之四海而皆准”。 微分一般用于反应迟缓的系统，但是事情总有一些例外。我就遇到过一个小小的冷凝液罐，直径才两英尺，长不过5英尺，但是流量倒要8-12吨/小时，一有风吹草动，液位变化非常迅速，不管比例、积分怎么调，液位很难稳定下来，常常是控制阀刚开始反应，液位已经到顶或到底了。最后加了0.05的微分，液位一开始变化，控制阀就开始抑制，反而稳定下来了。这和常规的参数整定的路子背道而驰，但在这个情况下，反而是“唯一”的选择，因为测量值和控制阀的饱和变成稳定性主要的问题了。 经典的系统稳定性对工业界以积分为主导控制作用的做法再啰嗦几句。学术上，控制的稳定性基本就是渐近稳定性，BIBO稳定性是没有办法证明渐近稳定性时的“退而求其次”的东西，不怎么上台面的。但是工业界里的稳定性有两个看起来相似、实质上不尽相同的方面：一个当然是渐近稳定性，另一个则是稳定性，但不一定向设定值收敛，或者说稳定性比收敛性优先这样一个情况。具体来说，就是需要系统稳定在一个值上，不要动来动去，但是不是在设定值并不是太重要，只要不是太离谱就行。 例子有很多，比如反应器的压力是一个重要参数，反应器不稳定，原料进料比例就乱套，催化剂进料也不稳定，反应就不稳定，但是反应器的压力到底是10个大气压还是12个大气压，并没有太大的关系，只要慢慢地但是稳定地向设定值移动就足够了。这是控制理论里比较少涉及的一个情况，这也是工业上时常采用积分主导的控制的一个重要原因。 前面说到系统的频率，本来也就是系统响应持续振荡时的频率，但是控制领域里有三拨人在捣腾：一拨是以机电类动力学系统为特色的电工出身，包括航空、机器人等，一拨是以连续过程为特色的化工出身的，包括冶金、造纸等，还有一拨是以微分方程稳定性为特色的应用数学出身的。在瓦特和抽水马桶的年代里，各打各的山头，井水不犯河水，倒也太平。但控制从艺术上升为理论后，总有人喜欢“统一”，电工帮抢了先，好端端的控制理论里被塞进了电工里的频率。童子们哪，那哪是频率啊，那是……复频率。既然那些变态的电工帮能折腾出虚功率，那他们也能折腾出复频率来，他们自虐倒也算了，只是苦了我等无辜之众，被迫受此精神折磨。 事情的缘由是系统的稳定性。前面提到，PID的参数如果设得不好，系统可能不稳定。除了摸索，有没有办法从理论上计算出合适的PID参数呢？前面也提到，动态过程可以用微分方程描述，其实在PID的阶段，这只是微分方程中很狭窄的一支：单变量线性常微分方程。要是还记得大一高数，一定还记得线形常微的解，除了分离变量法什么的，如果自变量时间用t表示的话，最常用的求解还是把exp(λt)代入微分方程，然后解已经变成λ的代数方程的特征方程，解出来的解可以是实数，也可以是复数，是复数的话，就要用三角函数展开了（怎么样，大一噩梦的感觉找回来一点没有？）。只要实根为负，那微分方程就是稳定的，因为负的指数项最终向零收敛，复根到底多少就无所谓了，对稳定性没有影响。但是，这么求解分析起来还是不容易，还是超不出“具体情况具体分析”，难以得出一般的结论。 法国人以好色、好吃出名，但是他们食色性也之后，还不老实，其中一个叫拉普拉斯的家伙，捣鼓出什么拉普拉斯变换，把常微分方程变成s的多项式。然后那帮电工的家伙们，喜欢自虐，往s里塞jω，就是那个复频率，整出一个变态的频率分析，用来分析系统的稳定性。不过说变态，也不完全公平，在没有计算机的年代，各种图表是最有效的分析方法，还美其名曰“几何分析”。频率分析也不例外。美国佬Evans搞出一个根轨迹（rootlocus），思路倒是满有意思的。他用增益作自变量，将系统的根（不管实的虚的）在复平面上画出轨迹来，要是轨迹在左半平面打转转，那就是实根为负，就是稳定的。再深究下去，系统响应的临界频率之类也可以计算出来。 最大的好处是，对于常见的系统，可以给出一套作图规则来，熟练的大牛、小牛、公牛、母牛们，眼睛一瞄，随手就可以画出根轨迹来，然后就可以告诉你，增益变化多多少，系统开始振荡，再增加多少，系统会不稳定，云云。根轨迹还是比较客气的，还有更变态的奈奎斯特、伯德和尼科尔斯法，想想脑子都大。都是叫那帮电工分子害的。 时至今日，计算机分析已经很普及了，但是古典的图示分析还是有经久不衰的魅力，就是因为图示分析不光告诉你系统是稳定还是不稳定，以及其他一些动态响应的参数，图示分析还可以定性地告诉你增益变化甚至系统参数变化引起的闭环性能变化。咦，刚才还不是在说人家变态吗？呃，变态也有变态的魅力不是？哈哈。 非常规PID以频率分析（也称频域分析）为特色的控制理论称为经典控制理论。经典控制理论可以把系统的稳定性分析得天花乱坠，但有两个前提：一、要已知被控对象的数学模型，这在实际中不容易得到；二、被控对象的数学模型不会改变或漂移，这在实际中更难做到。 对简单过程建立微分方程是可能的，但简单过程的控制不麻烦，经验法参数整定就搞定了，不需要费那个事，而真正需要理论计算帮忙的回路，建立模型太困难，或者模型本身的不确定性很高，使得理论分析失去意义。经典控制理论在机械、航空、电机中还是有成功的应用，毕竟从F=ma出发，可以建立“所有”的机械系统的动力学模型，铁疙瘩的重量又不会莫名其妙地改变，主要环境参数都可以测量。但是经典控制理论至少在化工控制中实用成功的例子实在是凤毛麟角，给你一个50块塔板的精馏塔，一个气相进料，一个液相进料，塔顶、塔底出料加一个侧线出料，塔顶风冷冷凝器，塔底再沸器加一个中间再沸器，你就慢慢建模去吧，等九牛二虎把模型建立起来了，风冷冷凝器受风霜雨雪的影响，再沸器的高压蒸汽的压力受友邻装置的影响，气相进料的温度和饱和度受上游装置的影响而改变，液相进料的混合组分受上游装置的影响而改变，但组分无法及时测量（在线气相色谱分析结果要45分钟才能出来），动态特性全变了。老家伙歌德两百年前就说了，理论是灰色的，生命之树常青。 在实用中，PID有很多表兄弟，帮着大表哥一块打天下。比例控制的特点是：偏差大，控制作用就大。但在实际中有时还嫌不够，最好偏差大的时候，比例增益也大，进一步加强对大偏差的矫正作用，及早把系统拉回到设定值附近；偏差小的时候，当然就不用那么急吼吼，慢慢来就行，所以增益小一点，加强稳定性。这就是双增益PID（也叫双模式PID）的起源。想想也对，高射炮瞄准敌机是一个控制问题。如果炮管还指向离目标很远的角度，那应该先尽快地把炮管转到目标角度附近，动作猛一点才好；但炮管指向已经目标很近了，就要慢慢地精细瞄准。工业上也有很多类似的问题。 双增益PID的一个特例是死区PID（PIDwithdeadband），小偏差时的增益为零，也就是说，测量值和设定值相差不大的时候，就随他去，不用控制。这在大型缓冲容器的液位控制里用得很多。本来缓冲容器就是缓冲流量变化的，液位到底控制在什么地方并不紧要，只要不是太高或太低就行。但是，从缓冲容器流向下游装置的流量要尽可能稳定，否则下游装置会受到不必要的扰动。死区PID对这样的控制问题是最合适的。但是天下没有免费的午餐。死区PID的前提是液位在一般情况下会“自动”稳定在死区内，如果死区设置不当，或系统经常受到大幅度的扰动，死区内的“无控”状态会导致液位不受限制地向死区边界“挺进”，最后进入“受控”区时，控制作用过火，液位向相反方向不受限制地“挺进”，最后的结果是液位永远在死区的两端振荡，而永远不会稳定下来，业内叫hunting。 双增益PID也有同样的问题，只是比死区PID好一些，毕竟只有“强控制”和“弱控制”的差别，而没有“无控区”。在实用中，双增益的内外增益差别小于2：1没有多大意义，大于5：1就要注意上述的持续振荡或hunting的问题。 双增益或死区PID的问题在于增益的变化是不连续的，控制作用在死区边界上有一个突然的变化，容易诱发系统的不利响应，平方误差PID就没有这个问题。误差一经平方，控制量对误差的曲线就成了抛物线，同样达到“小偏差小增益、大偏差大增益”的效果，还没有突然的不连续的增益变化。但是误差平方有两个问题：一是误差接近于零的时候，增益也接近于零，回到上面死区PID的问题；二是很难控制抛物线的具体形状，或者说，很难制定增益在什么地方拐弯。 对于第一个问题，可以在误差平方PID上加一个基本的线性PID，使零误差时增益不为零；对于后一个问题，就要用另外的模块计算一个连续变化的增益了。具体细节比较琐碎，将偏差送入一个分段线性化（也就是折线啦）的计算单元，然后将计算结果作为比例增益输出到PID控制器，折线的水平段就对应予不同的增益，而连接不同的水平段的斜线就对应于增益的连续变化。通过设置水平段和斜线段的折点，可以任意调整变增益的曲线。 要是“野心”大一点，再加几个计算单元，可以做出不对称的增益，也就是升温时增益低一点，降温时增益高一点，以处理加热过程中常见的升温快、降温慢的问题。双增益或误差平方都是在比例增益上作文章，同样的勾当也可以用在积分和微分上。 更极端的一种PID规律叫积分分离PID，其思路是这样的：比例控制的稳定性好，响应快，所以偏差大的时候，把PID中的积分关闭掉；偏差小的时候，精细调整、消除余差是主要问题，所以减弱甚至关闭比例作用，而积分作用切入控制。概念是好的，但具体实施的时候，有很多无扰动切换的问题。这些变态的PID在理论上很难分析系统的稳定性，但在实用中解决了很多困难的问题。大言不惭一句，这些PID本人在实际中都用过。 复杂结构PID打仗时，如果敌人太顽固，要么换更大的炮，把敌人轰倒；要么采用更巧妙的战术，把敌人晕倒。控制也是一样，单回路PID难以解决的问题，常常可以通过更巧妙的回路结构来解决。单一的PID回路当然可以实现扰动抑制，但要是主要扰动在回路中，而且是明确的，加一个内回路作帮手是一个很不错的主意。 还记得洗热水澡的例子吗？要是热水压力不稳定，老是要为这个而调整热水龙头，那很麻烦。要是有一个人专门负责根据热水压力调节热水流量，把热水流量稳定下来，而且稳定在标定值，那洗澡的时候，水温就容易控制多了，只要告诉那个人现在需要多少热水流量，而不必烦心热水压力对热水流量的影响。这个负责热水流量的控制回路就是内回路，也叫副回路，而洗澡的温度就是外回路，也叫主回路，当然是主回路指挥副回路，就像自动化指挥机械化、学自控的人指挥学机电的人……打住打住……。这种主回路套副回路的结构叫串级控制（cascadecontrol），曾经是单回路PID后工业上第一种“先进过程控制”，现在串级已经用得很多了，也不再有人叫它“先进过程控制”了。 串级控制最主要的功用是抑制回路内的扰动，增强总体控制性能。不过串级也不能乱用。如果主回路和副回路的响应速度差不多，或者主回路的相应速度甚至慢于副回路（通过变态的调试是可以做到的），这样的串级要出问题。理论上可以用共振频率什么的分析，但是不用费那个事，用膝盖想想就知道，一个急性子的头儿把一个温吞水的下属指挥得团团转，结果只能是大家都精疲力竭，事情还办砸了。相反，一个镇定自若的头儿指挥一个手脚麻利的下属，那事情肯定办得好。 如果主要扰动在回路以外，但是可以预知，那就要用另一个办法，就是前馈了。还是用洗热水澡的例子。如果冷水管和同一个水房的抽水马桶共用，你在洗澡，别人一抽水，那你就变煮熟的龙虾了（本想说猴子PP的，但是那个不雅，我们要五讲四美不是？）。这个时候，要是那个人在抽水的同时告诉你一声，你算好时间，算好量，猛减热水，那温度还是可以大体不变的。这就是所谓前馈控制（feedforwardcontrol）。 前馈控制有两个要紧的东西：一是定量的扰动对被控变量的影响，也就是所谓前馈增益；二是扰动的动态，别人抽水到洗澡龙头的水温变热，这里面有一个过程，不是立时三刻的。如果可以精确知道这两样东西，那前馈补偿可以把可测扰动完全补偿掉。但实际上没有精确知道的事情，要是指望前馈来完全补偿，弄巧成拙是肯定的。 所以前馈通常和反馈一起用，也就是在PID回路上再加一个前馈。一般也只用静态前馈，也就是只补偿扰动对被控变量的静态影响，而忽略扰动的动态因素，主要是因为静态前馈已经把前馈80%的好处发掘出来了。动态前馈既复杂又不可靠，在PID回路里很少有人用。理论上的前馈都是在PID的控制作用上再加一个前馈作用，实际上也可以乘一个控制作用。乘法前馈的作用太猛，我从来没有用过，一般都是用加法。在实施中，前馈是和扰动的变化（也就是增量）成比例，所以扰动变量不变了，前馈作用就消失，否则，整定前馈控制增益会对PID主回路造成扰动。 前馈增益可以根据粗略计算得到，比如说，抽水的量会造成温度下降多少、需要调整多少热水流量才能维持温度，这不难从热量平衡算出来。不想费这个事的话，也可以从历史数据中推算。一般算出来一个前馈增益后，打上7折甚至5折再用，保险一点，不要矫枉过正。 前馈作用一般是用作辅助控制作用的，但是在特殊情况下，前馈也可以作为“预加载”（pre-loading）作为基准控制作用。比如说，在一个高压系统的启动过程中，压力可以从静止状态的常压很快地升到很高的压力。正常情况下，高压系统不容许阀门大幅度运动，所以控制增益都比较低，但是这样一来，启动升压过程中，压力控制的反应就十分迟缓，容易造成压力过高。这时用压缩机的转速或高压进料的流量作前馈，将压力控制阀“预先”放到大概的位置，然后再用反馈慢慢调节，就可以解决这个问题。 有时用单个阀门难以控制大范围变化的流量，这是一个很实际的问题。工业阀门一般turndown只有10：1，也就是说，如果这个阀门的最大流量是100吨/小时的话，低于10吨/小时就难以控制了，当然，高于90吨/小时也几近失去控制。所以，要真的保证0-100的精确控制，需要将一个大阀和一个小阀并列，小阀负责小流量时的精确控制，大阀负责大流量时的精确控制，这就是所谓的分程控制（splitrangecontrol）。分程控制时，小阀首先打开，超过小阀最大流量时，小阀就固定在全开位置，大阀开始打开，接过控制。这是开-开型分程控制。也有关-开型分程控制，比如反应器夹套温度控制，随温度逐渐上升，冷却水逐渐关闭，直到冷却水全关，加热蒸气开始打开。分程控制当然不一定只有两截，三截甚至更多都是可以的，道理都一样。 分程控制的问题在于不同阀门的交接点。阀门在特别小的开度时，控制非常不灵敏，前面说到的10：1也是这个道理。所以实用中，开-开型分程控制常常在交接点附近有一段重叠，也就是小阀快要全开但还没有全开时，大阀已经开始动作，这样，到小阀全开、不能再动弹时，大阀已经进入有效控制范围。关-开型分程控制常常在交接点设置一个死区，避免出现两个阀都有一点点开度的情况。分程控制的交接点的设置有一点讲究，应该根据阀的大小。比如A阀比B阀大一倍，那分程点应该设在1/3先开B阀，而不是懒汉做法的1/2。 很多过程参数都是可以测量的，但也有很多参数是没法直接测量的，这时，如果能够通过别的可以测量的过程参数来间接计算真正需要控制的参数，这就是所谓的推断控制（inferentialcontrol）。比如精馏塔顶的产品纯度可以用气相色谱（gaschromatograph，GC）来测量，但结果要等40分钟才能出来，用来做实时控制，黄花菜都凉了。推断控制是和“软传感器”（softsensor）的概念紧密相连的。对精馏塔塔顶纯度这个例子来说，可以用纯度和塔顶温度、压力作一个数学模型，用可以测量的温度和压力，间接计算出纯度。在计算机控制普及的今天，这是很容易实现的，但是在很多地方，推断控制仍然被看成很神秘的东西，悲哀。 有的时候，对同一个变量有不止一个控制手段。比如说，风冷器有风扇的转速可以调节，也有百叶窗的开度可以调节。风扇转速的效果快，控制精确；百叶窗开度的效果猛，不容易掌握，但有利于节能。所以，可以用风扇的快速响应来控制温度，但是用百叶窗开度来通过温度间接地缓慢地影响风扇的转速，使风扇转速回到最经济的设定。当然百叶窗开度的控制回路必须要比风扇转速的控制回路整定得慢得多，一般是缓慢的纯积分控制，否则两人要打架。由于这相当于控制风扇转速的“阀位”，工业上称其为阀位控制（valvepositioncontrol）。这个阀位控制也可以变一变，风扇转速高于某一数值（比如80%的最大转速）时，把百叶窗开大一格，还是高就继续开大；风扇转速低于某一数值（比如低于20%最大转速）时，把百叶窗关小一格。 这实际上是一个单向的积分作用，不同的地方有两点 有两个设定值，由风扇转速是高还是低而定 积分作用(也就是百叶窗的作用)只有在风扇转速在这两个“极限”的外面起作用，在里面时，百叶窗的开度不变这样，风扇转速不必回到一个特定值，而是可以在一个范围内浮动。 另外一个两个控制器“竞争”一个控制阀的情况是选择性控制（overridecontrol或selectivecontrol）。举个例子，锅炉的温度由燃料流量控制，温度高了，燃料流量就减下来，但是燃料流量低到燃料管路压力低于炉膛压力，那要出现危险的回火，所以，这时，燃料管路压力就要接管控制，而牺牲炉膛温度。换句话说，正常时候，炉膛温度控制起作用，燃料管路压力低于一定数值时，燃料管路压力控制器作用。在实施时，就是炉膛温度控制器和燃料管路压力控制器的输出都接到一个高选器，然后高选器的输出接到实际的燃料阀。这个概念很清楚，但是初次接触选择性控制的人，常常容易被高选还是低选搞糊涂，明明是压力太低，怎么是高选呢？其实，只要记住高选还是低选是从阀门这一头看的，和温度、压力的高度没有关系，就不会搞晕了。如果“非常”变量超过界限了，你要阀门打开，那就是高选；你要阀门关闭，那就是低选。 现代控制理论PID从二、三十年代开始在工业界广泛应用，戏法变了几十年，也该换换花样了。PID说一千道一万，还是经典控制理论的产物。50-60年代时，什么都要现代派，建筑从经典的柱式、比例、细节的象征意义，变到“形式服从功能”的钢架玻璃盒子；汽车从用机器牵引的马车，变到流线型的钢铁的艺术；控制理论也要紧跟形势，要现代化。这不，美国佬卡尔曼隆重推出……现代控制理论。 都看过舞龙吧？一个张牙舞爪的龙头气咻咻地追逐着一个大绣球，龙身子扭来扭去，还时不时跳跃那么一两下。中国春节没有舞龙，就和洋人的圣诞节没有圣诞老人一样不可思议。想象一下，如果这是一条眼睛看不见的盲龙，只能通过一个人捏着龙尾巴在后面指挥，然后再通过龙身体里的人一个接一个地传递控制指令，最后使龙头咬住绣球。这显然是一个动态系统，龙身越长，人越多，动态响应越迟缓。如果只看龙头的位置，只操控龙尾巴，而忽略龙身子的动态，那就是所谓的输入-输出系统。经典控制理论就是建立在输入-输出系统的基础上的。对于很多常见的应用，这就足够了。但是卡尔曼不满足于“足够”。龙头当然要看住，龙尾巴当然要捏住，但龙身体为什么就要忽略呢？要是能够看住龙身体，甚至操纵龙身体，也就是说，不光要控制龙尾巴，控制指令还要直接传到龙身体里的那些人，那岂不更好？这就是状态空间的概念：将一个系统分解为输入、输出和状态。输出本身也是一个状态，或者是状态的一个组合。在数学上，卡尔曼的状态空间方法就是将一个高阶微分方程分解成一个联立的一阶微分方程组，这样可以使用很多线形代数的工具，在表述上也比较简洁、明了。 卡尔曼是一个数学家。数学家的想法就是和工程师不一样。工程师脑子里转的第一个念头就是“我怎么控制这劳什子？增益多少？控制器结构是什么样的？”数学家想的却是什么解的存在性、唯一性之类虚头八脑的东西。不过呢，这么说数学家也不公平。好多时候，工程师凭想象和“实干”，辛苦了半天，发现得出的结果完全不合情理，这时才想起那些“性”（不要想歪了啊，嘿嘿），原来那些存在性、唯一性什么的还是有用的。 还是回过来看这条龙。现在，龙头、龙尾巴、龙身体都要看，不光要看，还要直接操控龙头到龙尾的每一个人。但是，这龙不是想看就看得的，不是想舞就舞得的。说到“看”，直接能够测量/观测的状态在实际上是不多的，所谓看，实际上是估算。要是知道龙身体有多少节（就是有多少个人在下面撑着啦），龙身体的弹性/韧性有多少，那么捏住龙尾巴抖一抖，再看看龙头在哪里，是可以估算出龙身体每一节的位置的，这叫状态观测。那么，要是这龙中间有几个童子开小差，手不好好拉住，那再捏住龙尾巴乱抖也没用，这时系统中的部分状态就是不可观测的。如果你一声令下，部分童子充耳不闻，那这些状态就是不可控制的。卡尔曼从数学上推导出不可控和不可观的条件，在根本上解决了什么时候才不是瞎耽误工夫的问题。这是控制理论的一个重要里程碑。 再来看这条龙。如果要看这条龙整齐不整齐，排成纵列的容易看清楚；如果要清点人数，看每一个人的动作，排成横列的容易看清楚。但是不管怎么排，这条龙还是这条龙，只是看的角度不同。那时候中国人的春节舞龙还没有在美国的中国城里闹腾起来，不知道卡尔曼有没有看到过舞龙，反正他把数学上的线性变换和线性空间的理论搬到控制里面，从此，搞控制的人有了工具，一个系统横着看不顺眼的话，可以竖着看，兴趣来了，还可以斜着看、倒着看、拧着看，因为不管怎么看，系统的本质是一样的。但是不同的角度有不同的用处，有的角度设计控制器容易一点，有的角度分析系统的稳定性容易一点，诸如此类，在控制理论里就叫这个那个“标准型”。这是控制理论的又一个里程碑。 观测状态的目的最终还是控制。只用输出的反馈叫输出反馈，经典控制理论里的反馈都可以归到输出反馈里，但是用状态进行反馈的就叫状态反馈了。输出反馈对常见系统已经很有效了，但状态反馈要猛得多。你想象，一个系统的所有状态都被牢牢地瞄住，所有状态都乖乖地听从调遣，那是何等的威风？台商大奶们的最高境界呀。 尽管学控制的人都要学现代控制理论，但大多数人记得卡尔曼还是因为那个卡尔曼滤波器（KalmanFilter）。说它是滤波器，其实是一个状态观测器（stateobserver），用来从输入和输出“重构”系统的状态。 这重构听着玄妙，其实不复杂。不是有系统的数学模型吗？只要模型精确，给它和真实系统一样的输入，它不就乖乖地把系统状态给计算出来了吗？且慢：微分方程的解不光由微分方程本身决定，还有一个初始条件，要是初始条件不对，微分方程的解的形式是正确的，但是数值永远差一拍。卡尔曼在系统模型的微分方程后再加了一个尾巴，把实际系统输出和模型计算的理论输出相比较，再乘上一个比例因子，形成一个实际上的状态反馈，把状态重构的偏差渐进地消除，解决了初始条件和其他的系统误差问题。 卡尔曼滤波器最精妙之处，在于卡尔曼推导出一个系统的方法，可以考虑进测量噪声和系统本身的随机噪声，根据信噪比来决定上述比例因子的大小。这个构型其实不是卡尔曼的独创，隆伯格（Luenburg）也得出了类似的结构，但是从系统稳定性角度出发，来决定比例因子。 同样的结构大量用于各种“预测-校正”模型结构，在工业上也得到很多应用，比如聚合反应器的分子重量分布可以用反应器的温度、进料配比、催化剂等来间接计算，但不够精确，也无法把林林总总的无法测量的干扰因素统统包括进数学模型里，这时用实验室测定的真实值来定期校正，就可以结合数学模型及时地特点和实验室结果精确的特点，满足实时控制的要求，这或许可以算静态的卡尔曼滤波器吧。 卡尔曼滤波器最早的应用还是在雷达上。所谓边扫描边跟踪，就是用卡尔曼滤波器估计敌机的位置，再由雷达的间隙扫描结果来实际校正。实际应用中还有一个典型的问题：有时候，对同一个变量可以有好几个测量值可用，比如有的比较直接但不精确，有的是间接的估算，有很大的滞后但精确度高，这时可以用卡尔曼滤波器把不同来源的数据按不同的信噪比加权“整合”起来，也算是民用版的“传感器融合”（sensorfusion）吧。 除了卡尔曼滤波器外，卡尔曼的理论在实际中用得不多，但是卡尔曼的理论在理论上建立了一个出色的框架，对理解和研究控制问题有极大的作用。顺便说一句，卡尔曼的理论基本局限于线形系统，也就是说，十块大洋买一袋米，二十块大洋就买两袋米，都是成比例的。实际系统中有很多非线性的，两千块大洋还能买两百袋米，但两千万大洋就要看米仓有没有货了，不是钱越多，买的米越多，有一个“饱和”的问题。另一方面，要是米仓有足够的货，两千万大洋的集团购买力强，或许就可以买三百万袋米了。这些只是非线性的简单例子。所有偏离线性问题的都是非线性，所以非线性的问题研究起来要复杂得多。实际系统还有其他特性，有的是所谓时变系统，像宇宙火箭，其质量随时间和燃料的消耗而变，系统特性当然也就变了。很多问题都是多变量的，像汽车转弯，不光方向盘是一个输入，油门和刹车也是输入变量。状态空间的理论在数学表述上为线性、非线性、单变量、多变量、时变、时不变系统提供了一个统一的框架，这是卡尔曼最大的贡献。 最优控制前面说到，搞控制有三拨人：电工出身的，化工出身的，和应用数学出身的。在卡尔曼之前，电工出身的占主导地位，数学家们好在象牙塔里打转转，化工出身则还对控制理论懵里懵懂，还在“实干”呢。卡尔曼之后，一大批数学出身的人，利用对数学工具的熟悉，转攻控制理论。一时间，控制理论的数学化似乎成了“天下大势，顺我者昌，逆我者亡”了。在状态空间的框架下，多变量没有太多的问题好研究，于是最优化成为控制理论的新时尚。对于一根给定的曲线，求一阶导数为零的点，就是这个曲线的极点；在对这一极点求二阶导数，大于零就是最小点，小于零就是最大点。这是牛顿老爷子就整明白的东东，现在高中或大一人人都学过的东西。但是动态系统是一个微分方程，对微分方程求一阶导数为零，就导致变分法和所谓欧拉方程。但这个东西用起来不方便。实际的最优控制不大直接使用变分。 俄罗斯是一个奇怪的地方。老毛子们要么蔫蔫的，要么疯狂的。俄罗斯的悲剧电影看得你也郁闷得想去自杀。但是老毛子要是搭错筋整出一个喜剧呢？那你要么跟着疯狂，要么被逼疯狂。就是这么一个地方，除了无数托尔斯泰、柴可夫斯基、普希金、屠格涅夫等文艺巨璧外，俄罗斯也盛产数学家，其中两个是庞特里亚京和学控制的人老惦记着的李亚普诺夫。庞特里亚京的极大值原理听起来吓人，其实说白了很简单。看见那山吗？山顶就是最高点（切，这还用说？）；看见那山坡吗？要是在山腰划一道线，从山下往上爬，尽管山坡还在继续往上延伸，但是到线为止，不得逾越，那山腰上那道三八线就是最高点（切，这还用说？）。这就是庞特里亚京的极大值原理。当然啦，庞特里亚京是用精巧、深奥的数学语言表述的，要不然他在数学界里也别混了。不过呢，意思就是这么一个意思。 庞特里亚京极大值原理的一个典型应用就是所谓最速控制问题，或者叫时间最优控制（timeoptimalcontrol）问题，简单地说，就是给定最大马力和最大刹车功率，问题是怎么开汽车能够最快地从A点开到B点（什么转弯、上下坡、红绿灯，这种琐碎的事情也要拿来烦人？一点品味都没有！）。你可以用优美但繁琐的数学求证，或者用膝盖想想：最快的方法，就是一上来就加足马力，全速前进；然后在不到终点的某一地点，全力刹车，使慢下来的汽车在到达终点时正好停下来。这是最快的方法，不可能比这更快了。稍微发挥一点想象力，可以想象“梆”的一下，控制量的油门板一脚到底，再是“梆”的一下，刹车板一脚到底，控制任务就完成了。所以最速控制也叫“梆-梆”控制（bangbangcontrol）。 最速控制在理论上是一个很有趣的问题，解法也是简洁、优美，但在实际中直接使用的例子实在是凤毛麟角，一般都是开始时用“梆-梆”，或者匀速上升到最大控制，以缓和控制的冲击力；到终点附近时，改用PID作闭环微调，以克服“梆-梆”对系统模型误差十分敏感的缺点。电梯控制就是这样一个例子。从一楼到四楼，电动机很快匀速上升到最高转速，一过三楼，电动机就下降到较低的转速，然后根据电梯实际位置和楼面之差，有控制地减速，直至停下来。要是控制参数调得好的话，一下子就稳稳当当地停下来；要是调的不够好，会在停下来之前上下晃荡几下。 最速控制问题是较早的最优控制问题，它提供了一个很有趣的思路，但这颗树上开花结果不多。相比之下，最优控制的另外一支枝繁叶茂，有生气得多了。这一支就是线型二次型最优控制（linearquadraticcontrol）。数学是有趣的，但数学也是盲目的。在数学上，最优化问题就是一个在曲面上寻找凸点的问题，只要你能把一个物理问题表述成一个曲面，数学是不理会姓无姓资的。既然如此，控制偏差的平方在时间上的累积就是很自然的选择，二次型就是平方在线性代数里的说法。线型系统的偏差平方有很好的性质，这山峰是一个馒头山，没有悬崖峭壁，没有沟坎，容易爬；一山只有一峰，不用担心找错地方。 不过这山峰不能只包含控制偏差，还要包含控制量，原因有三个： 如果不包括控制量，那最优控制的解是没有意义的，因为无穷大的控制量可以使累计平方偏差为最小，但无穷大的控制量是不现实的。 控制量的大小通常和能量、物料的消耗连在一起，实际控制问题一般是“在最小能量、物料消耗小达到最高的控制精度”，所以在“山峰”中同时包含控制偏差和控制量是很自然的。 系统模型总是有误差的，误差“总是”在高频、大幅度控制作用下最突出，所以为了减低系统对模型误差的敏感性，也有必要限制控制量的大小。 所以线性二次型最优控制的“目标函数”（也就是定义山峰形状的数学表述）是一个控制偏差和控制量各自平方的加权和的积分。积分当然就是“在时间上的累积”了，加权和其实就是在控制偏差的平方项和控制量的平方相前分别乘以比例因子，然后再相加。两个比例因子的相对大小决定了谁更重要。运用矩阵微分和线型代数工具，不难导出线性二次型控制律—一个基本的状态反馈控制律！只是反馈增益矩阵是按最优化的要求计算出来的。 线型二次型最优控制开创了一整个新的控制领域，很快从状态空间走出来，进入其他领域，子孙繁衍，人丁兴旺。这一支是当今最优控制在应用中的主体。线性二次型控制具有各种各样的优点，但是，线性二次型没有回答一个最基本的控制问题：这个闭环系统是不是稳定。这里，我们的饱受牵记的李亚普诺夫同志出场了。李亚普诺夫也是一个脑子搭错筋的人，一百多年前，玩微分方程玩出了瘾，整出两个稳定性（或者叫收敛性）的定理，前一个没有什么太了不起的，把非线性系统线性化，就是把一根曲线用很多一小段、一小段的直线近似，然后按直线来分析。后一个就有点邪门了。老李琢磨出一个定理，说是对于任意一个系统，如果能找到一个自我耗散的能量函数（数学说法是正定函数），也就是其数值永远为正，但随时间渐进地趋向零，或者说这个能量函数对时间的导数永远为负，那这个系统就是稳定的。据说定理的证明是一个天才的杰作，我等凡人只有频频点头的份。不过想想也对，系统的能量耗散没了，系统不也就安分下来了吗？当然就稳定喽。 李亚普诺夫比卡尔曼还要数学家，他的定理只给出“如果存在……就……”，怎么找这个自我耗散的能量函数他没说，这个函数一般是什么样他也没说。这难不倒搞自动控制的广大革命群众。不是要正定函数吗？不是没有限制什么形式的正定函数吗？那就用控制偏差的平方吧。说干就干，但是干着干着，好玩的事情出现了，对偏差平方（或二次型）的求导，导出了和线性二次型最优控制推导过程中同样出现的一个所谓黎卡蒂方程（Riccatiequation），感情这是殊途同归呀。换句话说，线性二次型控制总是稳定的。这是线性二次型控制的一个重要贡献：把最优性和稳定性连到一起。再扯一句李亚普诺夫，他的第二个定理非常威猛，但是有点像一个奇形怪状的大锤，到现在人们还在找合适的钉子，好用这把大锤砸几下。线性二次型控制是已知的仅有的几个钉子之一，另一个是变结构控制，也可以用李亚普诺夫方法，这是题外话了。 数字控制都说瓦特的蒸汽机后，计算机是影响人类进程最大的发明，计算机当然也对自动控制带来深刻的影响。如前所述，控制理论基本上都是围绕微分方程转的，所以在“本质”上是连续的。但是数字计算机是离散的，也就是说，数字控制器的眼睛不是一直盯着被控对象看的，而是一眨一眨的。数字控制器的“手脚”也不是一刻不停地连续动作的，而是一顿一顿的。这是数字计算机的天性使然。于是，传统的控制理论全部“翻译”到离散时间领域，微分方程变成了差分方程，所有方法、结论都有了连续、离散两套，不尽相同，但是大同小异。 要是数字控制就是简单的连续系统离散化，计算机控制也就没有什么了不起。离散控制带来了一些连续控制所不可能具备的新特点，这就是：差分方程用清晰界定的时刻之间的关系来描述动态过程。 回到洗热水澡的例子，如果热水龙头不在跟前，而是在村外一里地的小锅炉房里，你只能用电话遥控，那水温或许可以表示为下一分钟水温=0.7现在水温+0.2上一分钟水温+0.1再上一分钟水温+0.4（5分钟前锅炉房龙头开度-6分钟前锅炉房龙头开度）显然，下一分钟的水温受现在水温的影响比上一分钟和再上一分钟的水温的影响要大，但锅炉房龙头开度要是不变，现在、上一分钟、再上一分钟水温都一样的话，下一分钟的水温也应该和现在的水温一样。为什么用5分钟前锅炉房的龙头开度呢？那是因为热水从村外流到洗澡房要有一定的时间，这个时间就是滞后。要是把时间向前推，那现在的龙头开度就会影响5分钟后的水温。这说明了离散模型的一个重要特质：预估能力。所有预报模型都是建立在离散模型的这个预估能力上，不管是天气预报，还是经济预测，还是自动控制里对有滞后的过程的控制。 数字控制的另一特质是可以实施一些不可能在连续时间实现的控制规律。工业上常有控制量的变化需要和当前的实际值有关的情况。比如对于不同的产品，反应器的转化率总是大体在88-92%之间，没有太大的变化，但是催化剂可以在0.5到35ppm之间变化，采用常规的PID的话，增益就非常难设，对一个情况合适了，对另一个情况就不合适。所以催化剂需要按百分比变化率调整，而不是简单地按偏差比例调整。比如说，转化率偏离1%时，催化剂要是在0.5ppm，应该调整0.05ppm；但是在15ppm的时候，就应该是1.5ppm。这样，控制律就可以表示为当前的控制量=上一步的控制量*（设定值/当前的测量值）也就是说，在被控变量高于设定值10%的情况下，控制量也增加10%；测量值和设定值一样时，控制量不再变化。 实际使用时，谁除以谁要根据测量值上升你是要控制量上升还是下降来决定，控制律也要稍微修改一下，成为当前的控制量=上一步的控制量乘以（当前的测量值/设定值）^k k次方是用来调整控制律对“偏差”（这是已经不是差值，而是比值了，严格地说，应该叫“偏比”？）的灵敏度，相当于比例增益。这个控制律实际上相当于对数空间的纯积分控制，要是有兴趣，对很多常见的非线性过程有相当不错的效果，实现也简单。然而，这是一个本质离散的控制律，在连续时间里无法实现。离散控制可以“看一步、走一步”的特性，是连续控制很难模仿的，也是在实际中极其有用的。 辨识形形色色的控制理论再牛，没有被控过程的数学模型，照样抓瞎。前面的洗澡水温就是一个数学模型。这个模型是杜撰的，当然可以很容易地给它所有模型参数。但在实际中，模型参数不会从天上掉下来。多少科学家毕生致力于建立某一特定的物理、生物、化学或别的学科的数学模型，基本机制已经清楚的模型都不容易建立，更不用说很多过程的基本机制或深层机制并不清楚。所以靠机理推导被控过程的数学模型是可能的，但对日常的控制问题来说，并不实际。这就是控制理论的另一个分支—辨识—一显身手的地方了。 如果给定一个模型，也就是一个数学公式，给它一组输入数据，模型就可以计算出对应的输出数据。比如说，给定模型y=2x+1，再给出x=1，2，3，4，那y就等于3，5，7，9，就这么很简单。辨识的问题反过来，先给定一个模型结构，在这里就是y=ax+b，已知输入-输出数据是x=1，2时y=3，5，要求计算出a和b。显然，这是一个二元一次方程，谁都会解。在实际中，输入-输出的观察数据含有测量噪声，这对参数估计的精度不利；但通常积累观察的数据量远远超过未知参数的个数，不说数学，感觉上这就应该对克服测量噪声有利，关键是怎么利用这“多余”的数据。一个办法是把数据组两两配对，借众多的二元一次方程，然后对解出来的a和b作平均。还有一个办法就是有名的最小二乘法了，说穿了，就是以a和b为最优化的“控制量”，使模型输出和实际观测值之间的累积平方误差为最小。 实际工业过程大多有多年的运行经验，大量的数据不成问题。对于大多数常见过程，模型的基本结构和定性性质也可以猜一个八九不离十，有了如此有力的数学“大锤”，那么应该可以砸开一切建模的硬核桃啦。且慢，世上没有真正的“神奇子弹”，一个问题解决了，另一个同等难度的问题又会出现。对于辨识来说，问题有好几个。 第一个问题是工业数据的闭环性。大多数重要参数都有闭环回路控制。如果没有闭环回路控制，那要么就是过程特性实在太复杂，简单回路控制不了；要么就是这个参数其实不重要，飘移一点没人在乎。然而，一旦闭环，系统地输入和输出就是相关的了。这一相关不要紧，输入-输出数据之间的因果性就全乱了：输出通过被控过程本身和输入相关（这是好的，辨识就是要测算出这个相关关系，输出要是和输入不相关，也没有控制或辨识什么事了），输入通过反馈和输出相关；输入-输出成为一个闭合系统，你可以用任意多条定理或方法证明同样的事：由于因果不分，闭环辨识是不可能的，除非另外加入“新鲜”的激励，比如使劲变设定值，或者在闭环回路里额外施加独立于输入、输出的激励信号，比如“莫名其妙”地把阀门动几下。弄到最后，工业数据到底能用多少，就不是一个简单的回答。 有的过程常年稳定操作，像乙烯装置，只有小范围的微调。这倒不是人家懒或者不求上进，而是这些装置早已高度优化，常年操作在极其接近极限的位置，但原料和产品单一，所以工艺状况不怎么大变。这种系统的闭环数据用起来很吃力，常常必须做一定的开环试验。有的过程经常在不同的状态之间转换（transition），或者由于不同的原料，如“吃”得很杂的炼油厂，或者由于不同的产品，如聚乙烯装置，这实际上就是“使劲变设定值”，是新鲜的激励。这种系统的闭环数据比较好用，但有别的问题，下面要谈到。 第二个问题是动态和稳态。动态模型的作用有两个：一是描述需要多少时间输出才能达到某一数值；二是输出最终能够达到什么数值。用股票市场举一个例子，你需要知道两件事：一是这支股票最后会升到多少，二是需要多少时间才能升到那里，只知道其中一个对你并没有太大的用处。当然为了简化，这里假定这支股票一路飙升，不来忽升忽降（也就是非线性）或跌买涨卖（也就是闭环影响）的名堂。这就要求输入-输出数据必须包含充分的动态和稳态信息，过于偏颇其中一方面对另一方面会不利。所以，长期稳定运行的过程中可能包含足够的稳态数据，但动态不足；常年不怎么稳定的过程可能包含足够的动态数据，但稳态不足。用PID控制打比方，精确的稳态数据有助于计算正确的比例控制增益，精确的动态数据有助于计算正确的积分和微分增益，显然，把比例增益整对了更为重要。为了获得精确的稳态，在辨识中常常需要等过程开环稳定下来才进行下一步， 但是问题是，实际过程有时时间常数很长，几个精馏塔一串联，时间常数几个小时是客气的，一、两天都是可能的。这样一来，一个不太大的模型，十来个变量，开环试验一做就是一、两个星期或者更长。要是一个装置能够两个星期开环，那也不需要什么控制了。 第三个问题是激励的信噪比。都说人类活动是二氧化碳和温室效应的主要原因，但要是你去生一堆篝火，再去高空大气层去测一测二氧化碳和温室效应，肯定什么也测不出来，本来多少，现在还是多少。为什么呢？不是因为这堆篝火没有效果，而是环境中的自然的变化远远超过了篝火的作用，换句话说，就是噪声远远超过了信号。工业测试也是一样，信号一定要有一定的强度，否则是白耽误工夫。信号强度应该使过程达到严重失稳的边缘，这样才好获得在大范围内都精确的模型，以便控制器不光在“风平浪静”的情况下可以正常工作，在“惊涛骇浪”的情况下也能使系统恢复稳定。然而，工厂以生产为主，在一切都“斤斤计较”的今天，如此大范围的测试所带来的产品损失甚至对设备的可能的危害，都是工厂极不愿意见到的。 理论家们设计了一个伪随机信号，用一连串宽窄不等的方波信号，作为激励过程的输入，在理论上可以使过程参数的平均值不致偏离设定值太多，但ISO9000不仅要求产品质量的平均值要保证，产品质量的一致性也要保证。再说，伪随机信号的脉宽不好确定，太窄了，稳态数据不够；太宽了，和常规的阶跃信号也没有什么两样。所以伪随机信号在实际上用得很少。 第四个问题是输入的相关性。实际工业过程到了要用辨识来确定模型的时候，都是单回路对付不了了，所以都是多变量过程。在理论上，多个输入变量可以同时变化，只要输入变量的变化是相互独立的，数学上容许多个输入变量同时变化，而辨识可以正确地辨别模型。然而，在使用实际过程的历史数据时，常常遇到多个输入变量并不相互独立的问题。比如说，在制作巧克力的过程中，香草巧克力比较“苦”，或者说不太甜，而牛奶巧克力比较甜。问题是做牛奶巧克力时，不光加糖，还要加牛奶（废话，不加牛奶那还是牛奶巧克力吗？）由于两者总是同时出现，从纯数学角度来说，在甜度模型里，就难以辨别甜度是由于加糖的关系，还是由于加牛奶的关系。有的时候可以根据对具体过程的认识，人工地限制辨识的过程，来消除这种影响，有的时候，就不太容易了，只好不用历史数据，专门做试验，用各自独立的输入，便是模型。 第五个问题是模型结构。模型结构包括两个方面，一是模型的阶数，二是剔除在物理上不可能的模型。辨识的模型归根结底还是差分方程，这就有一个如何预设阶数的问题。数学上有很多验前和验后的检验方法，在工业上，人们偷一个懒，改用非参数模型，也就是用一条响应曲线而不是一个方程来表述一个模型，这样就可以绕过阶数的问题。但是剔出不现实的模型还是一个手工活，需要对每一个模型仔细研究，以确定模型所描述的动态关系是否合理。数学方法还是不够可靠。 在搞模型的人中间，常常会听到黑箱、白箱和灰箱的说法。黑箱模型就是不理会实际过程的物理、化学等性质，纯粹从数学出发，假设一个模型结构，然后用种种数学方法找出一个最好的模型。白箱反其道而行之，从物理、化学等性质出发，建立机理模型。黑箱模型的好处是“放之四海而皆准”，不需要对具体过程有深入的了解。黑箱模型是一种削足适履的作法，但是如果履本身就做得比较好，具有相当的灵活性和适应性，就并不需要削太多的足。由于黑箱模型可以自由假设模型结构，黑箱模型的处理和使用都比较方便。黑箱模型是经验主义的，数据里没有包含的情况，黑箱模型无法预测。白箱模型则是“量身度造”的，反映了过程的物理、化学等性质，对实际过程的数据依赖较少，对数据中不包含的情况也能可靠地预测。但是白箱模型的结构由具体问题决定，得出的模型不一定容易使用。在实际中，人们经常在假设一个模型结构的时候考虑进大大简化的过程机理，所以模型结构不是凭空拍脑袋出来，而是粗略地抓住了过程的基本特质，然后再用黑箱方法的“数据绞肉机”，将简化模型没有能够捕捉的细微末节一网打尽。这种模型结合了黑箱和白箱的特点，所以称为灰箱。实际建模中，纯粹黑箱或白箱的成功例子很少，灰箱的成功机会就要多得多。不管什么箱，最后还是有一个如何辨识实际过程的问题。 闭环辨识的好处不用多说了，问题是如何从闭环辨识中获得有用的模型。工业上有一个办法，没有一个“官名”，但实际上是一个开环-反馈过程。具体做法是这样的：先用粗略的过程知识构造一个简单的多变量控制器，其任务不是精确控制被控过程，而是将被控变量维持在极限之内，一旦逼近或超过极限，就采取动作将其“赶”回极限内；但只要在极限内，就按部就班地作阶跃扰动，测试过程特性。测试的结果用来改进控制器的模型，然后再来一遍。几遍（一般两遍就够了）之后，模型精度应该很不错了。这个方法比较好地解决了辨识精度和过程稳定性的要求。 自适应西游记里最好看的打斗是孙悟空大战二郎神那一段。孙悟空打不过就变，二郎神则是“敌变我变”，紧追不舍，最后把个无法无天的顽皮猴子擒拿归案。用控制理论的观点看，这“敌变我变”的本事就是自适应控制控制器结构根据被控过程的变化自动调整、自动优化。 自适应控制有两个基本思路，一是所谓模型跟踪控制，二是所谓自校正控制。 模型跟踪控制也叫模型参考控制，在概念上对人们并不陌生。毛主席那阵子，经常树立各种榜样，目的就是要在党发出号召时，普通人们比照榜样的行为，尽量调整自己的行为，使我们的行为和榜样的行为接近。这就是模型跟踪控制的基本思路。模型跟踪控制在航空和机电上用得比较多，在过程控制中很少使用。自校正控制的思路更接近人们对自适应的理解。 自校正控制是一个两步走的过程，首先对被控过程作实时辨识，然后再辨识出来的模型的基础，实时地重新构造控制器。思路简单明了，实施也不算复杂，但自校正控制在一开始的欢呼后，并没有在工业上取得大范围的成功，原因何在呢？ 原因之一是闭环辨识。虽然自校正控制不断改变控制器的参数，在一定程度上打破了固定增益反馈控制对输入、输出带来的因果关系，但是因果关系还是存在，还是相当强烈，对辨识模型的质量带来影响。 原因之二是所谓“协方差爆炸”。数学上当然有严格的说法，但简单地说，就是自校正控制器的目的当然还是使系统稳定下来，但是在系统越来越稳定的过程中，自校正控制器对偏差和扰动的敏感度越来越高，最后到“万籁俱静”的时候，敏感度在理论上可以达到无穷大，然而，这时如果真的扰动来了，控制器一下子就手足无措了。 原因之三是实际过程的复杂性。在辨识实际过程时，最重要的步骤不是后面的“数学绞肉机”，而是对数据的筛选，必须把各种异常数据剔除出去，否则就是“垃圾进来，垃圾出去”。但是，要实时、自动地剔除异常数据，这个要求非同小可，比设计、投运一个自校正控制器费事多了。这是自校正控制在实际中成功例子有限的最大原因。 模型预估控制自动控制从一开始就是以机电控制为主导的。60年代数学派主导了一段时间后，70年代化工派开始“小荷才露尖尖角”。自校正控制已经有很多化工的影子，但化工派的正式入场之作是模型预估控制（modelpredictivecontrol，MPC）。这是一个总称，其代表作是动态矩阵控制（dynamicmatrixcontrol，DMC）。 DMC是CharlieCuttler的PhD论文，最先在壳牌石油公司获得应用，以后Cuttler自立门户，创办DMC公司，现在是AspenTechnology公司的一部分。数学控制理论非常优美，放之四海而皆准，但是像老虎一样，看起来威猛，却是干不得活的，干活毕竟靠老牛。DMC的成功之处在于应用伪理论，将一些本来不相干的数学工具一锅煮，给一头老老实实的老牛披上一张绚烂的老虎皮，在把普罗大众唬得一愣一愣的时候，悄悄地把活干了。DMC基本就是把非参数模型（在这里是截断的阶跃曲线）放入线性二次型最优控制的架构下，成功地解决了解决了多变量、滞后补偿和约束控制问题。多变量的含义不言自明，滞后放在离散动态模型下也很容易实现预测，这也没有什么稀奇。稀奇的是，DMC用“土办法”解决了约束控制问题。 所有实际控制问题的控制量都有极限。加速时，油门踩到底了，那就是极限，再要多一马力也多不出来了。庞特里亚金的最大值原理在理论上可以处理约束控制问题，在实际上很难求出有用的解来，最速控制是一个特例。那DMC是怎么解决约束控制问题的呢？当某个控制量达到极限时，这个控制量就固定在极限值上了，这就不再是变量，而是已知量，把已知量代进去，将控制矩阵中相关的行和列抽掉，重新排列矩阵，剩余的接着求解。这也没有什么稀奇。令人头疼的是如何处理输出约束的问题。DMC把线性规划和控制问题结合起来，用线性规划解决输出约束的问题，同时解决了静态最优的问题，一石两鸟，在工业界取得了极大的成功。自卡尔曼始，这是第一个大规模产品化的“现代控制技术”，Cuttler在DMC上赚了大钱了，在“高技术泡沫”破碎之前把公司卖给AspenTechnology，更是赚得钵满盆溢。他女婿是一个医生，也不行医了，改行搞过程控制，跟着Cuttler干了。DMC的英明之初在于从实际需要入手，不拘泥于理论上的严格性、完整性，人参、麻黄、红药水、狗皮膏药统统上，只要管用就行。在很长一段时间内，DMC的稳定性根本没有办法分析，但是它管用。搞实际的人容易理解DMC的歪道理，但搞理论的人对DMC很头疼。 DMC打开局面后，一时群雄蜂起，但尘埃落定之后，包括DMC，如今只有三家还在舞台上。Honeywell的RMPCT（RobustMultivariablePredictiveControlTechnology）是一个中国同胞开创的，他的独特之处在于引入“漏斗”概念。大部分控制问题都有一个特点：如果扰动当前，有一点控制偏差是可以容忍的；但时间一长，控制偏差应该消除。换句话说，这就像一个时间轴上对偏差的横放的漏斗。这个概念对复杂过程的MPC参数整定非常有用，已经在别的公司的产品上也出现了。 第三家就是方兴正艾的PavilionTechnology的Perfecter。美国公司有一个坏毛病，喜欢对好好的产品取一个不伦不类的名字，不过现在也改名了，规规矩矩叫controller了。Perfecter的特色是将神经元技术（neuralnet）和MPC结合起来，所以可以有效地处理非线性过程。神经元模型没有什么神秘的，说穿了，就是具有某些特定复杂形式的回归模型，但是比回归模型更不适宜内插和外推。 DMC也号称可以处理非线性，因为即使阶跃响应曲线拐上几拐，DMC照样囫囵吞枣，可以计算控制输出来，这就是非参数模型的好处。但是问题在于DMC的结构框架毕竟还是线性的，阶跃响应的概念根本不适合非线性过程，因为非线性响应和输入的绝对数值、相对变化甚至变化方向有关，甚至可以更复杂，所以所谓DMC可以处理非线性是放空炮。如果实际过程的非线性不强，根本可以忽略它；如果实际过程有很强的非线性，DMC肯定抓瞎。那么，Perfecter用了神经元，是不是就所向披靡了呢？也不尽然。Perfecter继承了DMC不问理论、唯实用是问的好传统，但是Perfecter的基本骨架还是线性的MPC，只是用静态的神经元模型时不时地作一个线性化。Perfecter在理论上乏善可陈，在实用上还是管用的。 前面说到PID在当今过程控制中占至少85%，那MPC就要占14.5%了。 计算机控制系统计算机对自动控制的影响要是只局限在离散控制理论上，那也就不是计算机控制了。事实上，80年代以后新建的化工厂，基本都采用计算机控制。说是可以采用比PID更先进的技术，实际上，绝大多数还是在用PID，加上顺序控制，按部就班地执行一系列动作。那计算机控制的好处到底在什么地方呢？过程控制的实际装置最初全是直接安装在现场的，后来出现气动单元仪表，可以把压缩空气的信号管线从现场拉到中心控制室，操作工可以在中控观察、控制全厂了。电动单元仪表防爆问题解决后，中控的使用更加广泛。操作工坐在仪表板前，对管辖工段的情况一目了然。但是随着工厂的增大和过程的复杂，仪表板越来越长，一个大型化工厂随随便便就可以有上千个基本控制回路和上万个各种监控、报警点，仪表板非有几百米长不可，这显然是不可能的。生产过程的高度整合，使一两个人控制整个工厂不光满足削减人工的需要，也对减少通讯环节、综合掌控全局有利。所以，计算机显示屏就不光是酷，而是必须的了。 另外，计算机控制使现场仪表（阀门、测量变送器等）的自检成为可能，大大提高了系统的可靠性。于是，计算机控制就是不花没人性了。计算机控制从一开始的集中控制（用IBM的大型机）到现在的分散控制（所谓DistributedControlSystem，DCS）走过一个螺旋形上升的过程。集中控制的要害在于风险集中，要是大型机挂了，全厂都要失控。分散控制将全厂划分为若干条条块块，用以微处理器为基础的一个控制用局部网来分散控制，主要子系统都是实时冗余的，故障时在第一时间内切换到备用系统，主系统和备用系统在平时定期互相自检、切换，以保证可靠。 分散控制显然大大提高由于计算机本身引起的可靠性。但是现场仪表和接线终端（fieldterminalassembly，FTA）不是冗余的，整个可靠性链还是有漏洞。另外，控制局部网的同轴电缆长度有物理限制，FTA到DCS的长度也有物理限制，所以最后分散控制还是不怎么分散，全是集中在中控室附近或地下室里。不过DCS在地理上的集中，并不妨碍其在逻辑上的分散，只要不是一把火把DCS的机房烧掉，部件可靠性的问题还是可以很好地隔离在小范围。 既然DCS是一个局部网，那就有一个通信协议的问题。DCS基本上用两大类型的通信协议：轮询（polling，中文的准确译名是什么？）和中断。轮询由中心控制单元轮流查询所有子系统，不管有没有数据更新，到时候就来问一遍，所以不管什么时候，系统地通信流量都很高，但是恒定。中断方式正好相反，子系统自己先检查一下，如果数据没有变化，就不上网更新；直到数据有变化，再上网“打一个招呼”。这个方式的平时通信流量较低，所以网路带宽要求较低。但是生产过程发生异常时，大量警报数据蜂拥而来，如果带宽不够，就会发生通信阻塞的问题。所以，中断和轮询到最后对带宽的要求是一样的，因为谁也不能承担生产过程异常时通信阻塞的后果。 二十年前，Honeywell是第一个吃DCS这个螃蟹的公司，今天Honeywell仍然是行业里的老大，尽管其设备昂贵，被戏称为Moneywell。当年的DCS全是量身度造的硬件、软件。今天在“开放系统”（openarchitecture）的大潮里，DCS的制造厂家都纷纷将控制台和计算、网络控制单元转向通用的WINTEL或UNIX平台，自己专注于工控专用装置（如基本控制装置，包括IO）和系统的软件整合。但是这带来了新的问题。通用/商用硬件、软件的可靠性常常不能满足24小时、365天的连续运转要求。对于大多数IT来说，机子坏了，两小时内换上就是很快的了。系统需要维护，弄一个周末或者晚上停机维修就是了。但是对于生产过程来说，这是不可容忍的，不惜365天一天24小时可靠运转，很多乙烯厂、炼油厂要4、5年才有一次停车大修。 开放结构容许将DCS和经营、管理、办公网络相连接，极大地提高了信息交流速度和深度、广度，但也带来了网络安全问题，紧接着就是DCS前面竖起一道又一道的防火墙，把数据分享和远程操控压缩到最低。另外就是WINTEL夜以继日的不断更新换代，使硬件、软件的稳定性十分糟糕，没有过多少时间，又要升级，又是头疼。这是DCS的第二个螺旋形上升，只是现在还是盘旋多于上升。 计算机控制的领地也在扩大，类似USB那样的技术也开始用于数字化的仪表。过去的仪表都必须把信号线拉到接线板（marshallingpanel）上，然后再连到FTA上，这样同样远在百把米外的10台仪表，需要并行拉10条线，很浪费。用了类似USB的现场总线（fieldbus），各个仪表可以“挂”在总线上，然后一根总线连到DCS就可以了，大大节约拉线费用和时间，对系统（如加一个测量用的变送器或控制阀）的扩展也极为方便。现场总线也有现场总线的问题，不过这里就不多扯了。 控制软件DCS的最大优越性是可编程。这不是简单的像PLC（programmablelogiccontroller，可编程序逻辑控制器，多用于机电控制）的梯级逻辑那样编程，而是可以像C、FORTRAN那样“正规”的编程。我没有在IT干过，只能和学校里计算机语言课程和大作业的程序相比。DCS编程和平常的编程相比，还是有一些特点的。 首先，DCS的程序属于“再入”式，也就是定时反复运行的，而不是一次从头到底运行就完事的。所以DCS程序可以在运行完毕时在内存里存放数据，到下次运行时再调用，形成所谓“递归”运算。这既是优点，也是缺点，要是别人在你两次运算中间把那个中间数据更改了，你就惨了，找债主都不容易。 DCS程序的特色是实时，所以其执行非常取决于一系列事件在时间上的顺序。时序上要是搞岔了，老母鸡也就变鸭了。问题是，分散控制要求越分散越好，不光是可靠性，在系统资源的调度上，分散了也容易使系统的计算负荷均匀。这样一来，一个应用程序包常常将一个巨大的程序打散成很多小程序，各自的时序和衔接就要非常小心。和学术型控制计算程序最大的不同，或许还在于对异常情况的处理。一个多变量控制问题在实际上常常会有部分变量处于手动控制，而其余变量处于自动控制的情况。这在理论上是一个麻烦，在实际上是一个噩梦。不光要考虑所有的排列、组合，还要考虑所有情况平顺的切入、切出，不同模式之间的切换。还有就是要考虑异常情况下如何安全、自动地退出自动控制，交还手动控制。有时操作规程上的一句话，程序写写就是一页。如果操作规程上来一句“视情处理”，那就更惨了。在所有控制程序中，控制计算通常不超过30%，20%为人机接口功能，而50%为异常情况处理。 人机界面计算机控制不是因为更先进、更有效的人机界面才开始的。从一开始，人机界面就面临一个管中窥豹的问题。计算机的CRT显屏只有这么大，不可能“一言以蔽之”，在一瞥之中把所有的过程信息尽收眼底。计算机可以不断地换屏，分段显示其他装置、工段的信息，但是把所有的工段、装置分别用各自的画幅表示，如果没有有效的组织，找都不容易找到，就像在同一个目录里杂乱无章地放上百把个文件一样。 分级的菜单是传统的解决办法，但是要逐级上去再逐级下来，很费时间，情急之中，往往来不及更换。大键盘上shortcut键可以“一键调出”，但需要死记硬背，这可不是几个、十几个画幅，而是上百个甚至更多。很长时间以来，如何有效地在画幅之间导航，可以在最短时间和最少点击内，不需要死记硬背，就可以直观地找到所需要的画幅，一直是一个令人头疼的问题。其实，这个问题在网页设计里也碰到，一个内容丰富的网站，要如何组织网页，使用户自然、迅速地找到自己需要的内容，很不容易。所不同的是，工控的“网页”需要保证在最短时间里找到，需要的时候找不到是要出大问题的。 人机界面设计的另一个问题是色彩。还记得DOS2.0时代的WordStar吗？那是黑底绿字的。那时候，CRT亮度不足，寿命也糟糕，黑底可以延长寿命，绿字可以增加反差，帮助阅读，反正机房是暗暗的，黑底并不伤眼睛。到了WordPerfect5.0的时候，就是蓝底白字了，字和背景之间的反差大大减小，蓝底也比较适宜于在明亮的房间内使用。到了Word的时代，没有昏暗的机房了，基本上都用像纸上写字一样的白底黑字了，再用黑底绿字，太伤眼睛。中控室计算机显示也经历了类似的旅程。早期DCS的显示都是黑底绿字的，到了用WINTEL或UNIX的时代，很多人出于习惯，仍然采用黑底绿字，但是现代人机工程研究表明，浅色背景大大减低眼睛的疲劳，在明亮室内的灯光对屏幕的反光也小，所以控制室的显示开始向浅灰背景进化了。人机工程研究同时发现，色彩可以作为过程信息的一部分，天下太平的时候，应该用最不显眼的灰色，所有的图形、数据都用不同深浅的灰色来表示，只有在过程参数越限或报警时，才采用彩色显示，这样可以一下子就把操作工的注意力吸引到需要的地方。但是，出于习惯思维，很多地方还是大量采用各种色彩表示不同的设备状态和参数，即使是正常状态也是一样。这样在平日里色彩缤纷很好看，但在异常情况时，不容易在万马军中找到上将的首级，实际上是舍本逐末。 显示器的布置也很有讲究，少了当然不行，也不是越多越好，一个操作工的视界的上下左右有一定的范围，控制台的色彩、构造、照明都不能想当然的。这不是助长修正主义，而是保持操作工最有效地控制生产过程的要求。 性能评估传统上，如果操作工不抱怨，控制回路的性能就是可以接受的，除非你想精益求精，一般不会去没事找事，重新整定参数。在对经济效益斤斤计较的今天，生产过程的工艺条件被推到极端，对控制性能提出极大的挑战，控制回路必需时时、处处都在最优状态。随着控制回路数的迅速增长，单靠人工观察，已经难于随时掌握所有控制回路的性能状况了。控制回路性能评估技术应运而生。 理论上，对一个过程可以设计一个最优控制，其中一种就叫最小方差控制。这其实是线性二次型最优控制的一种，控制作用比较猛，但是这是理论上的极限，控制方差不可能再小了。90年代时，理论界提出一个方法，可以用闭环辨识的方法，不辨识模型，而是直接确定理论上的最小方差，然后将实际方差和理论上的最小方差相比，判别控制回路是否需要重新整定。这个方法开创了控制回路性能评估的先河，但是在实用上不容易排除不利影响，应用不多。 然而，不和理论上的最优值比较，而是和实际上的理想值比较，就可以绕过很多麻烦的理论问题。比如说，流量回路应该在1分钟内安定下来，那理想值就是1分钟。通过快速傅里叶变换和频域分析，可以将理论性能和实际性能相比较，迅速确定回路的当前性能状况。最要紧的是，这可以用计算机自动采集数据，自动计算，每天早上（或随便什么时候）给出报表，控制工程师可以一目了然，哪些回路需要重新整定，哪些没有问题，可以有的放矢。实时频域分析还可以将所有以相近频率振荡的回路罗列出来，接下来控制工程师就可以按图索骥，找出害群之马了。控制回路性能评估的下一步当然就是自动整定。这实际上是一个简化的、断续运行的自校正PID控制器，在理论上已经没有问题，但实用上还有很多可靠性问题没有完全解决，现在产品不少，但实用的还是不多。 故障诊断和容错系统对控制回路性能评估的更进一步，当然就是对生产过程的故障诊断了。故障就是异常情况，异常就是和正常不一样。所以故障诊断的核心在于如何探测这“不一样”。故障总是有蛛丝马迹的，问题在于工业过程的数据量太大，在大海里捞针，等捞到的时候，常常已经时过境迁了。 在数据分析中，PLS（其实是PeojectiontoLatentStructure，而不是一般所认为的PartialLeastSquare）和主元分析（PrincipalComponentAnalysis，PCA）是很流行的方法。PLS和PCA将众多相关的变量归拢到少数几个“合成”的变量，这样一个有大量变量的复杂大系统就可以简化为一个小系统，就从大海捞针变为碗里捞针了。捞出来的针不再是单个的变量，而是变量的组合。这和实际是相符的，故障的早期征兆常常是若干变量的组合，而不能单从一两个变量上看出来。 PLS和PCA还可以和图形方法结合起来使用。比如说，将那些合成变量标称化，就是除以正常值，那所有合成变量的标称值就是1。把所有变量画成“蜘蛛图”（spiderchart），每一个蜘蛛脚代表一个合成变量，由于合成变量的标称值都是1，蜘蛛图就是大体为圆的。如果哪一个脚出现变化，蜘蛛就不圆了，非常容易看出异常来，接下来就可以有的放矢地寻找故障的早期迹象了。图形数据分析的另一个路子是所谓co-linear分析。这是IBM早年琢磨出来的一个东西，理论上简直没有东西，但要求换一个思路，正所谓退一步海阔天空。 平常的数据点，三维以上就没法画了。但是如果把三维空间的所有数轴画成平行线，而不是常见的直角坐标，那三维空间里的一个点，就是连接三根平行线的一根折线。如果仅此而已，那也就是一个简单但愚蠢的数学游戏。平行坐标系的妙处在于，平行线可以尽着画，所以5维、20维、3千维，只要纸足够大，都可以画，而且可以看见，而不是只能想像。 平行坐标只有一个缺点，就是只能表述离散的点，而难以表述连续的线或面，但这对计算机采集的数据来说，不是问题，计算机采集的数据本来就是离散的点。这样，用平行坐标把大量的数据点画成折线簇，可以很直观地看出数据中的模式来，故障诊断的另一个思路是对整个过程进行辨识。辨识出来的模型表述系统的行为，故障当然就是行为的改变，所以将实时辨识出来的模型和正常模型相比较，就可以判断系统是否出现异常或故障。 仿真计算机和模型的另一个用处就是仿真。仿真（simulation）也叫模拟，但是模拟容易和模拟电路（analogcircuit）搞混，所以现在叫仿真多了。只要对实际过程有一个足够精确的模型，计算机是可以相当精确地模仿实际系统的行为的。 仿真有静态仿真和动态仿真。静态仿真基本上就是解一个巨大的非线性联立方程组，描述空间分布的微分方程也被有限元方法分解了。现代静态仿真已经可以做得相当精确，但这也是在多年结合实际过程数据“磨合”模型的基础上才能做到的。静态仿真大量用于工艺设备设计计算，但是对研究实际过程的真实行为的作用有限，因为对整个生产过程和工艺的仿真要考虑进各个设备动作的时间和控制回路的影响，这些静态仿真是无法体现的。 动态仿真要解同样巨大的联立微分方程组，由于要达到实时或更快，一般只能大大简化，否则计算速度跟不上，收敛性也难以保证。希望有朝一日，动态仿真可以达到静态仿真同等的精度，而不必担心损失计算速度。仿真在工业上十分有用。现代化工厂越来越稳定，越来越安全，很多操作工一辈子也没有遇到过真正危险的情况。但没有遇到过不等于不会遇到，操作工必须接受足够的训练，只有这样，才能当遇到危险情况时，首先能及时、正确地识别故障，然后才能及时、正确地作出反应。这就要靠仿真训练了。现代化工厂也在不断地拓展工艺参数的极限，经常需要做各种各样的试验。有了仿真，就可以预先验证试验的构思，和验证对紧急情况的处理。仿真更是控制工程师的好帮手，新的控制回路先放到仿真上试一下，得出初始整定参数，验证异常情况的处理能力，然后再放到真家伙上，可以避免很多不必要的惊讶。 RTO仿真的一个远亲是实时最优化。对于斤斤计较的现代制造业，实时最优化当然是求之不得的。实时最优化就是把整个生产过程当一个大的实时仿真来运算，实时（实际上是每小时）计算出最优工况。 想法是好的，困难是多的。首先，那么大一个方程组收敛不容易，要划成很多条条块块，分别求解，然后拼起来。问题就出在“拼”上，边界条件碰不拢怎么办？模型总是有相当的简化，其中有些参数必须和实际测量值符合，有些就没有实际测量值对应，就是“经验系数”（fudgefactor）了。这些经验系数就是承担收拾烂账的，边界碰不拢，就调整经验系数，使他们对齐。问题是，好多时候，这一招也不灵，所以实时最优化的喇叭吹得很响，真正用起来的很少，花了大钱最后放弃的也不在少数。 人的因素和打仗一样，赢得战斗的是武士，不是武器。控制工程师是控制回路成功与否的关键，而不是价值千金的计算机，或者“放之四海而皆准”的数学控制理论。 在加拿大，化工系的控制“专业”要选满所有化工学分，然后再加选控制学分，所以要求比一般的化学工程师还要高一点。选满化工学分是很重要的一点，如果没有对化工的话语权，那化工控制也别混了，这一点是国内（至少是三十多前我读大学的时候）所欠缺的。这就像医生一样，只有对生理、病理有深刻的了解，对病人的具体情况有深刻的了解，才有可能可靠地判断病情，才能可靠地开方治病。只会看单抓药，这就不是医生，而是药剂师了。 在实际中，控制工程师对工艺过程的动态行为的理解至少应该和工艺工程师同等，和操作工相当。事实上，很多时候，控制工程师的使命就是将工艺工程师和操作工的经验和知识具体化、自动化，如果你不能深刻理解，那如何实现呢？一个优秀的控制工程师可以在操作工不在的时候，顶班操作；可以在工艺工程师不在的时候，做出工艺决定。但是控制工程师毕竟不是工艺工程师，也不是操作工。 控制工程师应该掌握前面说到的所有领域，从数学控制理论，到计算机网络，到人机工程，到工艺和仪表知识。这个要求很高，但不是不切实际的。这些是搅这个瓷器活所必需的金刚钻。这也是为什么现在加拿大工业界热衷于招雇具有硕士学位的控制毕业生，因为本科的几年已经很难学习必须的知识了。至于博士，那还是有眼高手低的嫌疑，不过也开始改观了。 专业知识只是成功的一面，控制工程师必须善于与人打交道。工艺工程师比较好说，毕竟有类似的背景，但操作工是控制系统成败的关键，如果无法取得操作工对你个人和你的控制系统的信任和合作，那控制系统很可能就是永久性地被关闭，操作工宁愿手工控制，出了问题还是因为控制系统不可靠，你就等着里外不是人吧。但是取得操作工的信任和合作后，事情会向相反的方向发展。操作工会主动向你提出改进建议，或新的想法，主动找机会帮你试验新的功能，主动拓展控制系统的性能极限。如果说顾客是上帝的话，操作工而不是部门主管才是控制工程师的上帝。 控制工程师也要善于和头儿打交道，毕竟搞项目、要钱的时候，还是要找头儿的。打报告、作报告、项目控制和管理、和供应商打交道，这些都是必备的技能。工艺工程师也是工程师，但用军队的比方来说，他们人多势众，更像常规部队，习惯大兵团协同作战。控制工程师则像特种部队，人数少，行止怪癖（至少对工艺的人来说，他们永远弄不明白控制的人到底在做什么，怎么做出来的），从规划到实施到维修，全一手包办。控制理论的发展历程就是一个寻找“放之四海而皆准”的“神奇子弹”的历程，终极目标是可以用一个统一的数学控制工具去“套”任何一个具体的控制问题，而不必对具体过程的物理、化学等特性有深入的理解。 控制理论的每一次重大进展，都给人们带来希望，“这一次终于找到了”。但每一次希望都带来了新的失望，新方法、新工具解决了老问题，但带来了新的局限，有的时候甚至转了一圈兜回去了。新的局限往往比老问题更棘手，需要对过程的理解是更多而不是更少。矛和盾就是这么着在螺旋形上升中斗法。但是现实常常和人们的认识背道而驰。在商业化的大潮中，推销先进控制算法的公司拍胸脯担保可以如何如何用“万能”的数学控制工具解决一切控制问题，那些绚烂的老虎皮也确实照得不明就里的人眼花缭乱，心旌飘荡；公司的头儿也一口吃进，毕竟“技术万能论”不仅在美军中盛行，在北美的公司文化中也是大行其道。直到有一天，人们发现永动机依然是神话，人还是不能在水上步行，方才想起来，原来世上是没有这等好事的。不过这是题外话了。 本来就知道这个系列会又臭又长，但是既然写了，就写完吧，希望没有占用太多的带宽，希望没有浪费大家的时间，希望给对自动控制有兴趣的朋友提供一点入门的知识，希望给同好提供一些从实际中得到的经验，错误的地方肯定很多，敬请原谅，同时谢谢阅读。]]></content>
      <tags>
        <tag>自动驾驶</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[夏与冬]]></title>
    <url>%2F%E5%A4%8F%E4%B8%8E%E5%86%AC.html</url>
    <content type="text"><![CDATA[我一直在想，夏与冬，自己更喜欢哪个。 在冬天，我咬牙切齿地想，夏天嘛，少穿衣服多洗澡就可以了，吃吃西瓜喝喝冷饮也是偶尔的惬意，哪像现在，冷风如刀，刮骨摧面，谁会喜欢这样的天气呢？而且这时节，万物萧瑟，一幅破败景象，任谁也没好心情。 可真到了夏天，又想，是谁说的那个比喻来着？冬有万里飞雪，以天地为炉，融万物为银。谬之！夏天才是真的烘炉，看看那股不把人炼成铁水誓不罢休的劲儿！想以心静自然凉安慰自己，但汗出如浆总是交了底。于是就想，冬天里穿棉衣就好了嘛，烤红薯、吃火锅也颇有情趣。 我迷茫了。夏还是冬，这是第十三道选择题。 但又仔细想，夏冬之争现在是个没意义的问题，对现在的我，冬夏皆不喜，只爱春秋。 但以前，这还确实真是个问题，什么时候开始变得呢？ 以前的夏天，中午睡在地上的凉席上，头上的风扇晃晃悠悠吱吱扭扭，一边被暖热了，就翻个身到凉的竹子去。一觉醒来，总会有恍若隔世感，爷爷奶奶提前醒了不在房间里，我坐在空空的凉席上，晕晕沉沉的迷糊，先听到大摆钟滴答滴答，再听到高亢入云的蝉鸣，之后才慢慢清醒。这时一般才下午两点左右，于是起床，呼朋唤侣去下河，即使没有鱼虾；爬树去，即使没有果子槐花。 也有时候去打游戏机，游戏确实是是万千男生的梦，即使现在的对任何游戏都提不起兴趣，我依然能理解对游戏的狂热。那时候用的是游戏手柄，我是当之不愧的菜鸟，魂斗罗永远过不了第二关，赤色要塞永远过不了第一关，插卡的游戏机就玩的更糟糕了，但每次依然大呼小叫乐此不疲。即使轮不到我玩，只是看别人过关杀怪就足够满足了。 也会看七龙珠和奥特曼，泰罗，杰克是和孙悟空一个等级的英雄。手持游戏杆，会使双龙决，比着奥特曼的光线手势，嘴里却喊着龟派气功，这样的日子，终究过不去了。 也会在平房顶上睡觉，没有空调，有的是天地之间自然风，没有手机，有的是漆黑夜幕上的繁星。 以前的冬天，爷爷奶奶会生起炉子，以煤球为燃料，煤气会通过管子通到外面，我们围着炉子烤花生和红薯，至味在人间，不过如此。 下雪天也会睡午觉，我在床脚用被子枕头堆起来一个城堡，然后钻进去窝着，雕花的窗户看不清楚外面，只能听雪落在砖头上的轻微声响，听树枝上的雪搭不住时扑棱棱的声音，我在安静的雪声中安心地睡去。 雪夜，南屋外面的灯落在比较厚的雪上，会有一片闪烁的细碎金光，踩在上面有咯吱咯吱的声音。狗子就高兴啦，狂奔、急刹还会漂移，安静不见了，院子里翻起了一片雪雾，响起了一阵欢笑。 长大了，什么都会改变，这是社会发展的客观规律，我不会无病呻吟，也不会沉浸在过去难以纾解。但我确实更浮躁了，离开空调，我一秒难捱，离开手机，我寸步难行，平静这个词似乎也与我断了缘分，这是我失去的东西，不知道有生之年还能不能找回来。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[锤和钉]]></title>
    <url>%2F%E9%94%A4%E5%92%8C%E9%92%89.html</url>
    <content type="text"><![CDATA[evernote里的笔记，已经有1432条，原创的比例少一些，以资料形势保存的多一些。 我是这个笔记本的主人之一，借助共享功能，燕子是另外一个主人，这是一个双人共用的第二大脑。 我天天往里面塞的是一些自动驾驶行业新闻，编程资源收集文章等，她收集的文章则跟设计类更相关一些。 闲时打开印象笔记读，发觉这两个来源的文章画风差异明显，给人带来的启发也是完全不同的。比如很显著的一点是，偏科技类的文章总是自顶向下看，从政策到经济形势再谈到行业未来。偏艺术设计类的文章往往是自底向上的角度，即讲生活的细节如何链接到思想化物的本质。 我一直警惕不要陷入“拿了三年锤子，看什么都是钉子”的思维枷锁里。看什么东西都想先削边磨角，纳到自己熟悉的那套体系里，这样的“傲慢”很危险。 逃离这种危险，打破这种枷锁的方法之一就是，强迫自己多看一些其他领域的略微深入一些的书或文章。自身的知识带来的的信息泡泡和视野约束是一直在的，主动破开一点，我也不知道具体是什么，但总有些东西会更好一些。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶找工作/求职准备]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E6%89%BE%E5%B7%A5%E4%BD%9C-%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87.html</url>
    <content type="text"><![CDATA[秋招算尘埃落定。又是一路坎坷，又是结果尚好。先大致总结一下自动驾驶行业求职需要做的准备。大家如有补充，欢迎邮箱/微信与我联系，我把建议补充到这篇文章里。辅助后来人。 泛泛而谈自动驾驶目前已经处于下行期，这也是好事，可以避免劣币驱逐良币的事情发生。 敲定方向个人建议你去一些公司的career里看看position的requirement，像PonyAI、TuSimple、PlusAI、Nuro、Argo AI这些，看看你得具备那些技能。之后专精一个方向，辅助一个方向即可。楼主本人是Simulation+System. vehicle simulation在将来会有更大的市场，尤其是multi-agent的interaction，甚至drl apply在vehicle上。可以在Carla平台上做一些项目。 perception，应该是目前最火的方向，基于camera的computer vision和lidar的point cloud processing，一些传统算法像3D reconstruction, optical flow, LK tracking要了解，能用python或C++实现。lidar的看看PCL上的tutorial像YOLO这些state-of-art的算法可以从Github上drag一个下来跑一跑。数据集可以在kitti dataset上找。还有可以学一些sensor fusion的算法，在ROS上把lidar data和camera data register到一起。SLAM， 尤其是visual SLAM可以先了解下 prediction &amp; motion planning，这两者是不分家的，可以学习下RRT算法和一堆衍生算法，与控制紧密相关，车辆工程的学生可以重点关注一下 Control, 经典的PID和业界较常用的LQR，一般和硬件打交道都是C++，所以要把C++学好，光java或py好是远远不够的。同上。 machine learning，这个就不用说了，Andrew Ng的课可以看看，pattern recognition那本书也很推荐，要把数学基础打好不能只会套用框架。熟练掌握一种框架，推荐新手入手Pytorch Hardware,可以了解各类传感器的特点和优缺点，如何sensor fusion弥补信息的差异 System， basis是编译原理，操作系统，计算机系统，相对来说更适合车辆工程，有先求广再求深的特性。 基础准备 C++11/14 ，multithreading ，cocurrency control，smartpointer，virtual，C++重要性no.1，不然早晚会挂 面试前狂刷leetcode，最少得400题以上。 git/linux等 补充 对于Simulation。 c++基础要好。从个人获得的信息来看，simulation和游戏开发的技术栈有不少重叠，c++的重要性毋庸置疑。各个无人驾驶公司对这个岗位的基本要求就是c++熟练。和sde不同的是，其实对刷题的要求不高（个人有一点OI基础，整个申请季刷题也就在百来道上下），考的比较多的是对stl库的灵活运用和OOP。当然，如pony这种top coder组成的公司可能会考一些非常刁钻的算法题，算法不局限在lc题库里，可以参考下NOI的算法及数据结构考查范围（或者ACM？不太清楚具体难度，应该不会那么难…）。 会有相应的专业考核。这点和职位高度相关，大部分职位是ML/CV相关的，simulation是和图形学关系比较大（面试考到过geometry和mesh的基本概念、3D math、各种渲染算法、unity和unreal应用）。]]></content>
      <tags>
        <tag>自动驾驶</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[待写文章]]></title>
    <url>%2F%E5%BE%85%E5%86%99%E6%96%87%E7%AB%A0.html</url>
    <content type="text"><![CDATA[这个系列留存的是我想写但还未写的文章。 一直被老师说写的东西看不下去，各种用词似乎总是拍脑袋，我现在也怀疑自己了，可能是科研写作还需要锻炼吧！ 这些呢，则是写论文做项目学技术外的消遣而已，不用在乎某个词有没有标准，也可以打散句子结构，这是一种自由。 算是兴趣吧，有兴趣始终是难得的事。 我与大同多数人在某些方面是不同的，我不喜欢打游戏、看综艺、睡懒觉，那正好，留下来的这一点点休息时间可以用来更新博客。这应该是个好习惯。 在课题组累了想休息的时候，我就会继续更新博客的~ 《有线电视》最先，家里只有黑白电视，只能收到家乡台。后来先升级了硬件，黑白变彩电，软件也顺带有了个1到2的提升，省卫视和中央一套有了。 再之后的某一天，家里装有线电视了。 世界以信息的形式扑面而来。干涸的谷里有了小河，但还没成为洪流。我站在信息过载的门槛之外，感受着这世界的一切。 《虚实结合》关于读书，有个谈不厌的话题，纸质书、电子书，你选哪个？ 这种问题其实很没营养，对这类问题，咱们要学习古人留下的阴阳智慧，要借鉴现代辩证唯物主义的思想，直接从问题破局。很简单，我全都要！ 读书确实是需要虚实结合的，不同的场合，不同的类型，不同的章节，适合不同的阅读方式。 如果是在旅途中，如火车上，如飞机中，当然还是电子书，纸质书这时就显出了不足，最宜轻装上阵时，哪还有精力带上一本厚书呢。但如果不是在路上，如卧室橘黄台灯旁，咖啡馆的被树映的一片翠绿的窗前，那倒可能是适合纸质书的场合，手指翻过书页的哗啦啦伴着时钟滴答滴答响，咖啡香味缭绕间，墨香也掺杂其中。 《统计学的价值》最近看了几本统计学的科普读物，最深的的感触是，基本的统计素养确实非常重要。很多概念可以培养一个人的逻辑能力，并重塑一个人看世界的方式。如果每个人都能懂一些统计学，贴吧里对喷的话可以少一大半，赌场里跳楼的人也可以少一大半。 统计学，真是一门有用且神奇的科学。 《围炉夜话》这个火炉不知道是谁组起来的，好像就在一夜之间，它就出现在东头的避风处了。从山上搬下来的木柴，渐渐堆成了小山。谁家的旧沙发和长木凳被贡献了出来，在火炉边围了一圈。 这儿很少有人来，大家都有自己的事情要忙。但到了大年夜前后，晚八点左右，总会有人离开空调、手机和WIFI，来到这里。 有星的天空下，寒冷的空气中，有红砖十几块，四方被垒成了一个简易的炉子。 火燃起来了。 木材很耐烧，被火焰吞噬后，起烟很少，只是生出黄色的火焰，之后慢慢转为红黄色，偶尔噼里啪啦地爆出火星。 围坐在火炉旁的人，有火星迸射时就往后躲躲，其余时间都是眯着眼，烤着火。他们想到了什么？宇宙中的恒星大冲撞？远古祖先围坐在火旁躲避猛兽？还是一年年来的欣喜、失望、释然。再或者是像我这样，任由思绪飞去，想起武侠小说《神雕侠侣》中，郭襄初见杨过，是在风陵，跟当前情景总有些相似。 火光映衬了脸庞，沉静的、厚重的表情忽明忽暗。这些我信任且心爱的人，被温馨和宁静拥抱着。中间偶尔也会谈些家长里短的话。 没有疲惫和焦虑，一年又一年，围炉如昔，夜话如旧。 再过两年会怎样呢。就不想了。， 《内隐记忆》夏天的凉皮之所以被喜欢，终究还是因为内隐记忆。 内隐记忆的类型多种多样，温度的记忆，声音的记忆，气味的记忆，味觉的记忆…… 还有它们的组合。 《项目经理》第一次承担项目经理的角色，是大五上。 《花园宇宙》小学，花园，雨水，突然被开启的宇宙观。 《榆钱饭》小时不爱吃的榆钱饭，现在开始慢慢怀念，大概是因为这饭只有奶奶给我做过，而吃她做的饭的机会，越来越少了。 求学期间，故乡只有冬夏。现在要工作了，故乡对我而言，就只剩冬天了。 吃不了多少次了啊。 《馒头》兜兜转转，原来自己最喜欢的还是馒头、包子、馅儿饼。这算是对食物的内隐记忆吗？ 《一本书的命运》书的命运都有什么呢？从印刷开始，可能永远不见天日，也可能和很多人有各种心灵地对话。可能在夜市里等待一个有缘人，也可能黑心的商人贴上价格标签后禁止流通。 《我是喜欢历史的吗》《剑桥金庸武侠史》是典型的历史叙事风格，我读的很是激动，还写了一篇博客《金庸与LEMON》 读至一半休息时，我问了自己一个问题，我是喜欢历史的吗？说是也是，说不是也不是。我对正史不感兴趣，那些史书我一本也没读过，也暂且没有读的计划。但我对架空历史又充满情感，看着涉及历史的词句，总能想象出当时的大势、氛围、权谋和是非。从这个角度看，我也许是喜欢历史的。 促使这点喜欢的原因倒是很偶然。初中上学之前，我姐告诉我，历史要背的东西最多。本着笨鸟先飞的原则，我在开学前的暑假，把历史书的几乎每个字都背的滚瓜烂熟，借此先发优势，初一初二每次考试的年级第一名。 《瓦房顶》姜文的《邪不压正》里，男主在老北京的屋顶奔跑。我喜欢这个情节。人像燕子一样，飞在天空上，飞在屋檐中，这是精神的短暂自由。 这也让我想起自己在瓦顶看书的童年。 秋天的落日，枣树的阴影，手里的厚书书，我从平房跑到瓦顶上，看累了就看看身边的枣树叶子，眺望一会儿远处的天空。 那时候还小，身体也轻，瓦房顶也不陡。所以有时我还会再上面小跑。 农村的瓦房们，一瓦连着一瓦，一片连着一片，像一个全新的世界。 这片瓦房的最高处，有一排小雕塑，很可能是古代的神兽，貔貅麒麟之类，它们和瓦同色，一个个也威风的很，我兴起过好几次掰断带走收藏的心思，最终也是一次未成行。 有的瓦房顶可能不易疏水，土也积了一些，来来往往的鸟儿自由自在的新陈代谢，种子就绕过三匝，飘零天涯，降落到了瓦顶上。慢慢地，开出不孤独的芽儿，形成一片郁郁葱葱的小植物，眯着眼看还是一片小森林。这棵是大树，另外一棵就是小藤曼，很有趣。 《庙会》鲁迅的《社戏》，初中课本上节选了一段，我读过很多遍。 赶集，是我喜欢的。那里大约是有着生活的气息，对物质极不满足的那时我们而言，集市就是天堂。 集市里有着一种不同往常的氛围，令人欣喜，令人悸动，令人兴奋，令人期待。 走在一排排小摊中间时，多巴胺在浑身轻快地流动。 那时候是真的无忧无虑啊。现在我突然明白了无忧无虑的意思，但又马上想到，当我明白这个词的意思时，我应该已经失去了它。 《求新与求变》求新和求变，才能心一直年轻。 待在舒适区，生活会像一潭死水。 只有走出去，才能不一眼看到头。 《心比天高》有一种悲哀叫做心比天高，命比纸薄。我不愿这样。但我要在有限的资源和环境下 ，打出自己的最好牌局。 《书的味道》老书好像是有味道的。 不知道是时间的，还是前人的记忆的。 现在的书没有，不知道是书变了，还是我变了。 木头和文字相遇发酵。当笔墨撒在纸上的时候，墨香与木香会绕在一起，慢慢地，慢慢地把人包围起来。 我女朋友说，家里80年代的书的味道，会让她有在看历史文物的错觉。 《书与季节》史书应该适合冬天看。 情节丰富的也适合冬天看，因万籁俱寂，人也不想动弹，精气神力都回归到身体里去了，此时窝在被窝里，神游于书，随书中人物感受命途多舛，大喜大悲，应当很有代入感。 哪些书适合夏天看呢？ 夏天适合看散文，白瓷碗，梅子汤，冰块叮当响。 《最后一桶泡面》泡面只有一桶了，只要留着，就会有希望。 这也许是深藏于基因的农耕意识。 饿的时候，熬夜的时候，只要想着，我还有一桶泡面呀，就会开心起来。 《吃点东西吧》山珍海味不及下雨时桌上一碗热汤面。这是我女朋友说的话，我不能再赞同了。 我感觉她也说跟最有安全感的人，一起吃，最有归属感的东西，是幸福的事。 我深以为然。 《雨日游寺》车里很闷热。 我靠在公交车的玻璃上，看着雨打在玻璃上，划出一道道雨痕，车窗外的光变得模模糊糊的。这是一次突然兴起的旅行。 车外有车内企及不了的清新和自由，我现在终于是在车外而不是在车内了。 撑起伞，走过小桥，雨声打在伞上是哗啦啦的，落在池塘里则是噗哒哒的声音。 寺庙的墙是黄色的，橘黄的的灯光落在了墙上。 墙边一排卖小吃的摊子，撑起了雨棚，炸串扔到了油锅里，刺啦地有着油烟香。 这和佛前的烟香绕在了一起，罪过罪过，但实在是，太美好了。 我行走在这里，我爱这片黑夜，这片宁静，这片雨幕。 《南浔七日》浔，雨。 是南浔啊，烟雨之南浔，是让我心变得平静的地方。 和妍妍的七天游记 七天行，一天天比一天天愉快，一天天比一天天快乐。 我想记录这些事情，在七十多坐在门口晒太阳时，一边傻笑一边想着这些事。年少时的游历，最大的价值之一，也莫过如此了。 《目的性》我是否目的性过强了。 或者，更准确来说，我是不是太倾向于拒绝收益较慢的事情？ 我不想过于自我反省，但想想这个问题还是有意义的。 《暑假2019》这个暑假，是最好的暑假，没有之一。 生活的样子是什么？ 工作，休息，相互照顾，相互扶持。 《老师们》每个阶段都能碰上影响我很多的老师，初中的靳老师，高中的张老师，大学的陈老师师者，传道受业解惑也。我很感谢他们。 其实我感觉自己是适合做老师的，因为人比较笨，学东西比较慢，各种坑总会踩一遍，因而特别能体会学新东西过程中的苦楚。这份苦楚在教人时，就可以转化为耐心和理解。当然，这个特质可能只适合大部分学生。对那些天才学生而言，拥有这个特点的可能就是一个絮絮叨叨的老师而已。 《四平校区》跟老师去讨论项目。谈完之后，我回到了老校区。 时间已是初秋，但从树叶的间隙往天上看，这应该是夏天的阳光吧。 我坐在教育超市后的木椅上，想着，为什么每次回来都感觉，心这么通透。 在这里，我度过了大学的头两年，像风一样，呼啦啦飞起来的两年。 有时候，我还会想起自己的开学第一天。那握着入学通知书中的附带地图，跟爸妈一起去综合楼报道的时刻。夏天的热气混杂着草木的香味，阳光下一张张好看的、紧张的、兴奋的脸，一个未知的、等我挖掘、探索的大好人生。 保研结束后的一个周二，我去过一趟彰武，找到了曾经的长阳台，拉了一张椅子坐下，在这个好像所有人、所有车都睡着了的午后，看着被雨洗的干净的树。万千思绪涌来，却又抓不到一处。我的大学，好像结束了。 《秋招》秋招是人生的十字路口。 从秋招开始到秋招结束，大概有两三个月。期间，我感觉自己一直处于一种在焦虑和欣喜中反复横跳的状态。到现在，终于一切都尘埃落定。我写下了这篇文章。 当前世界经济进入下行通道，我的老师上课时总说，这一年是近五年中求职最差的一年，但也可能是未来五年中最好的一年。也有人说，后面的这个五年可以换成二十年。虽然身处象牙塔内，但在这次秋招期间，我也确实感受到了这股时代寒流。 我所在的学校允许学生转专业。13年时，大批学生转土木、汽车等专业。14年时，土木行业遇冷，土木转专业绩点应势触底，土木成为转出大户。及至19年，汽车行业遇冷，也许因为有自动驾驶这个新兴增长点，转入绩点还不至于碰到底线，但大幅度下降已在眼前。与之相对的是，从14年开始，电信专业成为新的转入大户，转入绩点一路上升，目前已经成为最火的转入专业。 转专业是个很好的政策，虽然本意是让学生们结合自己的兴趣和能力，多一次选择的机会。但在本科阶段，哪个学生们能真正确定自己的兴趣？在这样的前提下，去一个前景好的专业是最佳选择，这一点无可厚非。不过学弟学妹们也要当心，随着生化环材机土等”天坑专业”的同学们越来越“看透”本专业的前景，提前断了在老本行里混出头这个念头。接下来的几年里，无数学生会转入计算机行业，届时大量初级职位会发生内卷，知乎上有很多类似问题算法岗诸神黄昏，算法初级职位内卷，如何选择适合自己的方向?大家可以参考。 我绝不是唱衰计算机和互联网，它们是当前最好的专业之一。我也相信未来是计算机的，但需要注意的是，它不一定完全是属于程序员的。所以在选择行业时，我的个人建议是，在不断提升自身技术的同时，可以稍微多关注一些交叉领域，从而避免35岁时被更年轻的更有拼劲儿的小伙子们替代的命运。 具体要投身什么领域，学弟学妹们可以仔细想想。当然不限于交叉领域，但一定要多想想，再多想想。 对我个人而言，我很早就确定了第一份工作会在计算机+交通运输这一块儿。现在外界看衰自动驾驶比较多，但我相信这是一个能改变很多的行业，只不过前进路上还有很多障碍要克服。其实在深度学习还没火以前，搞这一行的也沉寂过很长一段时间，而到了现在，那些人都获得了坚持的成果，现在再想入门分一口蛋糕已经很困难了。既然没赶上这一个风口，那就耐住五年十年寂寞，提前为下一个可能的风口做准备？这也是一种选择。 对有的方向有的同学，选公司很简单，阿里腾讯就在那里，没什么好纠结的。但有些行业是比较复杂的，也不是每个人都是天选之子。对于大多数的“我们”，在具体选择第一个公司以前，一定要多深入理解这个行业，在这个基础上，再对备选offer进行评估，不要盲目追逐公司的名气（平台），更不要过于看重前几年的薪资，offer选择要综合考虑。 在我自己投身自动驾驶行业前，我总结了以下几点，也希望能给这行的朋友们提供一点参考。选择其他行业的同学，也可以想想自己行业有无可总结的点。 （1）自动驾驶这个大方向是没错的，这是人类出行的自然进化目标，绕不开的，但是实现它的过程是漫长而曲折的，需要技术突破，需要法律保障，需要*推动，需要民众支持，需要协调保险等各行各业。 （2）自动驾驶拼的不仅是技术，还要拼产业整合能力，最终想成的话，在上游需要有主机厂车企支持或参与，在下游需要有可落地的场景。自动驾驶能不能真正活下来，还有一点需要关注的是，在实现最终目标的路上，有无中间输血能力。所以目标定在L4没问题，但在过程中还是要选择性地完成L2和L3的。 （3）自动驾驶的实现离不开*推动。所以我们也能看到，除了一线大城市北京、上海等之外，苏州长沙等城市也在加快自己的自动驾驶布局，主要方法有建立自动驾驶运营示范区、拉顶级头部企业入驻。 （4）自动驾驶的发展，我们可以学习美国部分公司，尤其是技术层面和政策层面。谁能成为中国的waymo和cruise呢？它会出自车企的自动驾驶部吗？还是自动驾驶科技初创公司？ （5）自动驾驶的发展有圈地效应，也有头部效应，我不认为这个市场能被一家公司分完，但你要加入的必须是这一行最有可能出来的前几家公司之一，而在选择这样的公司时，圈地效应可以作为参考。 （6）自动驾驶落地时要选好场景，在我个人看来，商用车自动驾驶比乘用车自动驾驶会更先落地。原因有三条:需求，成本，难度。首先是需求，以干线物流为例，商用车人力成本居高不下，且司机劳动力已严重不足，未来推进自动驾驶几乎是必经之路。对成本而言，相比于商用车本来的基础成本，对其附加自动驾驶系统是在成本可接受范围内的，另外自动驾驶带来的人力成本削减和一些汽车运行成本（油费等）削减对实际运营是有价值的。就难度而言，商用车一般应用在限制场景下，因此要处理的问题在大部分维度上都减少了。 （7）商用车自动驾驶主要有干线物流、最后一公里、以码头等代表的封闭场景，其中真正有万亿市场的还是干线物流。目前在干线物流里国内做的比较好的有图森未来，智加科技Plusai等。前者不必多说，后者联合了一汽解放这个车企和满帮，打通了上下游场景。 回到选offer本身，在以上行业认识的基础上，我给的公式是：岗位&gt;平台&gt;生活&gt;薪酬。其中，岗位包括技术水平，培养机制等。平台指的是岗位的base、当前的段位和未来的发展潜力。生活包括，是否996？公司工作氛围文化等。996真的不是“福报”！是剥削！不要感觉自己年轻可以一直熬夜，合理地时间分配才能发挥出最大产能，我一直认同这一点。薪酬，包括起薪、福利和涨薪机制等。 我秋招时一共投递了八家公司，共拿到七个面试，最后获得了五个offer，大致可分为三类，以智加科技为代表的初创科技企业offer，以商汤科技为代表的AI独角兽（互联网）自动驾驶部offer，以某车企前瞻部为代表的主机厂offer。 补上业界一位大佬对我的建议。 目前国内的自动驾驶还处于群雄逐鹿的阶段，短时间很难看得出谁能胜出。首先是把握大方向，既然已经下定决心做自动驾驶这块了，就不要在乎短期的利益，很多人的第一份工作都是2-3年，这期间主要是看你能得到什么，现在还年轻，自己的成长才是最主要的，从事一个有技术含量的职位比机械的劳动的收益更大。如果你是对自己有所要求的人，我建议你选择能提供更加有技术含量的工作岗位，退一步说以后你也可以去其他公司发挥自己的才能。工作篇： 和同事和导师交朋友，他们是工作中能够给你最直接帮助的人，好的同事会是你的良师益友。 处理好户口档案，党籍，公积金等问题，这些是你从校园步入社会需要优先处理的，也为你今后的生活做准备。 多参加一下公司的培训或者活动，年轻人就像早晨七八点钟的太阳，充满朝气的参加各种活动能够建立良好的人际关系 降低心理预期，一开始入职之前感觉自己可以改变世界，对公司的期望别太高，实际上做的很多工作都是简单而琐碎的，但这些就是工作，重要的是去挖掘，去学习，脚踏实地一步一个脚印去提高自己 学习篇： 对自动驾驶初步了解，这部分可以结合视频网课和一些网上资料获取一个初步的概念 查看书籍，书籍的形式比较系统，可以带你更加系统的了解无人驾驶的各个模块和用到的技术 学习源码，所有的车能够运行起来，都是靠源码能够运行起来，源码是一切的基石，入职3个月到1年，我觉得主要的精力可以放在阅读源码上。 精益求精，学习论文，我强烈推荐二篇综述性的论文《A Survey of Autonomous Driving: Common Practices and Emerging Technologies》《Self-Driving Cars: A Survey》 生活篇： 多认识朋友，不管是苏州还是上海，都有很多活动，运动和读书都可以使你交到很多朋友 多了解下当地的美食以及周边的景点，工作之余，让自己的业余生活也多姿多彩 多关心下家人朋友，一个城市的同学可以尽可能多联系下，组织下聚餐或者吃饭，聊聊人生 《谈“谈谈风俗画”》这是一个嵌套型标题。《谈谈风俗画》是汪曾祺分析自己写作风格的一篇文章。他把自己的作品归纳为“风俗画”，并自认这是一种非常高级的写法，我赞同他的观点。 文中关于风俗画的讲解，和我一直追寻的主题是契合的。 别人也许不知道，但我自己清楚，我的随笔中反复出现“童年”，“回忆”这样的关键词，并对“赶集”，“唱戏”这样的场合有特殊的感情。这和汪曾祺所说的风俗画是对应的。 《奥特曼》奥特曼，特摄剧的一种，风靡于世界。 我们所熟知的奥特曼，大多是外星人。它们来自M78星云，因为等离子火花塔而变异成大巨人。我们所熟悉的迪迦反而是异类，它是史前文明的遗留。 少年时，我最期待的是奥特曼变身、打架、被殴、反击的情节，到如今再回头看，感觉更喜欢的反而是那些“文戏”。 艾斯奥特曼第六集，东京出现了巨大的蚂蚁超兽，能利用异次元空间掳走O型血的女子。正因为这个空间能力，所以犯罪现场没有任何有价值的线索。在这里，特战队员的态度令我印象深刻，他们不了解，所以他们不相信。 但后来，超兽的存在终于被确定，但艾斯奥特曼的人间体无法去地底，奥特曼就也不能在地底出现。 空旷的东京，灰蒙蒙的天空，因为有超兽事件，街上空无一人。南夕子在明亮但冷清的街道里小跑着，似乎在寻找什么。到了一个十字路口，天旋地转，在南夕子被拉向地底的时候，一直跟在她后面的北斗飞扑了出来，抓住了她的手。完美的合作！两人手指上的一对奥特之戒发出了光芒，艾斯奥特曼从光中握拳飞出。 我一直在想，南夕子在诱导超兽抓它的时候，心情会是如何的呢？害怕超兽是必然的，但对北斗的信任也一直在骨子里。 杰克奥特曼第三十三集，爱好和平的梅茨星人来地球研究天气，但因为污染身体迅速老化无法离开，一个少年想帮助它帮飞船挖出来，但每天挖洞却引来了一些村民的欺负。在迫不得已的情况下，梅茨星人变身，但却被村民杀害，大怪兽就此出场。 杰克的人间体乡秀树目睹了全过程，他看着这群村民，这脆弱的个体，这让人不寒而栗的集体恶意。看着大肆破坏的怪兽，他不再像以前那么坚定。 我在想，乡秀树在把头转过来的一刹那，在决定保护这群可恶的人类时，他的心里又是怎么想的呢。 《记忆的起点》你记忆的起点是什么，顺着思绪，把时钟往回拨，逆着光阴长河往回走，事情一件件浮现在眼前，让人幸福或遗憾的事情一件件出现在眼前。走着走着，记忆渐渐稀疏了，也模糊了。但长河的源头，记忆的起点，表意识下记住的第一件事，你还没忘，对不对。 是什么呢？为什么会记住它呢？它在你到目前为止的人生中，重要吗？你有想过这些问题吗。 我还没忘，这件事很重要，我想过为什么会记住它。现在让我来说说，它是什么。 《论文中期前的一篇日记》好多年没写过所谓的日记了，但我经历了非常令人振奋的几天，所以想记录下来了。 实验完成从0到0.9的部分了！！终于毕业有一些希望了。 真正完成原型只花了1.5天，代码的行数也很少，但其实达到这个目标付出了很长时间。从4月开题开始，就一直在想怎么做成这件事，中间走了很多弯路。但这些弯路并不是必要的，它是通向最终解决方案的必经之路。 5-6月，基本在找实习，准备期末，期间尝试寻找已有实现，未果。 7-8月，实习时用的方案时间有限没机会再用，且公司的系统不允许作为被测agent。 9-10月，被寄予厚望的prescan和VTD与ECU-Test联合仿真的方案，因为软件有缺陷，且没有合适的代理可测，再沉浸下去，成本会堆的越来越高，风险也会大到不可接受，遂搁置。 10月，找到了一个基于某机器人仿真软件的开源方案，初期很激动，在花了三周后，发现该方案平台有运行速度、使用语言、被测agent等致命缺陷，且已有的实验完成度太高，体系已成，因而不适合作为论文的基础。 在这段时间，每个方案都投入了相当长时间。午夜梦回时，我会问自己，“能不能完成呢”。在跟老师出去开会时，也总会下意识地问别人，“你们的工具有没有考虑过实现这个功能，怎么才能实现这个功能。” 希望来的很快，失望却会一直萦绕在心间。 转折是从10月下旬，11月初开始的。 十一月初，赶项目准备中期时，偶然发现，每次撞车时，实验可以重启，所有的车可以回到原点，场景也被重置，于是灵光一闪，感觉可以基于这个特性解决前面的核心循环问题。于是把新方案重新装回到了脑袋里。此外，随着项目进行对平台特性了解慢慢加深了。 十二月初。因为日常孜孜不倦在谷歌上搜跟我论文相关的关键词，所以我的文件夹里总有一堆马克文，在去芜湖的车上，因为无聊，我很偶然地打开两个月前不知道从哪里保存的一篇文章。在看了几个小时后，发现思路可借鉴的点很多。又用心检索了下，在边角落发现了一个实现的原型框架，读了几遍，隐隐约约感觉论文要采用的工具有谱了。 十二月上旬，开始深入研究平台的接口和待采用的框架的特性，发现原论文的实现和自己的差异比较大，但这已经不是问题了，求同存异，去除枝枝蔓蔓，直接找到最核心的部分，中间写了几次方案。 十二月14-15两天，开始实现，一个个坑直接填掉，完成了原型。即完成了0-0.9的部分。 接下来就只是完成0.9-1和1-10了，这是我擅长的部分，所以不再害怕了。 上周五组会我跟老师说，我要量变到质变了！ 希望后面的研究工作能对得起这句话。 不管怎样，终于在过年之前完成了最艰难的部分，我也不管老师说什么了，东西都完成就皆大欢喜。 《我们如何找到合适的交流方式》我感觉未来交流的推广，可以考虑增加连通对话的成本，而不是减少它。 小半年前，我把博客的评论区取消了，作为替代品，在“关于我”的界面里留了一个邮箱。能找到它，还专门发一个邮件来交流的，都是值得至少聊十几分钟的人，而微信群里加的人，可能几个月或者永远都不会互动。 远就是近，近就是远。 每次收到邮件，我还是很振奋的，会觉得以前搭建用的心思，优化花的银子都没白费。这也会敦促我打开编辑器，噼里啪啦往博文里补充点新的想法。 博客数量虽然一直停在了140多条，但它其实并没有被放弃。每周我都会删除、修改、增添历史记录里的内容，修改的条数积累到一定数目之后，就部署上传。未来也想把总的数目控制在200条以内。 究其原因，是因为我想摆脱一个碎片化的表象，这算是执念了。 我记得早些时候说，这个博客是我少数坚持下来的事情之一，找工作时，我要把它写在简历上，这个我确实这样做了，也很有用，也许以后要被裁时也有用，手握小型媒体威慑！咱们同归于尽！哈哈哈哈哈哈哈。 我以前还想过，认识新朋友时，让他们通过这个博客了解我，这个看情况，大概率不会。 对了，还有流量入口。搜到这个博客的，大多是用自动驾驶仿真、激光雷达、交通流仿真之类的关键词，所以它也许还是更偏向于一个技术博客。虽然我自己很清楚，里面的科普性文章离技术文章还差很远。 从工作上看，coder and enginer，不断总结，不断记录，博观而约取，厚积而薄发。从生活上看，有回忆才是美好人生，我依然喜欢这句话。 《批评与自我批评》本来这篇名字是中期项目总结，但想了想，还是组会上提到的“批评与自我批评”更合适一些。 批评在很多人，包括在我眼里，都是一个下意识想去逃避的词汇。不管是批评，还是自我批评，里面往往都包含着对抗、敲打、警示、否认、质疑、受挫、揭疤等。现代人应该没有不害怕批评的。 但我们需要它们。 人是需要进步，需要成长的。批评与自我批评，不仅是对他人负责的表现，也是兑现自我价值，对自己负责的表现。如果一直把自己放在听不进去任何“尖锐之语”的环境中，那我们很多时候的努力只是让自己在原地打旋儿而已。 接近年终了，我们该总结总结自己，也该批评下自己，批评下别人。 心态。对于设备报销这件事，回头看，整体工作并不多。但是这件事像跗骨之蛆，在几个月时间里，消耗掉了我大量精力，也消磨过我太多好心情。这事儿是深受“拖延”之害，拖得时间长了，它的难度在我心中也被放大了。我越来越怕后面那堆麻烦，越来越抗拒它。拖延会带来“恐怖”，它的危害是很大的。 惯性。惯性有时是不可控的。从长远来看，每个人都要学会状态的自我调节，要学会从坏状态中迅速脱身，要学会让好状态保持一种平稳的发展趋势，不过于激烈。但如果项目压力太大，如果自知状态已经被低落困住了较长时间，那么别犹豫，向外求助吧，可以是面向方案的理性讨论，也可以是围绕吐槽的感性释放。但不要，自己一个人蛮干。 责任。在项目进展过程中，由于自己的失误带来的后果一定要担起来，不要甩锅。其他人的责任也切忌不要一味包揽，这样也会有不好的后果。遇到问题时，责任划分清楚，但要迅速把这一页翻过，把重心放在问题解决上。 奖惩。对大部分90后，包括我。当项目进行的顺利时，该夸就夸。当项目因为不可控原因出错时，就适时提醒、敲打、警示，比如“要发展自己的大局观，什么时候都应该有一个PlanB”。当项目因为个人问题而出错时，该骂就骂，该怼就怼。但，项目顺利完成一个节点，就轻轻揭过，认为一切理所当然，当项目处于迭代期，就对待优化的点给出明显的负面评价。这样的一个项目做下来，不会让人有实现自我价值的感受，有的只是负面评价的积累，即使那些负面评价本质上是善意，也很温柔，也依然是个大问题。 全局。有时候我总想，事情最好安排好每个细节再去着手做。但现在逐渐发现，以我的水平，还没到事先推演全局的地步。所以对于想法，不要犹豫，着手去做，推推推，一路平推做完它。对于手头的事情，比如与他人对接信息，做某个PPT，验证某个想法，更应如此，不要让手头某件事情堆得太久，不要用常规的工作量要求自己，要尽量快！ 预演。对所有事情统揽全局是很难做到的，但对于一件事情，在做之前，可以闭眼静思，把事情过一遍。例如，可以按时间顺序，要组织一场会议，首先要通知到人具体的时间和地点，再之后要提前借好会议室，提前调试投影设备，准备好茶水，调好空调温度。对于讲解，备好激光笔，备用电脑，各种转接器，把控每个人的时间等等。 之后，按照其他逻辑架构再过一遍这件事情，对于PPT，要考虑PPT的时间，PPT的尺寸通知，PPT的配色通知，PPT播放时用的转接口，PPT内容在特定场合的合理性，是否需要有统一的结构，是否有需要保留的隐私，是否各家PPT要统一口径，是否PPT讲解要按照一定的逻辑顺序。当然，在这个阶段，也可以考虑与别人讨论，以减少思维的盲区。 负责。我们应该对自己发出去的内容负责。这个“发出去的内容”的界限视情况而定，可以划在向外发送邮件的时候，也可以划定在向上层发送相关内容时。具体的检查事项可以参照第六点提到的。要从形式、内容、影响三方面负责。形式上，不能出现错字、漏字、重字、错局等等，格式需要一致且符合预先的需求。从内容上，需要逻辑清晰，表达清晰，内容表述要和环境匹配，该用严谨表达时，要查清官方定义，而不能像写散文一样自造词。在影响方面，要注意所写内容的保密性、切忌出现文档泄漏等，如果出现就是大问题了。 交流。要和别人高效的交流。这个高效交流分为三个方面，不畏惧交流，不拖延交流，注意交流时机。不畏惧交流指的是，如果你的交流对象是某个行业大佬，或者一些比较严肃的老师，不要因为害怕和他们多说话而延误了时机，工作是工作，既然他们是工作那头的对象，那他们就有责任有义务对任务作出应有的反馈，所以就当工作去看待吧，不需要畏畏缩缩。不拖延交流是要对信息做到及时分发和反馈，可以把自己想象成一个信息中转站，你自己需要什么订阅信息？那就以一定频率去访问提供该信息的节点，你需要向哪些节点发送信息？在收到相应信息后，就应及时播报给他们。注意交流时机这件事情可能会被忽略，尽量不要在周末，晚上九点以后，早上九点以前去问别人或者告知别人事情，要考虑别人此刻可能已经下班休息了，再收到信息会心力憔悴的。 提议。对一项工作，在向别人提出问题时，需要至少在自己心中明晰这项工作需要达到什么效果。一句话，明确指出问题所在。不然只会让人心力憔悴。 效率。我得再去看看时间管理软件。 《嘭嘭怦怦蓬蓬》嘭嘭怦怦和蓬蓬。这是我每隔两周就会有一次的感受。 心声嘭嘭，怦然心动，蓬蓬松松的安宁。 《少就是多 多就是少》标题其实是一句很虚浮的话。马克思早就告诉过我们，要辩证地看待事物发展规律。所以任何现象、任何事情，都可以总结为类似的表达。除了标题以外，还可以有“长就是短，短就是长”，“快就是慢，慢就是快” 其实这也正如老子在道德经里的文章，“有无相生，难易相成，长短相形，高下相倾，音声相和，前后相随”。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一地鸡毛迎风起]]></title>
    <url>%2F%E4%B8%80%E5%9C%B0%E9%B8%A1%E6%AF%9B%E8%BF%8E%E9%A3%8E%E8%B5%B7.html</url>
    <content type="text"><![CDATA[不得不说，刘震云真是一个天才作家。对乡土风格的把控，刘震云驾轻就熟，巅峰之作是《一句顶一万句》，这本书可以被称为是中国版的《百年孤独》。 刘震云的一个天才之处是能深入到生活的底层，写出那些人心曲折，钻营百态，代表作《手机》和《一地鸡毛》。前者在前些时候刚被推到风口浪尖，但我今天只想谈谈后者。 絮叨型的写作风格看似容易，实则很难驾驭，稍有不慎就会落到“废话太多”的境地。但这对刘震云不是什么问题，他能把一个事情拆开了说，揉碎了说，榨成汁儿后说，正正反反来回说。其观察能力也很强，细节即是明证。 这种写作形式，能抓人心，不简单。 这些天趁休息时重读了《一地鸡毛》，连阅二小时，回过神时，一头冷汗。 我不想成为小林。 谁也不想成为小林。 小林是个文员，有个同做文职工作的妻子，有个刚出生的孩子。围绕着小林的故事里没什么主线，有的只是各种鸡毛蒜皮的小事儿。 小林老婆通勤不顺利，就千方百计向领导送礼，但因贪心礼没送成还落了坏；小林女儿去不了好幼儿园上学，两人上下想办法，最终也只能无奈接受；小林半夜想看一场球赛，但老婆让他先去弄蜂窝煤，搞得小林全无兴致了；小林放不下自己文人的面子，但在赚到一些外快后，他也变得坦然了。 如此种种，一地鸡毛。 我怕自己成为小林，但感觉周围所有人包括我，都在成为小林的路上。小林的状态像是前路上的生活黑洞，被它拉过去是如此容易，但远离它却需要竭尽全力。房子、职场、婚姻、子女和人际关系，这是我们不可避免的未来，不要幻想太多诗和远方，生活永远是一件一件事堆积起来的。 这一件件的事，是一地鸡毛还是生活底料？生活的本质是无趣的还是有趣的？决定权在我们自己手中。 （未完待续）]]></content>
      <tags>
        <tag>随笔</tag>
        <tag>读书</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶科技公司观察]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E7%A7%91%E6%8A%80%E5%85%AC%E5%8F%B8%E8%A7%82%E5%AF%9F.html</url>
    <content type="text"><![CDATA[这会是我写很长时间的一篇文章。此处自动驾驶科技公司既指初创公司，也包括一些互联网公司的自动驾驶产品线。具体行文按点展开。 自动驾驶拼的不仅是技术，还要拼产业整合能力，对自动驾驶科技公司而言，在上游需要有主机厂车企支持或参与，在下游需要有可落地的场景。 能不能真正活下来，还有一点需要关注的是，在实现最终目标的路上，有无中间输血能力。所以目标定在L4没问题，但在过程中还是要努力完成L2和L3的 自动驾驶的实现离不开政府部分的努力。所以我们也能看到，除了一线大城市北京、深圳、上海、广州之外，长沙、武汉、苏州等城市也在加快自己的自动驾驶布局，主要手段有建立自动驾驶运营示范区、发牌照、拉顶级头部企业入驻。谁会成为凤凰城，我们拭目以待。 我相信自动驾驶的未来必然会抵达，这是人类的出行进化，绕不开的，但是实现它的过程是漫长而曲折的，需要技术突破，需要政策加持，需要民众支持。 在前进路上，我们应该分场景，分阶段逐步落地自动驾驶。把城市自动驾驶作为技术目标我是支持的，但是要做好不能一蹴而就的准备。 相比乘用车自动驾驶，我更看好商用车自动驾驶。原因有三条:成本，需求，难度。首先是需求，以干线物流为例，商用车人力成本居高不下，且司机劳动力已严重不足，未来推进自动驾驶几乎是必经之路。对成本而言，由于商用车本来的基础成本，因此对其附加自动驾驶系统是在成本可接受范围内的，另外自动驾驶带来的人力成本的削减和一些汽车运行成本（油费等）在实际运营开始后是能实现收支平衡的。对难度而言，商用车一般应用在限制场景下，因此要处理的问题维度降低了。 商用车自动驾驶主要有干线物流、最后一公里、以码头等代表的封闭场景，其中真正有万亿市场的还是干线物流。目前在干线物流里国内做的比较好的有图森未来，智加科技Plus.ai、可能还要加个赢彻科技。其中智加科技联合上下游的工作是我比较看好的。其他仍需努力。 重视安全体系/仿真/测试体系构建的自动驾驶初创企业至少能保证下限，不会是以PPT为核心的公司。其实站在我的角度，一套完成的测试验证体系也决定着这家公司的上限。 自动驾驶的发展，我们可以学习美国，尤其是技术上和政策上。谁能成为中国的waymo和cruise呢？它会出自车企的自动驾驶部吗？还是自动驾驶科技公司？ 2019-12-20 Update&gt; 初创公司、科技公司这种非整车厂企业，要根据自己的体量找好自己的定位。从大的方面来说，是重点攻关重卡还是robotaxi亦或是矿车、最后一公里，要提前确定，想拿下整个盘子是不容易的。从服务角度来看，是只去做研发，围绕技术，还是提供技术、运营等一站式的服务？ 每个自动驾驶业务的首要目标都是活下去，活下去就有可能瓜分这块市场。当然，所有的相关业务都有着巨大的风险。其中需要注意的是，国外的自动驾驶初创公司一般就是靠投资活着，资金链断掉就会死掉。而中国的自动驾驶公司则会由政府对冲一些风险。如Apollo之于北京，中智行之于南京，autox之于广州，cidi之于长沙，初速度，智加之于苏州，如此等等 不要相信PR，要跳出来看它们当前的进度，从全局分析这个进度表征的阶段。]]></content>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶学习资源整理]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90%E6%95%B4%E7%90%86.html</url>
    <content type="text"><![CDATA[2018/10/20 Create 2019/05/19 First update 2019/08/30 Second update 2019/09/15 Third update博观而约取，厚积而薄发。这是我很喜欢的一句话。Coder &amp; Engineer，这是对我的职业目标的另外一种描述。 我的目标是成为自动驾驶系统(软件)工程师。因此，在掌握专业知识的基础上，足够广的知识面、旺盛的好奇心、超快的学习速度才是我一直找的核心竞争力。另外，知识面宽广和专精一处并不是矛盾的事，有自己的专业研究方向不一定意味着把其他领域的路限死。 这篇博客是我两年来在网上搜集到的各种自动驾驶学习资源，内容包括学术论文，书本，开源项目，甚至微信公众号等等等。在学习的过程中，我每次找到好的资源都会高兴一阵子，每次遇到不好的资源半途而废就会不开心。一年下来，去粗取精，大致有以下的结果。 微信公众号自动驾驶（汽车）类 智车科技 | 从学术界转载较多，眼光总体不错 厚势 | 关注自动驾驶市场新闻，穿插有跟自动驾驶各方面相关的论文，与智车科技有相似之处 智东西 | 我平常很少看这个公众号，但他们做了一系列很棒的公开课，可在里面找到资源 Apollo开发者社区 | 有Apollo项目的教程推送 泡泡机器人SLAM | 关注SLAM领域的研究 计算机视觉Life | 主要是围绕视觉的知识，从这点来看，它类似泡泡机器人，但更杂一些 点云PCL | 如名字所述，主要是关于激光雷达LIDAR点云处理的内容 机器视觉 | 排版垃圾，但是内容丰富接地气，包含各种有关机器视觉学习的讨论 睿慕课 | 有比较多机器人相关的课程 新智驾 | 偏重于自动驾驶市场新闻 高工智能汽车 | 偏重于自动驾驶市场新闻 自动驾驶说 | 偏重于自动驾驶产品设计，大概是因为负责运营者是一位产品经理 佐思汽车研究 | 偶尔会有内容质量比较高的咨询报告放出 同济智能汽车研究所 | 主要内容是论文翻译，翻译质量还算可以保证人工智能类 新智元 | 包含人工智能的市场信息，基础知识，论文研读均有涉猎 量子位 | 定位与新智元基本相似 机器之心 | 更偏重于研究前沿，学习资源，这是质量最高的一个人工智能公众号 七月在线实验室 | 偏向于人工智能学习资源以及开源收集和，同时关注具体的就业面试问题 SIGAI | 提供的推文内容是比较踏实的编程类 五分钟学算法 | 我最喜欢的算法公众号，作者是真正有思考和总结的，总结的很好，思考也深入 labulalong | 风格跟上面的五分钟学算法差不多 花花酱LeetCode | 如名字所述，一个总结LeetCode题目的网站 LintCode领扣 | 如名所示 程序员乔戈里 | 很少涉及具体知识了，但讲了一些其他公众号很少讲的大实话 其他 36氪 | 关注世界动态 CVer | 内容杂但是有可取之处 书本 《The DARPA Urban Challenge》 | 看自动驾驶相关论文时，发现他们的文献综述大多都在讲DARPA，应该都是取自这本书的各种论文。这本书由参与2009城市DARPA挑战赛的队伍所写论文集合而成，相当于创世纪著作了。在新技术层出不穷的当下，这本书也依然非常有价值。 《第一本无人驾驶书》 | 作为入门是很好的书，覆盖了自动驾驶研究领域的方方面面，深度虽不足，但广度足够，可以阅读此书以获得一个总体认识。 《HandBook of Intelligent Vehicles》 | 如你所见，这是一本手册，不可能阅读完的，近乎1700页的论文合集，主要由几个section组成，每个section关注自动驾驶汽车的一个方面，像是《第一本无人驾驶书》的全面增强版。 《Probabilistic Robotics 概率机器人》 | 机器人领域的经典著作，SLAM研究的经典与权威 《2017中国自动驾驶产业研究报告》 | 准确来说，这是一篇研究报告，对当前国内外自动驾驶市场做了一个非常细致的研究，对把握当前大局很有用处。 《无人驾驶车辆智能行为及其测试与评价》 | 一本偏向于自动驾驶测试的书，属于这个细分领域内比较好的科普书。 与计算机和控制以及动力学相关的书籍在这边不专门列出，感兴趣的可以联系我再做讨论 自动驾驶相关学术会议这是论文的入口了，日常最新文章和学术资源可以在这里寻找。 机器人领域 IFRR RSS | 文章理论创新性，实验验证完备性要求都很高 IROS | 规模（千人左右）和影响力仅次于ICRA的顶级国际会议 ICRA | 该领域规模（千人以上）和影响力最大的顶级国际会议。计算机视觉领域 CVPR | 世界顶级的计算机视觉会议，被认为有着很强的影响力和很高的排名 ICCV | 文录用率非常低，是三大会议中公认级别最高的 (另外两个是CVPR和ECCV) ECCV | 三大顶会之一自动驾驶领域 IEEE IV | 总感觉质量稍微差了那么一点意思 ITSC | IEEE智能交通系统学会的年度旗舰会议，偏向于交通场景的研究 ICEVS人工智能会议 AAAI IJCAI 仿真/开发平台商业仿真平台 ROS不多说 Prescan在国内的商业化做的是最好的 VTD(virtual test drive)在世界层面想多更受欢迎一些 GaiA初创公司做的仿真软件，在传感器建模方面表现良好 51VR以视觉起价，因而环境建模有自己的独到之处 Panosim邓主导的平台，具体效果就不太清楚了 开源仿真平台 Carla更新迭代快，功能齐全，接口丰富。偶尔还有控制人的肢体动作这样令人惊喜的功能。它是最能满足基本开发者需求的仿真软件。 Arisim是github上标星数目最多的开源仿真软件，和Carla一样，它也是基于Unreal做的。由于是微软开发的软件，所以对windows的支持力度更大一些。它的star数目自然是有理由的，丰富详细的文档，足够使用的API，稳定的性能表现。唯一令人遗憾的是，它已经停止了更新，不会再前进了。 ApolloApollo 的仿真平台主要是面向决策规划系统的，它有预置的场景，开发者可以更换apollo算法中的特定模块，再结合场景完成仿真，从而达到评价系统效果的功用。 lgsvl一个基于Unity的自动驾驶仿真器，我曾经写过一篇Unity自动驾驶仿真,现在来看，这个模拟器是它的集大成者。另外，这个模拟器还提供对Apollo5.0、Apollo3.5、Autoware的支持，这是它最大的优势。它连接仿真器和被测算法的方式也是我们可以学习的。另外，lg在开发软件之前，曾在ROS的官方论坛区提出过一个“你理想中的仿真器应该有怎样的功能”这样一个问题，下面的讨论热烈且深入。这是一个很有心的软件。 编程能力语言语言学习有一点很重要，其一是一边看书一边实际敲代码，另外就是要实际动手项目，而不是一直在语法上打转，那样就是陷入陷阱中了。关于语言学习，可以参考孟岩的博客。除了这些，其他实际入门时，可参考如下参考资料。另外，在学习语言时，由浅到深，稳扎稳打，不用给自己设限。想真正精通一门语言需要好多年，不要只学了一些基础语法就停滞不前了。 C++，从《essential C++》读起，之后借助各方大佬的博客，对于细节查询可以去看《C++ Primer Plus ++》，当然这是我的个人路线，网上关于C++学习有很多好的方案。 Python，确实比较容易，在掌握基本语法后，主要是去看基于Python提供各种的库、模块、框架，这一块才是重点。另外，要好好利用Python的优势，关于这一点，可以去看《写好Python代码的91个建议》,另外，要写出Pythonic的代码，可参考《Python Cookbook》 Java，包括go，php等其他各种语言，不要畏惧语言。除了C++工程师，对于其他大部分人来说，语言是我们的工具，是我们使用语言实现想法，完成工程的实现，而不是他们使用我们。 算法和数据结构这部分的学习资源，重质不重量，求精不求多，我这里只是示例性的列出了精品资源的一部分，这部分的学习也是近乎于无穷无尽的，还有很多进阶之路。但入门的话，可以考虑先把这两个搞定。 算法。斯坦福的算法第四讲，是最好的算法学习资源。书本、教程、视频、习题一应俱全。书本里在讲解算法时都用到了易学的配图，这一系列教程采用的语言是java，学习起来相对较简单，且在学习这门语言的过程中可以掌握面向对象编程的精髓。具体介绍，请参考算法第四版 数据结构。清华邓俊辉数据结构。一个资源足够了。 系统想要做开发还是要使用Linux系统，原因不再赘述。Ubuntu作为Linux一个发行版相对其他版本上手会更容易些，资源整理如下表。 关于Ubuntu，以前的博客做过一些资源整理，参见Ubuntu学习整理 鸟哥的Linux私房菜。语言风趣，例子丰富，基础知识和扩展知识(服务器)都有涉及，优先推荐 Linux菜鸟教程。以实际使用为教程原则，不绕弯，直击本质。 计算机网络 《TCP/IP网络编程》 刷题刷题可以在短期内提高代码能力。可参考 Leetcode 牛客网 剑指offer zh_hans 数学知识 线性代数(矩阵论)，参照本博客，《线性代数学习》 高等数学(微积分),只需要掌握基础内容即可，youtube上的3blue1brown是非常不错的。 统计学。使用《统计学习方法—李航》密码：adep 优化相关(凸优化)。当然就是斯坦福的凸优化，但是这块儿内容不建议直接学，可以在用到时候再进行学习。 机器学习对于这块儿内容，网上有无穷多的总结资料了，总结下来，无非是那几本书，那几个视频，那几个框架而已。我一直感觉，普通人研究机器学习的速度赶不上顶级公司的开源速度。学习的时候不要一直自己疯狂造轮子。]]></content>
      <tags>
        <tag>总结</tag>
        <tag>自动驾驶</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Coder & Engineer]]></title>
    <url>%2FCoder-Engineer.html</url>
    <content type="text"><![CDATA[这个标题我很满意，是从一位很厉害的前辈的github简介里学习到的。 博观而约取，厚积而薄发。是我的学习态度。Coder &amp; Engineer，则是我的学习目标。我在“关于我”的标签里提到，我想投身的是计算机和实体的交叉领域，想要做的是软硬一体的工程师。 Coder和Engineer，我要成为这两者的结合体。 所以即使互联网非常火热，我也没打算投身于纯cs那一行，而是选择自动驾驶作为我工作的起点，因为它和我前边提到的目标匹配度非常高。 我用Coder和Engineer来概括我的职业目标，并不是刻意去割裂两者。Coder的官方招聘岗位也不会写程序员，写的一般也是软件工程师。之所以把这两者拆分开来，我更多是想去强调这两者的不同特质。因此以下提到的更多是狭义的概念。 作为车辆背景的工程师，我更多的是接受工程训练，过往的目标更多是被约束到Engineer中去。但对于自动驾驶，这是不够的。自动驾驶需要系统集成，需要功能安全，需要危险事件分析，需要线控底盘，但最终肯定还是要有一大部分工作落在编码上。而这时传统的车辆Engineer缺乏的东西。 最近一汽校招爆出来不再接受机械专业的学生，这种一刀切的做法非常的愚蠢，也给行业增添了很多不必要的焦虑。但是这从侧面说明了，当前Engineer需要提升自己的编码能力。 那么对于自动驾驶而言，只有coder够吗？跑一些视觉算法，做出来几个数据非常好看的实验，却根本不顾系统输入可能出现的各种问题，做了很好的规划，但在设计时没去考虑系统底盘的控制能力，这样可以吗？应该也是不行的。但就自动驾驶系统的技术层面，它也是一个系统工程，各个模块不应该是完全解耦的，需要一个系统的方法观把各项相关技术串联起来。 翻来覆去说了很多重复的话。总之，我的兴趣所在是实体与计算机的交叉部分，就目前而言，也就是自动驾驶的部分。因此，我想成为一名coder&amp;Engineer。但我相对接受的工程意识训练略微多一些，因而在现在以及未来，我会更多去进行一些计算机科学方面的训练。 既有系统意识，又有实现能力，这是成为一名真正的自动驾驶工程师所真正需要的东西。]]></content>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[回家2019]]></title>
    <url>%2F%E5%9B%9E%E5%AE%B62019.html</url>
    <content type="text"><![CDATA[家里石榴树，核桃树长得很好，只有葡萄树不争气，仍需努力。暑期实习、秋招、论文三方会战，正是最繁忙的时节。但是到回去的时候了，无论如何都要回去。 因为，我姐要结婚了。 我姐和我姐夫谈了6年，两人家也近，性格也互补。我以前还不觉得，现在想来，这真是极为难得的。我和妍妍家也近，性格也互补，我们也许也是谈到第六年结婚？ 可能性很大。 这次带妍妍见了我的家人，双方会晤圆满结束，爸妈夸她礼貌好看有气质，她说我家里氛围好。真好。 家里的小狗豆豆，体型小没有攻击力，但是见到陌生人就狂吠，对妍妍也不例外，它真的是非常爱家了。我提前给妍妍准备了狗粮用来收买它，一把扔下去，它哐里哐叽哐叽吃完，就不再叫，而是围着妍妍的脚转圈圈，态度转变快得让我爸妈都感觉很惊讶，一直说这是早早认定了家人。但从外边吃饭回来，它又忘记了新主人的气味，又一把狗粮下去，这次就彻底被收买了，不再汪汪汪，叫它一声它就很高兴的跑过来，而且会把脚搭在沙发上求摸头。 在下午的时候，我一个人坐在院子里，晒着太阳，又是这种熟悉的草木花果的气息，有满满的暖洋洋的安全感涌了过来。 这种言不可及的的感觉，这让人心中安定的，家的感觉。 由于要举办婚礼的缘故，四面八方的亲人都聚到了我的家里。爸爸妈妈引人落座，聊天讨论婚前婚礼的细节，是很热闹的。我前几年都在外地求学，每年只有夏冬回家几天，跟家里亲戚交流是近乎于零的。这次有时间认真打量，感觉大家都没怎么变化，时间在这里总流的慢。 但几个小孩变化很大。表弟刚高一已经比我高了，我晚上去买礼仪用品，带他一起出去。现在的他沉默又懂事，竟主动帮我跟商家交流。我上次的印象里，他还在地上摆小兵，之后趴地上用玩具枪瞄准射击。一个孩子从童年到青少年的转变，我看到了头和尾的状态，感觉有点唏嘘。 小侄子小侄女已经可以跟我说悄悄话了。上次的印象里，他们应该都还不会走呐，一转眼间已经长这么高了，而且非常可爱。我带着他们抢姐夫的迎亲红包，侄女抢不到会哭，但不是大吵大闹发脾气，就是默默着急的流泪，侄子作为哥哥就会很大方把刚抢到的都给她，她就停了哭，又笑起来。真是两个小天使。 侄子是很聪明的，我在用仿真器做多智能体测试场景，他问，这是干什么呀？我说，这是汽车，假的，测试的。他马上就总结出来，是不敢实际跑，会撞坏是吧！又说，在假的里面跑，肯定很省钱而且很快！我深深地被震惊了，安全性、高效性、经济成本，三大点你是一点都不落下啊。 第二天吃酒席，他是我姐姐这里的代表人，有1000的红包。因为红包发的晚，呀就一直在问我，跟我列举拿到红包后的用处，学画画，存起来买无人机，规划做的满满的。到了下午，他终于拿到了自己那份，马上跑过来拿给我看，我摸摸他头说，这下满意了吧。 家是真的好啊。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[浅谈RSS责任敏感安全模型]]></title>
    <url>%2F%E6%B5%85%E8%B0%88RSS%E8%B4%A3%E4%BB%BB%E6%95%8F%E6%84%9F%E5%AE%89%E5%85%A8%E6%A8%A1%E5%9E%8B.html</url>
    <content type="text"><![CDATA[RSS责任敏感安全模型是Intel提出的用于规范和保证自动驾驶的安全性的标准。 这个标准的创新之处，在于把人类对于安全驾驶的理念和概念转为数学公式，因而形成了一种开放、透明、可验证的形式化模型。 这个模型是值得花大精力去关注的。因为RSS是可以被验证的，我们可以使用它来检查软件做出的决策行为。 关于RSS的介绍有很多，所以我就不再展开具体介绍，只在下面列出比较高质量的的与RSS相关的文章和资源。 RSS_官方源RSS_Intel官方解读Carla_RSS_Video 要不花时间翻译一下rss？]]></content>
      <tags>
        <tag>自动驾驶</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[面向自动驾驶的交通流仿真小结]]></title>
    <url>%2F%E9%9D%A2%E5%90%91%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E7%9A%84%E4%BA%A4%E9%80%9A%E6%B5%81%E4%BB%BF%E7%9C%9F%E5%B0%8F%E7%BB%93.html</url>
    <content type="text"><![CDATA[自动驾驶仿真离不来交通流模拟，但后者绝不只仅仅是为前者服务的。 实际上，交通流模拟也是构建智慧交通、发展智慧城市的必备手段。这篇博文会总结一下近期我对交通流的新的认识。 历史资源关于交通流模拟，在以前的博客里，我们也进行了一些探讨。在自动驾驶仿真工具需求我对交通流仿真的需求和可采用的手段进行了一个简略的整体论述。在自动驾驶Unity资源素材这篇文章下面的交通流架构下面，我列举了比较多高质量的关于学习、设计交通流的资源。交通流仿真框架一文则介绍了面向自动驾驶的交通流设计时需要特意注意的trick，这篇文章的模拟器是用simulink开发的，但其中关于每个模块的接口设计是通用的。另外博客里还推过一本书Fundamentals of Traffic Simulation 分级交通模拟对于自动驾驶的仿真测试而言，交通流模拟在不同的阶段应该有不同的层次。 一开始就去搞虚拟城市，无限接近于真实的交通流可能会导致低效率。对于系统功能还不是十分成熟的规划器，就该用特定的交通参与者行为来验证特定的行为。比如对于跟车规划器的验证应该主要调整的是前车行为。而在自动驾驶各单独规划器功能都已经测试成熟的情况下，我们可以引入交通流模型。在这个阶段，我们可以选用SUMO或VISSIM等工具进行联合仿真，也可以手动构建数学交通流模型。再之后，考虑现实交通行为的复杂性，我们可以给交通流模型引入一些不确定性，比如构建高斯模型或正则模型等。 当然，到了最后阶段，我们的追求还是仿真整个世界，自动驾驶车辆的始终是在实际环境中运行的，如果只是用数学模型去构建交通流的行为，可能会给车辆功能提升带来不好的引导。在这个阶段，我们可以使用AI来进行行为建模，即behavior modeling. 这个过程中，主要可以参考使用的是LSTM、强化学习等。这样的环境能帮助我们找到最后的cornercase。 因此是必不可缺的。 交通行为交通行为有三种不同的等级，宏观交通流、微观交通流、混合交通流，它们都有自己的试用范围，关于这部分有很多资源，所以我不想再在此篇赘述，开新坑。]]></content>
      <tags>
        <tag>自动驾驶仿真</tag>
        <tag>总结</tag>
        <tag>自动驾驶</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Work Hard Play Hard]]></title>
    <url>%2FWork-Hard-Play-Hard.html</url>
    <content type="text"><![CDATA[好好运动，好好学习，好好玩，好好吃，好好休息，这就是龟仙派的训练宗旨。 我在朋友圈也两次分享过这张图。 智加科技的崔迪潇博士在临别时也赠送过一句话，work hard，play hard，整体上是同一个意思。 这是最好的生活和学习态度。只工作不玩耍，聪明孩子变傻瓜。只玩耍，不工作，那就不用多提了。这本应该是很简单的道理的。但可悲的是，大部分人就像韩寒金句所说的那样，“知道很多大道理，却仍过不好这一生”]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[GeoSCENARIO: 用于自动驾驶场景表示的开放式DSL]]></title>
    <url>%2FGeoSCENARIO-%E7%94%A8%E4%BA%8E%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E5%9C%BA%E6%99%AF%E8%A1%A8%E7%A4%BA%E7%9A%84%E5%BC%80%E6%94%BE%E5%BC%8FDSL.html</url>
    <content type="text"><![CDATA[前几天写了这样一篇关于自动驾驶场景语言格式的文章。与之相关的还有这样一篇。起因就是看到了GeoSCENARIO。所以后来在选定要翻译的文章时，就推荐同学选了这篇文章，后续也参与了一部分校核。 文章由“同济智能汽车研究所”微信公众号编译，欢迎大家动手打几个字关注，公众号内容比较杂，但是做的很用心。 本文摘自 IV2019原文题目:”GeoScenario: An Open DSL for Autonomous Driving Scenario Representation”原作者： RodrigoQueiroz，Thorsten Berger，Krzysztof Czarnecki作者单位：加拿大滑铁卢大学1’3，瑞典哥德堡大学2 摘要自动驾驶系统（ADS）在真实交通场景中运行前，需要对其进行广泛地评估，以确保其达到可接受的安全水平。虽然有许多工具可用于执行仿真测试，但目前仍缺乏一种包含道路交通情况复杂性的测试场景语言，而这不利于测试的可重复性并影响了工具之间的可交换性。本文建议将GeoScenario作为场景表示的领域特定语言（DSL），以便在仿真中验证测试用例。在实践中，作者使用该语言在仿真中测试了一个自动驾驶栈。该语言建立在著名的Open Street Map（OSM）标准之上。 前言随着自动驾驶系统（ADS）自动化水平越来越高，产品在发布给客户之前需要进行广泛而严格地评估。随着自动化水平的提高，更多的驾驶任务从人类驾驶员转移到ADS，ADS必须应对真实的交通状况及其所有干扰，包括与人控车辆，行人和其他交通媒介的交互。因此，ADS测试应考虑在真实交通条件下与其他交通媒介的互动，以确保安全性并且符合交通法规。 测试ADS功能（例如尾部避撞）不仅需要仿真工具来执行相关方案，还需要一种语言来正式地表示它们。为了设计和运行自动驾驶汽车的测试场景，工程师需要学习特定工具的语言。在不同的仿真软件之间迁移场景需要很大的成本。 一个设计良好、与工具无关的领域特定语言（DSL），有助于研究人员和工程师设计独立于工具的测试用例，在不同工具之间迁移场景，并在其他测试环境下评估他们的系统。本文提出GeoScenario作为用于场景表示和评估的DSL，确定了构成典型测试用例的相关元素，这些元素需要在仿真测试中定义和执行。此外，本文还提供了一个工具集，可以使用DSL轻松地设计和验证方案。 背景和相关工作特定于工具的语言许多工具和研究都创建了自己的语言来定义场景。CommonRoad 基于三个主要组成部分（车辆模型、成本函数和场景）提出了可组合的运动规划基准结构。尽管这项工作没有尝试提出场景描述DSL，但是它创建了自己的文件格式。与GeoScenario类似，这项工作使用Lanelets来表示道路网络，由具有初始状态和若干目标区域（点，形状或特定小巷）的自车车辆以及具有具体轨迹数据的所有其他车辆形成场景布局。除了轨迹之外，没有高级工具支持根据关键位置或度量条件来编排场景。该格式符合基准目标，但目前还不足以适用于其他仿真工具和标准。 仿真工具通常包含用于描述场景的语言。但是，这些语言仅限于其自身的仿真环境，因此难以跨平台进行翻译或解释。 开放性语言在场景表示中，可以使用地图格式来表征道路网络。Open Street Map（OSM）是一个众所周知的协作项目，它使用开放XML格式创建并发布免费地图。但是，OSM和其他通用地图标准不包含有关车道级道路拓扑的详细信息。因此，它们不适合在场景语言中使用。Lanelets 是OSM格式的开放式扩展，其可专门用于支持自动车辆的道路网络表示。 OpenScenario是一种新兴的开放文件格式，用于描述驾驶模拟应用程序中的动态内容。该项目由自动化与测量系统标准化协会（ASAM）管理，目前处于早期阶段。该项目计划涵盖仿真的动态内容，例如驾驶员行为、交通、天气、环境、事件和其他功能。静态内容由另一种格式OpenDRIVE 支持。 虽然OpenScenario和GeoScenario具有相似的目标，但它们的结构和抽象级别各不相同。OpenScenario更接近逻辑层。OpenScenario和OpenDRIVE这两个规范都是开放的，但没有免费的库或工具来解释和处理数据。 设计一种驾驶场景语言GeoScenario设计基本原则： 重用性：利用现有的开放格式在知名且已使用的结构之上构建新语言。该方法只需对现有工具进行微小调整即可达到重用支持新语言的目的。 简单性：对简单的场景进行建模，该语言非常简单，可读性强。工具可支持复杂的场景。 覆盖范围：能够表达场景的主要组成部分。 可扩展性：可以通过其标准组件的新特性和专业化轻松地进行扩展。 系统独立性：支持不同ADS设计的测试用例，可在不同的自动化级别上运行。 工具独立性：可以通过其他仿真和测试环境进行解释和执行。 可执行性：可以表征在没有其他语言的情况下在仿真中运行的具体场景。 GeoScenario构架GeoScenario格式基于XML，OSM标准构建。 主要组成部分包括：自车开始位置和目标，道路网络，交通参与者（车辆和行人），路径，触发器和动作。 GeoScenario基础知识所有GeoScenario元素都基于两种OSM原始类型：节点和路线。节点是GeoScenario的核心元素，代表地球表面的特定点。每个节点包括ID号和一对坐标（纬度和经度）。路线是定义多段线的节点的有序列表，用于定义线性要素，例如路径和区域边界（表示路障的实心多边形，或动态元素放置的命名区域）。要定义区域，路线的第一个和最后一个节点必须相同（闭环路线）。 所有元素（节点和路线）都具有描述元素属性的标签，即文本字段对。我们使用标签gs来定义场景中元素的角色，即GeoScenario模型中元素的功能（例如，gs = vehicle）。没有gs标记的元素在场景中没有特定角色，但可以用于组合其他元素。 具有角色的所有元素还必须包含标记“name”（除了少数例外）。该名称是唯一的字符串，用于标识方案中的一个元素。节点在WGS84坐标系中具有坐标（作为OSM标准的一部分）。GeoScenario规范中记录了固定的标签词典。 自车和驾驶任务在一个场景中，自车是代表自动驾驶系统操作车辆的实体。在本文中，作者决定不为自车定义动作或策略，而是仅指定初始条件和目标。在测试用例执行期间，自动驾驶系统是一个黑箱，它负责根据交通状况（道路网络，静态物体，路径上的动态交通参与者等）决定最佳路线和策略。作者决定采用这种方法，使语言独立于系统并反映真实世界的驾驶场景。在实际运行中，一个长期的驾驶任务可以以一个全局位置的形式被赋予驾驶员或自动驾驶汽车。初始条件定义为表示自车起始位置和方向的节点。 我们假设自车总是在一个固定的位置开始一个场景，目标被定义为一个自车目标节点，一个场景中可以具有多个有序目标位置。它们代表了自动驾驶系统应该实现的中级和高级任务。驾驶任务的最终目标是完成最高级别的任务。这些节点可用于为系统组成一个全局路径，或在系统的内部映射上创建一个目标点。 布景和道路网络本文使用Lanelets 来表示场景道路网络，因为其具有紧凑的轻量级结构。道路网络存储在单独的XML文件中，以便于替换。然而场景只能在路网中进行呈现。因此GeoScenario必须始终与其关联的道路网络文件一起发布。 为了表示不属于道路网络的静止障碍物，我们引入静态物体。静态对象可以通过某种方式或封闭方式定义为单个节点。封闭方式可以采用任意形状，但为了保证有效性，必须具有指向同一节点ID的第一个和最后一个节点。 动态元素本文将所有能够移动（具有动能）或能够改变其状态的GeoScenario元素定义为动态元素。在GeoScenario中，停放的车辆也被定义为动态元素。能够移动的动态元素称为交通参与者，并分为两种类型：车辆和行人。两者都表示为节点并具有相似的属性。车辆用标签gs = vehicle定义，行人用标签gs = pedestrian定义。使用方向标签来定义参与者的初始方向。方向以度为单位，原点在东方，顺时针方向。不同类型的车辆（例如，汽车，卡车，公共汽车）用相同类型表示，并使用可选的属性模型指定车辆模型。本文不指定车辆动力学或3D网格的细节，因此，测试结果必须考虑运行场景的模拟基础架构的其他详细信息。 速度属性（以km / h为单位）用于定义参考速度。为了实现运动，车辆和行人需要被分配到一个路径。路径被定义为Way元素，可同时用于车辆和行人。路径应解释为由有序连接节点组成的样条线。当一个交通参与者被分配一个路径时，它将沿着路径以其参考速度行进。 为了支持更真实车辆运动学表现，或从记录的交通数据再现场景，可以为一个参与者分配一个速度文件。当一个路径具有一个速度文件时，它必须包含带有参与者速度的标记节点，以便在到达该节点后指定代理的目标速度。参与者必须始终尝试以恒定的加速度匹配路径中的下一个节点的速度。 通过高密度路径（即更多节点）和速度配置文件，GeoScenario模型可以表示各种交通情况。各种交通情况可以由专家手动设计，也可以通过传感器从实际交通中提取，或从自然驾驶数据库导入。某些属性可以通过固定值或值范围来描述。 触发和动作在GeoScenario中，作者引入触发器和动作来协调场景的演变。基本的概念是在道路网络的决策位置添加触发节点，并在触发节点处激活对动态元素的不同动作。每个触发器都有所有者和目标。所有者激活触发器，而目标执行动作。所有者可以是自车或其他交通参与者（车辆，行人）。目标可以是任何动态元素，其状态可以随场景的变化而变化，但不能是自车。我们的假设遵循这条规则，将自动驾驶系统假设为一个黑箱，仅限制它的初始条件和驾驶任务。动作则可以更改参与者的状态或决策本身。 触发器可以通过三种类型的条件激活，或者通过它们的组合激活： 时间：当场景执行到达给定时间t时激活。一组定时触发器允许设计者按时间顺序控制具有定时事件的场景。 位置：当所有者到达触发节点位置时激活。触发点必须放在道路网络的决策关键点上。 度量条件：当基于度量的给定条件为真时激活。该触发器允许不依赖特定位置而是在相对条件之后的任何位置执行动作。例如，一辆汽车在道路上行驶时，只有当本车和一辆汽车之间的距离小于100米时，它才开始减速停车。为了支持度量条件触发，GeoScenario需要在参与者之间跟踪给定的度量。 通过显式声明跟踪哪些参与者，度量也被定义为GeoScenario中的一个元素。因为可以使用不同的方法计算度量，我们建议场景中包含对度量如何计算的引用。例如，TTC可以被多种方法使用，从而导致不同的结果 本文仅对我们的模型进行了概述。所有细节(包括示例)都可以在我们的项目存储库中找到。此外，可以使用新的特性和属性轻松地扩展模型，以支持特定于工具的需求(例如，支持模型之间的转换) 工具集可访问的工具集非常重要。由于作者的场景格式是基于OSM开发的，因此作者采用了OSM的标准地图编辑工具：JOSM。通过添加一组自定义的预设和样式表，作者现在可以在道路网络（Lanelet层）和其他地图图层（例如Bing地图，ESRI地图）的顶部轻松地设计和构建一个GeoScenario。 结论本文提出了GeoScenario，一种用于场景表示的领域特定语言，作者确定了组成典型测试用例的关键要素，这些要素需要在自动驾驶车辆测试中正式声明和执行。这种语言构建在著名的Open Street Maps语言之上，设计简单，易于扩展。一个使用本文的DSL设计和验证场景的工具集已公开发布，在更多研究人员的贡献下，未来作者计划发布一个独立于仿真工具的自动驾驶汽车测试场景共享数据库。]]></content>
      <tags>
        <tag>自动驾驶</tag>
        <tag>自动驾驶测试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[科研感悟]]></title>
    <url>%2F%E7%A7%91%E7%A0%94%E6%84%9F%E6%82%9F.html</url>
    <content type="text"><![CDATA[2018/08/22 Create 2019/08/22 First Update 我是以工作为导向的类型，所以读博不在我的考虑范围内，但研究生也是需要接触科研的。科研到目前为止还没有被社会发展成一个贬义词，想做好它在需要有一套完整的价值观、方法论和兴趣。 本篇是对当前科研生活的思考片段总结，有形而上的，也有形而下的。有些已成了习惯，还有些处于知道但仍做不好的阶段。 科研路很长，未来的路也很长，碰到自己感兴趣的方向，有几个能拿出手的项目或成果，真的不容易。 写论文的思路 旧方法用于新对象，新方法用于旧对象。旧方法用于旧对象容易产生学术垃圾，新方法用于新对象需要客观的资源支持、灵感以及运气，容易空对空。 表现在理论方面，创新点在于提新概念，引入新方法，构建新模型，改进旧模型 表现在实际方面，创新点也可在于搜集新数据，用新角度分析新数据、旧数据，并根据分析结果提建议。 一些常用工具 listary 文件浏览和搜索增强工具。极大提高基础工作效率。之所以不用everything，是因为它一直破坏我的资源管理器，因而弃之。 evernote 笔记工具。前面博客里我提到信息过载，evernote就是处理信息过载一个好的工具，它可以成为我的第二大脑。整理功能可帮助我系统地建立自己的核心知识体系；提供的辅助工具可以让我轻松保存质量比较高的资源。可以用它记学习笔记、日常灵感、细节。 有道词典。相比google翻译，可直接划词进行，不用再手动调空格了。我不否认直接读英文文献认识会更深些，但若想快速浏览大部头专业文献或外文网页，用有道效率会高一些。另外有道提供了收集单词的功能，可以把重要单词收录，定期复习。 梯子。梯子用v2rayN效果很好，不多说了。 snipaste。截图工具，快捷，简便，高效，功能丰富，矛盾的优秀特性集中体，F1截屏，F3截屏，右键复制标注，esc退出。 马克飞象markdown编辑工具，原本作用是和印象笔记联合使用。所见即所得，快捷键方便，颜值高。 奇妙清单。 清单用来记录各种日常工作安排，更有条理地解决各种问题。 draw.io 一个非常好用的绘图工具 关于提问提问特指会议或其他个别场合的提问，其好处一般有三：交流学习、社交、塑造形象。这个手段是我在一篇网站上看到的，时间长了找不到出处，凭记忆复述。 比较。您的论文和其他人某某工作相比，有什么联系之处或者自己独有的特点吗？(特点：需要大量的先验知识) 规划。 您将来打算用什么方法？做什么实验？您的工作有什么预计影响？(适合不了解该工作但像想提出问题的人) 方法论细节。您在实验中遇到了什么实现难题？您的这种方法是否适合某旧领域的研究？您能更加详细地阐述一遍您的方法吗?(方法是论文的核心，通过问这个问题可以引申出更多细节，进而继续开展讨论) 初心。您是怎么想到这个方法的？ 关于快速了解某个领域这里的领域指的并不是变成编程，AI，区块链这样比较大的领域，而是特指一些些较细化的领域，如AI中的强化决策学习等。 从文献的角度。首先在google上去搜自己能想到的最显著的关键词，下载的首页的几篇文章，对这些文章借鉴《如何阅读一本书》先读摘要，再读目录，确定是否需要精读； 若需要精读，则可以文章中新的关键词(术语为核心进行下一轮google或学术搜索； 重点关注自己感兴趣的论点出现的参考文献、文章开头和末尾出现的相关综述文献，以此回环往。 关于总结知识大爆炸的时代，信息会过载，学过的知识必须归类，整理，内化，才能算自己的。 关于兴趣做科研，一定要找到自己的兴趣点，不然整个研究生期间会比较难受。如果你不喜欢现在的项目，也要把责任担起来，可以不喜欢，但是要做好。 关于眼界不要被自媒体牵着鼻子走，现在的自媒体是非常浮躁的。面向学生的套路就很多元，我见过的包括但不限于以下几种： 前面焦虑大肆宣扬一波，结尾卖课。 文章起始先扔出一个，“学习三月，年薪30w”的例子。结尾卖课。 收钱办事，大肆吹捧某些行业、某些一夜成名，一夜暴富的故事，借此割“韭菜”…信息噪声太多了，别被带偏了。静下心来，仔细分析一下行业大势和自己的兴趣长处，还要学会平衡工作与生活。再强调一遍，行业大势、兴趣、长处、工作、生活。这才是一个聪明人应该做的事。]]></content>
      <tags>
        <tag>总结</tag>
        <tag>随笔</tag>
        <tag>高效学习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶场景格式]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E5%9C%BA%E6%99%AF%E6%A0%BC%E5%BC%8F.html</url>
    <content type="text"><![CDATA[建立自动驾驶场景格式有以下几个用处。其一，通过使用计算机可读的语言，实现测试的自动化，为大规模仿真测试提供基础。其二，标准化测试场景，提高多工具链下的仿真效率。对于自动驾驶场景格式，需要解决静态场景和动态场景的编码方法，这可以对标OPEN系列的OpenDRIVE和OpenSCENARIO，按Open系列的想法，还得需要一个提供道路不平度的场景格式。 静态场景格式是测试场景格式的基础，它跟高精度地图有着很深的关系，需要提供测试场景所需的道路拓扑结构以及更具体的道路几何信息，除此之外，一些必须的环境信号信息也需要由它提供，典型的是道路标志、标识牌、信号灯信息。目前可参考的是OpenDRIVE和后起之秀Lanlets，后者是基于OpenStreetMap构建的。 动态场景格式的格式更复杂一些，它的设计可以参考一些泛化的，不是针对“自动驾驶”的场景理论基础，如经典文章《the blind men and the elephant: Views of scenario-based system design》，这篇文章可以提供关于动态场景设计格式的上层方法论。从已有的场景格式来看，目前可以参考的动态场景格式主要是OpenSCENARIO，GeoSCENARIO，由common roads提供的场景格式也可以思考。从设计语言上看，xml和json等格式化原因具有很强的优势，前者是目前已有场景格式的语言，但json因为其易于传输的特性，也在慢慢兴起。 对于场景格式的设计，应该满足简洁、高效、可扩展性强的特点。我目前正在研究自动驾驶场景格式设计，有对这个领域感兴趣的可以发邮件和我交流。 （未完待续）]]></content>
      <tags>
        <tag>自动驾驶</tag>
        <tag>自动驾驶测试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ROS总结(一)]]></title>
    <url>%2FROS%E6%80%BB%E7%BB%93(%E4%B8%80).html</url>
    <content type="text"><![CDATA[目前无人驾驶系统的实际实现仍然依赖于ROS，作为一个相对成熟的机器人软件平台，ROS虽然存在一些缺点，在无人驾驶系统的系统实现上，ROS仍然是开源框架中最好的选择，这也是为什么诸如Apollo，Autoware等无人驾驶开源项目会选择ROS。 ROS简介 通道：ROS提供了一种发布-订阅式的通信框架用以简单、快速地构建分布式计算系 工具：ROS提供了大量的工具组合用以配置、启动、自检、调试、可视化、登录、测试、终止分布式计算系统； 能力：具有控制，规划，预测，定位操纵等功能； 生态系统：ROS的支持与发展依托着一个强大的社区。ros.org尤其关注兼容性和支持文档，提供了一套“一站式”的方案使得用户得以搜索并学习来自全球开发者数以千计的ROS程序包。 ROS特性 点对点设计：ROS的点对点设计以及服务和节点管理器等机制可以分散由计算机视觉和语音识别等功能带来的实时计算压力，能够适应多机器人遇到的挑战。 分布式设计：程序可以在多核计算机中运行，并且可以通过网络来通信。 多语言：ROS现在支持许多种不同的语言，例如C++、Python、Octave和LISP，也包含其他语言的多种接口实现。语言无关的消息处理，让多种语言可以自由的混合和匹配使用。 轻量级：鼓励将所有的驱动和算法逐渐发展成为和ROS没有依赖性单独的库。ROS建立的系统具有模块化的特点，各模块中的代码可以单独编译，而且编译使用的CMake工具使它很容易的就实现精简的理念。ROS基本将复杂的代码封装在库里，只是创建了一些小的应用程序为ROS显示库的功能，就允许了对简单的代码超越原型进行移植和重新使用。 免费且开源：ROS大多数的源代码都是公开发布的。 ROS概念 master(主机) node（节点） topic（主题） message（消息） master用于管理节点间的通信，ROS Master 通过RPC（Remote Procedure Call Protocol，远程过程调用）提供了登记列表和对其他计算图表的查找。没有控制器，节点将无法找到其他节点，交换消息或调用服务。开启Master命令：roscore node（节点）节点就是一些独立编译，执行运算任务的进程。ROS利用规模可增长的方式使代码模块化：一个系统就是典型的由很多节点组成的。在这里，节点也可以被称之为“软件模块”。我们使用“节点”使得基于ROS的系统在运行的时候更加形象化：当许多节点同时运行时，可以很方便的将端对端的通讯绘制成一个图表，在这个图表中，进程就是图中的节点，而端对端的连接关系就是其中弧线连接。 运行节点，rosrun package_name node_name 查看激活节点列表，rosnode list 检索有关节点信息，rosnode info node_name topics 主题在ROS中消息以一种发布/订阅的方式传递。一个节点可以在一个给定的主题中发布消息。一个节点针对某个主题关注与订阅特定类型的数据。可能同时有多个节点发布或者订阅同一个主题的消息。总体上，发布者和订阅者不了解彼此的存在。 查看激活主题：rostopic list订阅和打印一个主题的内容：rostopic echo /topic显示主题相关信息： rostopic info /topic （未完待续）]]></content>
      <tags>
        <tag>自动驾驶</tag>
        <tag>ROS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶场景思考]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E5%9C%BA%E6%99%AF%E6%80%9D%E8%80%83.html</url>
    <content type="text"><![CDATA[本文主要内容来自Simon Chauvin,在进行翻译时融入了我自己学习过程中的认知和思考。 如何描述交通场景，用什么格式或语言？ 如何找到频繁出现的碰撞场景，人类驾驶员通常在哪里失败？ 如何生成关键场景来测试边缘用例？ 哪些数据集可以用来学习和测试用于预测和决策的算法？ 场景语言格式(Queiroz, Berger, and Czarnecki 2019)指出现在还没有一种语言来正式描述涵盖道路交通情况复杂性的测试场景。这阻碍了测试的重现性，并破坏了工具之间的可交换性。为了解决这个问题，他们引入了一种用于场景表示的领域特定语言GeoScenario。该语言构建在开放街道地图(OSM)原语之上。GeoScenario的目标类似于文件格式OpenSCENARIO（OpenSCENARIO描述了驱动仿真应用程序中的动态内容，并经常与OpenDRIVE一起用于静态内容。） 另一个工具CommonRoad被多次使用，特别是因为它从NGSIM US 101数据集中实现了高速公路场景。这一系列应用于道路规划的可组合的benchmark目的是为研究人员提供一种评估和比较他们的规划器的方法。 为了在场景中表示道路网络，Lanelets地图(OSM格式的一个开放扩展)被广泛使用(例如GeoScenario和CommonRoad)。Lanelets2用于(Naumann et al. 2019)设计具有遮挡的场景。他们的实验是基于修改版的CommonROAD。 译者注：场景基本上可以分为静态和动态。静态需要地图，对于实际开发中的测试而言，可以把系统中使用的地图作为底层，对于测试阶段而言，需要使用标准地图。OpenDrive当然是目前流传度的最高的，作者这边提的Lanlet有自己的优势，但本质上跟OpenDrive是相同的。对于动态场景，目前的标准比较少，与OpenDrive配套的OpenSCENARIO感觉快一统天下了，GeoScenario基本就是学术界做的东西了。当然，要重现做一个类似于OpenDrive和OpenSCENARIO的东西是不难的，但正如作者提到的，我们在这里想要的是一个标准化的格式，是可以帮忙减少切换仿真工具的使用开销，方便统一标准化场景库的格式。目前对OpenDrive和OpenSCENARIO支持最好的是VTD，它们是这几项语言的原创者，后来又把这个标准立项交给了标准化组织ASAM。这个转交对长期发展来说是有益的，标准推广开了才有价值。国内目前也正在推广这里，华为、上汽集团、中汽中心数据资源中心、51VR、腾讯科技、亮道智能有参与C-ASAM的工作，参与的公司都很聪明，一流公司定标准嘛。另外还有点，OpenDrive、lanlet、OSM都是可以通过解析脚本相互转换的，通过这些转换关系可以复用很多其他软件的建模工作，这里就不多提了。另外，支持OpenSCENARIO的软件，我目前看到的有VTD和Carla，其他仿真软件也可以快点支持这个功能，毕竟写一个解析器也不是太难的事，但却是很有用的事。OpenDrive和OpenSCENARIO这些标准也带来了一些衍生问题，如大大增加了建场景的时间成本等，这就又需要新的解决方案。关于这个话题，还是有很多可以聊下去的东西的。 经常出现的关键场景最常见的车祸场景可以从美国国家公路交通安全管理局(NHTSA)的车祸数据中检索到。CARLA AD challenge使用NHTSA pre-crash的来测试面向常见关键场景的agent表现。 (Pusse和Klusch 2019)使用GIDAS分析了德国发生的数千起事故，以此作为基准。然后使用开源的3D驾驶模拟器OpenDS 对场景进行虚拟模拟。 译者注：对于经常出现的关键场景，这其实就是我们常说的“数据”的价值。有自动驾驶功能（或数据搜集功能）的车辆大规模部署的最直观好处是什么？就是各种各样的数据啊，特斯拉的autopilot之所以能另辟蹊径，让人不容忽视，那已经卖出的车送回来的数据绝对是第一大功。数据能帮我们分析出各种不常见的情况，也能帮助统计不同地区不同行为的参数规律，这些数据经过分析后，凝练成关键场景，也可以针对性地测试系统的表现，提高系统的表现能力。如何定义经常出现，如何定义关键，也是个很值得说道的问题。这个要具体产品具体分析，没有神器子弹了。定义好了这些，也就定义好了产品开发过程中的场景测试体系，之后可以考虑把这部分做到CI中，形成完整的开发流。 生成边界情况的场景(Klischat和Althoff 2019)提出了一种方法来生成关键场景，用于在复杂的城市交通情况下测试运动规划者。这部分会是我的硕士论文，此处保密。 译者注：上面一节提到的关键场景，更像是从数据角度论述。这节的话，更偏向与从知识分析的角度论述，但是很遗憾，作者都提的很少。但这其实是很重要的一部分。懂得做场景后，是低效率，还是高效率，其实就是看这部分。特斯拉收集的数据也不是完全上传的，也分析不过来呀。对特斯拉而言，可能把“系统做出的决策和当前驾驶员做出决策不同的sitiuation”下的数据上传，这是特斯拉定义的“边界”或“关键”了，是个很好的思路。 对新数据集的需求在许多论文中，对真实世界的实验都被放在未来的工作中了。其中一个原因是，很难将模拟或手工场景的模型转换到真实的汽车。这就产生了两种需求: 需要更逼真的模拟器。 需要更丰富的流量数据集与关键场景。 但是考虑那个先有鸡还是先有蛋的问题:验证模拟器可能比验证算法本身更困难。 现实世界中的驾驶数据集对于基于学习的方法非常重要，这些方法试图对人类驾驶风格和行为建模。它们的多样性和完整性对于预测和决策模型的一般化也是必不可少的。 根据(Kang, Yin，和Berger 2018)或scale.ai列出的，存在一些基于真实交通的场景记录集合。但大多数还是主要涉及感知。 研究与易受伤害的道路用户(即行人和骑自行车者)进行交互的工作可以使用Stanford Drone数据集、清华-戴姆勒TDC数据集、JAAD数据集或Eurocity PersonsECP数据集 对于高速公路和十字路口场景，HighD和NGSIM经常被提及。HighD的车辆轨迹是用一架无人机在德国高速公路上记录下来的，而NGSIM数据集包含了安装在旧金山湾区一幢建筑物顶部的摄像头45分钟内记录下来的车辆轨迹数据。如果广泛使用这一真实的公路交通数据，SIPD研讨会的参与者认为这些数据“被过度使用”，“完全无聊”，因为它们缺乏复杂的操作。 不同的团队对数据集的需求是不同的。有些人想要全知全能的鸟瞰图，特别是为了提取遮挡。有些人更喜欢从车辆上记录的数据(Pool, Kooij，和Gavrila2019)，这些数据可以捕捉上下文线索，在计划前推断意图，比如骑自行车的人在转弯前举起手臂。这些特殊需求的一个例子是，在IV19上展示的许多工作都是使用自己的运动驾驶模拟器或构建自己的数据集。然而，这些个体的发展使得实验难以复制、比较和基准。此外，大多数手工制作的数据集都非常小，这对于基于学习的模型的培训并不理想，并且不包含许多不同的情况。 结论很清楚:我们缺少一个数据集，它具有多种多样的、复杂的和关键的情况，且可用于交互感知的预测和决策。 SIPD研讨会的联合组织者Wei Zhan借此机会宣布发布了一个新的数据集，名为交互数据集，用于社会互动预测和决策。以下是一些要点： 在不同的地点(如美国、德国、中国)，不同的驾驶文化，不同的交通规则，对于类似的场景(合并、绕行等)，无人机都有记录。 包括了一些关键的情况，例如近碰撞情况和轻微碰撞事故，这对于测试边缘情况非常有趣。 另一个有前途的特点是，涵盖了带有谈判的复杂的驾驶行为和不明确的路权(通行权) 最后，所有场景都带有一个基于lanelet2的带有语义信息的HD-map。模型中也会有遮挡作为ground truth，这是测试社会认知的关键。 译者注：HighD和NGSIM确实有些无聊了，交互数据集的提出很及时，这个数据集也很有价值，建议大家看看。]]></content>
      <tags>
        <tag>总结</tag>
        <tag>自动驾驶</tag>
        <tag>自动驾驶测试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[超车行为建模]]></title>
    <url>%2F%E8%B6%85%E8%BD%A6%E8%A1%8C%E4%B8%BA%E5%BB%BA%E6%A8%A1.html</url>
    <content type="text"><![CDATA[超车行为在交通中是复杂的，交通信息是异构的，目前的虚拟现实交通仿真研究很少关注超车行为的建模，考虑到不同的交通状况。为了更好地理解交通状况，并在交通仿真中辅助超车行为分析，本文总结了一种智能车辆模型。在此基础上，详细介绍了基于智能车辆的超车行为模型，分析了作为超车行为基础的变道行为模型。 此外，超车行为是通过基于agent的多控制器协调机制来实现的，该协调机制结合不同的交通情况来探索交通中的超车行为机制。 主要贡献为实现超车行为，提出了一种基于感知模块、运动模块、认知行为模块和内部属性相结合的三维虚拟车辆综合模型——智能车辆模型。虽然目前已有许多超车行为模型，但本文主要研究虚拟现实交通仿真系统中超车行为建模的背景，以及不同交通状况下超车行为模型的实现。 相关工作超车是最危险的驾驶动作之一。从微观上看，超车可以保持高速行驶车辆的速度。从宏观上看，超车可以减少低速车辆带来的负面影响，从而提高交通流量。智能车辆超车涉及到多种决策控制技术。目前研究超车行为也已经发展了多种方法。 使用模糊控制器模拟人类在超车过程中的行为和反应，并提供了一个规则来估计超车的距离。 基于元胞自动机(CA)的双车道交通流模型，研究了车辆密度和信号周期时间对交通流的影响。提出了一种用于两车自动超车机动的非线性自适应控制器。 Agent建模Agent设计框架 感知模块监控来自人和其他车辆的信息，识别虚拟现实交通仿真系统中的相关事件。在虚拟现实交通仿真系统中，存在虚拟世界和与智能车相对应的三维车辆。感知模块可以通过三维模型之间的交互作用，如碰撞检测，获取周围环境的信息。车辆之间的距离可以方便的计算出来。通过该模块，智能车辆可以感知交通信息和环境信息，然后将这些信息发送到内部属性和认知行为模块，进行进一步的决策。 运动模块是智能车辆的运动实现。该模块实现了车辆动力学模型和车辆控制模型，并将其解耦为纵向运动模型和横向运动模型。纵向运动模型由协调节流阀和模糊控制器以及纵向车辆动态模型组成。横向运动模型由多模型模糊控制器和横向车辆动力学模型组成。通过这些模型和控制器，车辆通过修改和作用于车辆的控制参数(转向、节流阀和刹车)来运动。 认知和行为模块是智能车的大脑，它可以根据交通状况和环境信息完成更复杂的任务，如行为选择、导航和驾驶员决策等。智能车要处理的的交通状况和微观行为是复杂的。因此，将认知行为模块建模为基于agent的多控制器，而不是单一的控制算法，通过不同层次agent的协作来实现智能车辆的微观行为，如下图所示。 智能汽车是一个顶层控制器，由纵向控制器和横向控制器两个子控制器组成。纵向控制器分为速度控制器、跟随控制器和刹车控制器。 内部属性反映了人格对认知和行为模块的影响。内部属性包括驱动程序类型和驱动程序状态。根据驾驶员的攻击性程度，驾驶员可分为被动型、中度型和主动型。驾驶员的状态可根据驾驶员的身体状况分为睡眠状态、疲劳状态和正常状态。 超车行为超车是复杂的交通行为。超车动作包括三个步骤:(1)从原车道转向，(2)在相邻车道直行，(3)返回原车道。从这三个短语可以看出，变道与超车的关系是显而易见的，变道是超车过程的重要组成部分，是超车的基础。因此，本文将考虑变道行为模型。 换道模型变道行为模型是微观交通行为的重要组成部分。本文的变道行为模型是通过纵向控制器和横向控制器的协调来实现的。在交通仿真中，纵向控制器始终处于动态状态，而当变道可行性满足时，横向控制器处于动态状态。下面会详细讨论变道过程和变道的可行性。 换道过程换道过程的图像如下图所示。被控车辆定义为主体车辆;在同一车道上行驶在被试车辆前方的车辆定义为前车;在相邻车道上，行驶在被试车辆前后的车辆定义为前车和后车。基于这一过程,需要输入给智能车（主车）的信息包括在原车道上的主车的速度$(V_s)$和前车的速度$(V_l)$和与前车的距离$(S(t))$,在相邻车道上车辆的速度$(V)$,与前车的距离$(S_f(t))$和与后车之间的距离$(S_b(t))$。输出的信息是所需的速度，横向位置和偏航角。 换道可行性在换道模型的背景下，如果目标车道上存在足够大的间隙，车辆能够安全进入目标车道，在与目标车道上的其他车辆配合的前提下，认为变道是可行的。为了确定变道行为的可行性，首先在相邻车道上进行搜索，找到前车和后车。如果换道可行，则分别成为被试车辆的新leader和新follower。 根据上文所述的换道过程，本文将换道的可行性分为两种情况 （1）$V_s &lt; V$对于前车，换道发生在 S_{f}(t) \geq S_{f}(\min )=L。对于后车，则换道发生在 S_{b}(t) \geq S_{b}(\min )=\frac{V^{2}-V_{s}^{2}}{2 j_{h}}+\tau V+L（1）$V_s &gt; V$ 对于后车，则换道发生在S_{b}(t) \geq S_{b}(\min )=L对于前车，则换道发生在 S_{f}(t) \geq S_{f}(\min )=\frac{V^{2}-V_{s}^{2}}{2 j_{h}}+\tau V_{s}+L$S_{f}(\min )$避免碰撞前车的最小距离,$S_{b}(\min )$避免碰撞后车的最小距离,$j_b$是后车的最大减速度，$j$是主车的最大减速度,$\tau$是司机的反应时间,$L$是两车停下时的最终距离。 纵向控制器和横向控制器的协调在实际交通中，如果车辆或前车的速度低于所要求的速度，驾驶员更愿意将车道改为高速车道。因此，通过对新车道交通状况的评估来提高车速，或者进行超车行为，是可取的。纵向控制器与横向控制器的协调如下图所示。 与其他换道模型一样，侧移控制器在考虑换道过程的可取性和可行性的前提下进行控制。纵向控制器一直处于运动状态，但用于协调纵向控制器的信息随着换车道过程的变化而变化. 交通状况模型为了评估不同交通状况下的变道模型，我们用交通状况模型确定了相邻车道车辆之间的速度和空间。交通态势模型是基于Skycomp开发的用来分类表征道路交通拥堵状况的模型，该模型通过对不同高速公路航测交通数据的分析，提供相应的服务水平(LOS). 为保证相邻车道的安全，交通态势模型假设车辆只能在前面没有车辆的情况下加速或在后面没有车辆的情况下减速。 根据拥堵等级划分，交通态势模型如表I所示: 跟车模型在变道过程中，纵向控制器用于控制纵向速度，以保持目标车辆与前车之间的安全距离。所需的安全跟随距离$l_{FD}$是通过人工距离策略定义的，可以是二次曲线的形式 l_{F D}=\gamma \frac{v_{i}^{2}}{2 a_{i \max }}+L+\tau v_{i}其中$v_i$是被试车辆纵向速度，$L$为安全裕度，表示两车停车时的距离，$a_{imax}$为最大减速度，$\tau$为驾驶员s反应时间，$\gamma$为安全系数，与路况相关。 根据所要求的安全跟随距离$l_{FD}$，所要求的加速度为 a_{i}=-\left(\lambda \delta_{i}+v_{i}-v_{i-1}\right) /\left(\tau+\frac{\gamma}{a_{i \max }} v_{i}\right)其中，$\delta_{i}=x_{i}-x_{i-1}+l_{F D}$其中$x_i$和$x_{i-1}$为被控车辆与前车的位置，$v_{i-1}$为前车的速度，$\lambda$是正控制增益 超车动作流程图每一个超车动作都包括两个变道和一个跟车部件。因此，需要对智能车辆的速度和转向进行管理。在此基础上，考虑了控制器的部分解耦问题。采用基于agent的多控制器协调实现复杂的超车机动。根据变道行为模型，超车机动流程图如下图所示]]></content>
      <tags>
        <tag>自动驾驶仿真</tag>
        <tag>行为建模</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[近期工作 | 201909]]></title>
    <url>%2F%E8%BF%91%E6%9C%9F%E5%B7%A5%E4%BD%9C-201906.html</url>
    <content type="text"><![CDATA[更新一下近几个月的工作 2019.09希望搞定工作要写大论文啦 2019.07-08实习刷题 2019.06读书以下书本为复习阅读 《Essential C++》 《Effective C++》 《改善Python质量的91个建议》 《Python Cookbook》 《数据结构与算法 Python语言描述》 《算法 第四版》 《编程珠玑》 《编程之美》 《剑指OFFER》 以下书本为初次阅读 《代码大全》 《TCP/IP网络编程》 《程序员面试白皮书》 《zh_hans》 《Fundamentals of Traffic Simulation》 学习 lgsvl源码阅读，重点关注它的数据传输协议，复习C# 以CARLA为核心的仿真平台工作，OpenSCENARIO解析，动力学联仿学习，交通流模型构建等 CARLA源码学习 Apollo源码学习]]></content>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我为什么选择去智加科技实习]]></title>
    <url>%2F%E6%88%91%E4%B8%BA%E4%BB%80%E4%B9%88%E9%80%89%E6%8B%A9PlusAI.html</url>
    <content type="text"><![CDATA[暑期实习虽然波折不断，但也并不能算颗粒无收。最后选择去了PlusAI智加科技，有以下几个考虑。第一，我看好自动驾驶物流落地场景。智加科技主要做的是干线仓对仓物流自动驾驶，产品是L4重型卡车。 目前整个世界都进入经济下行通道，传统车企已经开始复刻13年土木，留给自动驾驶的时间也不多了，投资人不是真的天使，再做不出成果，自动驾驶/无人驾驶会变成前几年的VR。 而在几个主要落地场景中，从市场上来说，无人驾驶物流有九万亿的市场。高额的人力成本也为自动驾驶物流提供了强劲的驱动力。从技术上来说，相比无人驾驶出租车，乘用车，无人驾驶物流的技术栈相对简单。在我看来，物流领域的自动驾驶还是会活下来的。 第二，我看好智加科技的发展前景。自动驾驶物流主要有三个场景：干线物流自动驾驶，最后一公里配送以及封闭场景，此即所说的一高速二低速。其中，最后一公里配送是互联网巨头在做，如阿里，京东等，封闭场景切入的公司比较多，干线自动驾驶因为是物流自动驾驶中产值最高的部分，也是主要战场，初创科技企业，互联网公司，物流公司都盯着这一块儿。 在科技企业中，图森未来是毫无疑问的明星企业，飞步科技，赢彻科技也有自己的强点。而在激烈的竞争中，智加有自己的独特优势。当前，智加和满帮集团，一汽，英伟达形成了同盟，这其中，满帮是比较关键的盟友，其估值超过100亿美元，中国干线货车700万辆中有520万辆是满帮会员。由满帮提供数据，来帮智加圈地，一汽提供原型线控卡车，英伟达提供基础芯片，这是一个非常有前景的布局。 另外，智加科技的技术团队也是非常强大的，这个按下不表。 第三，我看好初创科技企业的氛围。于我个人而言，放弃了博世，上汽等传统车企。除了有对车企形势的担忧，更重要的点在于，大型企业的氛围其实是把双刃剑。大企业的大平台可以可以开拓学生眼界，但进去实习也只能接触自己周边的一小部分技术，你会处于一个等级分明的技术圈子里，想向上接触更多，暂时没门儿。 相较之，初创科技企业往往是扁平化的，智加没限制我必须做其中非常小的一块儿，它对实习生的能力有更高的要求，在能力足够的前提下，也不会限制你学习更多相关知识，参与更多相近的工作。 我想多学一点，不想一开始就做一个螺丝钉。 第四，我比较喜欢苏州。我未来工作不会选择北京、广州和深圳，而是会选择在江浙沪。工作很重要，生活也很重要，我的爱人在苏州，我不想离太远。 自动驾驶未来在苏州应该会有一席之地，这是苏州的转型需求决定的，momenta在这里，plusAI在这里。苏州的生活成本在升高，但暂时还没让人绝望，我过去以及现在，都有认真考虑在这里定居。 因此，提前去一个苏州企业实习看看也不错。 以上即是全部。]]></content>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶仿真蓝皮书]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E4%BB%BF%E7%9C%9F%E8%93%9D%E7%9A%AE%E4%B9%A6.html</url>
    <content type="text"><![CDATA[感谢 51VR主导的工作，感谢清华大学苏州汽车研究院、广汽研究院智能网联技术研发中心、中国汽车技术研究中心智能汽车研究室暨汽车软件测评中心、江苏省智能网联汽车创新中心、北京智能车联产业创新中心、奇点汽车和当家移动绿色互联网技术集团有限公司。 这是一本非常有价值的蓝皮书。书中关于自动驾驶仿真百分之七八十的内容，我都有在项目/论文/网络里接触过，后期我也会参考这篇蓝皮书的脉络，总结下自己的所学所看所知，扩充这本书未深入提及的细节。另， 51VR官方网站：http://www.51hitech.com/51VR微信公众号：51VR科技蓝皮书可以在以下网站下载：https://mp.weixin.qq.com/s/_vEmpLrpowSsuQ2EX_oKjA 文章目录如下 第 1 章 自动驾驶仿真技术的意义 仿真是自动驾驶研发测试的基础关键技术 仿真虚拟测试的根本是保证车辆安全上路 发展自主仿真软件做行业研发的备用系统 仿真测试是自动驾驶技术发展的必然结果 第 2 章 自动驾驶仿真测试的方法及应用 自动驾驶仿真技术方法 自动驾驶仿真测试应用 自动驾驶仿真测试的验证与精度 自动驾驶仿真测试的评价方法 第 3 章 自动驾驶仿真测试环境的搭建技术方案 虚拟场景的构建 虚拟场景构建的内容 虚拟场景构建的技术手段 传感器仿真 激光雷达仿真 摄像头仿真 毫米波雷达仿真 其它传感器 场景库构建方法 车辆动力学仿真 动态场景的构建 理想动态场景应达到的要求 动态场景构建方法 动态场景构建实例 动态场景构建需要解决的问题 分布式并行计算构架与加速计算 分布式并行计算 加速计算 第 4 章 现有的仿真测试软件现状 典型自动驾驶仿真软件分类与发展变化情况 典型自动驾驶仿真软件介绍 CarSim CarMaker PreScan PTV Vissim SUMO VIRES VTD rFpro Cognata RightHook Parallel Domain 51Sim-One Pilot-D GaiA Metamoto ESI Pro-Sivic NVIDIA Drive Constellation PanoSim AAI AirSim CARLA LGSVL Simulator 百度 Apollo Waymo Carcraft 第 5 章 虚拟场景数据库 自动驾驶虚拟场景库 自动驾驶虚拟场景库的概念与构建要求 自动驾驶虚拟场景库的数据来源与构建方法 场景库标准 场景标准 OpenSCENARIO 场景库举例 第 6 章 自动驾驶仿真测试标准介绍 中国标准现状 国家级自动驾驶道路测试标准 省市级自动驾驶道路测试标准 欧盟与美国标准现状 美国自动驾驶仿真标准现状 中国参与国际标准 ISO 现状 参与现状 第 7 章 自动驾驶示范区测试方法介绍 中国自动驾驶示范区与测试方法 国家智能汽车与智慧交通（北京） 示范区 国家智能汽车与智慧交通（河北） 示范区 国家智能网联汽车（上海） 试点示范区 智能汽车集成系统试验区（i-VISTA） 国家智能网联汽车（长沙） 测试区 国家智能网联汽车应用（北方） 示范区 国家智能交通综合测试基地（无锡） 浙江 5G 车联网应用示范区. 武汉智能网联汽车示范区 智能网联汽车与智慧交通应用示范区 中德合作智能网联汽车车联网四川试验基地 各国自动驾驶示范区与测试方法 美国自动驾驶测试场建设 英国网联与自动驾驶汽车测试设施集群 Horiba Mira 和考文垂大学网联与自动驾驶汽车研究中心 日本启动自动驾驶技术研究 德国和法国联合开展自动驾驶汽车公共道路测试 瑞典 AstaZero 主动安全测试区已投入运营 新加坡推动无人驾驶专车服务的测试运营 韩国紧跟自动驾驶技术发展潮流 第 8 章 中国自动驾驶仿真技术展望 中国自动驾驶仿真技术所面临的挑战 中国自动驾驶仿真技术的发展趋势 获取方式 网上开源了这份文档 找不到的话也可以加我的邮箱获取 nemoplusai@163.com]]></content>
      <tags>
        <tag>自动驾驶仿真</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶中的数据增强]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E5%A2%9E%E5%B9%BF.html</url>
    <content type="text"><![CDATA[本文摘取了Matt Cooper对自动驾驶数据增强的一些看法。文章的核心观点是，针对特定的模型必须分析确定特定的数据增强器，不能把增强器技术黑箱使用，否在会产生过拟合。 问题起源作者在实习的时候实现一个数据增强器，以改进对象检测工作。这其中，一种简单的技术被称为裁剪正则化。简而言之，就是在输入图像中删除随机位置的正方形。根据以往的认识，这种技术可以显著提高视觉应用的精度。但令人惊讶的是，这次这种技术失去了它的效用。而且，作者使用的其他所有增强器（flip/翻转，crop/修剪）都削弱了模型的性能。 由此作者重新审视了数据增强的基本原理。 数据增强过拟合是训练深度神经网络时的一个常见问题。这会导致一个模型学习数据集中的噪声而不是信号。换句话说，他们记住了数据集的非预期属性，而没有学习到有关世界的有意义的一般信息。因此，当给定新的、真实的数据时，过拟合网络无法产生有价值的结果。 为了解决过度拟合问题，我们经常增加训练数据。增加视觉数据的常用方法包括水平随机翻转图像(flip)、改变图像的色调(hue抖动)或随机剪切(crop)。 flip、hue和crop等增强器都有助于克服过度拟合，因为它们提高了网络的泛化能力。如果你训练一个网络来识别面向右的长颈鹿和面向左的长颈鹿，这个网络就会知道长颈鹿就是长颈鹿，不管方向如何。 COCO公共数据集包含的图像来源多样，这些图像是不同的相机在不同的条件下拍摄的，因此待训练的网络需要在许多因素上进行泛化才能有更好的表现。网络需要处理的一些变量包括:光照、比例、相机内部特性(如焦距、主点偏移和轴倾斜)和相机外部特性(如位置、角度和旋转)。通过使用数据增强器，我们可以泛化这些变量来训练网络。 自动驾驶中的数据增强与COCO和其他公共数据集的数据不同，自动驾驶汽车收集的数据具有某种一致性。与其他车辆和道路物体相比，汽车通常具有一致的姿态。此外，所有的图像都来自相同的相机，安装在相同的位置和角度。这意味着同一系统收集的所有数据都具有一致的摄像机属性，如上面提到的extrinsics和intrinsics。我们可以使用在实际生产中使用传感器系统来收集训练数据。系统的特定相机属性进行过度拟合实际上是有益的。 由于自动驾驶汽车的数据存在一致性，因此标准的数据增强器(如flip和crop)对性能的损害可能大于帮助。举例来说，翻转训练图像没有意义，因为摄像机总是处于相同的角度，而且汽车总是在路的右侧。汽车几乎永远不会出现在道路的左侧，摄像头也永远不会翻转角度，因此对翻转数据的训练迫使网络过度概括到它永远不会看到的情况。同样，由于汽车的摄像头总是在相同的位置，以相同的视野获取世界，因此不必强迫模型去学习移动和缩放的数据。过度泛化会降低性能，因为网络会浪费预测能力来学习无关的场景。 改进意识到自动驾驶汽车的数据具有一致性后，作者在引入任何新的增强器之前，首先检查了他们的数据集。作者的原始训练集包括由两个广角相机和一个带有变焦镜头的相机拍摄的图像。其中变焦镜头产生的缩放和移动效果类似于crop。但在实际测试时，用到的只有广角相机。因此在这个情景下，对变焦图像的训练使网络过度泛化了。从原始训练集中移除缩放图像令网络的性能提高了很多。 之后，作者实现了自己的增强器Cutout。与flip和crop不同的是，cutout不会以显著影响相机属性的方式改变输入(即通过翻转、移动或缩放)。其主要用来模拟障碍物，障碍物的不变性可以帮助网络检测部分遮挡的物体。 色调抖动增强也可以在不影响相机属性的情况下帮助泛化。色调抖动只是将输入的色调随机偏移了一定的距离。这有助于网络泛化颜色，即一辆红色的车和一辆蓝色的车都应该被检测到。 值得注意的是，这些增强技巧对来自不同相机类型、不同角度和比例的图像的数据集不起作用。确保你的测试数据涵盖你的模型将在现实世界中看到的东西，这一点是很重要的。如果要使用专门的数据增强器的话，更要多注意这点。 假如你的数据集确实是鲁棒和一致的，那么这些技巧可以成为提高性能的强大工具。通过让我们的网络了解我们车辆的摄像头特性，可以显著提高我们的目标检测性能。 回顾事后来看，这些增强技巧似乎是显而易见的。但实际情况，我们往往会当局者迷。flip和crop等增强器在研究问题上取得了广泛的成功，我们从未想过要质疑它们对特定问题的适用性。但实际上，在实际进行研究时，我们需要从第一原则重新审视增强的概念。 机器学习领域有许多类似的通用最佳实践，比如如何设置学习率、使用哪个优化器以及如何初始化模型。对于ML实践者来说，不断地重新审视我们关于如何训练模型的假设是很重要的，特别是在为特定的应用程序构建模型时。与ImageNet相比，在处理卫星测绘数据或细胞成像时，视力问题会发生什么变化?我们认为像这样的问题在学术界还没有得到充分的探讨。通过用全新的视角来看待它们，我们有潜力极大地改善机器学习的工业应用。]]></content>
      <tags>
        <tag>自动驾驶测试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[基于仿真生成行人碰撞场景]]></title>
    <url>%2F%E5%9F%BA%E4%BA%8E%E4%BB%BF%E7%9C%9F%E7%94%9F%E6%88%90%E8%A1%8C%E4%BA%BA%E7%A2%B0%E6%92%9E%E5%9C%BA%E6%99%AF.html</url>
    <content type="text"><![CDATA[本篇文章主要观点来自Susan T. Chrysler。 有行人参与的场景是一种重点测试场景，也是仿真能发挥优势的关键领域。这篇文章面向的测试对象是驾驶员，但它基于仿真的场景设计方法有很多可借鉴之处的。它们不止考虑了技术的需求，也考虑了人文社会的需求，这是工程师们设计实验时要去借鉴的。 Motivation本文提出了一种场景开发方法，讨论了在仿真环境下进行行人碰撞研究的实验设计和控制问题。驾驶模拟器提供了一个安全的环境来测试驾驶员的反应，另外驾驶模拟器提供的虚拟行人模型可以更真实地移动，它不用像在场地测试的假人那样，受特定移动轨道的限制。 Methods通过对行人碰撞轨迹、速度、路边特征和行人行为的分析，这篇文章共创造了18种独特的碰撞场景，它们代表了最常见和最昂贵的碰撞类型。本研究只考虑了汽车直线行驶的情况，因为它们是行人冲撞事故中最典型的汽车模式。 如下图给出了具体需要考虑的因素 在目前的研究中，研究团队通过分析行人碰撞频率和碰撞严重程度，设计了18种不同的即将发生碰撞的场景，用于驾驶模拟器实验。其中16个场景是白天的场景，行人穿过垂直于汽车行驶方向的车道。其中两个场景是夜间场景，行人走在路肩上，与过往车辆的行进方向相同。 该研究的另一个目标是通过管理manipulate驾驶员对行人存在的期望值，以评估其对驾驶员反应时间的影响。我们通过提供(或不提供)道路线索来实现这一点，这里的道路线索包括人行横道警告标志、人行横道标记、十字路口、人行道和附近的其他行人活动。 crossing碰撞数据显示，大多数行人受伤发生在十字路口。但考虑实验的平衡性、统计功效和路线规划等因素，一半的行人事件发生在十字路口，另一半发生在街区中间。在这些地点中，有些人行横道用标准的美国平行线标记，还有一些没有标记。标记类型已经被证明会影响人行横道的可见距离(Fitzpatrick等，2011)。 side of the road为了降低行人行为的可预测性，一半的行人从司机的左边过马路，另一半从右边过马路。这也提供了在关键停车视线距离下行人角度大小的自然变化。在较大的驾驶员建模项目中，驾驶员感知部分依赖于角度大小和变化率，因此跨目标角度范围收集驾驶员的响应数据非常重要。 expected Gaze Direction在每一个事件中，视线的方向都是通过在与行人相同或相对的一侧放置一个分散注意力的物体来控制的。干扰物的作用是在事件开始前吸引司机的目光。本文作者试图通过在场景中放置其他动画和静态对象来控制驾驶员的视线。这些物体包括成群行走或说话的其他行人、紧急车辆、停下的车辆和动物。从更广泛的意义上说，本文作者认为提供丰富的、活跃的驾驶场景可以提高驾驶员对仿真的参与度和沉浸感。 pedestrian walking speed行走速度设定为1.21$m/s$,奔跑速度设置为$1.86m/s$这些值来自于在有标记和无标记人行横道上的观察(Brewer et al. 2006)，并比用于设置交通信号行人相位计时的速度略快。我们错误地选择了一个速度更快的行人，因为我们觉得这代表了一个更有挑战性的反应场景，减少了碰撞的时间。在这项研究中，一半的行人在走路，另一半在跑步。 general considerations for scenarios and procedures驾驶时间对于整个场景，根据之前驾驶模拟器研究的经验制定了几个设计目标。我们希望总驾驶时间为45-60分钟，因为过去的研究表明，超过这个时间点后，司机会感到轻微疲劳,并且注意力变得不集中。我们希望驾驶行为是连续的，而不是一系列由模拟器启动和中断而组成的事件短片段。场景设计的第一步是在我们的实验设计中列出所需的18个事件的轨迹。为了减少总体编程时间，本文使用了由住宅、农村和城市部分组成的现有可视化数据库。并开发了一条通过这些区域的路线，提供适当的事件间隔和包含每个目标事件。 干扰事件在进行这项研究时，本文担心的一个问题是，在一个单一的实验过程中，反复发生的迫近撞击事件会产生什么样的影响。这些影响可能会导致司机能预测撞车事件，并更加谨慎地驾驶。本文试图将这些影响最小化，比如设定了许多干扰事件，在这其中行人或车辆似乎会构成威胁，但最终没有，在整个行驶过程中，有许多行人走在人行道上，或拐角处和路边等候，但从未进入道路。 虽然潜在危险的总体数量确实可能促使司机谨慎驾驶，但我们认为干扰因素能缓解这个问题。观察到的碰撞次数表明，至少对一些司机来说，出现事件仍然让他们令人惊讶。这些干扰事件散布在整个驾驶模拟器中。这些干扰物的设计是为了模拟事件没有发生的情况，从而使实际事件更难以预测。 例如，一个干扰因素包括一群孩子在学校前的人行道上，但没有人穿过街道。第二个干扰因素，比如道路右侧的自行车。还有更多的包括导致车辆突然刹车的事件。尽管我们的司机在整个研究过程中都对危险保持警惕，但驾驶后的采访显示，他们并不觉得自己是在玩避障比赛。 驾驶员情绪根据与该领域其他研究人员的交谈，本文也考虑到了撞倒行人可能会给司机带来情绪困扰。其他研究中心也曾报道说，这种困扰在涉及儿童行人目标时表现的更明显。因此，本文的研究只包括成年行人。此外，本文没有在视觉上模拟或显示与行人发生碰撞的物理过程，也没有在发生碰撞时提供任何听觉线索。本文在向参与者汇报情况时也非常谨慎，强调是实验设计者将他们置于不可避免的撞车情况中，这样他们就不会因为撞上或接近行人而感到内疚。 促成事件场景设计中的一个关键因素是危险预判时间或距离。我们的仿真软件允许我们指定到达时间作为触发器，这样当驱动程序到达某个位置的阈值时间(基于瞬时速度)时，就可以触发事件。 在本研究中，目标位置是车道中心的一个理论点，当车辆和行人保持匀速直线行驶时，会在这个理论点上发生碰撞。到达该点的时间会根据每个行人活动地点所在的道路的几何拓扑结构而发生变化，范围从3.5秒到11秒不等。 但这并不意味着行人在整个时间内都是可见的。在一些场景中，行人会隐藏在建筑物后面，但必须触发它开始移动，以便在更短的时间内看到碰撞。需要大量的试点测试来调整每个事件位置的时间，目标是使行人目标在理论碰撞点之前可见。 简化实验模拟行人运动的另一个复杂之处是步行速度不是恒定的。DI-Guy(2012)行人模型的运动是基于实际的人体运动捕捉，所以在行人达到目标步行速度之前有一个轻微的启动时间。同样，为了适应这种情况，需要进行试点测试。在某些情况下，除了起始位置外，行人的行走/奔跑速度也必须调整。 为了简化实验设计，另一个设计决策是保持行人的路径和速度不变，即使我们的软件支持基于触发器的路径和速度的变化。未来的研究应该考虑当车辆接近时，行人会改变他们的行为机制。 结果在选择和开发场景时，本文考虑了多种碰撞情况的变量，包括车辆和行人的运动;道路及路边设施;环境条件;以及行人、司机和车辆的特征。通过对场景进行迭代测试，去调整行人到达触发器的时间。]]></content>
      <tags>
        <tag>自动驾驶测试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[交通流建模经典书籍-Fundamentals of Traffic Simulation]]></title>
    <url>%2F%E4%BA%A4%E9%80%9A%E6%B5%81%E5%BB%BA%E6%A8%A1%E7%BB%8F%E5%85%B8%E4%B9%A6%E7%B1%8D-Fundamentals-of-Traffic-Simulation.html</url>
    <content type="text"><![CDATA[最近在看关于交通流建模的内容，发现了一本集大成之做。《Fundamentals of Traffic Simulation》，编辑是Jaume Barceló。 preface 随着计算机技术、软件工程的发展以及智能交通系统的出现，交通仿真已成为交通分析中最常用的方法之一，该方法为交通系统的设计和评价提供了支持。交通仿真能够模拟交通现象的时间变异性，这使得它成为一种能捕捉交通系统复杂性的独特工具。近年来，交通仿真已经从学术界走向了专业领域，目前市场上已有各种各样的交通模拟软件，它们被成千上万的用户、顾问、研究人员和公共机构使用。但是，交通仿真还缺乏统一的处理方法。每年有几十篇理论和应用论文发表在科学期刊上，也有很多相关的国际会议，例如交通模拟国际专题讨论会(横滨，2002;洛桑,2006; 布里斯班，2008)或交通建模和仿真国际研讨会(图森，2001; 巴塞罗那,2003; 塞多纳,2005; 格拉茨2008)。然而，到目前为止，对这个主题的唯一全面的处理指导依然是在各种软件产品的用户手册中找到的。这本书的目的即是填补空白，并为从业者和研究人员提供一个统一的，全面的框架，主要讲述了一下几点。 在交通系统中，仿真作为一种成熟的、有基础的或特殊的技术 交通仿真的主要方法和交通仿真模型的建立原理 交通流理论基础及其在交通仿真中的应用 微观交通模型 介观交通建模 宏观交通模型 动态交通分配原理及其在交通仿真中的应用 交通仿真模型的标定与验证 单节内容架构为了实现这些目标，这本要邀请了主要的交通模拟器开发人员来贡献相应章节，在每个章节中，他们都描述了以下内容 建立模型的方法 交通流仿真中用到的基本核心模型有哪些，如跟车、换道等，以及它们是如何实现的 如何处理动态交通分配问题 交通仿真模型的标定和验证方法 它们对用户应用程序具有哪些扩展建模功能 本书涉及的主要软件此外，本书还选择性地补充了高级案例研究和应用。这本书并不是巨细无遗的，由于一些不可控的原因，像Dynasmart和VISTA这样的软件本书没有介绍，但其他主要软件都有涉及。 本文中涉及的微观交通建模软件包括VISSIM、AVENUE、Paramics、Aimsun、MITSIM、SUMO和DRACULA。介于微观宏观中间的交通建模软件包括Dynameq和Dynamit，METANET是宏观交通建模的显著代表。 下载链接下载链接 提取码：dwpo]]></content>
      <tags>
        <tag>自动驾驶仿真</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何学习一门编程语言]]></title>
    <url>%2F%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0%E4%B8%80%E9%97%A8%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80.html</url>
    <content type="text"><![CDATA[目前主要接触的语言是Python和C++，这两门语言特性差别比较大。Python是动态、强类型、脚本语言，C++则是静态、弱类型、编译语言。编程语言学习，学到深处才可以称得上是艺术。但在进行基础学习的时候，它是技术而不是艺术。掌握一门技术是有脉络可循的。本文原作者为孟岩，他很优秀。他学习的方法与态度很值得我学习。 现在的开发工作要求我们能够快速掌握一门语言。一般来说应对这种挑战有两种态度：其一，粗粗看看语法，就撸起袖子开干，边查Google边学习；其二是花很多时间完整地把整个语言学习一遍，做到胸有成竹，然后再开始做实际工作。然而这两种方法都有弊病。第二种方法的问题当然很明显，不仅浪费了时间，偏离了目标，而且学习效率不高。因为没有实际问题驱动的语言学习通常是不牢固不深入的。有的人学着学着成了语言专家，反而忘了自己原本是要解决问题来的。第一种路子也有问题，在对于这种语言的脾气秉性还没有了解的情况下大刀阔斧地拼凑代码，写出来的东西肯定不入流。说穿新鞋走老路，新瓶装旧酒，那都是小问题，真正严重的是这样的程序员可以在短时间内堆积大量充满缺陷的垃圾代码。由于通常开发阶段的测试完备程度有限，这些垃圾代码往往能通过这个阶段，从而潜伏下来，在后期成为整个项目的毒瘤，反反复复让后来的维护者陷入西西弗斯困境。 实际上语言学习有一定规律可循，对于已经掌握一门语言的开发者来说，对于一般的语言，完全可以以最快的速度，在几天至一周之内掌握其最常用的50%，而且保证路子基本正宗，没有出偏的弊病。其实真正写程序不怕完全不会，最怕一知半解的去攒解决方案。因为你完全不会，就自然会去认真查书学习，如果学习能力好的话，写出来的代码质量不会差。而一知半解，自己动手土法炼钢，那搞出来的基本上都是废铜烂铁。比如错误处理和序列化，很多人不去了解“正路子”，而是凭借自己的一知半解去攒野路子，这是最危险的。因此，即使时间再紧张，这些内容也是必须首先完整了解一遍的。掌握这些内容之后进入实际开发，即使有问题，也基本不会伤及项目大体。而开发者本人则可以安步当车，慢慢在实践中提高自己。 以下列出一个学习提纲，主要针对的是有经验的人，初学者不合适。这个提纲只能用于一般的庸俗编程语言学习，目前在流行编程语言排行榜上排前20的基本上都是庸俗语言。如果你要学的是LISP之类非庸俗语言，或是某个软件中的二次开发语言，这里的建议未必合适。还是那句话，仅供参考。 首先了解该语言的基本数据类型，基本语法和主要语言构造，主要数学运算符和print函数的使用，达到能够写谭浩强程序设计书课后数学习题的程度； 其次掌握数组和其他集合类的使用，有基础的话可以理解一下泛型，如果理解不了也问题不大，后面可以补； 简单字符串处理。所谓简单，就是Regex和Parser以下的内容，什么查找替换，截断去字串之类的。不过这个阶段有一个难点，就是字符编码问题。如果理解不了，可以先跳过，否则的话最好在这时候把这个问题搞定，免留后患； 基本面向对象或者函数式编程的特征，无非是什么继承、多态、Lambda函数之类的，如果有经验的话很快就明白了； 异常、错误处理、断言、日志和调试支持，对单元测试的支持。你不一定要用TDD，但是在这个时候应该掌握在这个语言里做TDD的基本技能； 程序代码和可执行代码的组织机制，运行时模块加载、符号查找机制，这是初学时的一个难点，因为大部分书都不太注意介绍这个极为重要的内容； 基本输入输出和文件处理，输入输出流类的组织，这通常是比较繁琐的一部分，可以提纲挈领学一下，搞清楚概念，用到的时候查就是了。到这个阶段可以写大部分控制台应用了； 该语言如何进行callback方法调用，如何支持事件驱动编程模型。在现代编程环境下，这个问题是涉及开发思想的一个核心问题，几乎每种语言在这里都会用足功夫，.NET的delegate，Java的anonymous inner class，Java 7的closure，C++OX的 tr1::function/bind，五花八门。如果能彻底理解这个问题，不但程序就不至于写得太走样，而且对该语言的设计思路也能有比较好的认识； 如果有必要，可在这时研究regex和XML处理问题，如无必要可跳过； 序列化和反序列化，掌握一下缺省的机制就可以了； 如果必要，可了解一下线程、并发和异步调用机制，主要是为了读懂别人的代码，如果自己要写这类代码，必须专门花时间严肃认真系统地学习，严禁半桶水上阵； 动态编程，反射和元数据编程，数据和程序之间的相互转化机制，运行时编译和执行的机制，有抱负的开发者在这块可以多下些功夫，能够使你对语言的认识高出一个层面； 如果有必要，可研究一下该语言对于泛型的支持，不必花太多时间，只要能使用现成的泛型集合和泛型函数就可以了，可在以后闲暇时抽时间系统学习。需要注意的是，泛型技术跟多线程技术一样，用不好就成为万恶之源，必须系统学习，谨慎使用，否则不如不学不用； 如果还有时间，最好咨询一下有经验的人，看看这个语言较常用的特色features是什么，如果之前没学过，应当补一下。比如Ruby的block interator, Java的dynamic proxy，C# 3的LINQ和extension method。没时间的话，我认为也可以边做边学，没有大问题。 有必要的话，在工作的闲暇时间，可以着重考察两个问题，第一，这个语言有哪些惯用法和模式，第二，这个语言的编译/解释执行机制。 至此语言的基本部分就可以说掌握了，之后是做数据库、网络还是做图形，可以根据具体需求去搞，找相应的成熟框架或库，边做边学，加深理解。对于一个庸俗语言，我自己把上面的内容走一遍大概要花2-3周时间，不能算很快，但也耽误不了太多事情，毕竟不是每个月都学新语言。掌握了以上的内容，就给练武术打好了基本功，虽然不见得有多优秀，但是肯定是根正苗红，将来不必绕大弯子。就算是临时使用的语言，把上面这个提纲精简一下，只看蓝色重体字的部分，大致能在几天到一周内搞定，不算是太耗时，而且写出来的代码不会太不靠谱。 以上提纲未设及内存模型。对于C/C++，这个问题很重要，要放在显著位置来考虑，但对于其他语言，这个问题被透明化了，除非你要做hardcore项目，否则不必太关注。]]></content>
      <tags>
        <tag>编程</tag>
        <tag>高效学习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶测试研究方向]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E6%B5%8B%E8%AF%95%E7%A0%94%E7%A9%B6%E6%96%B9%E5%90%91.html</url>
    <content type="text"><![CDATA[关于自动驾驶测试的几个重点研究方向 如何测试动态交互场景 OSI（open simulation interface）开放仿真接口的设计]]></content>
      <tags>
        <tag>自动驾驶测试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶仿真工具需求]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E4%BB%BF%E7%9C%9F%E5%B7%A5%E5%85%B7%E9%9C%80%E6%B1%82.html</url>
    <content type="text"><![CDATA[2018/10/30 Create 2019/04/28 First Update 2019/06/12 Second Update 2019/09/15 Third Update自动驾驶仿真是自动驾驶相关产品落地时的重要辅助。先看看仿真这两个字，从词义上就可以看到，没有“真”是不行的。仿真的需求离不开真实性的需求。不能满足真实性的坏数据无法训练出真正有效的模型，也不能保证自动驾驶测试的可靠性。再来看“仿”，仿真本事上是完成现实世界到计算机虚拟空间的映射，在转化过程中核心性质已经完全转变，掌握这个具体映射过程的工作原理和细节可帮助我们抽象/表征出关键特征维度。但表现出真实环境中所有特征维度是不现实的，建模成本过高了些。在有限的资源范围内做出高仿真场景应该是未来相关软件迭代的方向之一。 目前市面上与自动驾驶仿真相关的软件很多。第一类是专门的自动驾驶模拟仿真软件，如Prescan、VTD、51sim-one、Panosim、GaiA等等。第二类是基于游戏引擎做的自动驾驶仿真软件，主要代表是基于Unity的Lgscl Simulator、baidu-Unity，基于Unreal的Carla、Carsim等。第三类是基于一些机器人仿真软件做的自动驾驶仿真器，如基于ROS的Gazebo、rviz开发的仿真平台，基于blender开发的平台等等。 不同类型的软件都有自己的优势和劣势。一般来说，商业软件对自动驾驶仿真各种需求的支持会比较均衡，但一般费用较高，且对于开发者而言，灵活性会受到一定限制。开源软件则会有一些相反的特性。目前市面上还没有一款赢家通吃的自动驾驶仿真器。作为一名开发者，我对“完美”的自动驾驶仿真器有如下的期待。 静态场景建模 静态场景有不同的真实程度，51VR的L1级别环境是简单的同质化设计，L2等级会基于数据库进行一些分割以及渲染，L3等级的渲染甚至会考虑整体上光能量的守恒，以下是demo视频 一个典型的交通静态场景需要什么，全局性的因素有天气条件、光线等，好的仿真工具首先需要有强大的图形渲染能力来渲染这些环境。对于自动驾驶视觉仿真来说，CG渲染能力几乎决定了一切。 非全局性的环境因素有道路、交通设施（交通标志、标识牌、红绿灯）、建筑物、篱笆护栏等等。对于他们，我们需要考虑它们的形状、表面材质、反射率等属性。换句话说，感知系统在工作过程中需要考虑的因素都应该被我们主动建模出来。 另外，对于建模而言，开放的权限大小和方便程度是矛盾的，以Prescan和VTD举例，Prescan的GUI做的很好，道路根据特性被参数化并封装成了几个小模块，实际进行道路建模时只需要drag出来模块，再修改属性就可以，但一些形状相对特殊的路段，由于不能Prescan的约束，所以就无法建模成功。VTD的建模工作量较大，但灵活性更高。理想的建模能力应该从其中寻找一个平衡，既有封装好的基于GUI拖曳使用的模型库，又需要开放足够的底层设计接口。 自动驾驶仿真软件也需要开放一些典型接口。比如SktechUp等建筑学软件， 另外，自动驾驶仿真软件也需要支持一些业内的标准，如用于生成高精度地图的OpenDRIVE，场景建模语言OpenSCENARIO，以及OpenCRG等。这些标准必将会是未来自动驾驶仿真测试的标准，各公司要提前准备了。 传感器模型传感器模型是感知系统仿真的核心。好的自动驾驶仿真软件传感器模型应该具有以下几个特点。-类型丰富。就视觉传感器而言，需要提供普通的RGB摄像头、深度摄像头、鱼眼摄像头、甚至语义摄像头，激光雷达(LIDAR)、雷达(radar)、超声波雷达、毫米波雷达(这个仿真比较困难)、红外线传感器，V2X传感器等等。并且提供充足的选项配置。 在提供理想传感器的同时，除了一些基本功能外，还需要补充一些特性，如噪声选项、畸变选项、色差选项等 提供标准化的传感器仿真接口和特定传感器配置环境 动力学仿真车辆的核心是系统动力学，没有高精度的系统动力学的仿真终究只是过家家。IV2018最佳的论文所进行的硬件在环，使用的是ROS，做的很完整，但是动力学模型比较简单，因而也就限制了它的实用价值。 可以思考一下工作过程，如果车辆只能有非常简单的动力学模型，比如单轨模型或四自由度模型，这也意味着他和实际的状态相别较大，理想的工作状态是车辆接受环境信息，控制车辆移动，新的车辆位置和角度带来新的感知视角。那么如果车辆不能按照本来的规划决策效果执行动作，后边的一切其实也就失去了意义。 因此，自动驾驶仿真软件必须要有支持高精度动力学模型的功能，直接且高效的方案是与动力学仿真软件进行联合仿真，典型的如carsim，其提供多自由度的动力学模型。在这一方面，Prescan、VTD等商业软件都做的很好，Carla、Arisim则表现较差，他们只有简单的动力学仿真特性。但基于Unreal可以去开发联合仿真的模型。 交通流仿真交通流仿真基本可包括车辆仿真和行人仿真，它也是自动驾驶仿真要重点关注的模块，车辆不可能永远跑在实验室和封闭园区内，它要处理的任务终究不会只是非常有限的行人和车辆。自动驾驶车辆一定要能处理很多交互的任务。这时候如果人流和车辆信息流是反常规的，或者是随机的，那这对于算法的训练和实际的测试都是很有害的。 自动驾驶仿真工具应该有自己的交通流仿真功能。可以开发自己的交通流模块，如VTD开发有自己的I-Traffic模块，Prescan有自己开发的Intelligent Traffic Module模块，但跟前文提到的动力学仿真相似，自身开发的模块毕竟总体上不如专业的仿真工具，因此软件最好有自己的仿真接口，目前交通流仿真的主要工具是PTV公司的Vissim，还有开源工具SUMO。（Prescan已经可以和Vissim进行联合仿真，但目前仍有一些局限） 交通流应该尽量与实际交通流保持一致，要有可靠性和准确性，可用的手段有： 利用AI技术生成驾驶模型，在虚拟世界中设置AI车辆自动行驶，AI可以学习交通流的特性，尤其在行人仿真方面有比较好的成效。 导入交通学中的交通流模型，并引入数学概率分布数学模型。这样的交通流模型包括宏观交通流模型和微观模型，相应的数学概率分布模型应该以高斯模型为主。 将真人开车的数据导入其中，主要利用虚拟驾驶模拟器实现，但这在更大程度上是保证单车的真实，对于宏观交通流价值没有想象中大，更多的是形成微观交通流模型。 标准场景格式支持场景自动化测试以及场景复用是自动驾驶测试的大势所趋，而这两项都需要标准场景文件的支持。目前国际通用标准是以VTD发起，由ASAM主导的OpenDRIVE、OpenCRG、OpenSCENARIO标准格式。OpenDRIVE主要解决静态场景描述问题，OpenCRG主要解决路面状态问题，OpenSCENARIO主要解决动态场景描述问题。 由于Open系列标准也在发展中，目前只有VIRES Test Drive（VTD）提供对以上标准格式的支持，以后的各方仿真工具也应该配备相应的场景文件解析接口，这是绕不开的事。 可复现能力目前仿真工具不能保证实验的可复现性，当然这和系统算法的不稳定有关，但也跟算法与系统的信息传送接口的稳定性有关。好的仿真工具应该保证基本测试的可复现性。 方便/灵活/标准化的仿真接口待续]]></content>
      <tags>
        <tag>自动驾驶仿真</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[转载-新理解矩阵(五)]]></title>
    <url>%2F%E8%BD%AC%E8%BD%BD-%E6%96%B0%E7%90%86%E8%A7%A3%E7%9F%A9%E9%98%B5-%E4%BA%94.html</url>
    <content type="text"><![CDATA[转载这个系列文章的原因见新理解矩阵（一）线性代数/矩阵论有更直观的理解方式。本篇对矩阵行列式的再认识。 新理解矩阵 5 在文章《新理解矩阵 3》：行列式的点滴中，笔者首次谈及到了行列式的几何意义，它代表了 n 维的“平行多面体”的“体积”。然而，这篇文章写于我初学矩阵之时，有些论述并不严谨，甚至有些错误。最近笔者在写期末论文的时候，研究了超复数的相关内容，而行列式的几何意义在我的超复数研究中具有重要作用，因此把行列式的几何意义重新研究了一翻，修正了部分错误，故发此文，与大家分享。 一个 n 阶矩阵 A 可以看成是 n 个 n 维列向量$ x_1,x_2,…,x_n$ 的集合$A=(x_1,x_2,…,x_n)$从代数的角度来看，这构成了一个矩阵；从几何的角度来看，这 n 个向量可以建立一个平行 n 维体。比如：平行四边形就是“平行二维体”，平行六面体就是“平行三维体”，高阶的只需要相应类比，不需要真正想象出高维空间的立体是什么样。 让我们考虑矩阵 A 的行列式 detA，我们知道 detA 有如下性质：行列式性质 行列式是$ x_1,x_2,…,x_n$ 的一个函数，即 $detA=f(x_1,x_2,…,x_n)$； （线性 1）行列式的某一列乘上常数α，则行列式的值也乘上α; （线性 2）将行列式的某一列写成两列之和，那么行列式也相应地成为两个行列式之和，性质二和三表明 f 是关于每个向量的线性函数； （反对称）只要有两列相同，那么行列式值为 0; （归一）单位矩阵的行列式为 1，即 f(I)=1。 一个惊人的事实是，行列式可以由上面五条性质唯一确定！即由上面五条性质就可以唯一确定一个函数 f，这个函数就是矩阵的行列式。从几何的角度来看，用这 n 个向量，可以生成 n 维空间的一个平行 n 维体。让我们来考虑这个平行 n 维体的体积 V。只在第一卦限讨论，那么体积具有下面的性质（只在第一卦限讨论，限保证了所有的向量和因子都是正数。） 体积性质 体积是这 n 个向量的一个函数 $V(x_1,x_2,…,x_n)$； 将某个向量乘以α，也就是把它的长度变为来说的α倍，那么体积也增大α倍 体积是可加的，这点需要稍加验证，但它的确是正确的。 只要有两个向量重合，那么体积自然为 0 由单位矩阵 I 构成的平行 n 维体是一个 n 维的单位立方体，它的体积自然是 1， 比较行列式和体积的性质，可以发现它们是完全相同的，所以在第一卦限中的平行 n 维体的体积就是对应矩阵的行列式！如果将其放到所有卦限中，那只不过是体积概念的推广（允许为负数）。因此，我们不妨这样定义：体积就是行列式。事实上，负体积的引入具有重要意义，它是现在的“外微分”的基础之一。外微分一个典型的用处是它可以把高斯积分公式、斯托克斯积分公式等统一起来。它使微分的理论和形式更完整统一。 学过线性代数的朋友都知道，方阵和非方阵的一个明显不同是，对于方阵我们可以计算它的行列式，如果不是方阵的话，就没有行列式这个概念了。在追求统一和谐的数学系统中，为什么非方阵却没有行列式？也许对于这个问题最恰当的回答是——因为不够美。对于非方阵，其实也可以类似地定义它的行列式，定义出来的东西，跟方阵的行列式具有同样的性质，比如某行乘上一个常数，行列式值也就乘以一个常数，等等；而且还可以把其几何意义保留下来。但是，非方阵的行列式是不够美的，因为对于一个一般的整数元素的方阵，我们的行列式是一个整数；而对于一个一般的整数元素的非方阵，却导致了一个无理数的行列式值。另外，一个也比较重要的原因是，单单是方阵的行列式也够用了。综合以上两个理由，非方阵的行列式就被舍弃不用了。 n 阶方阵的行列式是每个向量的线性函数，它代表着向量之间的线性相关性；从几何上来讲，它就是向量组成的平行 n 维体的（有向）体积。我们当然期望非方阵的行列式也保留这些性质，因为只有这样，方阵行列式的那些运算性质才得以保留，比如上面说的，行列式的一行乘上一个常数，行列式值也乘上一个常数。我们考虑$ m\times n$ 的矩阵，其中 $m &lt; n$ ，我们将它看成是 m 个 n 维向量的组合。最简单的，我们先考虑 $1\times 2$ 矩阵的行列式，也就是二维向量(a,b)的行列式。我们已经知道，$2\times 2$ 矩阵的行列式的绝对值，就是这两个向量所围成的平行四边形的面积。类似地，二维向量(a,b)的行列式的绝对值，就等于该向量自身的长度了，也就是$\det(a,b)=\sqrt{a^2+b^2}$，对于有理的 a,b，大多数情况都会出现无理的行列式值，这是不协调的。因为它是线性的函数，有理数的线性运算导致无理数，却是不大舒服的。类似的，可以考虑 $2\times 3$ 矩阵 \boldsymbol{A}=\left(\begin{array}{*{20}{c}} a&b&c\\ d&e&f \end{array}\right)的行列式。按照几何意义，它的行列式的模就是这两个向量所围成的平行四边形的面积。我们可以利用叉积来计算这个面积，但为了更一般化，我们利用正交化的方法来计算它。以向量$\boldsymbol{x}_1=(a,b,c)$为出发点，选取$\boldsymbol{e}_1=\frac{(a,b,c)}{\sqrt{a^2+b^2+c^2}}$那么$\boldsymbol{x}_1=\left|\boldsymbol{x}_1\right|\boldsymbol{e}_1$。对$\boldsymbol{x}_2=(d,e,f)$正交化，得到$\boldsymbol{x}_2 - \left\langle {\boldsymbol{e}_1,\boldsymbol{x}_2}\right\rangle\boldsymbol{e}_1$取 \boldsymbol{e}_2=\frac{\boldsymbol{x}_2 - \left\langle {\boldsymbol{e}_1,\boldsymbol{x}_2} \right\rangle\boldsymbol{e}_1}{\left|\boldsymbol{x}_2 - \left\langle {\boldsymbol{e}_1,\boldsymbol{x}_2} \right\rangle\boldsymbol{e}_1\right|}得到 \boldsymbol{x}_2=\left|\boldsymbol{x}_2 - \left\langle {\boldsymbol{e}_1,\boldsymbol{x}_2} \right\rangle\boldsymbol{e}_1\right|\boldsymbol{e}_2+\left\langle {\boldsymbol{e}_1,\boldsymbol{x}_2} \right\rangle\boldsymbol{e}_1因此，行列式的模，也就是两个向量所形成的平行四边形的面积等于 \left|\det\boldsymbol{A}\right|=\left|\boldsymbol{x}_1\right|\cdot \left|\boldsymbol{x}_2 - \left\langle {\boldsymbol{e}_1,\boldsymbol{x}_2} \right\rangle\boldsymbol{e}_1\right|最后的表达式出现了两个模，表明两个根号，随便挑个具体例子就可以验证，$\boldsymbol{A}$的元素全部是整数，也得不到有理数。这体现了非方阵行列式的不美之处。方阵的行列式就够了由于非方阵的行列式不够美，那么我们干脆弃之不用了。可是，这样会不会产生什么“副作用”？也就是说，会不会有哪些地方，非用到非方阵的行列式不可？事实上，至少就我目前的认识来说，答案是没有。 比如说判断 m 个 n 维行向量的线性相关性，我们是这样做的：第一种方法，利用初等变换，看变换后的矩阵的秩是否为 m；如果嫌第一种方法步骤太多，第二种方法相对来说干脆一点，就是检验删除任意 n-m 列后，剩下的方阵行列式是否为 0，如果存在一个不为 0，就说明线性无关了。所以说，方阵的行列式够用了。]]></content>
      <tags>
        <tag>线性代数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[转载-新理解矩阵(四)]]></title>
    <url>%2F%E8%BD%AC%E8%BD%BD-%E6%96%B0%E7%90%86%E8%A7%A3%E7%9F%A9%E9%98%B5-%E5%9B%9B.html</url>
    <content type="text"><![CDATA[转载这个系列文章的原因见新理解矩阵（一）线性代数/矩阵论有更直观的理解方式。 本文主要讲的是相似矩阵的一些事情，本文的观点很是粗糙，自己感觉都有点模糊，因此请读者细细阅读。在孟岩的文章里头，它对矩阵及其相似有了一个非常精彩的描述：“矩阵是线性空间中的线性变换的一个描述。在一个线性空间中，只要我们选定一组基，那么对于任何一个线性变换，都能够用一个确定的矩阵来加以描述。” 同样的，对于一个线性变换，只要你选定一组基，那么就可以找到一个矩阵来描述这个线性变换。换一组基，就得到一个不同的矩阵。所有这些矩阵都是这同一个线性变换的描述，但又都不是线性变换本身。 上述所有这些同一个线性变换的描述的矩阵互为相似矩阵。孟岩还提到那个相似矩阵的公式可以用一种非常直观的方式来证明，可是就没有后文了。我没有跟他联系过，但是我一直也在寻求这方面的直观理解。在翻阅了许多书籍之后，终于有了一个自己比较满意的答案。也许读者会感到意外的是，促使我得到这个理解的，不是数学著作，而是一本偏向物理的数《群论与量子力学的对称性》。 Part 1首先来一个比较物理的理解：矩阵 A 描述了向量 x 到向量 y 的一个运动，即 $y=Ax$；但是，这仅仅是在直角坐标系下测量的，在一个新的坐标系 P 之下，假设测量结果为 $y′=Bx′$。根据我们在前边给出的矩阵几何理解，在 P 坐标系下测量的$ x′$，在直角坐标系测量为$x$，可以表示成 $Px′=x$；同理有 $Py′=y$。代入就得到：$Py′=APx′$，可以稍稍改成 $y′=P^{−1}APx′$，换句话说，在 P 坐标系下，从 x′到 y′的运动用矩阵 $B=P^{−1}AP$ 表示，这就是 A 的一个相似矩阵！所以说，一族相似矩阵，只不过是同一个线性变换在不同坐标系下的一个测量结果而已。 Part 2其实，相似矩阵还有一个相对直观的几何立体模型。我们知道一个矩阵 A 由 n 个列向量组成，它实际上给出了 n 维空间的一个 n 维平行方体（类比二维的平行四边形和三维的平行六面体）。而矩阵 I 实际上给出了一个 n 维单位方体。假设他们两个存在某种对应关系。而矩阵 A 在新坐标系 P 下的测量结果为 $P^{−1}A$，即 $A=P(P^{−1}A)$；而 I 在 P 的测量结果为$I=P(P^{−1})$，也就是说，在新坐标系下，$P^{−1}$ 与 $P^{−1}A$ 具有对应关系。那么新坐标系下的单位方体对应什么呢？那就是 P^{−1}→P^{−1}P=IP^{−1}A→P^{−1}AP也就是说新坐标系下的单位方体对应着相似矩阵所描述的 n 维方体！这压根儿就是配对原则嘛！这就不难理解为什么相似矩阵的行列式值都相同了。行列式的几何意义就是体积，虽然矩阵A 代表的立方体经过坐标变换后体积变了，但是单位方体的体积实则也变啦，也就是说，新坐标系下一切标度都变化了，但是从“数格子”的角度来说，格子数目是没有变化的，所以体积也就没有变化了。 伟大的矩阵在物理学，几乎每一个领域都广泛地用到了矩阵，但是，与矩阵联系最紧密的学科当数量子力学。很多人都知道，量子力学有三种等价表达形式，一种是薛定谔的波动方程（就是我现在学习的），一种是海森堡的矩阵力学，最后一种是天才的费曼的路径积分。话说当年海森堡在构思量子力学时，线性代数这门课程已经发展得很丰富了，但他自己并没有学习到。不过他自己却“发明”了一个自称为“能量表格”的东西，用来作为描述他构思的工具。最后当他把论文提交给导师玻恩时，玻恩毫不客气地跟他说：“你这个新的能量表格，就是数学家早已研究过的矩阵。”呵呵，让人惊讶，矩阵力学的创始人居然不知矩阵为何物。后来海森堡补习了矩阵的知识，并和导师合作发表了矩阵力学的成果。最近我看量子力学和狭义相对论的内容，发现两者的描述方式其实在很大程度上已经得到了统一，大家都是先讲一下基础知识，然后讲一下线性代数、群论等知识。最后都基本上归结为用矩阵和群论知识来分析了。我想这也是为了物理学统一描述的需要吧。让我觉得一点意外的是，这种综合的抽象模式，反倒让我感觉容易上手了。也许正是因为我是个数学爱好者吧。 最后总结一下我的这几篇《新理解矩阵》这几篇文章很粗糙、放肆，很不成熟，甚至某些观点不一定正确，因为直观理解会给人一种以偏概全的感觉，忽略掉了抽象的巨大作用。但是我想只有在有了直观认识之后，才可以更熟练地运用它；更加全面的认识，也在这种直观的效果下慢慢感悟，慢慢积累起来的，我想数学史上线性代数知识的发展历程也是相似的，既然如此，我们为什么不按照历史的发展方式来学习它呢？]]></content>
      <tags>
        <tag>线性代数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[转载-新理解矩阵(三)]]></title>
    <url>%2F%E8%BD%AC%E8%BD%BD-%E6%96%B0%E7%90%86%E8%A7%A3%E7%9F%A9%E9%98%B5-%E4%B8%89.html</url>
    <content type="text"><![CDATA[转载这个系列文章的原因见新理解矩阵(一)线性代数/矩阵论有更直观的理解方式。 关于行列式的叙述。这部分内容没有在孟岩的文章中被谈及到，是我自己结合了一些书籍和网络资源而得出的一些看法。其中最主要的书籍是《数学桥》，而追本溯源，促进我研究这方面的内容的是 matrix67 的那篇《教材应该怎么写》。本文包含了相当多的直观理解内容，在我看来，这部分内容也许不是正统的观点，但是至少在某种程度上能够促进我们对线性代数的理解。大多数线性代数引入行列式的方式都是通过讲解线性方程组的，这种方式能够让学生很快地掌握它的计算，以及给出了一个最实际的应用（就是解方程组）。但是这很容易让读者走进一个误区，让他们认为线性代数就是研究解方程组的。这样并不能让读者真正理解到它的本质，而只有当我们对它有了一个直观熟练的感觉，我们才能很好地运用它。 行列式的出现其实是为了判断一个矩阵是否可逆的，它通过某些方式构造出一个“相对简单”的函数来达到这个目的，这个函数就是矩阵的行列式。让我们来反思一下，矩阵可逆意味着什么呢？之前已经提到过，矩阵是从一个点到另外一个点的变换，那么逆矩阵很显然就是为了把它变换回来。我们还说过，“运动是相对的”，点的变换又可以用坐标系的变换来实现。但是，按照我们的直觉，不同的坐标系除了有那些运算上的复杂度不同（比如一般的仿射坐标系计算点积比直角坐标系复杂）之外，不应该有其他的不同了，用物理的语言说，就是一切坐标系都是平权的。那么给出一个坐标系，可以自然地变换到另外一个坐标系，也可以自然地将它变换回来。既然矩阵是这种坐标系的一个描述，那么矩阵不可逆的唯一可能性就是：**这个 n 阶矩阵的 n 个列向量根就构不成一个 n 维空间的坐标系。也就是说，它没有资格成为一个坐标系！,也就是 n 个向量是线性相关的。 那么我们就想办法为某个 n 阶矩阵 A 构造一个函数|A| ，当|A| 为 0 时，就意味着这个矩阵没有资格成为一个坐标系，也就是说它不可逆。先设 $A=[\vec{c_1},\vec{c_2},…,\vec{c_n}]$ ，其$\vec{v_i}$ 是各个列向量。我们想想，哪些情况下矩阵 A 显然没有资格成为一个坐标系？ 显然，能否构成一个坐标系，与每一个向量$\vec{v_i}$ 都息息相关，那么$|A|$ 应该是每一个向量$\vec{v_i}$ 的函数才能满足要求。 简单起见，我们函数最好是线性的。3、构成 n 维坐标系需要 n 个独立的向量，如果矩阵 A 的 n 个向量中有两个相同的，那么它自然无法构成坐标系，也就是说此时|A|=0 ；4、为了确定适当的缩放因子，也为了满足我们的直观感受，我们规定|I|=1 。 让人意外的是，就凭以上三个性质，就可以确定唯一一个函数|A| 了，那个函数就是我们课本给出的行列式计算公式！当然，推导过程有点复杂，在这里不给出了，有兴趣的朋友可以用二阶和三阶矩阵演算一下，然后类比就行了。让我们再回想一下课本是怎么介绍行列式的：首先是线性方程组给出行列式的计算公式，然后再证明行列式有各种各样的性质，比如“把其中一行乘上 5，行列式的值也乘上 5”等等。这与上面的说法（这其实也是标准的线性代数讲述方式）相比，未免有点本末倒置的味道。因为行列式本身就是由那些性质来定义的，我们又何必要用行列式的计算公式来反推那些什么性质呢？除了锻炼计算能力，我真的看不出有什么作用。 上面的内容还有一个非常直观的几何理解方式：三维空间中三个向量能够构成一个仿射坐标系的充要条件是什么？很简单，这三个向量必须不共面！因此，推广到 n 维空间，很显然有：n 个向量可以构成一个坐标系就意味着这些向量不共面！当然，n 维空间中的面不是指二维平面，而是 n-1 维的东西，它与 n 维体积相对。 还可以换一种说法n 个向量可以构成一个坐标系就意味着这些向量构成的一个 n 维平行立体（联想我们的平行六面体）体积不为 0！注意注意，这里涉及到了体积，为 0 与否关系到矩阵可逆性，这与行列式同出一辙。这个 n 维体积是否和行列式有关呢？我们不妨分析一下矩阵 A 所构成的n 维立体的体积 V 一些性质： 很明显，每一个向量$\vec{v_i}$ 也是每一条边长，那么 V 应该是每一个向量$\vec{v_i}$ 的函数； 当某个向量变为原来的$\alpha$ 倍，那么体积也应该变成原来的|\alpha| 倍，加负号是因为向量是可以反向延伸的，但体积一定是正数；3、有两个向量相同时，意味着这些向量“共面”，这时体积自然为0；4、单位的 n 维立方体体积自然是 1. 出人意料，这些性质几乎与行列式一一对应，除了第 2 点那个$\alpha$ 要加绝对值之外。那么，这些性质最终迫使这个 n 维立体的体积为 $V=ABS(|A|)$ ，为了不引起混乱，我用了 ABS 表示绝对值。这真的是一个非常棒的事实，行列式有如此明显的几何意义，它可以用来求体积（二阶矩阵的时候就是平行四边形的面积）！这就不难解释我们一开始在解析几何课程上学到的平行六面体体积公式为什么是这样子的了。它完全就可以撇开什么点乘、叉乘而独立得到！还有很多例子，读者在学习到相关的知识时必然会感受到。但另一方面，这也反映了我们教材的糟糕：要是用我们讲述行列式的方式，我们要花多大功夫才能证明行列式就是体积？]]></content>
      <tags>
        <tag>线性代数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[转载-新理解矩阵(二)]]></title>
    <url>%2F%E8%BD%AC%E8%BD%BD-%E6%96%B0%E7%90%86%E8%A7%A3%E7%9F%A9%E9%98%B5-%E4%BA%8C.html</url>
    <content type="text"><![CDATA[转载这个系列文章的原因见新理解矩阵（一）上一篇文章中我从纯代数运算的角度来讲述了我对矩阵的一个理解，可以看到，我们赋予了矩阵相应的运算法则，它就在代数、分析等领域显示出了巨大作用。但是纯粹的代数是不足够的，要想更加完美，最好是找到相应的几何对象能够与之对应，只有这样，我们才能够直观地理解它，以达到得心应手的效果。 几何理解我假设读者已经看过孟岩的《理解矩阵》三篇文章，所以更多的细节我就不重复了。我们知道，一个2*2矩阵 A事实上由两个向量$a_1$ 和$a_2$（这里的向量都是列向量）组成，它描述了一个平面（仿射）坐标系。换句话说，这两个向量其实是这个坐标系的两个基，而运算$y=Ax$,则是告诉我们，在 A 这个坐标系下的 x 向量，在 I 坐标系下是怎样的。这里的 I 坐标系就是我们最常用的直角坐标系，也就是说，任何向量（包括矩阵里边的向量），只要它前面没有矩阵作用于它，那么它都是在直角坐标系下度量出来的。（事实上，单位矩阵 I 是默认的直角坐标系，这一说法并非总是成立的，但是我们现在寻求直观的理解方式，我们就用最简单的东西来实行。） 为什么会有这样的特点？其实这源于我们对矩阵乘法的定义，反过来，如果我们用这样的几何方式来定义矩阵乘法，那么我们也将得到在书本上了解到的矩阵乘法计算公式。更高阶的矩阵也可以作同样的类比。推导过程只是一道很简单的练习题，读者不妨自己动笔尝试一下？ 现在我们又回到孟岩文章上的说法了，对于矩阵作用于一个向量（对应的一个点），我们既可以看作点没有变，只不过是坐标系从直角坐标系变换为仿射坐标系而已；另一方面，我们也可以看做矩阵把直角坐标系的一个 A’点“运动”（变换）到了 A 点。这两种说法都行，正如孟岩所说的“运动是相对的”。更正确地讲，两种说法都要同时被提及，才算是最好的理解。 矩阵是一个点到另外一个点的变换，变换的方式就是坐标系的变换。当然，上面只讨论了矩阵乘以向量的乘法，那么矩阵乘以矩阵呢？比如 AB，我们就可以看作是矩阵 B 给出了一个坐标系，但是这个坐标系的各个分量是在A坐标系下测量得到的，而A是在直角坐标系下测量得到的，所以要把B的各个分量（列向量）与矩阵 A 作乘法后，才得到了这个仿射坐标系在直角坐标系下的“像”。这很直接地导致了矩阵乘以矩阵的计算公式，也很显然地回答了“为什么 n 阶方阵只有与 n 阶方阵相乘才有意义”，因为两者要在同一空间中测量，才能够完整而唯一地把测量值确定下来。正如，在 n+1 维的空间中讨论n个n维向量是没有意义的，因为在n+1维空间中的观测者看来，它们只不过是一个“面”，多出的一个维度可以随意变化；在n维空间中讨论n+1维向量就更没有意义了，因为维度根本就不够用。 有了这个直观的几何意义，很多问题看起来几乎都是显然的了，比如那些行列式问题，还有相似矩阵等等，这将在下回谈到。 张量介绍我们已经大概了解到，数字的有序组合产生了向量，向量的有序组合产生了矩阵。这样两个新构造出来的对象，作用一个比一个大。那么有人会联想到：矩阵的有序组合，就可以产生一个“立方阵”，它的功能会不会更加强大？更一般的，n维立方阵呢？这种联想是有道理的，数学上也有这样的研究对象，它就是张量。最通俗的说法，n阶张量就是一个0维立方阵，所以0阶张量就对应一个数，向量、矩阵分别对应 1 阶和 2 阶张量，我们所说的三维立方阵，就是 3 阶张量啦。当然，张量属于很高深的数学理论，它的性质和作用不可能这么简单就说清楚了。回想当年，爱因斯坦就是用张量分析作为工具，建立起他那伟大的广义相对论的。如果有机会的话，我们一定会重新造访它。 接下来，我们还是回到矩阵问题，谈谈矩阵的行列式。]]></content>
      <tags>
        <tag>线性代数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[转载 | 新理解矩阵（一）]]></title>
    <url>%2F%E8%BD%AC%E8%BD%BD-%E6%96%B0%E7%90%86%E8%A7%A3%E7%9F%A9%E9%98%B5%EF%BC%88%E4%B8%80%EF%BC%89.html</url>
    <content type="text"><![CDATA[本文转载于https://spaces.ac.cn/archives/1765文章本来就在网络上，我之所以费心再转载一次，是因为这篇文章体现了一种我很欣赏的学习态度。如何才能算理解某个知识，这种就是了。前边我承诺过会写一些关于自己对矩阵的理解。其实孟岩在《理解矩阵》这三篇文章中，已经用一种很直观的方法告诉了我们有关矩阵以及线性代数的一些性质和思想。而我对矩阵的理解，大多数也是来源于他的文章。当然，为了更好地理解线性代数，我还阅读了很多相关书籍，以求得到一种符合直觉的理解方式。孟岩的 blog 已经很久没有更新了，在此谨引用他的标题，来叙述我对矩阵的理解。 当然，我不打算追求那些空间、算子那些高抽象性的问题，我只是想发表一下自己对线性代数中一些常用工具的看法，比如说矩阵、行列式等。同时，文章命名为“理解矩阵”，也就是说这不是矩阵入门教程，而是与已经有一定的线性代数基础的读者一起探讨关于矩阵的其他理解方式，仅此而已。我估计基本上学过线性代数的读者都能够读懂这篇文章。 首先，我们不禁要追溯一个本源问题：矩阵是什么？ 我们不妨回忆一下，矩阵是怎么产生的。矩阵可以看成是一个个向量的有序组合，这说明矩阵可以类比向量；但是向量又是怎么产生的？向量则是一个个数字的有序组合，这又把我们的研究方向指向了“数字是什么”这个问题上。比如，数字 1 是什么？它可以代表 1 米，可以代表 1 千克，也可以代表 1 分钟、1 摄氏度甚至 1 个苹果。它为什么有这么多的表示意义？ 答案很简单，因为在本质上，它什么都不是，它就是数字 1，一个记号，一个抽象的概念。正因为它抽象，它才可以被赋予各种各样直观的意义！回到矩阵本身，我们才会明白，矩阵的作用如此之大，就是因为书本上那个很枯燥的定义——矩阵就是 m 行 n 列的一个数表！ 它把矩阵抽象出来，让它得到了“进化”。它是一个更一般化的概念：一个向量可以看作一个矩阵，甚至一个数都可以看成一个矩阵，等等。 代数方面的理解当然，上述说法是含糊的，我们还是需要确切知道它究竟有什么用？这可以从代数和几何的角度来分析，因为做到数形结合才是最完美的。首先我们知道数学最基本的元素就是数字，严格来说是自然数，如 0，1，2，…；有了数字，我们就可以做到很多东西。但是数字是单一的，而我们很多时候都要批量处理一些类似的运算，比如同时要计算 1+2，1+3，2+3，4+5这四个算式。不论是从记录还是从研究的角度来说，分开研究它们都是比较繁琐的。于是一种“批量”的记号产生了，我们记为(1,1,2,4)+(2,3,3,5)，用两个不同记号记录它们，比如A =(1,1,2,4),B =(2,3,3,5)，我们就可以将它记为 A +B 。这样不论在研究还是记录方面都能够给我们方便。于是一个我们称之为“向量”的东西产生了，也就是说，从代数的角度来讲，向量是为了研究批量运算而产生的。但是向量并没有解决所有的批量运算的问题。 比如 3 元一次方程组 a_{11}x_1+a_{12}x_2+a_{13}x_3=b_1\\ a_{21}x_1+a_{22}x_2+a_{23}x_3=b_2\\ a_{31}x_1+a_{32}x_2+a_{33}x_3=b_3单单用向量我们还是没有办法很好地研究这一类问题。于是我们就要想法子创造出一些新的记号，由于左边的系数的具有一定的排列顺序和统一的形式，我们不妨把它们单独写出来 [a_{11},a_{12},a_{13}]\\ [a_{21},a_{22},a_{23}]\\ [a_{31},a_{32},a_{33}]并用一个简单的符号 A 来表示它，然后把未知数和右边的常数都分别写成向量形式$x=[x_1,x_2,x_3]^T$ 和 $b=[b_1,b_2,b_3]^T$。我们期待上面的方程组可以写成一个简单的形式$Ax=b$ 由此我们可以定义一个 3 阶方阵乘以一个 3 维列向量的乘法了，这是一种纯粹的定义，是为了方便我们记录和研究的定义。在此基础上，我们就可以研究更多的东西，比如矩阵乘矩阵会得到什么？ 同样，这里要研究的矩阵都是指 n 阶方阵这个最核心的东西，我们要先把核心问题研究透彻，不然一开始就考虑所有的繁杂的情况，容易让我们陷入迷惘中而不知所措。 在研究一般乘法之前，我们先来了解一下关于运算定律问题。我们知道在实数中，加法满足结合律和交换律，乘法满足结合律、交换律和分配律。哪些定律可以迁移到矩阵乘法中的呢？交换律是无法先验的，它是个定义问题，我可以定义它成立也可以定义不成立，但是为了运算的方便，我们还是希望它满足更多地运算定律，所以我们先来考虑结合律，希望它能够满足这一定律。也就是说$(AB)x=A(Bx)$ 其中 Bx 已经是我们所熟知的运算（由定义而来），它将得到一个列向量，所以我们也可以轻易算出 $A(Bx)$，从直观上来讲，AB 应该也是一个 n 阶方阵，我们可以先把它设出来，然后与列向量 x 进行运算，最后把两边的结果一一对应起来，就得到了 AB 这个 n 阶方阵中各个元素的表达式。我们最终可以发现，它就是我们书本上定义的表达式。 以 2 阶方阵为例，令 A 为 [a,b]\\ [c,d]B 为 [e,f]\\ [g,h]AB 为 [p,q]\\ [r,s]并令 $x=[x,y]^T$，那么$(AB)x$ 就等于$[px+qy,rx+sy]^T$而 $Bx=[ex+fy,gx+hy]^T$，那么 $A(Bx)=[aex+afy+bgx+bhy,cex+cfy+dgx+dhy]^T$那么根据各个元素的对应，就得到 p=ae+bg\\q=af+bh\\r=ce+dg\\s=cf+dh。这就完成了 2 阶方阵 乘法的定义现在我们就可以从代数的角度来讲，矩阵是为了简化批量线性运算的一个“终极武器”！这就是矩阵的一个比较直观和有用的代数意义。 如果根据我们这个定义去考虑交换律，我们会发现矩阵一般不符合交换律。这不能不说是一个遗憾。但是没关系，它服从结合律这一个事实，已经赋予了这个工具极大的力量。比如线性方程组 $Ax=y$，我们有 $By=B(Ax)=(AB)x$，如果我们想办法找到一个矩阵 B，使得 AB=I，那么就很棒了，因为我只要用矩阵 B 作用于向量 y 就可以得到方程组的解了，事实上这样的矩阵 B 是存在的，这就是逆矩阵。要是没有结合律，这一切都免谈！ 由于这是实数基本运算（线性运算）的“批量版”，那么们就可以很自然地把实数的一些公式延伸为矩阵版（只要不是涉及到交换律就行）。比如，在实数中，我们有公式 \frac{1}{1-x}=1+x+x^2+x^3+...≈1+x那么我们求矩阵的逆阵时，也有类似的公式 (I−A)^{−1}=I+A+A^2+A^3+...≈I+A其中 I 是单位矩阵，A 是一个“比较小”的矩阵。至于“比较小”怎么定义，现在还说不清楚，可以认为是矩阵的行列式值比较小。类似的，根据 \sqrt{1+x}≈1+\frac{1}{2}x也能够相应地给出$(I+\frac{1}{2}A)^2≈I+A$，这是求矩阵“平方根”的一个近似公式。 得益于我们定义的矩阵乘法，批量的运算可以直接用单个量的运算公式进行，不用我们煞费苦心、绞尽脑汁地构思新的公式。这就是矩阵的强大所在！它在解决很多线性问题时有着奇迹般的美妙，最简单的例子莫过于线性方程组 $Ax=y$ 的解为 $y=A^{−1}x$，解答方程组的时候就好像求解一元方程那样有简单的形式！还有一些关于指数的定义等等，以后在应用时会把它介绍的。它们都好像非常精美的“艺术品”！下一回，我们将从几何角度来理解矩阵。当然，这里边的绝大多数内容在孟岩的文章里头都已经提到了，我只是重提旧论而已，希望读者不会厌烦。]]></content>
      <tags>
        <tag>线性代数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[书摘 | 复杂-米歇尔]]></title>
    <url>%2F%E4%B9%A6%E6%91%98-%E5%A4%8D%E6%9D%82-%E7%B1%B3%E6%AD%87%E5%B0%94.html</url>
    <content type="text"><![CDATA[复杂性是个很前沿的概念。它处于物理、社会等学科的交叉领域，一个搞不好可能会做成伪科学。这个书摘是来自《复杂性.米歇尔》，算是复杂性研究中的圣经了，因此用速读法看了看。 复杂系统初探 蚁群、大脑、免疫系统、经济、万维网都是复杂系统，复杂系统的一个定义是，具有涌现和自组织行为的系统。它们有一些共性 复杂的集体行为。个体一般都遵循简单的规则，没有中央系统 没有内部或外部的控制者，有时称为自组织，这种系统的宏观行为有时称为涌现 动力学、混沌和预测 动力学系统是以某种方式随时间变化的系统 混沌系统指的是对于初试位置和动量的测量如果有极其微小的不精确，也会导致对其长期预测产生巨大的误差 混沌系统产生的关键原因是非线性。非线性是还原论的梦魇。 逻辑斯蒂映射，$x_{t+1} = Rx_t(1-x_t)$，我们知道简单的确定性方程能产生类似于随机噪声的确定性轨道。不管初始条件有多接近，在足够长时间之后，轨道还是会分开。所以除非你知道初试值的无穷小数位，不然你就无法精确地预测未来。 逻辑斯蒂映射最初会产生不动点，然后周期振荡，最后出现混沌，这是通往混沌的倍周期之路 算出产生倍周期（2,4,8）倍的R值表，R在增加，但是R之间距离越来越短，用它计算分叉之间的靠近速度，收敛速度是一个常数，为4.6692016，关键在于其他连续函数也是。这是著名的费根鲍姆常数。 看似混沌的行为可能来自确定性系统；一些简单的确定性系统长期变化，对于初试条件的敏感依赖性，即使在原则上也无法预测；混沌中存在秩序，可以使用分叉、吸引子等描述 信息 复杂系统中的自组织行为，与传统的有序消退无序增长方向相反，有序是从无序中产生的。可以用信息刻画有序和无序。 麦克斯韦妖的解决方案：妖精通过测量获取信息的行为做功了。熵和信息就此结合起来。 香农熵：信息熵，玻尔兹曼熵：热熵 计算 香农的信息定义关注信息源的可预测性，但在现实世界，信息是用来分析并产生有意义的东西，即信息是用来计算的。 哥德尔不完备性定理：，”这个命题是不可证嘚的” 图灵证明，没有计算程序能解决所有问题。]]></content>
      <tags>
        <tag>读书</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[近期思考]]></title>
    <url>%2F%E8%BF%91%E6%9C%9F%E6%80%9D%E8%80%83.html</url>
    <content type="text"><![CDATA[好久没有打开马克飞象了。忙似乎不是个好借口。真说起来，称不上是忙，而是迷茫。 一定要做自己喜欢的事呐，或者说在有限的可控的资源里，在完成需求的基本任务的前提下，让自己不那么纠结。 拖延症，我现在真切的感受到了它。拖延不是来自于自制力，而是来自于恐惧。要解决它，不解决会废的，我不想成为一个“废”人。 前几天，燕子跟我说，你做事往往都能从一而终，除了你的博客。我心中悚然，坐在位置上封闭自己，静静发呆。博客的目的是记录，我的本意不是要篇篇精彩，日常怎么可能没什么记录呢？只是自己心中懒惰罢了。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[统计学习 | 书摘 | 赤裸裸的统计学(二)]]></title>
    <url>%2F%C2%96%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0-%E4%B9%A6%E6%91%98-%E8%B5%A4%E8%A3%B8%E8%A3%B8%E7%9A%84%E7%BB%9F%E8%AE%A1%E5%AD%A6-%E4%BA%8C.html</url>
    <content type="text"><![CDATA[统计学的意义不是做无数次高深的数学运算，而在于更好的洞察社会现象背后的成因。就当科普书看呀。 第八章 数据与偏见 数据是极其重要的，数据对于统计学家，就像是阻挡队员之于四分卫。 统计学离不开代表性样本；获取一个好样本比较难；正确方法用在糟糕样本上会得到错误的结论；样本的容量很重要；注意原始数据的“偏见”，在那样的前提下，样本数量不能说明什么 统计学需要比较。在设置比较的时候需要用到人的控制组和对照组，无法保证变量。这时候需要随机分配，两组相关特性都得到了均匀分配 统计学中需要纵向数据研究和横向数据研究 第九章 中心极限定理 一个大型样本的正确抽样与其所代表的群体存在相似关系，通过统计学工具可以把正确或错误的可能性进行量化 样本的平均值会在总体平均值周围呈现正态分布 标准差衡量群体中所有个体的离散性、标准误差衡量的是样本平均值的离散性，标准误差是所有样本平均值的标准差 SE=s/sqrt(n),SE是标准误差，s表示抽样群体的标准差，n表示样本的数量 得到总体平均值和标准差，算出样本应该有的标准误差，判断样本的平均值与总体平均值之间有几个标准误差，按高斯分布进行推断 第十章 统计推断与假设检验 统计学的意义不是做无数次高深的数学运算，而在于更好的洞察社会现象背后的成因 假设检验：先假设一个结论，然后通过统计分析对其进行支持与反驳，如果我们证明零假设不成立，相当于承认了其反面情况与真实更为接近。 在实际进行研究时，往往是提出一个零假设，并希望去推翻它 推翻零假设的门槛一般是0.05，即显著性水平至少达到0.05，即如果某个零假设成立的概率还不足0.05的话，我们就可以说自己推翻了零假设。 经典套路。“有女朋友一般就有sex life，显著性水平为0.05”，那么（1）在一个大型数据集里，一个既定事实是，有无女朋友对男性是否有sex-life的影响很大。（2）零假设就是，“男性有女友对sex life没有影响”（3）如果这个有无女友对sex-life的影响，如果是巧合，这个概率值就是我们所说的显著性水平 如果两个变量之间不存在统计学意义上的相关性，那么事情就需要用误差解释 ex: 样本是59个自闭症孩子和38个正常孩子；先借助抽样的公式计算实验组与对照组的标准误差，算出置信区间；观察到置信区间没有重合的地方。我们假设：（1）假如两个样本抽取自同一个群里，最好结果是平均值之差为零。（2）中心极限定理告诉我们，二个平均值（样本平均值与总体平均值）之间的差会呈现正态分布（3）假如两个样本来自同一个群体，那有0.68的概率两个平均值之间的差小于一个标准误差 单尾、双尾假设检验 第十一章 民意测验与误差幅度 民意调查观察的是百分比而不是平均数 百分比的标准误差$s = sqrt(p(1-p) / n)$ 第十二章 回归分析与线性关系第十三章 回归错误 用回归方程来分析非线性关系 相关关系不等同于因果关系 不要弄错因果的倒置，因果关系也有可能是双向的，所以这里的关键在于，不要选择被结果影响的解释变量 忘记或遗漏相关解释变量会影响最终结果，比如在玩高尔夫时的年龄问题 有些变量是高度相关的，比如探究吸毒对SAT成绩的影响，吸食海洛因的一般也会吸食可卡因 脱离数据进行判断。把统计结果随意推广 数据矿，数据变量过多。比如整个班级抛硬币实验，当你引入大量无关变量时，就会冲淡显著性 设计一个好的方程式，想清楚考虑哪些变量，应该从哪里收集数据；回归分析应该以观察样本为立足点：为什么方程式中需要有这些解释变量，通过其他学科领域是否也能解释这个分析结果； 第十四章 项目评估与反现实 因果倒置新例：警察数量与犯罪率之间的关系，可能是更多警察能降低犯罪率或者是高犯罪率导致警察数量增多；医生数量和病人数量的问题，随着医生增多，病人数量也许可能下降，但也可能是因为医生聚集，使得病人集中来治病。 项目评估就是用来探索和测试某些介入手段的因果作用 评估警察和犯罪率的关系，可以引入恐袭数据这种“外生变量”，当恐袭级别高时，警察增多，理论上犯罪率不变，但其实犯罪率下降，这相当于一种“隔离治疗” 随机控制实验。如典型的医学实验（人的变量过于复杂，需要随机控制）；大小班教学益处（大班、小班的成因是复杂的） 自然实验。用一些自然历史数据进行分析。探究教育对寿命的关系，因素太多，选取纵向上的基于时间的历史数据不能满足需求，但可以选取历史数据中要求完成六年教育和要求七年教育的两个州，这是由历史巧合形成的。 非对等对照实验。人的优秀到底是进名牌大学带来的，还是自己本身比较优秀呢？这不能用随机试验来做。DNA可以考虑在申请学校时，可以申多所，放弃名校的去了一般学校的最终优秀程度和名校的差不多，这就说明优秀是本来就优秀，不是大学给的。 差分类差分实验。首先比较政策前后结果差别，这结果差别可能是多种影响因素的结果，这时候可以分析相似对象但无政策的结果。 形成差分实验。 不连续分析实验。将那些刚好符合介入或治疗条件的对象，以及以毫厘之差错失治疗机会的对象进行比较，比如判断补习班的作用，可以选成绩中等的人，一部分恰好到补习班，一部分恰好不到，接着分析差别 关键是要找到方法模拟反现实]]></content>
      <tags>
        <tag>统计学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[言不可及 | 回忆]]></title>
    <url>%2F%E8%A8%80%E4%B8%8D%E5%8F%AF%E5%8F%8A-%E5%9B%9E%E5%BF%86-%E4%BA%8C.html</url>
    <content type="text"><![CDATA[或许是因为信息过载吧，近来突然发现自己的短期记忆力下降地厉害。本来安慰自己长期记忆能力应该还蛮不错，准备顺手切过这个想法的时候，又突然愣住了。感觉像是回到了小学的某个午后，我背着那句英语。在汉语里对应的就是，时光如箭，岁月如梭。 箭和梭，时光和岁月，这好像是另外一个世界的词。我一直在当前的这个时间点上忙忙碌碌，过去又多久没浮现在我脑海里了呢。 我现在很想问自己，你还记得什么。我一直喜欢与朋友聊的一个话题是，你记忆的起点是什么？对我而言，学前班第一天是我记忆的开始。我记得自己抱着我妈的腿一直哭，我姐在旁边跟我说，妈妈要工作，你要懂事一点，我妈也告诉我，晚上回来时给你带奶油面包吃。我就松开了手，心里满是委屈。那时应该是五六岁，但说来奇怪，再之前的事，记忆里一片空白，是真真正正一件事都想不起来了，没来由地觉得自己好像少活了五年。 一年级也完全不记得了，二年级教4*5时，老师在台上画四行五列的圆，她画的很认真，一个个力求正圆，我看的很无聊，想着这老师真笨，一个乘法还要这么教？但现在想来，对孩童的教育确实要小心翼翼，切忌求快，小时候打下坚实基础是最重要的。三年级开始写周记和日记，在二层楼的某个教室里读《海滨小城》，趴在桌上看着书上的配图陷入瞎想。 四年级，分了两个班级，我在一个班风很宽松的班级里，开始还因为对另外一个班级的高压班风不屑一顾，但最后合并到五年级的时候，我是我们班的第一名却是整个班级的第九名。一直在舒适区里总是要付出代价的。其后两年，五年级我不太喜欢，语文教的太死板了，让我很压抑。六年级有小升初的考试，我考了整个小学生涯的最低成绩。这次打击是巨大的，是一种从自信心角度的降维打击。这直接决定着我初一时拼命三郎的状态。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[言不可及 | 回忆]]></title>
    <url>%2F%E8%A8%80%E4%B8%8D%E5%8F%AF%E5%8F%8A-%E5%9B%9E%E5%BF%86.html</url>
    <content type="text"><![CDATA[或许是因为信息过载吧，近来突然发现自己的短期记忆力下降地厉害。本来安慰自己长期记忆能力应该还蛮不错，准备顺手切过这个想法的时候，又突然愣住了。感觉像是回到了小学的某个午后，我背着那句英语。在汉语里对应的就是，时光如箭，岁月如梭。 箭和梭，时光和岁月，这好像是另外一个世界的词。我一直在当前的这个时间点上忙忙碌碌，过去又多久没浮现在我脑海里了呢。 我现在很想问自己，你还记得什么。我一直喜欢与朋友聊的一个话题是，你记忆的起点是什么？对我而言，学前班第一天是我记忆的开始。我记得自己抱着我妈的腿一直哭，我姐在旁边跟我说，妈妈要工作，你要懂事一点，我妈也告诉我，晚上回来时给你带奶油面包吃。我就松开了手，心里满是委屈。那时应该是五六岁，但说来奇怪，再之前的事，记忆里一片空白，是真真正正一件事都想不起来了，没来由地觉得自己好像少活了五年。 一年级也完全不记得了，二年级教4*5时，老师在台上画四行五列的圆，她画的很认真，一个个力求正圆，我看的很无聊，想着这老师真笨，一个乘法还要这么教？但现在想来，对孩童的教育确实要小心翼翼，切忌求快，小时候打下坚实基础是最重要的。三年级开始写周记和日记，在二层楼的某个教室里读《海滨小城》，趴在桌上看着书上的配图陷入瞎想。 四年级，分了两个班级，我在一个班风很宽松的班级里，开始还因为对另外一个班级的高压班风不屑一顾，但最后合并到五年级的时候，我是我们班的第一名却是整个班级的第九名。一直在舒适区里总是要付出代价的。其后两年，五年级我不太喜欢，语文教的太死板了，让我很压抑。 六年级有小升初的考试，我考了整个小学生涯的最低成绩。这次打击是巨大的，是一种从自信心角度的降维打击。这直接决定着我初一时拼命三郎的状态。 初一遇到了一位好老师，那时班风很严格。初二初三又平淡了起来。高一高二高三，中长无战事。大一大二，一言难尽，有喜有悲。大三大四大五，又是一段拼搏时光。 一片两片三四片,五六七八九十片。千片万片无数片,飞入梅梅花总不见。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[统计学习 | 书摘 | 赤裸裸的统计]]></title>
    <url>%2F%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0-%E4%B9%A6%E6%91%98-%E8%B5%A4%E8%A3%B8%E8%A3%B8%E7%9A%84%E7%BB%9F%E8%AE%A1.html</url>
    <content type="text"><![CDATA[书名《赤裸裸的统计学》，相当有意思的一本书。如果世界上每个人都能学一点统计学，那现在的喷子至少得少一半。 第一章 统计学的意义 描述统计学有自己的优势和劣势，直观但无法获取足够的细节 基尼系数，评价收入是否公平的工具，可以从不同纬度来评价。 对于描述统计学的过度依赖会导致误导性的结论或不良行为 抽样是一种非常重要的统计学方法 考生在错误题目上保持一致（理论上应分布）；难题准确率更高；错改对痕迹大于对改错，都应该受到关注。 回归分析能解决多变量问题（吸烟诱发癌症中的多因素分析） 对统计学家来说，量化xxxx的概率 这件事情本身，就是证据，有个说法，叫做“具有统计学意义的” 第二章 描述统计学 对大量数据进行归纳，是统计学的基本任务，这些描述性数据为我们提供一种可操作的、有意义的概括，但它也有被滥用的危险。 平均数能反映集中趋势，但是对远离中心区域的异常值有足够的敏感性，如果一组数中没有特别离谱的异常值，那么中位数和平均数会差不多 中位数的亲戚，四分位数，百分位数等等等，起到的作用和中位数类似 标准差用来衡量数据相对于平均值的分散程度，常见说法“一个标准差”，“两个标准差” 基于正态分布，我们知道，有68.2%的数值位于一个标准差范围之内，有95.4%在两个之内，有99.7%位于三个之内 评价美国“中产阶级”的收入应该看中位数（考虑通货膨胀之后的），也有应该关注25%和75%的数据 第三章 统计数字会撒谎 精确与准确是不同的，只有在准确的基础上， 精确才会有意义。 中位数和平均数各自有自己的弱点，这些弱点会被利用起来形成误导 说百分比的时候，最好对基数也有一些认知，不然也容易被误导。 没有数据就没法进行管理，但有了数据又会让行为都被数据驱动，造成不好的影响 把各项数据融合成一个数据时要特别考虑权重的因素，但是在进行权重判断时，判断和专断就是在一线之前 第四章 相关性 相关性是用标准差计算的，因此可以无视单位，且值在-1和 1之间 相关性和因果关系不是一回事儿 电影推荐机制：筛选与自己相关性高的用户。即找几个趣味跟你相同的人，让他们向你推荐一部（这样的话，像集体智慧编程中的内容） 第五章 概率与期望值 对分辨不出啤酒口味的人，有一半的人会放弃自己的拥泵选择另外一边的啤酒，这就是营销计谋 二项分布，可以算出某个数字特定概率，也可以算出某个值以下的概率。（低于40人喜欢某啤酒的几率多大） 概率能打破一些常识性的东西,保险是一种有趣的概率游戏呐 DNA检测只需要检测13个片段 大数定律，随着实验次数增加，结果接近期望值 期望值不一定意味着一切，因为它需要大数定律作为保证。如果向巴菲特那么有钱，那就可以按期望来投资了。 为什么不能对全国人民展开健康侦查？这可以用假阴性和假阳性来回答。 第六章 蒙提霍尔悖论 有意思，非常有意思，可以多看两遍]]></content>
      <tags>
        <tag>统计学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[书之遐思]]></title>
    <url>%2F%E4%B9%A6%E4%B9%8B%E9%81%90%E6%80%9D.html</url>
    <content type="text"><![CDATA[最近送了燕子几本书，是汪曾祺的四本散文集《人间有趣》《人间小暖》《人间有味》《人间草木》。 汪曾祺是我很喜欢的作家。他的风格，正如他自己所言，很像风俗画。这是一种平淡中见真章的高级写作技巧。初中阶段我很喜欢余秋雨，那些大气的磅礴的词，那些厚重的历史感，现在也喜欢，但终究是落了下乘。 书送出去了一本，我看着另外三本书。线装本，素雅的封面，有着幽默香味的纸张。突然想到，我必须得写写关于书的东西。 书，有横向上的和纵向上的关系，有空间和时间的联系。 在《春宵苦短，少女前进吧》中，那个古书市之神，一口就把所有的书本联系起来了，或者是作者有交集，再或者是人物有联系。冥冥中一张大网，丝线把所有的书籍串了起来。 我觉得这个情节特别传神，也特别适合作为这篇文章的行文主线。 毕竟，谈书有太多可谈之处了。围炉夜话，或抵足而眠，聊上几天几夜也不是问题。]]></content>
      <tags>
        <tag>读书</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶仿真 | 交通流仿真框架]]></title>
    <url>%2F%E9%9D%A2%E5%90%91%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E7%9A%84%E4%BA%A4%E9%80%9A%E6%B5%81%E4%BB%BF%E7%9C%9F%E6%A1%86%E6%9E%B6.html</url>
    <content type="text"><![CDATA[在开车过程中，驾驶员必须与不同的车辆系统进行交互，例如智能交通系统、高级驾驶员辅助系统(ADAS)和车内信息系统。这些系统影响司机的行为和他们处理交通状况的能力。网络化交通流模拟可以用于未来的研究和开发领域，这些领域可服务于汽车应用，典型例子包括:智能网联车辆系统的开发、驾驶员联合培训和驾驶员合作行为调查。 研究意义在驾驶模拟器中模拟周围车辆对驾驶员体验真实的交通状况至关重要。然而，模拟驾驶模拟器车辆前方或后方几英里处的交通状况是比较低效率的。本文提出了一种面向网络化驾驶模拟器环境的交通仿真框架的概念和结构。该框架使用户能够选择目标模拟器车辆，并仅在其附近生成其他交通参与者。 相关工作根据文献综述，在驾驶模拟器的交通仿真领域有很多研究工作。 学术界工作 Espie and Auberlet(2007)中提出了交通仿真的符号视觉模型。该模型允许每辆交通车辆观察其周围环境的各种要素，如其他交通车辆、路标、车道标志等。因此，每个交通对象都可以根据交通状况以及感知到的道路环境来调整自己的行为。 Bonakdarian等人(1998)提出了一种使用分层并发状态机(HCSM)的方法。该模型允许每辆交通车辆检查情况，从而在不同的决策之间自动切换，如车道跟踪或改变、目标跟踪、交通避碰、静态目标避碰等。 (Wright et al.(2002))提出了一种利用模糊逻辑方法进行交通仿真的模型。通过引入一定程度的不确定性，该模型模拟了典型人类驾驶员的行为。 为了减少计算量，在(Olstam(2003))中引入了交通车辆在指定候选区域仿真的概念。 Olstam (2005a))对过往交通模拟方法进行了一个比较全面的综述。产业界相关工作 来自DLR的SUMO是一个开放和灵活的套件，用于模拟包括道路车辆和行人在内的交通系统(Behrisch et al.(2011))。 来自dSPACE的ASM交通是一个由Simulink模型组成的框架来模拟道路交通(Amelunxen(2015))。该模型模拟了一辆试验车和多达15辆独立交通车辆，可用于交互式驾驶仿真。 IPG Automotive的IPGTraffic为驾驶模拟器提供模型来表示交通车辆之间的交互作用(Miquet et al.(2010))。可以创建无限数量的流量对象，其中可以为每个流量对象分别分配操作。 一些商业解决方案在驾驶模拟器车辆周围定义了一个模拟区域，在那里生成交通对象。VIRES Simulation Technology的v-TRAFFIC是一个交通和场景仿真引擎，可以与驾驶模拟器一起模拟周围的交通对象(Neumann-Cosel et al.， 2009)。基本上，可以创建的流量对象的数量没有限制。此外，v-TRAFFIC利用模拟区域/窗口概念来减少计算量 大多数商业解决方案的一个问题是，它们模拟整个地理区域。对于较宽的区域或较长的道路，许多交通车辆都必须进行仿真，尤其是在进行长时间驾驶模拟器实验时。这对算力的要求太高了。 交通流仿真框架总览与传统交通流仿真的区别在于，该框架中车辆对象中其中一辆或多辆是由人控制的，也就是说，交通车辆不仅要对彼此做出反应，还的对人工车辆做出反应。交通仿真框架接收每个参与驾驶模拟器的位置、方向和速度信息，输出仿真交通车辆的位置和方向。这些工作由模拟管理站处理，由它来管理交通参与者之间的数据转发和同步。交通仿真框架的输出也被转发到相关的驾驶模拟器。 仿真框架功能单元和数据接口整个仿真框架使用matlab/simulink开发，以下介绍了各个子模块输出，以及它们的关系. 初始化模块初始化功能表示用户和交通仿真框架之间的接口。框架用户可以在仿真会话开始和仿真运行时设置一些参数，如驾驶员的视线距离、交通密度等级等。下图显示了交通初始化功能及其输出 动态窗口生成模块为了减少运算成本，该框架不是模拟整个地理区域，而是开发了模型和方法来仅在模拟车辆的最近邻近区域生成交通车(Olstam(2005b))。在本工作中，我们考虑了一个多驱动模拟器的环境。交通车辆只会在选定的模拟车辆的邻近范围内进行模拟，即目标模拟器车辆。该邻域以目标模拟器车辆为中心，其运动速度相同;它被称为仿真窗口。为了避免交通车辆的突然出现和消失，仿真窗口的设计要求至少与目标仿真车辆前后的视线距离一样长 一般来说，道路设计中的视线距离被定义为驾驶员可以看到的道路长度(Hang et al.(2008))。与现实生活中的情况一样，三维环境中的道路几何形状是影响仿真驾驶员视程可用性的因素之一。为了简单起见，我们选择了一条没有十字路口和坡道的道路;这是一条在每个方向上都有两条车道的直线。动态窗口生成功能接收所有参与模拟器车辆的位置，一个指示目标模拟器车辆的信号，以及设定的视距。后两个信号从流量初始化函数接收。该功能不仅为目标模拟器车辆定义了邻域，而且还为每个参与模拟器车辆定义了邻域。在这种情况下，邻近区域称为移动窗口，下图为动态窗口生成函数的主要输入/输出信号 交通车辆只在仿真车辆所在的仿真窗口生成。考虑到不能使司机经历不切实际的交通行为。将目标仿真车与其他参与仿真车之间的距离与设定的视距进行连续比较。当仿真车的移动窗口开始与目标仿真车的仿真窗口重叠时，将目标仿真车的仿真窗口调整为将两辆仿真车包围起来，从而将两辆仿真车在所谓的整体仿真窗口内进行仿真。 但是，如果模拟器车辆驶离目标模拟器车辆，则会重置整个仿真窗口。在这种情况下，整个仿真窗口将与目标模拟器车辆的仿真窗口完全相同。也就是说，在只考虑目标模拟器车辆的情况下生成交通车辆。虽然只考虑了一个目标模拟器驾驶员进行交通仿真，但仿真窗口的动态调整使其他模拟器驾驶员都能体验到真实流畅的交通行为。然而，通过动态调整仿真窗口可能会出现一些关键情况。这些可能导致不切实际的交通行为，例如，交通车辆突然消失在模拟车辆附近。因此，需要一个观察者来检测。 交通观察者模块交通观察者检测关键情况，以防止生成不真实的交通行为。下图为交通观察者功能的主要输入/输出信号。该函数接收目标仿真车的信息，所有仿真车的运动窗口，交通车辆的位置，以及交通车辆的最大长度。该功能的主要任务是连续监测哪些交通车辆位于哪个移动窗口。针对不同的情况，将使用不同值的标志。例如，考虑下图所示的情况，其中目标模拟器车辆正在加速，整个仿真窗口正在重置。如果交通车辆偶然停留在非目标模拟器车辆的移动窗口内，这些车辆不得丢弃。 如果目标模拟器车辆停止，则升起旗子，表示前方不应生成任何交通车辆，除非迎面驶来的交通车辆。同样，如果目标车辆的行驶速度超过了预先定义的最高速度，则会升起标志，表示不应该从后面生成任何交通车辆。在所有情况下，交通观测器的标志都被转发给车辆生成/丢弃功能(稍后讨论)，以便它采取适当的行动防止不切实际的交通行为。 交通速度、密度控制模块该功能根据交通初始化功能那个提供的相应特征来调整交通速度和/或密度(见图9)。每个交通特征定义了三个层次:低、中、高。根据所需的速度和密度水平，该功能调整交通车辆的偏移速度和/或目标模拟器车辆前后每视距的交通车辆数量。此信息被转发到下面小节讨论的车辆生成/丢弃功能。 交通生成、舍弃模块车辆生成/丢弃功能的目标是让交通车辆只存在于仿真窗口内。该功能接收关于仿真窗口、所需的交通特性、当前交通车辆位置和最终关键情况的信息。下图为车辆产生/丢弃功能的输入/输出信号一般来说，后面生成的交通车辆要比目标模拟器车辆快，而前面生成的比较慢。具体地说，生成的交通车辆的速度等于目标模拟器车辆的速度+/-设置偏移速度。为了避免不真实的交通队列，该函数观察模拟交通车辆的当前位置，使其能够合理地分布在道路车道之间。另一方面，在同一方向上行驶速度比仿真车慢或快的交通车辆最终会走出仿真窗口。同样，当迎面而来的车辆通过模拟器车辆后面的可视距离时，在仿真窗口中就不存在迎面而来的车辆。在考虑前面讨论的交通观察者的最终紧急情况标志时，交通车辆一离开仿真窗口就被丢弃， 驾驶员模块驾驶员模型根据感知到的交通状况来控制交通车辆的行为。交通仿真有几种行为模型，如:车辆跟随、速度适应、变道、超车、从旁经过(passing)和迎面避让(Yu et al.(2013))。在这项工作中，驾驶员模型是通过汽车跟随行为模式实现的. 车辆跟随模型控制交通车辆相对于同一车道上前面车辆的行为(Wenga和Wu(2001))。当一辆交通车辆前面有一辆车辆在同一车道上行驶，以期望的或当前的速度行驶会导致碰撞时，交通车辆被认为是跟在后面的。文献中有各种各样的追车模型;他们使用不同的逻辑，可能做出不同的假设。例如，Gazis-Herman-Rothery模型表明，后面车辆的加速度与前面车辆的速度、速度差和空间车头时距成正比(Bevrani et al.(2012))。心理-物理的汽车跟踪模型使用阈值来表示跟随车辆和前面车辆之间的最小感知速度差异(Schulze和Fliess(1997))。安全-距离模型基于如下假设:从动车辆与前面车辆保持安全距离(Luo et al.(2011))。(Aycin and Benekohal(2014))对不同的汽车跟随模型进行了比较。为了简便起见，本文考虑了安全距离法。下图为采用汽车跟随行为模型的驾驶员模型的主要输入/输出信号。 驾驶员模型接收所有仿真交通车辆的当前位置和速度，以及仿真车辆的当前位置和速度。将车辆之间的距离与所需的安全距离进行比较。根据距离比较，交通车辆将处于两种状态之一:自由驾驶或跟随。在自由驾驶状态下的交通车辆是不受约束的。因此，驱动程序模型转发设置的速度。对于处于下一状态的交通车辆，驾驶员模型将车速调整为与前一辆车相等，以保持安全距离。虽然在本研究中实现了一个具有车辆跟随行为的驾驶员模型，但所开发的交通仿真框架可以扩展到其他行为模型，例如变道模型。下一节描述交通车辆模型。 交通模块交通车辆模型的研究主要有两种方法:宏观模型和微观模型。宏观模型从总体或平均的角度处理交通。它们需要相对简单的计算。然而，交通车辆的特性不能单独控制(Nakrachi和Popescu(2010))。相反，微观模型考虑单个车辆的行为。然而，每个模拟车辆都需要一个单独的模型(Jaworski et al.(2012))。这增加了计算工作量，特别是在需要大量车辆的情况下。 本文选择了微观模型。一方面，由于只在有限的区域内进行交通模拟，所以只需要少量的车辆就可以达到合理的交通密度。一方面，人类驾驶员参与模拟，他们通常会改变他们的行为。因此，有必要根据仿真车的位置和速度对每辆交通车辆进行单独的控制。用一个简单的一阶滞后因子和PI、PID控制器对每辆交通车辆进行建模。该模型基本上可以根据所需的车辆数量和可用的计算能力任意复制。 如果驾驶员模型没有检测到前面的车辆，则交通车辆模型接收设置的速度，并激活PIcontroller来保持该速度。如果前面的车辆被驾驶员模型检测到，则交通车辆模型接收被检测车辆的当前位置，并激活附加的pid控制器以保持安全距离。在这两种情况下，交通车辆模型都类似于一个典型的延迟速度行为，该行为被集成在一起来推断交通车辆的位置。通过适当的模型和控制器参数化，实现了流量控制。 未来工作 进一步发展交通模拟架构，以模拟每辆模拟车辆邻近的交通车辆。 其他驾驶模式，如换道将被添加。 将考虑到更为复杂的道路网。 所开发的交通仿真框架将集成在网络化驾驶仿真器环境中。因此，可以使用测试人员(即、交互式仿真。 比较采用或不采用该方法维持一定的交通密度时的计算量。 结合微观和宏观交通仿真的优势，(Ma et al.(2011))。]]></content>
      <tags>
        <tag>自动驾驶仿真</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018年终总结]]></title>
    <url>%2F2018%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93.html</url>
    <content type="text"><![CDATA[这一年有时候就想的很远，年中时，二十三岁，我想，再差七年我就三十了。男人三十跟女人三十一样，都是个敏感的年龄。为了而立之年的不窘迫，这一年就过得很紧迫。想做什么，能做什么，要做什么，这些问题我思考了一年。 这一年的经历整体上倒是简单的。写了一篇本科毕设，发表了一篇学术论文，送走又迎来了几波人，学了几门以后用以吃饭的技术，看了十几本书，去了十几二十次苏州，做了一个网站，凑了一百多篇博客。最重要的是，找到了一个“亦师亦友亦情人”般的她。彩色流到了灰色里，恐婚、独身主义之类想法烟消云散。]]></content>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[面试留档]]></title>
    <url>%2F%E9%9D%A2%E8%AF%95%E7%95%99%E6%A1%A3.html</url>
    <content type="text"><![CDATA[这是大佬面的面试记录，当时感觉不错，无奈最后挂了。 你发过什么paper？做了哪些工作？ 你对场景的划分是什么？ 对于具体内部场景的划分呢？用的什么方法？ 你们评价指标选用了哪几种？ 你认为在毕业之前，你主要的工作在哪几点？ 介绍你自己，以及你自己的项目 你感觉你项目中的比较特别的点是什么 第一，仿真平台在他们整体开发过程中的作用第二，阿里现在有在做物流车，以后会做商用车吗？之后补着问了物流车在阿里布局中的意义第三，阿里现在的感知系统走的那条路线，是多传感器融合？以激光雷达为主？还是以视觉为主]]></content>
  </entry>
  <entry>
    <title><![CDATA[言不可及 | 围炉夜话]]></title>
    <url>%2F%E8%A8%80%E4%B8%8D%E5%8F%AF%E5%8F%8A-%E5%9B%B4%E7%82%89%E5%A4%9C%E8%AF%9D.html</url>
    <content type="text"><![CDATA[这个火炉不知道是谁组起来的，好像就在一夜之间，它就出现在东头的避风处了。从山上搬下来的木柴，渐渐堆成了小山。谁家的旧沙发和长木凳被贡献了出来，在火炉边围了一圈。 一年中的360天，这儿都是没人的，大家都有自己的事情要忙。但到了年夜前后，晚上八点左右，总会有人离开空调、手机和WIFI，来到这里。 有星的天空下，寒冷的空气中，有红砖十几块，四方被垒成了一个简易的炉子。 火燃起来了。 木材很耐烧，被火焰吞噬后，起烟很少，只是生出黄色的火焰，之后慢慢转为红黄色，偶尔噼里啪啦地爆出火星。 围坐在火炉旁的人，有火星迸射时就往后躲躲，眯着眼，烤着火。他们想到了什么？宇宙中的恒星大冲撞？远古祖先围坐在火旁躲避猛兽？还是一年年来的欣喜、失望、释然。再或者是像我这样，任由思绪飞去，想法从宇宙跳到文明再跳到生活？还是想起武侠小说《神雕侠侣》中，郭襄初见杨过，是在风陵，总有相似。 火光映衬了脸庞，沉静的、厚重的表情忽明忽暗。这些我信任且心爱的人，被温馨和宁静拥抱着。 也会谈些家长里短的话，中年人骂美国，青年们叹社会。 没有疲惫和焦虑，一年又一年，围炉如昔，夜话如旧。 再过两年会怎样呢。就不想了。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[leetcode | 开篇杂谈]]></title>
    <url>%2Fleetcode-%E5%BC%80%E7%AF%87%E6%9D%82%E8%B0%88.html</url>
    <content type="text"><![CDATA[2019/09/27 Update 不要放弃。不要因为短期内做不出来，想不明白，就自暴自弃，这样会在一个低层次反复轮回，怎么都走不出来的。做题，总结，思考，循环迭代。 2019/09/15 Update 其实很多编程题，或者说面试题都有自己的套路。关键是要总结模式。另外，我发现在实际工作中，往往不会用到特别复杂的数据结构，但这并不能说明刷题是无用的。实际上，它能拔高一个人的实现能力。 2019/05/24 Update 暑期实习找下来，感觉自己知识面和特定场景的表达能力已无大问题。但基础的编程能力阻碍了我更进一步，很多相关工作都是需要扎实的编程能力作为基本功的。从初稿到现在九个月，我的编程能力有了一些长进，但还是没有质的改变？没有。相关书籍看了很多，但是始终缺少一种“神启”。必须要多思考，多实践，多参与。这样秋招才不会挂掉。 最近一直在关注的网站，剑指offer相关：https://github.com/gatieme/CodingInterviews一本编程刷题总结书：https://algorithm.yuanbin.me/zh-hans/ 另外，最近而在核心关注相关网站：牛客网，掘金等 2018.12.24 初稿接近两年，该看的书也算看的不少了。就C++而言，本科上了一们C++相关的课程，用《菜鸟教程C++》快速过了两遍知识点，阅读学习了《essential C++》《C++程序设计-北京大学》，看过小部分《C++ Primer Plus》就Python而言，看的更多一些，包括《廖雪峰Python》《learn python in hard way》、《Python cookbook》、《Python核心编程》、《改善Python程序质量的91个建议》就java而言，主要是围绕《算法第四版》掌握了一些java代码的初级书写方式算法类主要看的是《算法第四版》、《集体智慧编程|Python算法应用》数据结构主要看的是《基于C#的数据结构》、《数据结构与算法 Python语言描述》、《邓俊辉数据结构》 但是我的学习犯了一个很大的错误，我只想速成，却在某种程度上忽略了最基础的编程能力，coding能力。总的来说，是时候刷leetcode了。 答案网站会考虑用：https://fisherlei.blogspot.com/刷题网站考虑本地化，会选择：https://leetcode-cn.com/problems/add-two-numbers/]]></content>
      <tags>
        <tag>编程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[亦师亦友亦情人]]></title>
    <url>%2F%E4%BA%A6%E5%B8%88%E4%BA%A6%E5%8F%8B%E4%BA%A6%E6%83%85%E4%BA%BA.html</url>
    <content type="text"><![CDATA[夫人找的好，烦恼会很少。 那什么是找的好呢，在我看来，好的关系从某个角度来看，应该是亦师亦友亦情人的，三位一体的模式。亦师，携手共进的两人，应该互相有自己可为师的特质。它们可以是性格，可以是思考的方式，或者是知识、生活经验等等。不能从对方身上找到可学习之处的感情是岌岌可危的，它们不能有助于形成好的良性循环。如果把好的感情模式抽象为“波浪式前进，螺旋式上升”，那么波浪中那一直前进的方向，螺旋中一直往上的线条，就是这个互为彼师的过程。 亦友，此处的朋友，指的是不掺杂情爱关系的友。见过很多情侣，在暧昧期相处非常融洽，正式确定关系之后，反而失去了好好相处的能力。这其中一个重要原因就是，友情向爱情转换的过于彻底，完全抛去了朋友的模式，在最深的亲密关系之间沉浮，于是迷失了自我。 “男朋友”“女朋友”，后面的朋友二字从来都不是摆设，即使拥有了亲密关系，两人之间也应该保持一定的距离。另外，情侣之间要始终发展彼此的共同爱好，寻找到作为朋友时被凝聚起来的那个点。从朋友到情侣，确实可以变得无话不谈，这是深度广度的延伸。但谈话的质量，谈话的频率，谈话的那个基本盘，还是要两人之间的朋友特质来维持。 亦情人，随着亲密关系的发展，要警惕恋爱关系变成亲人关系。互相对比彼此太好，很容易就走了误区，这其中的典型是，女生扮演了妈妈的角色，或者男生絮絮叨叨，成了一个所谓的“舔狗”形象。恋爱终究是浪漫的，让人想起来心中甜蜜的。它是一种美妙的情愫，是亲情友情之外的东西。如果在相处过程中逐渐失去了欲望，失去了激情，失去了悸动。那很快就会失去一切。 一个人拥有好的特质并不少见，但两个人彼此在找另一个人，两个愿念互相寻找另一个愿念，运气好的话可以等缘分，如果相信命在手中，则可不封闭自己的内心，多与人相交。但这个世界终究脱离不了概率的支配，如果永远找不到，你可以改造自己眼前的爱人。 但不管怎样，我已经找到了。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶 | 感知篇（下）]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6-%E6%84%9F%E7%9F%A5%E7%AF%87%EF%BC%88%E4%B8%8B%EF%BC%89.html</url>
    <content type="text"><![CDATA[自动驾驶感知篇(上)自动驾驶汽车环境感知系统中的视觉系统通常包括道路检测和道路目标检测。道路检测包括车道线标记检测和路面检测两大类。道路目标检测主要包括车辆检测和行人检测。就方法而论，包括传统的基于人工提取的特征的方法。也包括最近发展起来的深度学习方法。 车道线标志检测车道线标记检测是识别道路上的车道线标记，并根据检测到的线估计车辆的姿态。这些信息可以作为车辆位置反馈给车辆控制系统。 由于各种各样的不确定性在现实交通道路状况和道路奇点（singularities）这仍然是一个具有挑战性的问题, 这其中可能包括来自汽车和树木的阴影,光照条件的变化,破损的路面标志,和其他标记,如方向箭头,警示文字和斑马线等。 大多数车道线检测算法都有三个共同的步骤: 车道线特征提取，可通过边缘检测或颜色检测，或通过SVM等学习算法或boost分类算法; 将像素拟合到不同的模型中，如直线、抛物线、双曲线，甚至锯齿线; 基于拟合模型估计车辆姿态。在车辆位姿估计前还可能存在一个步骤，即利用连续性，基于当前帧中的检测结果通过卡尔曼滤波和粒子滤波等滤波机制指导下一步搜索。 车道线特征提取其是识别属于车道线标记的像素，剔除非车道线标记像素。文献中的大多数方法都是基于以下观察，即车道标记与道路路面对比较大。 基于梯度的算法。有局部对称阈值的Sobel边缘检测器、自适应阈值化和梯度增强转换等。但是这些算法对噪声敏感，在杂波和阴影中会出现大量的离群值。此外，这些算法视角局限于局部视图，忽略了车道线标记(细长明亮结构)的形状特征。 基于图像梯度的一些对噪声不敏感的高级变体例如，可控滤波器是基于二维高斯函数的二阶导数的，脊检测器基于一阶导数的张量场构造的。当梯度的方向与假定的车道线方向偏离太多时，这两种方法都可以得到梯度方向的响应，有助于去除离群值。 另一组算法试图从不同的角度检测车道线标记，沿图像行搜索图像低-高-低强度模式。这种类型最常见的算法是box filter(也称为top-hat filter)或其他形式的变体，它们比上述算法更可靠。简而言之，这种算法用某种形式的阶跃滤波器对图像进行卷积，选择高响应像素作为每一行图像的车道候选线。这通常能够提取车道线标记的中轴而不是边缘。为了使这种算法能够正常工作，必须根据图像中车道线标记宽度精确地调整其尺度或步长，以防止过不足滤波。否则，原始图像不得不通过反向透视映射(IPM)进行转换，以补偿相机的透视效果。因此，这也需要一个很好的相机俯仰角(或视角)的估计。同时，需要进行插值来弥补IPM图像中缺失的像素。随着观测距离的增大，插值越来越不准确。为了解决这一问题，有学者提供了一种自适应机制，可以在原有宽度测量的基础上在线更新步长。 上述车道线提取算法的另一个常见缺点是无法将车道线标记与其他道路标记(如警示信文字等)区分开来。这些道路标记有时会导致严重的估计错误。 模型拟合它是从车道线检测结果中提取车道的高级表示的过程。根据所使用的模型，车辆姿态可以从拟合模型中得到，该模型还可用于指导下一帧车道线检测，以提高连续性。 文献中提出过多种道路模型。包括参数化模型和半参数化模型，后者主要由B-Snake、Cubic、active contours等样条构成。这些模型的优点是更加灵活，可以覆盖各种路面形状。然而，它们的计算要求更高，也更复杂。另外，它们对控制点选择要求比较高。由于没有单一的模型可以覆盖所有类型的道路形状，因此也需要考虑在线选型。 时间集成步骤(time intergration step)是利用以前的信息来指导当前图像中的搜索。它增强了连续图像之间的平滑性和连续性。可以提高车辆姿态估计的精度，防止错误检测故障的发生。 大多数提出的方法是基于统计的。一般用卡尔曼滤波或粒子滤波。粒子滤波更加可靠，尤其是在车辆振动或非平坦路面引起的连续图像之间的突变情况下。 一般来说，粒子滤波可以直接应用到图像(或像素)、车道线模型和车辆。 每个粒子都包含图像中控制点的位置，用于三次样条拟合。 每个粒子可以代表车道线模型参数，参数的变化被简单地假设为服从高斯分布。 每个粒子可以在代表在真实世界坐标系中车辆的位置，再一次，车辆的运动被简单地假设为高斯函数。 由于连续图像之间的变化纯粹是由车辆运动引起的，有学者提供了一种更加直观直观的方法，将粒子滤波应用于运动车辆，并考虑其显式动力学模型。 基于车道线模型估计车辆的横向位置和运动方向要将这些信息从2D图像恢复到3D现实世界，需要深度信息。在大多数方法中，我们假设相机的高度不变，路面平坦，深度就是由相机的视角或俯仰角度。IPM就是一个典型的例子，但它对俯仰角的估计噪声非常敏感，对俯仰角的估计噪声影响很大。因此，在视差图像能够有效、准确地构造的前提下，采用立体摄像机进行深度恢复是一种更加可靠、直接的方法。但是路面的低纹理对获取视差图像提出了处理挑战。这也是立体视觉在这一研究领域没有得到广泛应用的主要原因。 有学者使用密集映射来获取视差，也有采用极大后验-马尔可夫随机场(MAP-MRF)方法来获取视差。然而，这两种方法都不是很有效，而且容易受到平滑噪声的影响。为了缓解这些不足，也有人提出了一种基于车道线模型的对应匹配算法。 道路表面检测路面检测告诉自动驾驶汽车在自由空间的位置，确定可行驶区域和不可行驶区域。它是在线路径规划和控制的操作前提。一般来说，这些方法可以分为三类:基于特征的检测、基于特征的学习和深度学习。 基于特征的检测基于特征的检测首先根据一些预定义的特征，如HOG特征识别原始图像中的特征点或特征块（patches）。在立体图像的上下文语境中，这些特征可能指的是视差。在识别特征的基础上，可以采用模型拟合和分割两种算法对路面进行识别。 有学者采用一种基于立体视差测量的通用b样条模型拟合算法来表示路面。这种方法舍弃了平坦路面假设，设计了卡尔曼滤波器来平滑拟合结果。 也有学者没有使用模型拟合，而是将路面检测问题转化为CRF优化问题。该作者通过把目标类标注和稠密立体重构结合到公式中，并对这两项任务进行联合优化（优化后改善了原先单任务的性能），构造了CRF能量函数。 基于特征的学习基于特征学习的方法还可以提取一组与像素或图像patch相关的特征，然后训练基于这些特征的分类器为像素或patch分配道路或非道路标签。 有作者提出了一种学习上下文信息的检测算法，它可以方便地对目标图像patch进行分类。对于每一个图像patch，除了自身，它还与另外两种类型的辅助图像patch相关联:一种是根据目标图像patch周围的预定义模式得到的上下文patch，另一种是定位在图像底部的道路patch。从这三种类型的patch中提取出三个特征向量，然后连接成一个单独的最终向量。将矢量输入多层感知器神经网络进行分类。但是，这种方法并不能考虑全局信息，对于道路patch的选择也存在争议，因为它是基于一个假设：即图像的底部始终是道路区域。 Tobias等提出了一种结合场景空间布局的两层检测框架，用于处理各种复杂的情况。第一层由道路边界、道路标志和车道标志三个基本分类器组成。对这三个分类器分别进行训练，生成三个置信度图。之后，结合环境全局属性的空间射线特征是基于置信度图映射生成的。最后，GentleBoost分类器进对基于空间射线的特征进行了训练 有分类器采用共同促进算法，将基于基元 (filter-bank, color, HoG, location)和disptons (U-disptons, V-disptons)的特征图合并在一起。然而，这些特征检测或特征学习分类下的算法在不稳定的驾驶环境下都不够鲁棒。性能仍然受到车道线标记检测部分中列出的所有噪声因素的影响。 深度学习有学者将图像patch作为卷积神经网络CNN的输入，CNN将图像patch的中心点划分为道路和非道路。作者演示了如何将patch的空间信息整合到CNN中，使空间先验在表象之上学习（ enable the learning of spatial priors on top of appearances）。 与这两种方法不同，Mohan提出了一种将CNN与深度去卷积神经网络相结合的新型架构。该架构还用能于多块训练，使得从场景中有效学习空间先验成为可能。 深度学习方法虽然性能优良，但其缺点也非常明显:计算量大、存储量大、处理时间长、不可追溯、地面真值标注过程繁琐。有学者提出了一种新的CNN结构，目的是在分割质量和运行时间之间取得良好的平衡。通过集成一个CNN和深度反卷积网络，专门设计了反卷积端类和过滤器之间的映射减少了运行时间。它以原分辨率的整幅图像作为网络输入，而不是图像patch，实现了大约50ms的运行时间。 为了缓解ground truth标注的困难，Laddha等提出了map-supervised deep learning pipeline。该方法根据车辆位置、航向、摄像机参数、GPS、OpenStreetMap数据自动进行地面真值标注。利用像素外观特征进一步降低标注噪声。基于这些机器生成的地面真值标注对CNN进行了训练。 道路目标检测道路目标检测主要涉及车辆和行人目标类。由于对象的类型、外观、形状和尺寸的不同，传统方法往往不够健壮，对于自动驾驶汽车的应用也不够普遍。如KITTI数据库所列，对于汽车、行人和自行车的检测，所有领先的方法都是基于深度学习方案。与传统的基于特征的学习方法相比，深度学习在障碍物检测领域表现出了优越的性能。因此，在本节中，我们将只回顾基于深度学习的方法 通常，深度学习方法的一般流程是在输入图像周围生成一组边界框，然后通过CNN网络发送每个边界框，确定分类(包括背景)，并微调边框位置。边界框建议的常用方法是选择性搜索Selective Search和边缘框EdgeBoxes。 Faster-RCNN是第一个将边界框的生成和检测统一在同一个网络下的深度学习方案，实现了端到端的训练过程。该网络主要由两个部分组成:提议层和检测层，这两个网络共享了大部分CNN层。建议层的输出是建议的边界框，作为检测网络的输入，其实用于识别和边界框的微调。 RCNN在训练过程中虽然速度较快，但并没有固定提案框的大小，因此其对对象的尺度来说是不变的，当遇到对象尺度变化较大的具有挑战性的场景时，其在小目标检测方面的性能并不是很理想。主要原因是对于原始图像中的小目标，经过几层卷积和池化后，最后一层的剩余信息太少，无法很好的检测。这个问题可以通过增大输入图像的大小或者使用一组不同尺度大小的图像作为输入来解决，但这也会增加计算时间和内存需求。 为了解决尺寸问题，Yang等提出了一个尺度相关地池(scale-dependent pooling, SDP)网络。根据边界框的高度对于较小的建议边界框的特征向量，不是只从网络的最后一个卷积层池化特征向量，而是，在较早的卷积层中池化。在不同的层分别进行检测和边界框微调。为了提高效率，作者还训练了一种基于MLP的串联拒绝分类器(CRC)来过滤每一层的一些边界。这种方法没有一致的标准，不能端到端进行培训。边界框的提出是基于Edgebox的。 也有作者提出了一个统一的多尺度深度学习网络(MS-CNN)，该网络将原始图像作为唯一输入，把相关边界框和对象类别作为输出。与Faster-RCNN类似，该网络也结合了建议层和检测层。与SDP网络类似，MS-CNN中的提案层池化了来自不同层的特征，以生成边界框。然后将所有这些建议传递到同一个检测网络，用于对象识别和边界框微调。上述算法的目标都是检测二维图像中的物体，在三维世界中没有输出信息。有学者进一步根据物体的二维外观、三维姿态和三维形状将其划分为子类别，训练深度学习网络从二维图像中恢复二维和三维信息。提出的网络称为Sub-CNN，由两个CNN网络组成，subcategory-aware CNN和object detection CNN。感知子类的CNN生成到目标检测网络的提案包围框。 与fast - rcnn和MS-CNN不同，这两个网络不共享任何CNN层。Sub-CNN由于有两个独立的CNN网络，所以运行时间更长(2秒vs. 0.4秒)，但是它能够显示出对自动驾驶汽车更有用的3D世界信息。文献中也有一些方法可以减少处理时间，使深度学习方法达到(近)实时的效果，如YOLO (You Only Look one) ， SSD (Single Shot Detection)。它们能够以每秒30帧以上的速度处理图像，这取决于网络的大小。但是，这种快速的性能是以牺牲检测速率为代价的。随着硬件和软件技术的进一步发展，可以在运行时间和检测率之间取得更好的平衡。 融合不同的传感器有不同的优点和缺点。为了充分利用各传感器的优点，需要传感器融合技术。 激光雷达能够产生三维测量值，它不受环境光照的影响，但提供的物体外观信息很少;相反，相机能够提供丰富的外观数据，提供更多关于物体的细节，但在不同的光照条件下，其性能并不一致;此外，相机并不隐式地提供3D信息。 目前应用于激光雷达和相机融合的技术，根据融合过程的位置大致可以分为两大类，即特征级融合(早期、集中式融合)和决策级融合(后期、分布式融合)。基于融合机制，可分为基于MRF/CRF、基于概率和基于深度学习的融合机制三大类。 基于MRF/CRF的融合。点云中的每个点在图像中都有一个相关联的像素，这个像素是基于激光雷达设备和相机之间的转换确定的。这样图像像素的颜色强度就可以赋值给该点。通过将点云转换为所有点都是图节点的图，设计了一个MRF。能量最小化函数模拟了点的强度变化与深度变化之间的关系。这种方法只利用图像的强度信息，而忽略了其余的图像线索. 肖等人也提出了一种用于传感器融合的随机场方法，但其拥有不同的能量函数。该能量函数由三项组成，其中两项与常规MRF项(值项和平滑项)相同。第三项是基于激光点的。预训练分类器首先对激光点进行分类，判断它们是道路点还是非道路点。然后将这些点投影到图像平面上，对应的像素以相同的概率分配到这些点上。第三项来自这些概率。 也有作者没有直接使用稀疏激光点，而是通过对点进行上采样，从点云重构出稠密深度图。基于原始图像和稠密深度图提取两组HOG(梯度直方图金字塔，可以基于HOG金字塔通过学习多尺度形变部分模型（multi scale deformable part model）进行行人检测。 Premebida等人为传感器融合提供了一种分布式方法。摄像机数据用于训练AdaBoost分类器，激光雷达数据用于训练GMM(高斯混合模型)分类器。之后作者设计了一个基于每个分类器计算的后验概率得到的决策规则，最终对目标进行分类。 基于深度学习的传感器融合方案通常需要稠密的深度图或其变体，这意味着需要将点云转换为深度图。 方法之一是图像和深度图可以经过两个独立的CNN网络，只有最后一层的特征向量被连接在一起，共同完成最终的检测任务。 方法之二是点云首先被转换成三通道HHA地图(包含水平视差、离地高度和角度)。HHA和RGB(红绿蓝通道)图像也经过了两个不同的CNN网络，但是作者发现融合应该在CNN的早期到中期进行，而不是在最后一层。 综上所述，为了更好地利用激光雷达和摄像机之间的传感器融合，实现对自动驾驶车辆的鲁棒环境感知结果，是十分必要的。然而，目前的融合机制还处于初级阶段，不能充分利用这两个传感器的所有信息。另外那些新开发的用于目标检测的深度学习算法还没有扩展到在融合的摄像机和激光雷达信息上运行，这种扩展可以显著提高单个传感器数据处理的性能。]]></content>
      <tags>
        <tag>总结</tag>
        <tag>自动驾驶</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶 | 感知篇（上）]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6-%E6%84%9F%E7%9F%A5%E7%AF%87.html</url>
    <content type="text"><![CDATA[感知是指一个自主系统从环境中收集信息和提取相关知识的能力。环境感知是指发展对环境的上下文理解，如障碍物的位置、路标的检测、数据的语义分类等。 定位是指机器人根据环境确定其位置的能力。环境感知是实现自动驾驶汽车的一项基本功能，它为汽车提供有关驾驶环境的关键信息，包括自由行驶区域和周围障碍物的位置、速度，甚至是对其未来状态的预测。基于所实现的传感器，环境感知任务可以通过LIDARs、相机或这两种设备之间的融合来处理。其他一些传统方法也可能涉及使用短距离/远程雷达和超声波传感器。 无论传感器是如何实现的，感知任务的两个关键元素是(i)路面提取和(ii)道路目标检测 LIDAR激光雷达是一种光探测和测距装置，每秒以设定的模式发送出去数以百万计的光脉冲。通过它的旋转轴，它能够创建一个动态的、三维的环境地图。激光雷达是目前大多数自动驾驶车辆目标检测的核心技术。 在真实场景中，激光雷达返回的点从来都不是完美的。激光雷达点云处理的难点在于扫描点稀疏、缺失点和无组织模式（unorganized patterns)。周边环境也增加了挑战，因为反射回来的表面可能是任意和不稳定的。有时，甚至人类都很难从扫描点的可视化中感知有用的信息。 representation表示激光雷达输出的是物体反射回来的稀疏三维点，每个点代表物体相对于激光雷达的三维表面位置。通常使用三种主要的点表示形式，即点云、特征和网格。 基于点云的方法直接使用原始传感器数据进行进一步处理。这种方法提供了更好的环境表示，但代价是增加了处理时间和降低了内存效率。为了缓解这种情况，通常对原始点云应用基于体素的过滤机制（voxel-based filtering mechanism）来减少点的数量。 基于特征的方法首先从点云中提取参数特征，然后利用提取的特征表示环境。常用的特征包括直线和曲面。 这种方法内存效率最高，但它通常过于抽象，其准确性取决于点云的性质，因为并不是所有的环境特性都可以通过特征达到很好地近似。 基于网格的方法将空间离散成小网格，每个小网格都填充了来自点云的信息，从而建立了一个点邻域（point neighborhood）。这种方法是内存高效的，且不依赖于预定义的特性。然而，确定离散化的大小并不容易。常用自适应八叉树来指导粗网格到细网格的分割。 分割算法对于三维点云信息的感知，通常分为两个步骤:分割和分类。有些方法可能包括第三步，时间统整（intergation），以提高准确性和一致性。 点云分割是把点聚类到多个同质组的过程,而分类识别是确定各分割集群的类别,例如,自行车,汽车,行人,路面,等等。 三维点云分割的算法可以分为五个分类:基于边缘的,基于区域的，基于属性的,基于模型的,和基于图的。在此基础上，还有一种基于深度学习算法的分类方法。 基于边缘的方法主要适用于具有较强人工边缘特征的对象，如道路路缘。但是它并不是一种有效的自然场景检测方法，而且容易受到噪声的影响。为了提高鲁棒性，可以计算主点的海拔梯度（ elevation gradients of principal points ），并采用梯度滤波器滤除波动点。 基于区域的方法利用区域增长机制，根据欧几里得距离或表面法线等标准对邻域点进行聚类。在大多数情况下，这个过程从生成一些种子点开始，然后根据预定义的标准从这些点生成区域。与基于边缘的方法相比，该方法更具有通用性和实用性。同时由于考虑了邻域信息，避免了局部视图问题。 当前提出了一种基于扫描线的局部最低点识别算法，并以这些点为种子，根据坡度和高程生长为地面段。另外，学术界还提出了一种基于点邻域平整度和法向量的特征，用于树木和非平面区域的生长。 为了提高算法的鲁棒性，学术界提出了一种自适应欧几里得聚类算法。另外还有一种根据每束激光连续扫描环的距离差推导出来的不均匀属性作为生长准则，它更有能力检测小障碍物，对地面坡度、车辆俯仰和滚动的存在不那么敏感。 在文献中，一些研究人员还研究了如何通过更多的启发法来有效地生成种子点，从而使它们能够引导更有效和更健壮的区域生长过程。 Vieira等人在选择种子点之前，首先根据曲率将尖锐边缘的点去掉，因为好的种子点通常是在区域内部，而不是在区域边界。 也有学者首先每个点的法线进行估计,然后选择残差最小的点作为初始种子点。进一步的研究选择的局部平面（local plane）,而不是法线,每一点是提取后和相应的计算之后得到分数,种子的选择是基于分数。 多阶段种子生成方法。利用共面点的相干性和邻近性，将非空体按邻近性分组，这些片段作为下一个分割过程的种子。最后根据平面连接和交叉点合并邻域共面点段。 基于区域的分割方法在文献中得到了广泛的应用，但分割结果过于依赖于种子点的选择。选择错误的点可能导致分割不充分和效率低下，种子点的不同选择通常导致不同的分割。此外，所有基于区域的方法都需要大量的计算资源，既耗费时间又耗费内存。 基于模型的方法也称为参数化方法，首先将这些点拟合到预定义的模型中。这些模型，有平面、球面、圆锥和圆柱，通常可以用一种封闭的数学形式有效而紧凑地表示。这些特定模型的离群值被聚集成一个部分。 大多数基于模型的方法都是用来分割地平面的。文献中应用最广泛的两种模型拟合算法是RANSAC (Random Sample Consensus)和HT (Hough Transform)基于模型的方法与这两种算法具有相同的优缺点。 RANSAC算法能实现对点云中的地平面进行分割。然而，对于非平面的路面，如起伏的道路、上坡、下坡、驼峰等，这种模型拟合方法是不够的。为了减少这些缺陷，Oniga等人将平面拟合成二次型，而不是基于RANSAC的平面形式。然后设计了一个区域生长过程来优化二次平面。 Asvadi等人将车辆前方空间划分为若干等距(5 m)条，基于最小二乘法进行拟合，每条条对应一个平面。学者们还提出了一种基于分段的地表估计方法，该方法由切片、gating、平面拟合和验证四个步骤组成。 分割步骤将车辆前面的空间分割成激光雷达点数量大致相等的区域，而门控步骤基于四分位间距法剔除每个区域的离群值。然后对每个切片区域进行RANSAC平面拟合，找到所有的分段平面，最后通过检查连续平面之间的法向和高度差进行验证。 HT模型拟合方法也可以在文献中找到，适用于不同的模型，如平面、柱体、球体。可以将三维HT应用于点水平和法向量识别点云中的平面结构，也可以用其来检测点云中的柱面。与传统的需要5维霍夫空间的方法相比，该方法降低了时间和空间复杂度。 如上所述，基于模型的平面提取方法在文献中已有较好的建立。通常情况下，这些方法是分割的第一步，用于去除底面（ground plane），而其他方法，如区域增长，是用于聚类剩下的点。 然而，基于模型的方法的主要缺点是它没有考虑到邻居和上下文信息，因此它可能会强制随机点进入一个特定的模型。此外，分割对点云密度、位置精度和噪声都很敏感。 基于属性的方法通常采用两步方法，第一步是计算每个点的属性，第二步是根据相关属性对点进行聚类。，这组方法允许更多的线索被整合到顶部空间信息的中。然而，分割的成功与否也很大程度上取决于派生的隐藏属性。 基于属性的方法首先计算每个点的最优邻域大小。在主成分分析的基础上，考虑了相邻信息的影响，提出了基于主成分分析的几何特征。然后利用LIBSVM将几何特征作为输入，为每个点分配三种类型的属性(线性、平面和球面)。最后，设计分割规则，根据相关属性对点进行聚类。 基于图的方法将点云转换为图结构，每个点作为顶点/节点，相邻点之间的连接作为图边缘。 基于图的方法在图像语义分割中具有很强的优势，它可以将局部和全局的线索、邻域信息、上下文、平滑度等自定义特征融入到图像的表达中，对整个图像的分割进行全局优化。 图像分割中的图形切割方法，在点云的内容上，通常采用CRF(条件随机场)或MRF(马尔可夫随机场)的形式，优化通常采用最小-最大流切割算法或其变体。 在最近的研究中，学者首先创建了k近邻图，之后根据背景补偿函数对每个节点进行赋值，增加了硬前景约束，并通过mincut实现了前景和背景分割。 也有学者采用基于图形的方法，利用基于局部凹凸度度量的统一通用准则分割地面和物体。 与其他方法相比，基于图的方法由于具有上述的全局特征，在处理复杂场景时具有更强的鲁棒性。这些方法的主要问题是通常需要更多的时间来计算，特别是对于优化部分。 基于机器学习的算法 随着计算机视觉中机器学习算法的发展，一些研究者也在研究如何将通常应用于二维图像的机器学习架构应用到三维点云中进行分割和检测。可以通过随机森林分类器，将每个点分类为一个语义类。 基于轻量级的三维特征对分类器进行了训练。然后，通过检测语义结构的差异，对个体立面进行分类。为了提高存储效率和分割精度，现在常用一种基于三维卷积的八叉树网络。 它利用点云的稀疏性，集中内存分配和计算，以便在不影响分辨率的情况下实现更深层次的网络。该算法是近年来发展起来的，存在一些关键的实际问题，难以实现实时操作。然而，它们确实为点云分割问题提供了新的见解。如检测算法所示，它们可以提供一个统一的管道，将分割和检测过程结合起来。 检测算法分割完成后，每个簇需要被分类到不同的对象中。每个簇中嵌入的信息主要来自空间关系和点的激光雷达强度，在目标识别中应用非常有限。因此，大多数算法将利用计算机视觉上的检测问题，通过一些融合机制，待会展示。然而，也有一些其他的研究工作在探索从点云数据进行目标识别的可能性 其中一种算法是对于每个线段，生成所有表面法向量高度值的直方图，如果最后一个线段包含最多的投票，则将该线段分类为ground。这种算法不能区分地面上的物体。 Zhang等提出了一种基于SVM (Support Vector Machine, Support Vector Machine)的分类器，将集群划分为地面、植被、建筑、电线和车辆。共推导出13个特征作为SVM分类器的输入。但是，该分类器仍然非常粗糙，对于自动驾驶汽车的应用还不够实用。 与前面提到的机器学习算法相比，最近开发的机器学习算法更加通用和健壮，因为它们能够识别更多类别的对象。VoxNet实现了一个三维卷积神经网络可以对三维点云进行分类(占用网格/体积表示)。三维卷积深度信念网络，从原始CAD数据中学习复杂三维形状在不同对象类别和任意姿态下的分布。 但是对于三维网络，计算和内存需求随着三维点云的输入尺寸的增大而增大。上述方法只能在303个体素的阶数下操作，能够充分利用三维物体丰富细致的几何特征。如分割部分所述，八叉树网络是处理三维点云的一种更有效的架构。其将输入集群的分辨率从$30^3$阶提高到$256^3$阶。]]></content>
      <tags>
        <tag>总结</tag>
        <tag>自动驾驶</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶仿真系统设计框架]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E4%BB%BF%E7%9C%9F%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E6%A1%86%E6%9E%B6.html</url>
    <content type="text"><![CDATA[ITS和AHS是复杂的系统，人、车、环境等各种因素相互作用，其中的信息是多源、异构、非结构化的。这个系统需要智能汽车的参与。考虑成本问题，仿真就成为开发过程中一个很重要的阶段。 对构建自动驾驶仿真来说，可以重点关注以下几项技术：VR技术和多代理建模技术，后者的技术框架中还包括对建模技术的优化。 概念介绍在自动驾驶仿真系统中，Agent模型是指复杂系统中个体(实体)模型的抽象模型。这里有以下几个要点 每个独立的仿真模块都是一个agent 环境。Agent在虚拟环境中实现感知和行为 感知与行动。Agent通过内部传感器感知环境和其他Agent的信息，通过actor对环境和其他Agent起作用。智能汽车模型中有感知模块和运动模块来实现这一工作。 事件。微观行为如追车、超车是系统中的事件。 目标。交互结果是去验证交通安全。 规则和属性。实体代理(如智能车辆)定义了反映实体行为的规则和属性。实体代理根据感知信息改变其规则和行为。 协调。多控制器协调可以实现不同的车辆算法。 交互。仿真系统中的交互作用可以反映车辆与环境的交互作用。 合作。实体代理(智能车辆和周边车辆)需要协同实现交通行为。 代码生成。仿真系统所需的项目文件、源代码文件、头文件应通过配置添加。 智能仿真系统是在Visual Studio c++中构建的，智能车辆模型是在Matlab/Simulink中开发的。系统整体而言是分布式仿真系统。 系统需求 系统应该能够有效模拟交通环境下智能车辆的控制过程，验证微观交通模型和智能车辆控制算法的合理性和正确性。 通过三维可视化，用户可以清晰地观察整个仿真过程。系统界面简单，人机交互方便，仿真过程和可视化可由用户控制。 系统应具有可扩展性、灵活性、可扩展性。采用分散设计范式实现复杂的交通模型和仿真。这些算法可以很容易地添加、删除或更改。 基于多智能体的自动驾驶仿真框架 硬件、网络和操作系统层提供了系统运行的支持技术，其中包括可视化呈现的子模块系统(即图形加速器硬件和OpenGL、DirectX等软件开发库)、车辆动态模型和控制模型子系统(Matlab/Simulink)、分布式网络通信环境、操作系统和存储数字高程模型(DEM)的模型数据库、三维模型等 可视化管理层负责管理三维模型，组织可视化节点，驱动三维场景，计算物理属性，如碰撞检测和基于场景的事件管理。 多代理层包括实体代理、环境代理和服务代理。这一层反映了自动驾驶仿真系统的智能化、可重构性、可重用性和可扩展性。 每个实体代理对应于场景中的一个三维实体，为三维实体提供特定的语义和行为规则以及交互功能。 实体代理分为智能车辆代理和周边车辆代理。智能汽车agent通过感知能力、认知能力和行为能力来表现驾驶员的行为特征。围绕车辆的agent通过感知和行动能力与智能车辆进行交互，它们可以改变自身属性，影响智能车辆。 环境代理是在综合自然环境(SNE)概念的基础上构建的，它是通过建模和仿真方法建立的系统中自然环境的表示，考虑了仿真实体与自然环境仿真系统之间的相互作用。可以利用地理信息系统(GIS) 建立环境代理，使仿真系统更加真实。环境代理是动态的，其特性可以改变，也可以通过模型数据库中存储的环境参数影响实体代理。 服务代理没有几何形状，其基本功能是提供系统服务，分为通信服务代理(CommAgent)和信息服务代理(InfoAgent)。CommAgent提供分布式仿真支持服务。InfoAgent提供与环境相关的语义信息和智能行为所需的知识，它不仅与实体代理交互，而且与可视化管理层交互。InfoAgent负责将实体代理的命令转换为3D场景中特定实体的状态变化。具体实体的状态变化也可以转化为有意义的知识，传递给实体代理进行决策 人机界面层是用户通过键盘、鼠标、显示器等虚拟现实设备与智能仿真系统直接交互的界面 仿真框架抽象化描述 simulation framework ：：= &lt; Agent, Communication &gt; Agent = {EnvironmentAgent} ∪ {ServiceAgents} ∪ {EntityAgents} EntityAgents = {IntelligentV ehicleAgents} ∪ {AroundV ehicleAgents} ServiceAgents = {CommuAgent} ∪ {InfoAgent} EnvironmenAgent ：：=&lt; FeatureName, FeatureType, FeatureValue &gt; EntityAgent ：：=&lt; AgentID, Attribs, BehaviorModel &gt; Attrib ：：=&lt; AttribID, AttribName, AttribType, AttribV alue &gt; Behavior ：：=&lt; AgentID, BehaviorName, BehaviorT ype, ParameterSet &gt; BehaviorType ∈ {SelfBehavior, InteractBehavior} Communication = {&lt; Sender, Receiver, MsgContent &gt; |(Sender ∈ Agent) and (Receiver ∈ Agent) and(MsgContent ∈ Communication(L))} 具体框架实现 需要采用分布式组件对象模型(DCOM)和高级架构(HLA)实现了分布式仿真通信，下面将详细说明。DCOM使用Microsoft Component Object Model (COM)技术，其源代码可以用任何支持COM的编程语言编写，如c++。Matlab具有支持COM的特性，通过IDispatch接口将COM对象集成到Matlab/Simulink模型中。 HLA/RTI(实时架构)是通过HLA/RTI的仿真联合辅助开发工具实现的。 AST-RTI和AST-OMDT (Object Management Development Tool)是由北京航空航天大学先进仿真技术实验室(Advanced Simulation Technology Laboratory, ASTLab)开发并用于研究的一类工具。AST-RTI是一个仿真支持平台，AST-OMDT软件帮助定义交互数据和联合对象模型(FOM)和仿真对象模型(SOM)。AST-FEDWIZARD工具软件可以根据FOM和发布/订阅信息生成联邦应用程序框架和RTI调用接口.]]></content>
      <tags>
        <tag>自动驾驶仿真</tag>
        <tag>自动驾驶</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶仿真工程师]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E4%BB%BF%E7%9C%9F%E5%B7%A5%E7%A8%8B%E5%B8%88.html</url>
    <content type="text"><![CDATA[自动驾驶仿真工程师其实不是一个好的岗位名字，它更像是产品经理+系统工程师+数据处理工程师。一个合格的仿真工程师应该打通整个数据链，使数据发挥出真正的价值。它是一个要求很高的职位，不是只需要会用一些相关的软件就够了的（但目前某些大车企对工程师的定义非常局限，所做的就是用用软件的工作）。 从招聘需求里，我们可以反过来推推，想成为一个足够优秀的仿真工程师，我们的技术栈要覆盖哪些方面。先聊聊自动驾驶仿真，它是自动驾驶测试的重要一部分，也可归属到安全或者产品的概念范畴里。随着自动驾驶技术的成熟，产品落地开始逐渐提上日程，这个过程离不开自动驾驶测试。 但，大家心里也门儿清，现阶段大规模的实车测试很不现实。一次实车测试，场地、人力、实验设备都在疯狂烧钱，大部分公司还是承担不起的。另外，实车测试非常低效，测试里程什么时候才能达到10^9数量级？实车测试安全性也不能得到保障，构造一个边缘场景，原型车、人撞了怎么办？实车测试的数据也比较难利用，系统在处理某个场景出现bug时，工程师能得到的只是bag数据，对于高交互的复杂场景，重播是受限制的。 这些问题都可以通过仿真测试有限地解决。就成本问题，仿真测试在某种程度上把实车测试成本转化成了显卡的成本，通过使用计算机就可以快速地提高积累里程。我们也可以仿真中测试各种极端场景而不用担心安全问题。仿真系统可以记录重播整个测试过程中的环境状态和系统状态，这有助于定位bug，提高测试效率。 随着软件工程的发展，传感器仿真、动力学仿真等建模技术的成熟，仿真平台这几年隐隐约约有井喷之势。当下对于开源的自动驾驶仿真平台，我比较看好的是carla和Airsim，商业仿真平台，Prescan、VIRES Test Drive也都不错，可以多关注这几个工具。 但如果想成为一个够格的真正的自动驾驶仿真工程师，会用几个软件是不够的，那是基础，但不是天花板。面向自动驾驶修通的测试往往已不再是黑箱测试，而是基于知识的白箱测试。仿真工程师需要懂偏开发知识，即掌握自动驾驶系统/产品的主要系统架构、各类传感器的基本原理、动力学仿真的基本知识、规划算法的基础原理、一些深度学习技术等。也要掌握测试的知识，如各种在环系统的构建方法，测试场景生成，测试用例编写，测试自动化技术开发等等。 以下列举一些典型大厂对自动驾驶仿真工程师的招聘需求： PlusAI岗位描述 负责自动驾驶系统仿真平台和相关工具链的构建 设计仿真测试场景和功能模块，如交通环境、多车交通流、天气路况等 为感知、规划、预测、控制等模块开发仿真测试接口 开发基于仿真测试的自动化数据分析平台 构建可扩展的框架，以在集群环境中运行大量模拟 开发自动驾驶系统的自动化回归测试框架。岗位需求 计算机、自动化、数学等相关专业，硕士及以上学历 熟悉C++/C或Python或nodejs，扎实的算法和数据结构知识 具备扎实的数学能力，熟悉几何、计算机图形学、动态系统建模等理论和方法 具背复杂软件架构和设计的能力 能够熟练使用可视化和建模工具 有自动驾驶系统仿真、ADAS系统仿真、游戏引擎开发经验 有交通流模型设计经验 有图像生成、点云处理、三维重建、地图创建、规划控制等项目经验 有大规模集群环境中开发分布式系统以及大型后端系统开发经验 华为岗位描述 分析国内外智能驾驶主流测试策略，规划并实现业界领先的智能驾驶验证体系 研究先进的场景仿真技术，构建强大的自动驾驶仿真场景库与测试评价系统 根据智能驾驶系统和功能需求，设计产品的仿真测试方案 研究先进的道路数据采集技术，运用大数据技术重构仿真场景，并指导路测数据的再利用岗位要求 阿里岗位描述 负责搭建自动驾驶虚拟场景，完善仿真测试框架 配合驾驶决策、路径规划、仿真算法等模块，实现自动驾驶闭环仿真，并可视化相关调试信息 通过物理引擎对自动驾驶仿真结果进行评估 理解各种仿真引擎优缺点，根据项目阶段搭建并部署相应系统 本科及以上学历，机器人、计算机、游戏开发等相关专业岗位要求 熟悉unity、unreal等游戏引擎 熟悉至少一种3D建模工具，如Sketchup，Blender等 熟悉掌握游戏物理引擎的应用 有自动驾驶仿真工具搭建者优先 有汽车类游戏开发经验者优先 有使用CarSim、PreScan搭建车辆运动仿真平台者优先 有两年以上测试经验，有搭建车辆在环仿真测试场景经验者优先 有多年python等脚本语言开发经验优先 多年的C++的开发经验，1～3年的实际项目工作经验 熟练掌握Linux或类Linux系统，并掌握常用Linux命令 善于团队协作完成既定任务。 深入理解软件开发周期、软件质量需求，扎实等测试知识及执行力 百度岗位描述 按照需求进行仿真系统相关功能的设计和开发工作 对仿真前沿技术进行跟踪与研究 通过需求调研和需求分析，完成业务建模、系统建模岗位要求 计算机相关专业本科以上学历 有扎实的计算机基础知识，熟练掌握C/C++编程语言 熟悉软件开发流程，有良好的编程风格和文档习惯 熟悉Linux、Unix等操作系统，并在此系统上有开发经验的优先 良好的沟通能力和执行能力； 正直、务实、敬业、善于思考、良好的团队合作精神 有ROS开发经验优先 掌握仿真相关原理和算法优先 具有车辆主动安全和自动驾驶系统开发经验优先 掌握一种以上通用或专用仿真工具软件，有业务模拟仿真或仿真平台的开发经验优先 京东岗位描述 设计和实现基于插件式的分布式仿真系统底层架构，替换ROS系统，并可满足车辆量产的要求； 实现仿真系统三维渲染引擎，对动态和静态场景渲染和模拟以及交互性，预期要达到次世代游戏的水平； 实现物理引擎以及AI脚本引擎的优化及实现。岗位要求 计算机相关专业，硕士及以上学历； 深入理解机器人地图和自动驾驶数据，熟悉ROS以及Linux ，了解SLAM相关算法，C++架构能力强，有车厂或图商相关研发优先； 具备地图/GIS相关数据可视化开发经验 或者 商业渲染引擎、游戏引擎优化以研发经验； 深入理解OpenGL基本原理及相关计算几何，熟悉数据可视化相关基础算法。 美团岗位描述 设计和构建无人车仿真平台，实现各类算法的快速验证 重建真实场景和传感器模型，持续提升感知模拟的精准度 跟踪和研究仿真前沿技术岗位要求 熟练掌握C++、Python，了解Linux 熟悉传感器模拟、点云处理、三维重建等技术【计算机图形学】 了解Gazebo、Prescan等至少一种仿真软件【部分模拟器】 良好的沟通表达和团队协作能力 有3D赛车游戏开发经验优先 有3D引擎如UE4、Unity开发经验优先 有仿真系统开发经验优先 Momenta岗位描述负责搭建无人驾驶模拟系统，对汽车、传感器、环境进行软件模拟。模拟结果将与真实数据一同用于预测汽车在真实场景中的行为。 岗位要求 熟悉汽车系统和仿真软件（carsim, carmaker, v-rep） 熟悉C++/Python等开发语言，有Linux开发经验 了解汽车动力学模型，3D图像引擎工作原理 具有一定模拟系统或3Ｄ游戏开发经验，具有无人驾驶、汽车、机器人领域模拟系统开发经验者优先 慧勒汽车科技(上海)股份有限公司岗位描述 负责自动驾驶软件（虚拟驾驶场景、交通流、高精地图）集成测试、硬件(摄像头、激光雷达、毫米波雷达、GPS/IMU、ECU)在环台架测试、以及驾驶员在环测试； 搭建自动驾驶硬件在环平台，包括软硬件架构、各接口定义等； 设计并搭建自动驾驶仿真场景，并编写测试用例，撰写测试报告； 配合算法工程师调试并测试控制算法； 负责集成调试自动驾驶嵌入式实时计算平台； 负责集成调试自动驾驶HMI。岗位要求 硕士及以上学历，汽车类、电子类、自动化、计算机类等相关专业； 精通嵌入式开发，熟悉C++，精通Linux环境，具有丰富的软硬件动手实践经验； 熟悉车载CAN、以太网总线、TCP/IP, UDP, serialization等通讯协议； 良好的沟通能力，自主学习能力，富有高度的责任心及团队合作精神； 有ACC、AEB、APA、LKA等ADAS功能仿真与开发经验者优先； 熟悉NVidia Drive PX2或者Jetson TX2嵌入式平台优先； 熟悉超声波雷达/毫米波雷达/激光雷达/摄像头/ECU等产品优先； 熟悉实时仿真系统者优先。]]></content>
      <tags>
        <tag>自动驾驶仿真</tag>
        <tag>自动驾驶</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我为什么要写博客]]></title>
    <url>%2F%E6%88%91%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%86%99%E5%8D%9A%E5%AE%A2.html</url>
    <content type="text"><![CDATA[不按修改时间，按创建时间算，这是第101篇博客。一个新起点。如图，这是我9月12日发的一条微博，算来是两个多月前，现在我可以说，这个小项目已经达成了预期目标。我甚至准备以后找实习、找工作的时候，把这个博客写到我的个人简历上。 我终于能够确认，我能认真坚持下来做一件事，能坚持一件事情100天，能坚持整理归纳到100篇，即使博客质量参差不齐，即使博客内容错误疏漏无数。 按玄幻小说的说，我现在道心坚定。 为什么要写博客？我在7月多开篇时问了自己这么一个问题，现在我已经有了自己的答案，其可概括为以下三句话。 第一句，“以自省而已”。这正是那篇不断更新的博客《每日学习记录》的第一句话，我想看看自己有多少开的学习项目半途而废？看看自己一天内到底都做了什么事情？看看我现在这个人究竟能输出什么？看看自己究竟是否有竞争力？ 第二，“博观以约取，厚积而薄发”。这是我说了无数遍的博客主题。现在虽然博客的标签做了二十多个，但系列的真正主题有两个，学习相关与日常随笔。前者用来记述自己的的技术学习笔记和过往所学知识的总结归纳，后者则是写一些读书笔记、童年追忆、个人情绪、偶然脑洞等。以这两条线为脉络，我想得让自己更开放些，懂得多一些，懂得再多一些。永远保持对这个世界各种事物的好奇心，永远年轻，并能在适当的时候把心收到该收的地方，不做心比天高，命比纸薄的可怜人，让思维高度、宽度都上升一个等级。 第三句，“藏锋与不藏锋”，人在和周围人多交流后，才更能获得警醒和进步。故步自封是不可取的，单单沉浸在自己的小圈子里，沉浸在自己的世界里，只会约束自己的上限。该锋芒毕露就不要遮遮掩掩。对我而言，我需要一个交流平台，QQ空间、朋友圈，前者过于封闭，后者虽然可以扩展，但是有些介于熟悉和陌生之间的老师同学，微博就更不必提，一个垃圾平台，恶心的很。放弃使用微信公众号倒是下了很大决心，主要是因为其排版成本比较高，我没那么多精力，且不能即时修改。另外，它每天只能发一篇，最后它对组织整理的功能支持的比较弱。 不管怎样，100篇已经达成，撒花庆祝。谢谢小土刀，就是看了你的博客我才下定决心开始做的；谢谢谢益辉，你让我看到了真正高价值博客的样子；谢谢妍妍，你的不间断阅读给我写下去的耐心。 我会继续做下去的。这是懒散与无趣之人的救赎。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[捉螃蟹]]></title>
    <url>%2F%E6%8D%89%E8%9E%83%E8%9F%B9.html</url>
    <content type="text"><![CDATA[螃蟹，横行霸道，生活在污泥里，石头下，小河中。一言概之，它们生活在远离我的地方。 也许正是因为这种距离感，我对螃蟹总有一种说不清的喜欢。这喜欢不同于对猫猫狗狗的喜爱。也不同于洪七公对叫花鸡的美味欣赏。它应该是来自于老祖宗基因中的采集本能，即见猎心喜也。 换句话说，我心中向往的，应该是捉螃蟹。 我很少与螃蟹有接触，但总有身边人捉过几次。当他们说起下河捉螃蟹的经历时，我总是在旁边听着，一字不落。 到现在为止，我23岁，捉螃蟹的次数，两次而已，能去捉螃蟹的机会倒是有几次。 第一次捉螃蟹是在小学以前，应该是五六岁的年纪，去的是一位姑奶奶家，在深山里，我应该是坐了很长时间的公交车，最少对年幼的我来说，那算一次长途旅行。 到时已是正午，我连午饭也不想吃，刚到就缠着姑奶奶要去捉螃蟹。下午一二点时，姑奶奶也没午睡就带我去了后山，那里天清云淡，有透明的阳光和白色的石头，水像在天上流。姑奶奶在前边翻石头，我抱着一个大玻璃罐子在后面蹦蹦跳跳地跟着，翻到一个，我也不敢上手，就在旁边喊着，奶奶，快抓它！又笑又跳了一下午。整个下午捉到几十只左右，回去后我把它们放在一个盐袋子里。那个盐袋子被我清洗了很多次，怕盐度太高让它们夠死。下午吃饭时我也无心品尝，一直想着回去后要放两只在铝盆里，让他们用大钳子战斗。 因为一天都在折腾，回来路上我太困，就在车上睡去了，到家后好几小时才想起来，真是悲恸，奶奶自责说她自己也忘记了，安慰我下次去再捉。我心里清楚都是我的错，怨不得她，也清楚应该不会再有机会，因而只是大哭。 那是我第一次接触螃蟹，结局不甚完美。那是我第一次去姑奶奶家，也是最后一次去，四年前奶奶告诉我她已去世。对长大后的我来说，那个距离明明不远的，为什么却只去过一次呢，我自己想不明白为什么，心里有一点恍惚。 第二次接触螃蟹，是在小学六年级。有邻近的同学说现在正是捉螃蟹的时候，盛情难却，我就接受了邀约。内心是雀跃的，算是于不经意处重温了童年旧梦。这是我第一次外出留宿，踏入了陌生的家，吃了陌生的饭，睡在陌生的床上，感受着陌生的情绪，心里总是有点惴惴。唯一让我感到熟悉且放松的是，朋友为我演示了魂斗罗的玩法，他很轻松就打到了第三关，那是我以前不曾接触的关卡。 第二天出发时，我们提着桶，相比几年前的罐子算是鸟枪换炮了，和我们同行的还有另外两个朋友，其中一个是我邻居，另外一个是这次捕猎的主将。 目的地是一条河，河边树木很高，因为已是正午，所以虽然遍地都是阴凉，但光线条件也算不得差。 主将出手时，我在旁边已经不会像小时候一样蹦蹦跳跳，但观察他捉螃蟹的动作比以前细心得多。找到冒泡的泥洞后要小心，因为螃蟹在洞里听到声响时，就会把两个螯摆起来做战斗状，如果贸然出手，肯定会被钳的，而且螃蟹还轻易不松手。这时候需要做的是把双手的大拇指、食指、中指模拟成两个大钳子慢慢探进去，来一场钳子对钳子的正面对决，手感受到螃蟹的螯后，就要凭感觉快速张开手钳出击，夹着螃蟹的两个螯，再把它提出来，这样才可以免受被夹之苦。这是高超的技艺，我最后也没学会，而且在逗螃蟹玩的时候，被其中一只不甘命运的斗士攻击了大拇指，一阵大呼小叫之后，主将帮我解决了危局，不过还是出了一点血。 收工时，我们的战利品接近半桶，我和邻居各分了一半带回去，放在家里养着，中间还给它们喂了几次馒头。它们吃东西时也是用大钳子，夹住小小的馍花儿，再往嘴里送。不过我预期中的螃蟹角斗没有出现，相反，它们是极其团结的，没事儿就开始叠罗汉搞大逃亡。这堆螃蟹的最终归宿，是被爷爷料理后炸了吃了，味道一般，但我吃的很开心。 这就是我人生中仅有的两次捉螃蟹的经历。其余大多都是听闻而没实际去看。在密县时听说，晚上拿个大桶，再带个手电筒，灯一开，螃蟹就成群结队的往灯光这里走，这种捉螃蟹的方法真是简单高效地令人艳羡。到了大学，听说崇明有很多螃蟹，钓螃蟹还是个保留项目，但现在已不像小时候那么向往，最终未去。 现在想来，说喜欢捉螃蟹也不是对的，最喜欢的应该是捉螃蟹代表的出去玩耍。现在因为工作重，不能也不太想出去玩了，对捉螃蟹的感情自然就归于平淡。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[下雨]]></title>
    <url>%2F%E4%B8%8B%E9%9B%A8.html</url>
    <content type="text"><![CDATA[我喜欢下雨，但我不知道该怎么表达对雨的感受，它是我的言不可及之域。 听雨声，且听细雨，勿湿衣襟。看雨景，雨丝剔透，连接天地。读雨诗，如蒋捷的《虞美人·听雨》，少年听雨歌楼上。红烛昏罗帐。壮年听雨客舟中。江阔云低、断雁叫西风。而今听雨僧庐下。鬓已星星也。悲欢离合总无情。一任阶前、点滴到天明。其他相关处，不一而足。 人说所有的心理都该去追溯童年，我童年懂事较早，大约六七岁时，家里盖房子，家外有沙。我听到父母叹息说运气不好，这次下雨会让沙子损失很多。当时门外刮着大风，我偷偷出去拿砖加固塑料布，而且不想让父母知道，因为担心他们对我的担心，那时的我是讨厌下雨的。后来的雨天，母亲和父亲的工作却总能难得清闲，对雨才渐渐有了偏爱。 很多人是讨厌雨天的，我跟一个朋友有深入讨论过，她的心理轨迹与我相似，她在一个雨天看到流浪小狗四处找避雨的地方，觉得它很可怜，自此不喜欢下雨。 这些差异背后正是朴素的道理，下雨时猫和狗的瑟瑟发抖会让我心痛，但建筑工人却可以抽烟休息，这世间始终没有漫长的雨季，你喜欢的他讨厌的，终究都会过去。 撇开这些成因源头，我喜欢下雨，这个事实改变不了。但下笔时，万千思绪卷来，我真的不知该从何说起了。 若说时间，春雨温柔，夏雨爽利，秋雨细腻，冬雨冷静。又有晨雨敲落花，午雨打屋瓦，夜雨谈情话。若说空间，大城市的雨洗刷天地，站在综合楼的十九层往下看时，五颜六色的伞跳动着，相遇又别离，伞下的每个人都有自己将去的地方，都有自己的故事，来也匆匆，去也匆匆，宏大的人流中有着自己的井然有序。至于乡下，这里三层楼就算高了，我曾站在楼顶观雨，下雨时乡下人都是不出门的，整个村子更安静沉稳了一些，你能看到每家的屋顶，感受到一个个整体，家家户户就在雨中，家的概念变得无比清晰，这感觉正如在城市的夜晚楼顶，人会感慨万家灯火一般。谈雨势，小雨淅沥，丝丝润心，且总不停，大雨哗啦，切切催情，来去匆匆。听雨声，庭院深深处的雨声、窗外雨声、屋顶雨声、帐篷雨声，各有情趣。每个情景谈下去，可以无穷无尽。 下雨天最易神启。雨夜总唤情，雨丝和情丝总是萦绕在一起的。在雨里，和自己的爱人撑一把伞，走过石板路，看有船夫在泛起淡淡烟雾的古镇小河中，淡然前行。客栈的灯亮了起来，橘色的灯光映在河旁的垂柳上，又萦绕在店外亭子下的碗筷之间，远方和生活就这样融合在一起，这真的让人感觉沉醉。 我和妍妍都喜欢下雨。我们曾在城市将将沉睡时，穿过雨下的越来越大的巷子，也曾在清晨六七点，顶着小雨去吃双浇面，进店时两人衣襟都被细雨打湿，趁着补偿自己的期待叫面来吃，鱼肉一块，猪肉一块，此双浇也，味极鲜美，言不可及。我们也会在雨将歇时，启程去看头号玩家，那时已是深夜，我骑着小电驴在前面乌拉乌拉唱歌，她坐在后面跟我聊天聊地聊家乡，风吹拂着脸，吹起了衣衫，雨又下起来了，斜斜的落在脸上，我感觉很惬意很舒服，好似已不在人间。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[人生中第一次实习]]></title>
    <url>%2F%E4%BA%BA%E7%94%9F%E4%B8%AD%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%AE%9E%E4%B9%A0.html</url>
    <content type="text"><![CDATA[那时候还没有实习的说法，应该称做打工。中考考完，从初三的氛围走出来，一切都变得轻飘飘的，让人无所是从。我在家呆了几天，读书没精神，睡觉无乐趣。在一个无聊的下午，突然就生出了打工的想法。 “既能赚钱，又能多接触一下象牙塔之外的社会，免得一身所谓学生气。”现在想来，我小学、初中都是走读，这次算是第一次真正离家了。 打工的地方是好找的，离家不远，位于汝州烧烤的主场，市区朝阳路，主业是酱爆鸡和烧烤。我爸似乎对我很没信心，在他看来，我应该一直是那个坐在角落里安静看书的儿子，是那个害羞腼腆的青瓜蛋子。但他不是主动表达情感的性格，只同老板叮嘱了很多，拜托他们多照顾我，转头跟我说要常向家里打电话，就骑着电动车走了。 第一顿饭在店里吃，因为我这个新人的到来，老板娘特地让加了个菜，大师父做了烧茄子，我们围坐在一张桌子旁，用白馒头配着吃。周围人的善意给了我安全感，我也没再拘谨，以至于吃的太快太急，嘴上颚都烫掉了一层皮，好几天不得消停。后来大师父常给我们做茄子吃，这是后话。 最初我的工作只是端菜。之后工作才慢慢多了起来，晌午时帮采购的奶奶择菜，中午穿羊肉串，傍晚是一天最忙的时候，会帮忙搬啤酒，进出拿烧烤材料等。 穿羊肉串是个要用心学习的活记，因为要保证沿着长轴穿入，不熟练的话，一慢二扎手。签为铁制，为了能穿透羊肉，签头削的很尖，十指又连心，扎到时都疼的很。第一次穿时，我被扎了大致三四十次，但也不愿意诉苦，这些小事必须得做好呢。第二天时，我认真看了烧烤师傅的穿串儿方式。第三天，不谦虚地说，我已经可以算串的最好的一个。再后来，我甚至会和别人比试穿串儿的速度，这也是后话了。 打工的钱不多，2010年，每月500，无休，平均每天16.67元。以现在的眼光看，这是一笔小钱，可能投两篇稿子做几次家教就能搞定，但对当时的我来说，这可以称得上是一笔巨款。烧烤店的工作还是不轻松的，我们每天凌晨两点左右收工，早上八九点起来做准备，我当时正是贪睡的时候，适应的苦不堪言。 烧烤店是一个可以听到无数故事，看到世间百态的地方。有人举杯畅饮，吃串儿吃到眉开眼笑，但也有一边独自啃板筋一边默默落泪的。有七十多岁的老夫妻在午夜一点来吃酱爆鸡。有光膀子的大汉拼桌吃饭，中间一个人突然拿啤酒瓶朝自己的光头招呼，瓶子碎了，血也流了，周边同桌一部分人面色冷峻，也有一部分人拿纸给他擦血。 家家有本自己的经，人人都有自己的故事，午夜和烧烤是很神奇的力量，它能让人内心更柔软，或更刚烈一些。 人也渐渐熟悉起来了，每个人都有自己的故事。大师傅活的很潇洒，他对我们极好，夜深客稀时，他总会给我们做羊肉面或鸡蛋面，或请大家吃白馒头夹芝麻酱吃—酱爆鸡用的酱料就是芝麻酱。这时，烧烤师傅总是端烤馒头或烤鱼过来。现在想来真是幸福，每晚都是烧烤聚餐。 老板不会参与进来。老板娘迷上了九把刀的《都市恐怖病系列》，那是很有意思的恐怖猎奇小说。老板则不怎么管店，一到九点多就总提前走了，他应该是有很多其他事要忙。 那时候，我们生意很差，与之形成鲜明对比的是，周边两家店生意好的不成样子。一到晚上，左右灯红汤热，有着燎燎的的人气。而我们这里，清冷的灯，屈指可数的人… 我那时的心态是，人越少活越少，这样很轻松！ 现在想想，自己当时还是太没良心了。 有时也下雨，食客一般这时候也就少了。毕竟大多数人，还是更喜欢在月光下热风中吃串喝酒。但也禁不住有些人，就是喜欢雨这个氛围。我们这时会撑起棚子，再把白炽灯架在下面，给那独一个客人端来铁盘。看他一人一边看雨一边吃串一边若有所思的样子，要么是闲情逸致要么是心中有事。雨夜的食客也总是会要一碗面。面是能避愁暖心的东西，雨夜吃倒也很合适。 也有无食客前来的时候。雨夜这时变得更静也更深了，汽车开过去的水声消失在街道的尽头处。我坐在最边的桌子上，就着白炽灯的光，看请假半天买回来的《萧十一郎》和《笑傲江湖》，文字流过指尖，滑到眼中，一个刀光剑影的江湖，一个光怪陆离的世界，慢慢地，慢慢地和这片天地的雨声融合在一起了。微凉的雨落在了我头上，抬头一看，原来是棚角的雨水积起来了。对这个我早有准备，我拿起准备好的竹竿，顶一下棚角，哗啦一声，积起的雨水会倾盆而落。棚轻松了，我的心情也莫名明快又安静。 离别那天。男老板端起了酒，说“以后来我们这里吃饭吧”。大厨说，“还给你做羊肉面和炒鸡肉”。 是夜也，天明气清，圆月高悬，我们几个人围在桌子旁，我说了说对高中的憧憬，他们说了说几年后的打算。大家笑着，吃着，喝着。 那是2010年了，我真的很怀念它。 后来又回到原处时，店已经换了，人也都不在。物不是，人亦非。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶 | 控制篇]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6-%E6%8E%A7%E5%88%B6%E7%AF%87.html</url>
    <content type="text"><![CDATA[自动驾驶系统的运动控制控制，是将意图转化为行动的过程。它的主要目的是通过向硬件级别提供必要的输入来完成上层的规划意图，这些输入将生成所需的运动。控制器根据力和能量映射现实世界中的相互作用，而自主系统中的认知导航和规划算法通常关心的是车辆相对于环境的速度和位置。 控制系统内部的量可以用来确定系统的性能，控制器可以对干扰作出反应，并将系统的动力学调整到期望的状态。系统的模型可以被用来更详细地描述所需的运动，如果想达成令人满意的运动执行效果，好的系统模型是必不可少的。 传统控制反馈控制是许多应用中最常见的控制器结构。反馈控制使用被测量的系统响应，并主动补偿任何偏离期望行为的偏差。反馈控制可以减少参数变化、建模误差以及不必要的干扰的负面影响。反馈控制也可以改变系统的瞬态行为，以及测量噪声的影响。 经典反馈控制最常见的形式是比例-积分-微分(PID)控制器。PID控制器是过程控制工业中应用最广泛的控制器。 其概念比较简单。它不需要系统模型，控制律以误差信号为基础，如下公式，其中e为误差信号，$k_p ,k_i和k_d$分别为控制器的比例增益，积分增益和导数增益. u(t) = k_d\dot{e} + k_pe + k_i \int e(t)dt然而，在控制器中仅使用反馈项可能会受到一些限制。第一个重要限制是它延迟了对错误的响应，因为它只在错误发生时才响应。纯反馈控制器还存在耦合响应问题，因为对扰动、建模误差和测量噪声的响应都是由同一机构计算的。对各项进行独立的响应才是更符合逻辑的。 通过在控制器中增加一个前馈项，可以向控制器添加一个新的自由度，这个控制器体系结构如下图所示。在控制器中加入前馈项有助于克服反馈控制的局限性。前馈项被添加到控制信号中，不需要考虑控制系统的任何测量。但是，前馈项可能涉及到干扰的测量等。设计前馈控制需要对物理系统有更全面的了解，因此，常常需要使用模型参考作为前馈控制器。在控制器中结合前馈和反馈项的方法也称为二自由度控制器下表总结了前馈和反馈控制的作用 状态空间控制其通常被称为现代控制，它通过检查系统的状态，尝试把系统的整个向量来作为一个单元进行控制。状态空间控制领域是一个非常大的领域，在这一领域还有很多积极的研究。 线性状态空间模型可以写成如下公式，其中 $x(t)$是系统状态向量，$u(t)$是控制输入向量，$y(t)$是系统输出向量。 \dot{x}(t) = A(t)x(t) + B(t)u(t)y(t) = C(t)x(t) + D(t)u(t)自动驾驶系统的观测结果大多是非线性的，需要先通过线性化系统的状态空间方程，来获得非线性系统的线性模型。 \dot{x}(t) = f ( x(t), u(t) )y(t) = h(x(t), u(t))双自由度控制器也适用于非线性系统。前馈用于产生参考轨迹，反馈用于补偿扰动和误差,通过对参考轨迹$x_r(t)$进行线性化处理，可以得到线性化的动态误差。 \delta \dot{x}(t) = A(t)\delta x(t) + B(t)\delta u(t)\delta y(t) = C(t)\delta x(t) + D(t)\delta u(t)其中A B C D是合适的雅可比矩阵。如果存在可设计为产生参考输入$u_r(t)$的轨迹生成过程，使$u_r(t)$生成满足系统非线性系统动力学的可行轨迹，则可配置状态空间控制器对线性化误差动力学进行反馈补偿。 基于模型的预测控制-MPC控制自治系统需要运动模型来进行规划和预测，模型也可以用于控制执行。 一种利用系统建模来优化前向时间范围的控制方法在文献中通常被称为模型预测控制(MPC)。MPC的基本结构如下图所示。模型预测控制，将最优控制的性能与鲁棒控制的鲁棒性相结合。预测是在短时间范围内进行的，称为预测范围，模型预测控制器的目标是在预测范围内计算最优解。模型和控制器可以在线改变以适应不同的条件。模型预测控制在工业过程控制应用中取得了巨大的成功，这主要是由于其简单的概念和用输入约束和非线性处理复杂过程模型的能力。 模型预测控制还有其他一些吸引人的特性，比如设计多变量反馈控制器对它而言是比较简单的。它还可以方便地指定控制器必须执行的系统输入、状态和输出。MPC还允许指定一个目标函数来优化控制工作。MPC还可以处理时间延迟，拒绝测量和未测量干扰，并利用以前存储的预期信息。这个特性对于例如遵循固定的路径等重复的任务非常有用。MPC实现了优化和反馈调整，模拟了自然过程，其也被广泛应用于汽车应用。 为了提高燃油经济性、排放和安全性能，整个车辆系统的运行必须在整个运行范围内达到最佳状态。然而，在汽车系统中应用模型预测控制器与在过程控制行业中所面临的挑战不同。在过程控制行业中，采样时间相对较长，可用的计算资源也比较充足。汽车进程的采样周期为几毫秒，由于空间限制，可用的计算资源数量有限。 因此，处理器速度和内存的进步以及新算法的开发对于推动MPC在汽车行业的更广泛应用非常重要。MPC已经应用于多种汽车控制应用，包括牵引控制、制动和转向、车道保持等。模型预测技术也被应用于各种工程的轨迹跟踪问题。 轨迹生成与追踪已知路径信息的轨迹生成方法有两种。第一种方法是使用优化方法同时生成和跟踪轨迹，另一种方法是解耦轨迹生成和跟踪。前者将生成和执行/跟踪任务集成到一个优化问题中。这种方法通常用于最优时间应用，例如在中。由于处理能力有限，实时运行优化问题是一个挑战，在复杂环境下进行规划可能并不十分有利。 轨迹生成轨迹生成的问题是找到一个完整的控制输入$u(t)$，它对应于某个期望状态的轨迹$x(t)$。轨迹生成问题可以为两点边值问题。边界条件通常包括初始状态$x(t_0) = x_0$和最终目标状态$x(t _) = x_f$，系统动力学$\dot{x} = f (x, u)$作为附加约束。对于满足边界条件的给定状态的轨迹x(t)，如果没有控制输入u(t)，则定义为不可行的轨迹。 轨迹是限定在一定时间间隔内的运动的表示。这可以是在区间上对状态向量的详细描述$x(t)|(t_0, t &lt; t _f)$上的状态向量的描述，或者是在一个区间上输入向量的描述。$u(t) | (t_0, t &lt; t_f)$. 自动驾驶汽车的轨迹生成问题可以通过多种技术来解决。讲述轨迹生成的文献通常可以分为两种方法:(i)基于传感器的方法和(ii)基于动力学的方法。第一种方法更倾向于机器人领域。几十年来，机器人研究人员一直在解决轨迹生成问题，该问题已被应用于工业机器人和自主移动机器人。基于传感器的方法通常集中在对环境的感知集成，而不考虑车辆动力学。 另一种方法更多地基于车辆动力学。文献中提出了各种轨迹的优化方法，如遗传算法的应用，梯度下降法等。对车辆动力学和控制的深入理解可以推动突破自动驾驶车辆的极限。轨迹生成和跟踪的研究也被应用于半自主车辆，用于更先进的驾驶员辅助系统。 应该在充分考虑自动驾驶汽车的目标之后，在基于传感器的方法和基于动力学的方法之间寻找一个平衡。 轨迹跟踪在这一节中，将综述可用的路径和轨迹跟踪方法。我们认为路径是计划从起始姿态移动到目标姿态的几何表示，而轨迹还包括运动的速度信息。 目前最流行的两种轨迹跟踪方法是 几何方法 基于模型的方法 基于模型的几何路径跟踪从基于模型的路径跟踪方法中派生出来的控制器使用车辆的运动学和/或动力学模型。 基于运动学模型的控制器在低速应用中表现良好，但误差随着车速和路径曲率的增大而增大。 基于动态模型的控制器在高速公路自动驾驶等高速驾驶应用中往往表现良好，但在车辆快速加速、减速和大曲率路径时。基于模型的方法要求路径是连续的，对扰动和大的横向偏移不具有鲁棒性 基于几何的路径跟踪几何路径跟踪算法利用简单的几何关系推导出转向控制律。这些技术利用前视距离来测量车辆前方的误差，就模型复杂度而言可从简单的圆弧计算到更为复杂的几何定理，如矢量跟踪方法。 最流行的几何路径跟踪算法之一是纯追踪路径跟踪算法。纯追踪路径跟踪算法是在距离车辆当前位置一定前视距离的路径上寻点。该算法相对简单，易于实现，对干扰和较大的横向误差具有较强的鲁棒性。该算法的输入是路径点，而不是平滑曲线，因此不太容易受到离散化相关问题的影响。如果所选的前向距离不合适，特别是在速度较高的情况下，当前向距离增加时(通常将前向距离设置为与速度相关的递增函数)，该算法仍存在切角（ corner cutting corner cutting）和稳态误差问题 为了避免限制路径生成的方式，路径应该以分段线性方式表示，根据这一原理，具有连续的一阶和二阶导数的平滑轨迹，例如贝塞尔曲线，应该表示为密集点序列，从而能够应用更广泛的潜在跟踪算法。一个点通过线性路径段连接到路径中的下一个点。为了尽可能地逼近连续路径，必须对连续路径进行更密集的离散化。离散节点包含在有序列表中,按顺序和路径点追踪。 纯算法具有一个可调参数,即前向距离$L_{fw}$。阿克曼转向几何,该算法定义了一个虚拟的圆弧，用以连接锚点(rear axle)和跟踪点。 对该算法进行改进，不一定选择锚点作为rear axle ，可被定位在沿$x_b$与后桥的距离为e的点。然而，在此之后，锚点将被假定为后桥。 对该算法的稳定性极限进行了分析，结果表明，对于系统所涉及的最小前向距离和过程延迟的正确组合，纯跟踪算法是稳定的。]]></content>
      <tags>
        <tag>自动驾驶</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶 | 规划篇]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6-%E8%A7%84%E5%88%92%E7%AF%87.html</url>
    <content type="text"><![CDATA[早期的自动驾驶汽车(SDVs)本质上是自动的，因为它们的设计功能通常仅限于车道跟踪、自适应巡航控制和其他一些基本功能。2007年DARPA城市挑战赛(DUC)展示了一种现在也能被广泛使用的规划框架，它可以让自动驾驶汽车有能力处理多样的城市驾驶场景。 自动驾驶汽车的表现相比人类司机差距很大，在DARPA挑战赛中，35只队伍中，只有6支队伍完赛,尽管如 此,这一具有里程碑意义的比赛也证明了在城市环境中实现无人驾驶的可行性，也揭示了在研究自动驾驶是急需解决的挑战。 背景介绍Boss, Junior, Odin, 是DARPA大赛的前三甲，除了它们，还有其他许多队伍，使用了类似的三层规划框架，包括任务规划器（全局规划器）、行为规划器动作规划器（mission planner, behavioral planner, and motion planner.）。第四名的Talos据说使用了两层规划器：一个导航器和一个运动规划期，导航器基本上同时执行任务规划器和行为规划器的功能。 任务规划器或路线规划器（route planner）关注的是高层次的目标，例如分配、取\丢任务，以及决定应该采取哪些道路来完成驾驶任务。 行为规划器或决策者（decision maker）会做出做出一些决策，进而遵守规则限制，并和其他交通参与者交互，并产生相应的局部目标，例如，改变车道、超车或通过交叉路口。 运动规划器或局部规划器（local planning）生成适当的路径和或一系列动作以实现局部目标，举例来说，最典型的目标是达到目标区域的同时避免障碍物碰撞。从DUC开始，尽管分层的划分有些模糊，但自动驾驶汽车整体上仍然继承了这里描述的三级层次结构。 Mission Planning任务规划，或者说路径规划，或者称全局规划，通常通过在一个反映道路/路径网络连接的有向图网络上进行图搜索。DUC中提供了路网定义文件(RNDF—Road Network Definition File )作为先验信息。RNDF用图的节点和边表示可通过的路段，除此之外，它还包含诸如停止标志的位置、车道宽度和停车位位置等信息。RNDF是竞赛组织者手动生成的，但是现在正在进行相应研究，目标是通过自动化过程，通过直接感知基础设施(例如道路边界)直接，甚至通过对车辆运动的推断，生成存储在路网图(RNG])的更丰富的信息。 不管RNG是否是手动生成的，搜寻路径这个问题都是通过分配相对应的权重，这个权重会和比如某个特定路段的距离相一致，这之后应用图搜索算法来解决的。Dijkstra s[194]或A*[195]等经典算法对于较小的邻域是有效的，但在大型网络上需要更高效率的方法，这些方法可以在下面这篇调查论文中得到了详细描述。《Bast, H.; Delling, D.; Goldberg, A.; Müller-Hannemann, M.; Pajor, T.; Sanders, P.; Wagner, D.; Werneck, R.F.Route planning in transportation networks. arXiv 2015, arXiv:1504.05140》 Behavioral Planning行为规划人员负责制定决策，以确保车辆遵守规定的道路规则，并以符合习惯的、安全的方式与其他参与者进行互动。这可以通过结合局部目标设立、障碍物设置、调整可驾驶区域边界和/或基于成本的区域启发式调整来实现。 在获得特定的已感知到的驾驭语义场景后，大多数DUC车辆都是通过有着不同复杂度的有限状态机(FSMs)来做出决策的。“优先观察者”（ precedence observer ）和“间隙观察者”（ precedence observer ）这两个术语被创造出来，用来分类 用于检查状态转换所需的某些逻辑条件的函数。其中，优先观察者用于检查与车辆相关的规则是否允许车辆继续前进，间隙观察者检查被检测到的障碍物进入指定的感兴趣区域的最短时间，以确保其他交通参与者的安全通行。 例如,当接近一个停车标志时,SDV必在停止线前完全停车来确保predence observer，等待在十字路口的其他静止车辆按顺序离开,并通过通过测量沿着它预期路径行进的话的碰撞时间(迎面而来的交通可能没有在十字路口停止)进而确保clearance observer 这种性质的有限状态机是有限的，因为它们是为一定数量的特定情况手工设计的。 在FSM结构中没有明确描述的情况下，车辆也可能会表现出非预期的行为，如果没有有效的死锁保护的话，车辆可能会发现自己处于活跃状态，甚至是死锁状态。 最近的研究工作试图改进大型决策结构中的组织，从而管理更大的规则集[198 200]。也有一些工作尝试在决策结构中寻求可证明的保证（ provable assurances ），以保证遵守规则集。 Motion Planning运动规划是一个应用非常广泛的研究领域，比如制造、医疗、应急响应、安全/监视、农业和交通运输等领域。在移动机器人领域，运动规划指的是进行一系列决策行动以达到特定目标的过程，这通常是在避免与障碍物碰撞时进行的。运动规划者通常是根据他们的计算效率和完整性（compeltness）进行比较和评估。计算效率指的是进程运行时间，以及如何根据配置空间的维数进行缩放。如果算法在有限的时间内终止，则认为该算法是完整的，当存在一个解时，该算法总是返回一个解，并表明在其他情况下不存在解。 运动规划问题已被证明具有极大的计算复杂性，尤其是在高维空间中。为了保证完整性，可能需要对所有可能的路径进行彻底搜索，这使得许多方法在高维配置空间中陷入维数的困境;随着搜索空间维度的增加，对所有被占据的障碍物空间的表示和对无障碍物点的检测变得越来越困难。运动规划背后的核心思想是通过将连续空间模型转换为离散模型来克服这一挑战[206]。目前存在两类实现这种转变的方法:(1)组合规划，建立了一个离散的表示法，准确地表示原始问题。哪个建立了一个离散的表示法，准确地表示原始问题（2）基于采样的规划，利用碰撞检测模块对来自配置空间的样本进行离散搜索。]]></content>
      <tags>
        <tag>自动驾驶</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶传感器 | 激光雷达(二)]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E4%BC%A0%E6%84%9F%E5%99%A8-%E6%BF%80%E5%85%89%E9%9B%B7%E8%BE%BE-%E4%BA%8C.html</url>
    <content type="text"><![CDATA[激光雷达的认知处理过程就是点云处理过程。 激光雷达算法概论道路中主要环境对象可分为可通行区域、道路边界以及可通行区域上的路上静态、动态障碍物，道路边界确定了可通行以及不可通行区域，障碍物确定了可通行区域的避让区域。 对于激光雷达来说，认知过程一般是先找出道路边界，再在可行驶区域内区分路面点和障碍物点，之后区分静态和动态障碍物，并确定具体障碍物。激光雷达在自动驾驶系统中主要算法有车道线识别，可行驶区域分析，车辆识别与跟踪，行人识别与跟踪等。 在具体处理对象方面，就行驶路径而言，激光雷达可以用于车道线、道路边缘、道路隔离物的识别，就周边物体而言，激光雷达可识别车辆、行人以及其他影响车辆行驶的静态与动态障碍物。对于交通标志的识别，如红绿灯、限速牌等目前主要还是由摄像头完成。 在具体算法方面，对于物体的识别会先进行障碍物聚类，然后在训练集里通过特定的分类器完成识别。 具体激光雷达算法介绍车道线检测车道线的特征核心依据之一标线和周围路面所用材料不同。目前的主要算法分为两类，其一是关注车道线和泊车位线材料的反射强度，其二是利用激光雷达的特殊性，先检测出路沿，再结合导读宽度信息确定车道线的位置。 车道线和泊车位线的材料一般是选择热熔划线工艺。热熔型标线是主要选取的材料。对于该种涂料，由于需要经受恶劣的环境，其附着能力较强，且耐磨性要超过一般涂料。就反射强度值一般在12-30之间。 由于车道线材料和路面材料反射强度的不同，因此以此为特征可以轻松区分开车位线和道路路面。实际在进行道路检测时，得到的数据时圆环形状的点云，当检测到圆环出现断裂，即表明反射强度发生了突变，通过标注这些点出现的位置，就可以锁定车道线和泊车位线的位置。 路沿检测激光雷达的一个功能特点是可以进行路沿检测，它主要关注的是高度特征，常见的路沿有路牙、交通隔离栏、植物带等，另外在实际的自动驾驶环境中还有充电桩、交通标志牌、垃圾桶等中等高度对象。除此之外，道路中还有交通路灯、树木等较高的对象。整体上高度可被划分为三个层次。通过栅格图并结合特征算子可以检测出较低层次的对象。 一般使用的高度特征是最大最小值高度差特征，即设无人平台能够通过的障碍物高度下限为$Z_{min}$，平台可通过的最低悬垂高度为$Z_{max}$，低于$Z_{min}$的可认为是道路平面，而高于$Z_{max}$的障碍物不对无人平台的自主通过造成干扰，如无人平台可正常穿过桥洞、林间路等。但是随着距离增大，点云的稀疏程度增大，单一栅格中难以形成有效高度差，特别是对于低矮障碍物有漏检的风险。因为其阈值设定的问题，其还可能对高程信息进行误判，错误地把树枝等作为障碍物处理。 车辆、行人检测对激光雷达来说，车辆、行人都可以当做障碍物处理，障碍物可分为路内和路外障碍物。操作的基本思想是先对点云进行聚类，然后通过研究有效的几何模型进行目标检测。 车辆属于刚体模型，外观特征稳定，不随时间发生形变。剔除地面点云的栅格地图中，车辆在雷达二维俯视图中的形态主要呈现为正反“L”型，部分情况下呈现出“一”型或“U”型。利用这一局部特征，通过聚类分析和跟踪器对动态车辆进行速度预测，可有效检测动态车辆。行人由于其服装，体型的差别，点云特征更难被获取，目前主要采用基于机器学习的分类法进行处理。 对车辆和行人识别的本质在于聚类，聚类的基础在于被测对象点云数据的完整性。若对象反射率过低或某个物体局部反射率过低，则可能存在无法识别有效对象的问题。若被测对象互相之间遮盖严重，也会使对象点云数据的完整性受到影响，可能存在将单个物体分割为几个聚类的现象。另外聚类关注的是点云之间的距离和形态，当有与车辆行人相似的其他对象以及与它们距离较近时，也容易发生聚类的误判。]]></content>
      <tags>
        <tag>自动驾驶</tag>
        <tag>传感器</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶传感器 | 激光雷达(一)]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E4%BC%A0%E6%84%9F%E5%99%A8-%E6%BF%80%E5%85%89%E9%9B%B7%E8%BE%BE-%E4%B8%80.html</url>
    <content type="text"><![CDATA[在很自动驾驶从业者看来，激光雷达是想实现高级别自动驾驶所不可或缺的传感器。接下来对激光雷达做一点简要介绍。 激光雷达基本介绍激光产生的原理是受激辐射。它的方向性、单色性、相干性表现都非常好，因而适用于测距。现在应用于激光雷达的激光波长主要有905nm和1550nm两种。前者接近于可见光的波长，有损害人眼视网膜的可能性，因而其发射功率受到严格限制。1550nm的激光远在可见光范围之外，在不伤害人眼的前提下其发射功率得到了极大提高。 激光雷达又称LiDAR，它是一种通过发射激光（探测信号）并探测回波（反射信号）来或得被测物体的相关信息的雷达系统。 激光雷达是一种主动传感器，它不依赖于外界环境的光学条件和被测物体的辐射特性，它通过发射一束激光，之后主动探测经被测物体反射回来的回波信号。通过检测从发射到返回的时间，可以获得被测对象的距离，也可以通过多普勒效应和反射强度信息获取被测物体的速率信息和材料信息。 目前的激光雷达主要有两种类型，扫描式激光雷达和非扫描式激光雷达。前者又可以分为机械式旋转激光雷达、固态激光雷达、基于MEMS的激光雷达以及相控阵激光雷达。目前应用于自主泊车系统上的主要是机械式旋转激光雷达。 激光雷达优缺点激光雷达系统作为一种典型的主动传感器，其相对于视觉传感器和超声波雷达等有自己的优势。 激光雷达拥有极高的分辨率，它工作于光学波段，相比超声波雷达有更高数量级的信息，具体来说，激光雷达拥有更高的距离分辨率、角分辨率和速度分辨率。 激光雷达对光照和色彩等拥有极强的鲁棒性，因而它基本不会受到复杂的光线背景的影响。激光雷达获取的信息量也比较丰富，可直接获取的信息有距离和反射强度，通过简单的计算就可以获角度、速度等相关信息。 激光雷达还能生成目标多维度图像，相比较视觉传感器，它更容易获得物体的三维模型。 但激光雷达也有自己的劣势，主要列举如下。 激光雷达不能维持全天候的工作，由于受感知过程中传播过程的影响，激光雷达很容易受到大气条件以及工作环境的烟尘的影响。 激光雷达所能表现的特征维度终究是有限，这会给认知过程带来极大挑战。 激光雷达所产生的信息数量众多，这给数据存储以及信息传输带来极大的挑战。 激光雷达的造价是极其昂贵的，其离大规模落地应用还有相当一段距离。 激光雷达工作原理点云形成按照探测原理，激光雷达可分为单线（二维）激光雷达和多线（三维）激光雷达两种，由于单线激光雷达只能在二维平面上获得深度信息，其应用场景是比较单一的，它可用于探测有一定高度的障碍物，如树木、墙壁、行人这一类，但无法有效探测低矮障碍物和不规则物体。其只能起到探测功能，不能提供识别功能。而三维激光雷达可以采用多线数据，通过整合处理获得整个空间的信息。本节用于分析的激光雷达是多线旋转式激光雷达。 如图所示，在实际工作过程中，激光雷达每条线上都配备了使用高采样率的单个发射器和接收器，通过发射激光光束的时间差来确定距离，角度信息通过激光雷达旋转组件水平旋转获得，以此可建立在建立二维平面上的极坐标系。单个发射器也可以上下偏转通过俯仰角度的不同可获取第三维信息：高度信息。例如Velodyne的64线激光雷达系统垂直视角为26.8度。 激光测距技术激光测距技术。从技术原理分，主要有三角法激光雷达、TOF系列激光雷达、相位法激光雷达等三种。三角法激光雷达一般用于小距离测量，其主要应用于室内环境，但也有部分车厂用基于此方法的激光雷达来替代超声波雷达实现自动泊车。相位法激光雷达理论上拥有更好的性能，但目前由于技术局限性还未形规模落地产品。TOF（Time Of Flight，飞行时间）激光雷达目前是主流，机械旋转式和固态激光雷达中的大多数都属于此列。它通过计算激光光源到被测物体的飞行时间来进行测距。这一技术方向中是最有希望在汽车市场先行落地。 原理示意如下所示，光源发出由激光器调成的光脉冲，在遇到环境对象后反射，利用感光器接收反射回来的光线并得到数据。之后通过计算得到距离数据。TOF法目前主要有两种分类，脉冲调制技术和相位调制技术。前者通过检测目标反射脉冲激光过程的时间来获取距离信息，常用于机器人和自动驾驶。后者则是调制激光连续波的强度，通过检测相位差来获取距离信息，该方法的主要应用场景是测风、测速。]]></content>
      <tags>
        <tag>自动驾驶</tag>
        <tag>传感器</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶的终极问题 | 安全]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E7%9A%84%E7%BB%88%E6%9E%81%E9%97%AE%E9%A2%98-%E5%AE%89%E5%85%A8.html</url>
    <content type="text"><![CDATA[对于自动驾驶，随着学习深入，认识也越来越深刻一点。 安全问题自动驾驶想要落地，终极难题是什么？是安全。自动驾驶汽车从某种意义上来说就是一种轮式机器人，它和其他各种机器人的差别在哪里呢？在于它对工业化程度的要求，在于它集成的几万个零件，但最关键的还在于它对安全的需求。 自动驾驶汽车是交通工具，是需要完成承载任务的。扫地机器人失效了可能会撞到墙角死机，无人机没控制好可能会直接掉下来，运气不好的话可能还会砸到某个人的头。但是自动驾驶不能出错，或者我们不允许它出错，一出错就代表着死，这是自动驾驶汽车相对于其他智能驾驶机器人最大的特点。 “安全，安全，还是安全” 围绕自动驾驶安全这个点，再看自动驾驶的硝烟战场，你就能看的清晰很多。 对于开发。多传感器融合是为了什么？各种冗余系统是为了什么？ 对于测试。测试是检验安全的手段，也是保证安全的重要决策。针对测试，有基于数据模拟的软件在环，基于实物的硬件在环，驾驶员在环，车辆在环，封闭场地测试，实车测试。每种方式都有循序渐进，都有自己的特点。 对于场景。看看各大车企的主要落地场景吧，L4等级的汽车基本是不可能的。走的路线跳不出低速和限制运行场景两个大圈。高速公路上的自动驾驶系统、清扫车、园区无人车皆是如此。]]></content>
      <tags>
        <tag>自动驾驶</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶传感器 | 视觉传感器(三)]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E4%BC%A0%E6%84%9F%E5%99%A8-%E8%A7%86%E8%A7%89%E4%BC%A0%E6%84%9F%E5%99%A8-%E4%B8%89.html</url>
    <content type="text"><![CDATA[基于视觉传感器的认知过程是从获得的图像中获取感兴趣信息的过程。图像认知是一个逆解码的过程，它需要通过算法甄别各种无效的信息，获取有效的信息。现在的视觉认知可分为传统计算机视觉和新型计算机视觉两种。前者的核心是基于逻辑驱动的，以特征识别作为主要手段，后者以深度学习为代表，是基于数据驱动的。对于一个通用的自动驾驶系统，视觉传感器主要探测的对象有标线、其他地面标记、交通标志、可行驶区域(自由空间)、静态障碍物（如停放的车辆）、动态障碍物（行人和通用移动障碍物） 一些典型算法的介绍对于道路标线和其他众多交通对象。基本的处理过程利用图像传感器，可以使用图像顶视图整形，边缘提取和 Hough 空间分析来检测车位线边缘，从而实现标记检测。或者使用基于颜色分析的手段来定位位置，从外也可以使用基于 HOG 和 LBP特征的方法。 可行驶区域的检测主要是为自动驾驶提供路径规划辅助，可以实现整个的路面检测，也可以只提取出部分的道路信息，对不同的环境，有不同的路面检测方法，基本的方法有基于路面颜色、道路模型、路面纹理特征等获取路面的基本结构特征， 可通过这些特征进一步的获得灭点、道路边缘线、道路的基本方向（直走、左转、右转、左急转、右急转）等潜在信息。对这些特征使用传统的分割提取方法或者机器学习的方法进行可行驶区域的最终提取。 车辆、行人检测和跟踪通常是使用前置摄像头完成的，但随着环视摄像头的发展和计算能力的发展，车辆周边的车辆和行人都可以得到检测。车辆的检测和跟踪对于自动驾驶系统来说是极其重要的。通常来说，车辆检测问题和行人检测问题都是使用某种分类方法解决，视觉系统相比其他传感器能够根据对象类型轻松可靠地进行分类。典型的分类器包括 SVM，随机森林和卷积神经网络。 立体估计提供了障碍物的附加检测，大大减少了汽车紧急制动时的误报数量。现在有两种主要类型的相机深度感知技术：立体和单目。立体相机的主要优势是提高了感知深度的能力。它通过解决每个像素的对应问题，允许将像素位置从左相机图像映射到右相机图像。单目系统也能感知深度，但需要摄像机的运动来创建场景重建的基线。 自由空间是传感器视场范围内车辆周围未被物体占据的区域，可以被归类为占据网格图问题，并且通常通过将地表与其他物体分开来检测，与其他传感器类型不同，视觉系统可以提供不同且独立的估算车辆自由空间的方法。如可利用三维点云及其相应的障碍物信息；也可以通过重建车辆周围路面的特征提供有价值的自由空间信息。融合视觉的自由空间技术是有益的，其可以增加可用空间测量的准确性和可靠性。 对认知过程的特征工程介绍传感器的认知过程本质上是从图像数据到模型的映射，对该过程的影响因素的分析不再侧重于物理过程，而是侧重于信息提取过程。现有的图像处理算法有天然的不完备性，外界的三维信息在图像传感器中转化成为二维信息，信息量被削减了一个维度，由上文分析的感知过程也可以知道，由于硬件能力有限，图像中还存在着大量的噪声，最后，图像是经由复杂的图像物理形成的，图像亮度（辐射率）依赖于光源类型、强度和位置，观察者位置，表面局部几何性质和表面反射特性等，其逆任务，即从基于亮度的图像中抽取出模型，是一个典型的病态过程。 对自动驾驶系统的视觉认知技术而言，特征的提取是工作的核心。 抽象的图像处理过程如图所示,为了从图像中提取信息，图像像素需要被分组以形成集合。每个像素群对应于感兴趣的对象，不同的像素群会组成我们所需要的特征。图像的软件算法识别是一个自底向上的信息处理方式，从抽象的符号到更高的抽象描述， 其中的关键部分就是对特征的提取。精确定义特征需要结合实际问题和应用类型，对自动驾驶系统而言，典型的环境对象，如车道线、行人、车辆都有自己的特征。 特征提取是图象处理中的一个初级运算，它检查每个像素来确定该像素是否代表一个特征。从另外一个角度来看，自动驾驶的算法提取是从图像空间到特征空间再到任务空间的过程。 图像特征有不同的分类方法。从是否直观的角度来看可分为经典特征和新型特征。经典特征典型如颜色特征等，其视觉特征是自然的。新型特征则有着复杂的提取方式和计算属性，典型如用于人脸识别的 HOG 特征。从全局角度看有全局特征和局部特征之分。从特征抽象程度的角度来看，特征可分为底层、中层、语义特征。底层特征是所有直接可从图像中提取的特征，语义特征指有直接的语义含义的。中层特征介于两者之间。]]></content>
      <tags>
        <tag>自动驾驶</tag>
        <tag>传感器</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶传感器 | 视觉传感器(二)]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E4%BC%A0%E6%84%9F%E5%99%A8-%E8%A7%86%E8%A7%89%E4%BC%A0%E6%84%9F%E5%99%A8-%E4%BA%8C.html</url>
    <content type="text"><![CDATA[一个典型的视觉传感器系统，包括光源、镜头、传感器芯片和图像信号处理器和其他相关芯片 等，后三者也可以称为摄像头，此外计算机视觉芯片也是软件算法的主要载体。 光源光源作为视觉传感器系统的输入因素，能直接影响图片质量，进而影响最终的应用效果，它是成像的基础。 光源有可见光和不可见光两种类型，车载摄像头处理的主要是可见光，它有不能保持稳定的显著缺点。自主泊车系统面临的光源状况是极其复杂的，典型的光源类型有可自主发光的光源类型和依靠反射光的光源类型两种。前者有太阳、路灯、车灯等，后者有车辆和路面的反光灯。种类繁多，光照强度不一，打光方式、光线的角度也较为复杂，这会形成极其复杂的光线工况，对自主泊车的视觉传感器系统会形成极大的挑战。 镜头镜头对成像有很重要的作用，是光线转变成图像的重要媒介，对应人类它相当于人眼中的晶状体。镜头是利用折射原理， 让景物光线通过镜头进入摄像机模组之中，在聚焦平面上形成图像。镜头一般是由多片透镜组成相应的透镜结构，从材料上来分主要有塑料镜头和玻璃镜头两大类。 sensor传感器（sensor） 是摄像头的核心，它的主要作用是完成从光到数字的转换，具体过程是先通过镜头把光信息转换成电信息， 之后再经过内部的数字处理芯片转换为数字信息。 转换成电荷，再经过相应处理转换为具体的电信号。作为感光单位都是独立的高感光度的半导体，当外界光线通过摄像头透射到 CCD表面时，每个感光单位都会被激发出相应的电荷，不同部位的不同信号整合一起形成最终的图像。CMOS（Complementary Metal-Oxide Semiconductor）， 全称互补性氧化金属半导体。它的主要材料是硅锗半导体。光线透射进来时，CMOS芯片上会形成带着正负电荷的半导体，进而形成互补效应。在这个过程中产生的电流会被记录。 CCD 和 CMOS有各自的优点和缺点，CCD形成的图像，图像灵敏度、对比度都较高，但由于它不能像 CMOS一样直接访问每个像素，而且不能直接在芯片上处理信号，因而信息处理速度较慢。相比较而言， CMOS 传感器的体积更小，在芯片上它可以直接处理信号，功耗相对来说更低，帧率比较高，能满足自主泊车系统所需要的速度要求。更关键的是，CMOS芯片有更高的动态范围，能处理实际自动驾驶环境中的复杂光线问题。其缺点在于光灵敏度较差，且由于信噪比较低，噪声影响很大。由于自主泊车系统对实时性要求比较高，又需要处理极其复杂的光线难题，因而需要高的动态范围，因而实际应用于自动驾驶系统上的芯片是 CMOS 芯片。 处理芯片图像处理芯片是自动驾驶芯片的一部分，目前主流的自动驾驶芯片有 GPU、 FPGA、 DSP和 ASIC 四种。 图像处理芯片中的图像信号处理器（ISP）相当于传感器的控制器，它进行的前面光数转换的逆过程，即把数字信息转换为图像信息。从另外一个角度上讲，图像处理芯片的主要是在传感器中把原始信转换为可查看的形式，在图像的范畴中，其对应的主要是图像增强部分的内容。解码、去噪和高动态范围处理都是这一阶段的主要工作。]]></content>
      <tags>
        <tag>自动驾驶</tag>
        <tag>传感器</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶传感器 | 视觉传感器(一)]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E4%BC%A0%E6%84%9F%E5%99%A8-%E8%A7%86%E8%A7%89%E4%BC%A0%E6%84%9F%E5%99%A8-%E4%B8%80.html</url>
    <content type="text"><![CDATA[在提取外界环境信息时，视觉是一种非常高效的方式，就效率而言，它是获取信息最有效的手段，百分之八十的信息都会通过视觉的方式获取。在进行驾驶任务时，人类驾驶员也主要是通过眼睛判断周围的信息，再操作车辆进行相应操作。基于此， 研究人员研究了一门新兴学科，计算机视觉，其可应用在机器系统上使其获得视觉的能力，在自动驾驶系统上承载这一功能的核心部件是相机，隶属于视觉传感器系统。 视觉传感器原理介绍对于视觉传感器，其主要工作机制是外界光线经由物体反射等进入摄像机变成图像，之后计算机通过相关算法计算目标物体的特征量，从中提取出感兴趣对象的相应信息。依据数据和结果做出相应判断。并输出数据和判断结果的传感器。 视觉传感器利用的主要信息是可见光，它在电磁波中隶属一个比较特殊的波段。因为它可以天然被包括人类在内的大部分生物自然感知，可见光是一个比较特殊的波段。在进行驾驶行为时，视觉是人获取信息的主要依仗。大部分路面信息如车道线、障碍物、行人等也是通过视觉感知的。通过摄像头所得的视觉图像拥有极高的分辨率，也包含有大量信息，当前位置、周围环境的状态、可行驶区域的信息、障碍物和行人的特征都可以从图像中获得，另外根据连续图像的特征，我们也能推测预估其他对象的运动趋势。我们现在的位置、周围的环境、其他通勤者的状态。根据连续像，也能进一步推测其他对象的运动意图。 在自动驾驶系统的工作环境中，外界光源的信息是多样的，但无论是哪种形式的可见光，视觉传感器在探测可见光时只需要被动接受。与激光雷达、超声波雷达不同，视觉传感器并不需要主动发射电磁波来获取回波。这样视觉传感器就避免了机械发射结构的问题，其体积、复杂程度都得到了有效降低，另外它也避免了由于主动发射电磁波带来的传播过程的挑战。最后因为不会有限制发射功率这个概念，它相比激光雷达等主动传感器有更远的探测距离。 视觉传感器优点超声波雷达传感器的局限性在于它能获得的特征信息只是距离，特征维度单一，激光雷达的局限性就在于贵，其他传感器各自有各自的缺点。 如前文所述视觉传感器具有显著的测量分辨率优势，因此它们可以为某些物体类型生成精细点云数据，超声波传感器可能无法检测到极点和链路栅栏等，而这些“盲点”可能对自动驾驶功能的稳健性和可靠性产生巨大影响。摄像头可以建立较为精确的地面环境拓扑结构，以帮助定位，进而探测可用的自由空间。 另外大量的数据使得摄像机非常适合于机器学习技术，从而可以进行物体分类，例如行人和车辆。这些物体的分类生成另一个融合数据源，从而产生更智能和更具反应性的自动驾驶系统。 视觉传感器缺点基于视觉传感器的系统在当前也面临着许多挑战，它的研究对象主要是图像和视频，对于现有的计算能力来说，它的数据量相对来说是极其庞大的，以此也带来了极高的冗余信息。 另外通过图像可以获取形状、颜色、边缘甚至速度等特征信息，特征空间拥有很高的维度、而对于自动驾驶系统需要处理的对象和问题复杂性来说，面向单一特征的算法不能满足算法所需要的普适性和健壮性， 而为了满足普适性和健壮性设计的算法则需要极高的存储速度和运算能力。 对于机器视觉认知环境信息的机制目前还没有成熟的结论，在这一问题上，目前发展经历主要可分为传统计算机视觉和基于深度学习的计算机视觉两个方面。 传统的计算机视觉以特征提取为核心。基于深度学习的计算机视觉则认为应该去从人类大脑处理视觉信息的过程中得到经验，通过分析、模仿大脑的视觉认知机制来构建相应的机器视觉系统，但其目前对于我们来说还是典型的黑箱，对其运行机制没有清晰的学说，而且其对视觉的理解只能到定性描述的程度，不能获得定量信息，另外其相比传统计算机视觉需要更大的计算量。视觉传感器系统的健壮性、准确性难以得到保证。 需要处理的复杂对象有极高的信息量，算法的不确定性和模糊性也是影响健壮性的关键因素。 相比人类，视觉传感器的系统既需要处理人类面对的复杂庞大的信息流，又要避免人类在处理视觉信息时对准确性和定量数据额的牺牲，这在本质上是有矛盾之处的，这也是视觉系统的一大缺陷。 由于这些视觉系统有这样的典型不足，则在实际运行于环境时其必然会面临众多的边缘工况，需要通过测试去发现这些问题，并给予问题以准确的定位，从而消除潜在的系统存在的危险性。]]></content>
      <tags>
        <tag>自动驾驶</tag>
        <tag>传感器</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[武侠与我]]></title>
    <url>%2F%E6%AD%A6%E4%BE%A0%E4%B8%8E%E6%88%91.html</url>
    <content type="text"><![CDATA[武侠，对我很重要。 武侠小说，在我的阅读史里很重要。如果每个人都有文风的说法，那我的文风应该受金庸古龙的影响很大，或者说，受武侠小说的风格影响很大。 谈到武侠，当属金古梁温。 我读武侠小说是自六岁起，那是一个不能再普通的午后，在邻居家的书房，我看到了一本没有封面的厚书，好奇心驱使我拿起来翻了翻， 钱塘江浩浩江水，日日夜夜无穷无休的从临安牛家村边绕过，东流入海。江畔一排数十株乌柏树，叶子似火烧般红，正是八月天时。村前村后的野草刚起始变黄，一抹斜阳映照之下，更增了几分萧索。两株大松树下围着一堆村民，男男女女和十几个小孩，正自聚精会神的听着一个瘦削的老者说话。那说话人五十来岁年纪，一件青布长袍早洗得褪成了蓝灰色。只听他两片梨花木板碰了几下，左手中竹棒在一面小羯鼓上敲起得得连声。唱道： “小桃无主自开花，烟草茫茫带晚鸦。几处败垣围故井，向来一一是人家。” 《射雕英雄传》的第一章，自此我打开了武侠世界的大门。仍记得，那时的我坐在邻居家花坛边上，月季花香气正盛，院子里的光从左边移到右边，看到眼睛酸痛仍不愿放下，爸妈喊我吃饭也没回去。 那时候我是怕生的，想借书但不敢说，抱着书来回纠结了十几分钟。最后还是鼓起勇气请邻居把这本书借给我。这也是我印象中的，第一次明确感受到“鼓起勇气”。 《射雕英雄传》作为入门的武侠书是完美的。五绝，东邪西毒南帝北丐中神通，每个人背后都有相应的故事线。人物形象鲜明，故事曲折生动且不虐心，靖哥哥和蓉儿长岭遇雨的爱情，郭靖侠之大者，为国为民的大义。牛家庄的风雪夜引出的一段荡气回肠的江湖故事。 那本书我借了两个月，反反复复读了几遍，读到厌倦才停下。 至此一发不可收拾，陆续读了《神雕侠侣》、《笑傲江湖》、《鹿鼎记》等，基本都是金庸六大本的范畴。后来反复重读也是在这六本的范畴里。 飞雪连天射白鹿，笑书神侠倚碧鸳。 后来随着年龄增大，又陆续读了飞狐外传和雪山飞狐，连城诀，以及金庸的其他小说。尤其欣赏雪山飞狐和连城诀。尤其是连城诀这个中篇，我认为它是古龙小说中的《白玉老虎》。 其实我个人最喜欢的还是古龙的风格，华美的文字，诗歌一般的语言。初读古龙，是在初三，第一本读的就是《多情剑客无情剑》，现在仍记得躲在被窝里看《楚留香传奇》时心脏砰砰直跳的感觉。 古龙的成熟风格如散文亦如诗。他早年起笔借鉴的是金庸，笔下的传统古典武侠意味儿很重。中间也有《武林外史》、《大旗英雄传》、《绝代双骄》、《浣花洗剑录》等优秀作品问世。到了巅峰期，整体上评价较高的有三个系列，以李寻欢为代表的小李飞刀系列、《楚留香系列》和《陆小凤系列》，这是古龙文风趋于成熟时的作品，悬疑和武侠氛围结合的很好，读来让人不忍释卷。其中也诞生过一些著名的人物，除三大男主外，还有外冷内热的阿飞，绝世剑仙西门吹雪等。也有过荡气回肠的角斗，月圆之夜，紫禁之巅，一剑西来，天外飞仙。 在古龙的巅峰之作中，《欢乐英雄》和《白玉老虎》也应占一席之地。欢乐英雄的地位大致类似于《鹿鼎记》之于金庸。都是用几十个故事塑造了自己的武侠和江湖风格，再用一本书毁掉它。这是堂吉诃德之于骑士小说的程度。白玉老虎则是真正的集大成之作了，少了中后期作品的矫情杂糅等缺点，而将自身优点发挥的淋漓尽致。可惜的是，故事到了绕不开的结时，戛然而止，这也是无数古龙迷心中的痛。 小学钱一毛毛省的日子里，为了买一本盗版笑傲江湖，攒了快三个月的十块钱我递的毫不犹豫。 初中毕业后实习的那两个月，在午夜时分，我就着白炽灯在雨棚下烧烤炉旁读古龙的萧十一郎。 高一四周放假一天，那晚上我总是躲在被窝里，借妈妈的手机去看楚留香传奇。 大学到了图书馆，学累的时候，我总是到五楼抱着一本天龙八部就开始读，直到十点闭关音乐响起。 读研时，跟我女朋友骑着小电驴在雨中穿行，她坐在我的后座靠在我背上，我跟她讲长岭遇雨。 到了现在，有时候读读《剑桥金庸武侠史》这样串联金庸诸书的脑洞文学，偶尔看看六神磊磊读金庸的私货，再到知乎上浏览一遍书中细节。 对于这些书，这些故事，一年一年，我总是不知疲倦。 有个说法是，武侠是成年人的童话。我不好评价这个观点，但我就是喜欢武侠小说啊。江湖之梦，刀光剑影。它应是疲惫现实的英雄之梦。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶中的黑天鹅问题 | 浅谈Edge Case 边缘测试用例]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E4%B8%AD%E7%9A%84%E9%BB%91%E5%A4%A9%E9%B9%85%E9%97%AE%E9%A2%98-%E6%B5%85%E8%B0%88Edge-Case-%E8%BE%B9%E7%BC%98%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B.html</url>
    <content type="text"><![CDATA[以下是黑天鹅事件的百度百科 “黑天鹅”事件是指满足以下三个特点的事件：它具有意外性；它产生重大影响；虽然它具有意外性，但人的本性促使我们在事后为它的发生编造理由，并且或多或少认为它是可解释和可预测的。 黑天鹅事件具体展开可叙述的点很多，总的来说，它是一种经验陷阱，人类的大脑过分依赖于因果关系和简化，只能看到最显而易见的东西。但现实是一个复杂系统，原因往往没那么简单，要对经验之谈保持警惕。黑天鹅事件也会导致预测误区，在制定计划过程中往往需要注意不确定性来源。 自动驾驶中的黑天鹅问题，本质上也是一种经验陷阱和预测误区。长久以来，所有的欧洲人都确信天鹅都是白色的，这是一个牢不可破的信念，直到在澳大利亚发现了第一只黑天鹅。如果群体没见过一件事情，那就倾向于这件事情不存在。这个问题在基于深度学习的自动驾驶系统中会被无限放大。 深度学习在自动驾驶中的应用范围很广，可以换个说法，自动驾驶就是深度学习发挥自己价值的主要战场之一。深度学习主要用在自动驾驶的感知和决策上，在基于视觉的感知层面表现尤其出色。 深度学习是由数据喂出来的，无监督的、有监督的，但本质上都是从数据中总结出既有模式，如果在训练深度学习算法时就没有加入某类数据，深度学习的框架就无法获取对特定特征的认识，在遇到特殊对象时，就无法有效识别，而且这种情况是无法通过改善神经网络结构而得到改善的，这得从数据源头解决。 我们常说，对于人工智能，数据就是一切，大致分两层意思，其一，大量的数据可以让神经网络避开欠拟合、过拟合等问题，提高系统的鲁棒性。第二，大量的数据包含对于此领域各种能想象到的、不能想象到的模式，可以用来避免黑天鹅问题。 那么如何避免黑天鹅问题呢？ 对于传统的黑天鹅问题，想要规避它，主要有以下几个手段。 第一，反精准预测。指不再追求过度的确定性，而是关注由此事件带来的利弊，并针对利弊来做好相应的准备。 第二，避免负面黑天鹅事件，追寻正面的、积极的黑天鹅事件。即在面对新的、特殊的机会时，一定要抓住，常规事件可以一直做，正面的黑天鹅没了就没了。 第三，运用杠铃策略。杠铃两头重、中间轻。就是对确定性大的事实给与更多资源，对于确定性小的事情反而可以做极端决策。 对自动驾驶来说，这些手段有什么指导意义呢？ 首先应该在意识上认识黑天鹅的重要性，认识不到黑天鹅是极其愚昧的，忽略黑天鹅的存在是极其愚昧的，对自动驾驶来说，尤其如此。 做好针对黑天鹅的决策，端到端的自动驾驶系统是不可以落地的，必须做冗余，以深度学习系统作为制定决策的依据之一，深度学习解决不了的黑天鹅可以被其他系统解决。 从源头数据集解决问题，发挥头脑风暴，尽可能穷举edge case，即边缘测试用例。虽然穷举的难度很大，但可以从信息论的角度制定出edge case的抽象特征，再通过收束世界模型的维度，从而提高edge case的覆盖性。 依然从数据源这一点解决问题，我们可以针对已有的一些数据做一些改进，进而提高数据的多样性。比如我们可以对数据进行翻转、卷积等操作，再以这些数据重新训练神经网络；再比如可以通过GAN把一些极端天气特征迁移到数据集上，重新训练神经网络。]]></content>
      <tags>
        <tag>自动驾驶测试</tag>
        <tag>机器学习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Unity自动驾驶仿真]]></title>
    <url>%2FUnity%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E4%BB%BF%E7%9C%9F.html</url>
    <content type="text"><![CDATA[关于自动驾驶仿真，以前的博客已经有过一个概略介绍,，比较偏向理论层面，参见此处。 目前的开源仿真工具主要是基于Unreal和Unity完成的。前者的代表有Carla和Arisim，后者的代表有lgsvl模拟器。 本篇主要关注基于Unity的自动驾驶仿真开源资源，从wiki和其他网络资源收集而来，重点放在工具总结上面,希望可以作为一个粗略的资源列表。 为什么要做一个新的模拟器市面上有一些优秀的商业软件，如Prescan，VTD等，但它们非常昂贵。也已有一些开源项目，但它们往往不是基于现代引擎开发的，因而它的图形和通用软件环境可能有些过时。所以就自己搭建一个吧，搭建时需要注意以下几点： 不要重复造轮子，要在游戏引擎的基础上构建 要利用成熟的3D游戏工作流、技术、硬件和技术社区 开源 要有可扩展性 要模块化(包括各种输入输出设备，AI，传感器等) 能足够灵活进行原型设计，驱动评估，自动测试 为什么选择Unity因为它是Unity，就是这么简单，好吧，我们认真来说，因为Unity 版本迭代稳定，目前已到第四版本 已经有很多基于Unity的项目，有众多游戏和开源项目使用的都是Unity 集成有动画、粒子系统、导航网格、物理、occlusion等各种功能 可以使用C#，Mono等成熟的脚本 可以在win/Linux/Mac等多平台上使用 有良好的社区氛围(众多开发者和素材) 有好的文档支持，包括但不限于官方文档，论坛，第三方教程，youtube等 是创新硬件产品的首选平台(Oculus Rift一种虚拟现实设备, Hydra Razer体感控制器, Leap) 免费/价格较低 不开源，但是可扩展(编写脚本，low level dll等) 为什么建立在游戏平台上游戏是3D软件中最先进的一种形式，它会不断挑战极限，不断为引擎加速迭代代码。功能如可编程着色器、物理引擎、预照明、导航网格、动画混合系统都是等等都是游戏引擎支持的，或者可以让以实时帧率运行。游戏产业也推动了硬件创新，比如英特尔的GPU开发、罗技G27车轮、TrackIR头部跟踪器、Leap手势传感器、Oculus Rift和低延迟传感器等输入控制器硬件。利用这种低成本的硬件进行模拟也将允许更多的观众访问功能合理、价格合理的模拟器。 资源 环境搭建地形构建对自动驾驶仿真来说，这一项优先级较低 Terrain Toolkit，Youtube视频 WorldComposer,可以从真实环境中构建数据城市(建筑物)构建 CityEngine 快速生成城市模型的软件，功能很强大 ViziCIties 它使用了开放地图数据，结合3d生成的建筑物进行缩放，混合了从英国政府、环保机构到Twitter等各种来源的大数据。 VTP 主要用于基于路网建设的城市，支持较多道路设计文件格式。路网(道路)构建 Road Architect 以动态交叉口、桥梁等多种道路物体为特色，是非常专业的道路建设软件 EasyRoads3D 特点是能建立众多跟道路相关的对象如栅栏，墙，树等。 从OSM中直接导入较为困难，可以考虑OSM-CityEngine-Unity3D 的工具链 从点云信息，3D地图建立，发展中。 建模(具体建筑物、车辆等)Unity本身并不是一个建模工具。它是一个“场景装配”工具和实时游戏引擎。所以详细的3D建模一般都需要在其他工具中完成。 Unity中现成的素材可以很容易地统一起来。在“ 3D Models Category of the Unity Asset store”里可以用免费或很少的钱购买到Unity中的大量产品。:如果你正在寻找一些相关的模型,在资产存储搜索“pack”,例如. Vegetation pack, City pack等等。 作者还将提供一个在线演示的基于嵌入式网页unity播放器的demo等。 对于资源包的搜索，网上有大量的整理博客，这里就不再赘述了。当然，你也可以自己建模解决问题。 交通流架构交通流对自动驾驶仿真来说是极其重要的，自动驾驶车终究不能永远活在实验室里，它终究要上路，要面临那些复杂的工况。所以交流通仿真在构建测试场景中是极其重要的。 一些online资源网站 Vehicle Traffic Simulation with Unity Martin Treibe 交通计量经济学、建模与统计研究所 资源无限，请自己多关注这个网站 Unity中的A*算法 关于交通流仿真的书 《Fundamentals of Traffic Simulation》 《Verkehrsdynamik und -simulation: Daten, Modelle und Anwendungen der Verkehrsflussdynamik》 《Traffic Flow Dynamics》非Unity的交通流仿真工具 PTV VISSIM PTV VisWalk可以提供给行人仿真(包括人群，对象，路径规划，冲撞避免等)。 PTV Balance提供了基于绿波的实时交通数据的自适应信号控制， PTV Optima 大规模交通可视化，态势感知，预测，事件检测。 PTV Visum Safety 事故数据分析与检测，分析事故集群。 SUMOSUMO是一种开源的、微观的、多模式的交通模拟仿真器，它允许模拟由单个车辆组成的给定交通流如何通过给定的路网。该模拟允许处理大量的交通情景。它是纯微观的:每一辆车都被明确建模，有自己的路线，并单独通过网络移动。 假如你下载SUMO的包，你会发现它包含许多除去SUMO之外的应用，这是用来导入和预处理路网的，以及它能为SUMO提供一些前期数据准备。 Unity自带的交通流工具 iRDS UnitySteer Auto21 Traffic Modeling and Simulation》 Verkeerstalent 天气天时架构Unity中提供了一些简单的天时控制和天气控制 天时特点 太阳位置(仰角，方位角)控制 阳光的颜色和强度由角度和大气散射调制 太阳在低角度会产生眩光效应 天空背景沙河动画(或者至少白天黑夜之间有差别) 通常至少有几个云层 云可以由程序生成和形成动画天气特点 降雨效应 地面效应(滴溅系统、颗粒系统)(积雪融化) 更多效果(吹风，树叶降落) 闪电和纹理(有疑问，不懂) 各种天气的声音 车辆&amp;物理(动力学)NPC触发传感器仿真仿真自动驾驶时，传感器仿真是不可或缺的，radar、Lidar、 数据记录其他的开源项目 C.I.T.Y. Simulator in Unity CASA 当前的几大车企也都有自己的驾驶模拟实验室，各自服务于不同的研究工作。比如Stanford REVS/CHIme。研究的最初目标是为了处理下面个现象。人类可能会过度信任自动驾驶汽车，人机共驾其实是一种非常危险的状况。因此建立这个实验室去研究人机长时间共驾时以及驾驶任务切换时的驾驶员状态。此外还有Toyoto、University of Leeds]]></content>
      <tags>
        <tag>自动驾驶仿真</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[书评 | 《数学之美》]]></title>
    <url>%2F%E4%B9%A6%E8%AF%84-%E3%80%8A%E6%95%B0%E5%AD%A6%E4%B9%8B%E7%BE%8E%E3%80%8B.html</url>
    <content type="text"><![CDATA[10月初，我在微博写道，读书也是需要虚实结合，践行平行理论的。最好的模式是对每本书，都有一个纸质版和电子版。不同的时间阶段选不用的类型；不同的篇章段落选不同的类型；不同的学习目的选不同的类型，这样才能取得更好的进步。这话说了不久，我就下单了三本书，都是以前在pdf上阅读过的，分别是《数学之美》、《视觉SLAM十四讲》、《算法第四版》。这个月的闲暇时间里我翻阅了挺多次这几本书，纸质书空间上方便的可回溯性确实在增深阅读理解能力方面效用明显。 说回《数学之美》这本书，这是非常值得推荐的一本书。在给课题组新来的小伙伴发新生大礼包的时候，除了一些必须的相关领域之外，我极私心的想补入两本书，一本是《信息简史》，另一本即是《数学之美》。我认为这两本书能重新培养学生看待和运用知识的视角，能提供一种新的基于信息的世界观，这是其他日常看论文所不能训练的能力。 《数学之美》最初是吴军博士写的谷歌黑板板，后来被整理修改成书。因为最初就是科普向，所以整本书写的深入浅出、通俗易懂，而这正是这本书最值得推荐的点，用最浅显的语言，说最艰深的道理。这种通俗性不仅表现在语言上，也体现在内容推导上。你看到了自然语言处理，了解了香农的信息论，但吴军博士介绍他们背后的原理只用到了一些基础概率论知识而已。 真正的科普文就该像吴军博士一样，用高中学过的余弦定理去解释文本分类，用几个对数公式讲清了信息论的基础概念。把复杂的内容说的简单是一种能力，这是一种返璞归真的境界。科普文就是科普文，借着科普文秀一些学术用语其实是很不专业的做法。好的科普文能开拓人的视野，增加人对特定领域的兴趣，提升人的科学意识，而这些，《数学之美》都完美的做到了。]]></content>
      <tags>
        <tag>读书</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[博客搭建进阶]]></title>
    <url>%2F%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%BF%9B%E9%98%B6.html</url>
    <content type="text"><![CDATA[一些基本配置之外的关于hexo博客的问题。 双域名绑定问题之所以想进行coding和github域名的双部署，其一是因为部署在github上的网站在手机打开时，速度极慢。其二是因为部署在境外的网页比较难被收录。在部署时有几点注意事项。 基本操作和部署在github上一致，首先在coding上注册仓库，在进行git连通时，只需要把C盘中的id_rsa.pub文件符合过来做秘钥。对，我们采用同一个秘钥。 在源文件目录下的config文件夹找那个_config文件，进行deploy配置，具体代码可参考如下。 12345678deploy:- type: git repository: github: git@github.com:sheepwxy/sheepwxy.github.io.git coding: git@git.coding.net:yanziiz/yanziiz.coding.me.git #coding: git@git.coding.net:yanziiz/yanziblog.coding.me.git branch: master - type: baidu_url_submitter 在你的域名解析网站里放两条CNAME记录指向{yourusername}.coding.me,主机记录分别设置为www和@。尤其需要注意的是，coding网站后来的解析是不支持双线部署的，因为它的服务器是在国外，所以当你把解析线路设置为默认的时候，它就会挤掉github的解析。这种情况再coding上会出现”域名未连通的问题”。/font&gt;解决这个问题，可以先把DNS服务商里所有的域名解析都删掉，之后添加coding的两条解析，把解析线路设置为默认，再添加github的解析，最后只保留github和coding的解析， 评论系统虽然这个博客目前还是个私人化的产品，但我内心还是渴望交流的，刚开始只是想在头像页附上一些联系信息，但这终究是一种受限的交流方式，于是先建立自己的评论系统。 来必力评论系统，一切都好，只有一个缺点，慢。每次打开网页看到刷新速度，实在受不了。 其他可以使用的，除了Disqus外，其他都有各种确定的不可忽视的问题。DIsqus我试用后不行，至今尚未解决。 最终选定了GitComment系统，它是基于github的issuse page 实现的，风格简洁，刷新速度快。缺点是不能一键全部初始化，而且评论者需要用github账号登录才可以评论。不过没问题，就当过滤了。配置教程 Hexo的SEO优化网站如果不进行基础的SEO，一个个关键字搜过去都没用，写了东西总不能把它完全仍在互联网的黑暗角落里留它哭泣，必备的SEO还是要有的。 SEO是面向搜索引擎的，我是针对百度和谷歌进行搜索优化，关键是学会利用百度站长工具和google search consle 这两个工具。 最主要参考的网址 百度链接主动提交 常见问题狙击 修改未显示在网页上；正确配置确让网站失效的问题。使用hexo clean,重新进行部署。 在hexo中使用latex要在每篇文章头部加入mathjax，同时要修改部分配置文件，以使其满足日常latex语法。参考链接]]></content>
      <tags>
        <tag>工具</tag>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶仿真随笔]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E4%BB%BF%E7%9C%9F%E9%9A%8F%E7%AC%94.html</url>
    <content type="text"><![CDATA[道路测试量较大，难以复现；用以数据训练与验证的实际场景采取成本有限；开发性验证周期大于目前开发周期； 仿真模型 车辆几何模型 车辆动力学模型 - 由主机厂提供 传感器模型 LIDAR 点云数据和噪声模型 摄像头 单目、多目、鱼眼 毫米波雷达 简化噪声 GPS与IMU 噪声模型 道路环境 OpenDrive GIDAS 标准仿真流程搭建标准案例库，提供泛化调参功能，生成标准任务；生成批量任务，自动进行分布式计算测试场景与车辆状态的实时反馈基于自定义触发的消息与数据记录基于自定义数据，报告输出 一些暂未归类的问题 通讯问题。通讯模式，同步/异步？ 信息队列/共享内存？ 整个软件的数据库架构]]></content>
      <tags>
        <tag>自动驾驶仿真</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[博客搭建基础]]></title>
    <url>%2F%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%9F%BA%E7%A1%80.html</url>
    <content type="text"><![CDATA[整个配置下来后最大的感触是，一定要看文档，文档里基本就把所有的坑填了。别人的教程，包括我这个教程，都是有很多错误的，我在配置里踩了很多坑，最后都是看教程才解决的。 hexo文档next文档github域名pagesCoding域名Pages 这些其实已足够，后面的阅读全文根本不用打开。 环境配置此处建议参考hexo官方文档，准确省事儿。 安装node.js。 通过在命令行中输入npm -v，观察有无版本号来检测安装是否成功。 git相关环境配置。 注册一个github账号 在github上创建一个仓库，注意仓库名是你自己的用户名.github.io 在官网上下载git安装。通过在命令行中输入git 来检测安装是否成功 在桌面空白处鼠标右键选择Git Bash Here，打开的命令行中输入git config --global user.name &quot;你的GitHub用户名&quot;git config --global user.email &quot;你的GitHub注册邮箱&quot; 生成ssh秘钥文件，ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot;直接按三个回车。找到生成的id_rsa.pub文件，该文件一般在C:\Users\你的电脑名.ssh文件夹中。记事本打开该文件，复制全部内容。 打开github的“settings-SSH and GPG keys”,右上角New SSH Key，title随意，内容为刚复制的内容，点击 add SHH Key结束。 回到git bash命令行，输入ssh git@qithub.com,若出现You have successfully之类的字眼就代表成功，其他信息不用去管。 博客配置此处依然是建议从hexo官方文档 博客安装&amp;预览 安装hexo。新建一个文件夹hexo，在文件夹空白处鼠标右键选择Git Bash Here，输入npm install hexo-cli -g 初始化博客。输入hexo init blog 安装必备依赖。npm install 新建博文，生成博文，打开预览。hexo n &quot;文章标题&quot;,hexo g,hexo s -p 5000 操作完成后，在浏览器打开localhost:5000，就可以看到自己的博客。 推送网站 在刚初始化的blog目录下面，找到_config.yml文件，用自己的编辑器（sublimetext）打开，首先在最后面deploy下面加入 github: git@github.com:你的GitHub用户名 你的GitHub用户名.github.io.git 注意.第一个冒号之后必须添加半角空格，这是yml文件格式；第一个冒号后面的不能用其他教程上的https格式的链接，那是旧的版本。 安装部署插件.npm install hexo-deployer-git --save 进行部署，输入三条命令。hexo clean,hexo g,hexo d 打开网站”你的用户名.github.io”就可以看到自己的博客内容了。 绑定域名域名的作用是帮助更好的记忆网站，它的工作过程是由DNS服务器域名解析到提供页面的github解析页上。绑定域名过程如下。 去域名供应商上注册域名，阿里云、腾讯云、Godday都可以。 打开实名认证后的域名，添加一条A记录，一条CNAME记录。A记录建议主机记录为@，解析线路选择境外，记录值为185.199.111.153，注意这里是最新的github的ip地址，其他的都是错误的。CNAME记录的主机记录设置为www，解析线路选择在境外，记录值为你的GitHub用户名.github.io 在安装目录下(对于本例，就是hexo文件夹)，用notepad++、SublimeText等建立一个All files类型文件，文件名为CNAME，文件内容为你的域名，例如iamwxy.com，不建议带www. hexo g,hexo d进行部署. 打开github中自己建立的仓库的Settings页面，找到GitHub Pages，在custom domin中填入自己的域名，点击Enforce，HTTPS。大功告成。 主题类型建议使用next，确实有很多优势，了解具体的next功能配置，以及学习如何使用，请参考next官网，遇到任何问题，可通过下方评论与我交流。 自己的_config文件。12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697# Sitetitle: 吴旭阳的博客subtitle: 博观而约取 厚积而薄发description: 生活随笔 高效学习 自动驾驶 数据分析 交叉领域 读书笔记 signature: 生活随笔 高效学习 自动驾驶 数据分析 交叉领域 读书笔记 keywords: author: 老肥羊language: zh-Hanstimezone:# URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: http://iamwxy.comroot: /permalink: :title.htmlpermalink_defaults:# Directorysource_dir: sourcepublic_dir: publictag_dir: tagsarchive_dir: archivescategory_dir: categoriescode_dir: downloads/codei18n_dir: langskip_render:# Writingnew_post_name: :title.md # File name of new postsdefault_layout: posttitlecase: false # Transform title into titlecaseexternal_link: true # Open external links in new tabfilename_case: 0render_drafts: falsepost_asset_folder: truerelative_link: falsefuture: truehighlight: enable: true line_number: true auto_detect: false tab_replace: # Home page setting# path: Root path for your blogs index page. (default = '')# per_page: Posts displayed per page. (0 = disable pagination)# order_by: Posts order. (Order by date descending by default)index_generator: path: '' per_page: 10 order_by: -date # Category &amp; Tagdefault_category: uncategorizedcategory_map:tag_map:# Date / Time format## Hexo uses Moment.js to parse and display date## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DDtime_format: HH:mm:ss# Pagination## Set per_page to 0 to disable paginationper_page: 10pagination_dir: page# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: next#local_searchsearch: path: search.xml field: post format: html limit: 10000# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy:- type: git repository: github: git@github.com:sheepwxy/sheepwxy.github.io.git coding: git@git.coding.net:yanziiz/yanziiz.coding.me.git branch: master - type: baidu_url_submitter#SEOsitemap: path: sitemap.xmlbaidusitemap: path: baidusitemap.xml]]></content>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ROS安装简史]]></title>
    <url>%2FROS%E5%AE%89%E8%A3%85%E7%AE%80%E5%8F%B2.html</url>
    <content type="text"><![CDATA[今天是成功安装ROS的一天，非常好。第一次装ROS是在16年10月，最后报错是”Hash Mismatch”,也没在意，转身就投入了其他工作。那时候应该没想到，以后的我和它会反复纠缠五六次，直到18年十月才安装成功。 在教程非常清楚的前提下，这五六次尝试每次都会被相同的问题狙击。被一个敌人击倒五六次的感觉，相比被五六个新对手击倒的感觉，还是前者更难受一些。 我有些迎难而上的性子，每次不成功就想再去尝试，于是每次安装失败后都会花很多时间去google搜一下，去论坛问一下，找有经验的开发者帮助一下，但是他们都没有相同的错误，两三个小时下来，结局都是失望，无一例外。 失望后就暂时放弃，中间学习时又恍恍惚惚想起来ROS，像一个可望不可及的遥远的梦，至此它已不再是一个单纯的学习工具，它变成了我的心魔。在时间略微充裕的时候，在看到别人提到ROS时，我就总是忘记了以前的痛，重新安装，重新失败，重新失望，重新燃起希望，周而复始，无间之道。 昨晚看到知乎提到ROS，又被重新点燃了学习ROS的欲望，晚上临睡前就想着尝试实验楼或双系统路线，次日清晨的实验楼，399元没年，放弃。在装双系统之前鬼使神差重新进入Ubuntu虚拟机，这次一路通顺，安装成功。 我在桌子下重重地捏了一下拳头，这是对自己的奖励动作。记录一下这次成功的环境。 虚拟机从官网安装 使用Ubuntu14.04版本（镜像来自阿里云） 更新源列表来自同济，配置自Other Software（这个也许就是解决问题的最大原因） 主要下载服务器是Main Server，勾选了“universe”，“resticed”和“multiverse” 教程选自官方链接 没有专门做梯子网络配置 其实我从来也不知道自己这个迎难而上的性子是好是坏。它太容易让我走极端，不能让事情往最高效的状态发展。但这也培养了我解决问题的信心，有信息、有坚持、有思考，大多数所谓的问题都是可以迎刃而解的。]]></content>
      <tags>
        <tag>总结</tag>
        <tag>ROS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[统计|数理统计简史(三)]]></title>
    <url>%2F%E7%BB%9F%E8%AE%A1-%E6%95%B0%E7%90%86%E7%BB%9F%E8%AE%A1%E7%AE%80%E5%8F%B2-%E4%B8%89.html</url>
    <content type="text"><![CDATA[这本书后面章节已经比较难懂，想要读懂需要更基础的入门知识，而且我对那部分的内容兴趣也不大，因而不会再做更细致的总结，《数理统计学简史》一书阅读基本结束。 这是一本非常好的科普书，帮助我厘清了很多概念，让我对以前学过的知识有了更深入的理解。我还买了这本书的实体版，pdf+实体书的虚实结合阅读体验不错。之后是从最基础部分一步步入门，抑或是作为一个非科班研究者以学习其他人的总结为主，还有待评估，但总之不会结束。 一个小阵地贡献了，还有无数大的阵地，学海无涯，且行且清醒。 统计学历史统计学(Statistics)一词本就出自意大利语，词根兼有”国家”和”情况”的含义。统计学和国家统计关系密切。在国情统计的过程中，格朗特及其《观察》扮演着重要的角色，本书出版于1662年，可被认为是统计学的起点。 这本书提出的一些主要创新思想如下 数据简约（data reduction）的概念，即把大量数据整理成表格 提出并举例处理了数据的可信性问题。 统计比率的稳定性概念，指某种特性出现的频率，岁观察次数增加而趋于稳定。 给出了现存人口年龄分布的生命表。 佩蒂于1690年出版《政治算术》遗书，采用数据来分析政治、经济、社会问题，这也是一个新的思想。阿布子诺特于1710年写了文章研究男女出生比例问题，引出了假设检验。魁特奈特所做的统计工作，大部分和人口调查有关，他引入了比例法和代表性抽样,由于这种方法的局限性，引出了数据同质性问题，即比如说比较身高，大学生和小学生放在一起比较是没意义的，因为它们是不同质的。魁特奈特认为：可以把一批数据是否能充分好地拟合一个正态分布，作为该批数据是否同质的一个判据。，但他采用的方法较繁琐，且不同质的数据有时候也能拟合高斯分布（后文介绍）。其还引入社会学上普通人的概念。 回归与相关：发现与早期发展回归相关时一个重要的工具，它沟通了原来不相关的两个领域：误差论线性模型和统计学。代表性成果是费歇尔的方差分析。 高尔登是正态分布的坚定支持者，在各种社会数据中都成功应用了正态分布，但这个在处理遗传身高问题时遇到了逻辑漏洞。考察亲子两代身高数据，发现其遵守同一正态分布。但是按照拉普拉斯中心极限定理，正态分布是大量但每一个作用较小的因素的作用，但遗传是显著因素，按道理应该是高的孩子更高，低的更低，最终两极分化，这和亲子都是稳态分布相悖。高尔登为了解决这个问题，发现了回归。 设想一个苹果园，不同位置是显著因素（阳光多的地方长得好），在不同位置的苹果大小会呈现正态分布，所有苹果合起来也是正态分布，这是因为阳光也是由各种小正态分布合成的。高尔登设计了如下高尔顿钉板，用以模拟二项分布，进而模拟正态分布。一共有$n$排钉子，各槽内球数服从二项分布$B(n,\frac{1}{2})$高尔登为了解决上面的问题，创造性地设计了另外外一个装置。图中每段标黑的部分可视为一个新的源，底部原先的大正态分布是各种诸如1,2,3的小正态分布的和。横板$AB$在这里可以看成是一个显著因素。这个发现的意义是实用层面的，他把正态分布创造性地解释遗传现象，也解释了文首魁特奈特用正态拟合作为数据同质性判断提供了理论。 高尔登也解决了回归问题，即子代身高有向母代中心靠近的趋势。子代均值与母代相同可以通过对称性来解释，至于子代方差，若没有回归，子代会因为条件方差而变大，但现在由于回归使得子代均值有了收缩。相应缩小了方差，从而抵消了增长。解释图可参考下图。]]></content>
      <tags>
        <tag>统计学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[表达能力（二）]]></title>
    <url>%2F%E8%A1%A8%E8%BE%BE%E8%83%BD%E5%8A%9B%EF%BC%88%E4%BA%8C%EF%BC%89.html</url>
    <content type="text"><![CDATA[我们再谈一下表达能力。第一篇在前文，题为《表达能力》 晚上讲座，最后提问阶段。一女生发问，声音很好听，音色亮，吐字清晰，概括来说，声音很正。美中不足的是，她每句话都会带两个”就是”，这习惯正类似于其他人发言时常用的”然后”。 “我想说的就是您的演讲给了我很多启发，就是我想问您个问题，就是..” 如果说话人声音平平无奇，我也不会在意，只会随意把这情况归结为紧张。但这位女生音调音速音色都称得上优秀，话里带这些无意义的词就让人很惋惜了。 自己是否也会有类似的问题呢？细细想下是有的。只不过平常表达机会不多，这类问题被掩盖了，真去表达比较长的想法的时候，然后这个词就像条件反射一样会窜出来，挡都挡不住。 替换”然后”和”就是”是不难的，中国文化浩瀚无垠，有那么多可用的转折词、副词可用。但这里也许不止是简单的虚词替换的问题，从软实力的方面，心理状态、自信程度、发言经验都是核心影响要素，从硬实力的角度看，词汇量的储备，句式的丰富度也都需积累。想做好这些，就不是一朝一夕之事了。 先谈心理状态，这应该是最核心的要素了。人若有自信，则在发言前大脑不至于一片空白，就发言所需的条理程度，稍微组织一下就能说的不错。但自信心这个实在是不好速成的事，很多表达清晰的人也不能说这全都是因为自信。那是因为什么呢？ 是经验。我上一篇也反复强调过，口语表达对复杂逻辑的要求并不高，什么事儿，做的次数多了也就有了经验。就像以前提到过的“博士生该如何提问”的问题，在会议上提问的多了，也就很自然形成了套路，可概括为COLUMBO，即COmparisons,Longterm Undertakings，Methodological Building和Origin。翻译为中文，可说你的论文和另一篇论文有什么区别？您的论文未来有哪些相关研究？你的实验中运用了哪些方法？您是怎么相处这些方法的。比较、长期计划、方法论、初心，想提出一个问题很难吗？就是这么简单。&lt;未完待续&gt;]]></content>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我很忙吗]]></title>
    <url>%2F%E6%88%91%E5%BE%88%E5%BF%99%E5%90%97.html</url>
    <content type="text"><![CDATA[这是我16年写的随笔，如今已经是18年10月，这个问题依然存在。先贴一下全文。我会不会很忙。 我很忙，我总告诉自己，忙起来就好啦！羡慕的时候，忙起来就好了。不甘的时候，忙起来就好了。感觉自己的行业太差劲？自己在所谓的名校好专业努力到极致也不如其他不入流学校热门专业的起薪？不要想那么多，忙起来就好了嘛。 忙起来，忙起来，忙起来……忙起来！忙起来！忙起来！ 忙个头忙啊。 我一直奔跑着，只是想不被这个世界抛下。但我只看到了奔跑和抛下这两个词，害怕被抛下的恐惧占据我的心，让我无暇顾及这句话原本的意思。 我只要努力就好了吧，天道酬勤，努力总会有回报的。我投入时间这么长，付出努力这么多，一定不会那么惨的。我抱着这样的想法忙忙碌碌，我因为这样的想法而庸庸碌碌。 努力就行，这个想法，是一个骗局，是逃避的借口。 路漫漫，结果和努力根本没有那么大的相关性，它只是我到达自己想到达的目标的一个条件。但努力的特别之处在于，它对于我们大多数人而言，是个必要条件，有它不一定行，没它肯定不行。 所以，努力就行是个骗局，但努力不是。 就行这两个字去掉有着莫大的意义，有了这两个字，我就好像有了一块免死金牌，我毫无顾忌的调用大量时间投入到学习上，想用这些资源来换得将来的回报。 但对于我而言，这种无目的的，不费脑的，想占便宜的蛮干导致了很多后果，时间在压缩，效率在下降，压力，不甘，失望，不解，痛苦由此而生，就像我曾经说过的那样，它们像猪笼草一样枝枝蔓蔓爬满整个心脏，再慢慢锁紧。 我问自己，我有多长时间没有那种清醒的感觉？那种初中高中经常有的，世界都是通透的，五感敏锐，身体的每一部分都充满活力的那种感觉？现在的我总是感觉大脑好像被什么布遮住了，总是懵懵的差了一点意思。 大踏步往前走，意气风发，精神抖擞，全身充满令人羡慕的活力？这种状态我很推崇，我身边有的人是这样，我不是。 我把宝压在忙碌上，压在时间上，长时间的学习让我好像有了强大的信心。但事情哪里会如此简单容易。效率和兴趣以及规划这三个军法官总是会教我怎么做人。 停下来半个小时，逗逗嘉定的猫，看看湖中的鹅，这当然不是关键。关键是，深呼吸，想想自己究竟想要什么，自己正在做什么，分散精力的工具和事到底是什么，以及想清楚我到底要不要继续骗自己，忙碌能带来一切，从心底想清楚，而不是只在嘴上说。“我当然知道忙碌不能带来一切” 关键是先有“不忙”这个意识，但问题还未解决，关于它的探讨还会继续。18年10月的我，依然还在跟这个问题对抗着，中间在大五时遇到过更深的低谷。所幸现在有了妍妍同学，她是生活之光，把我的灰色生活变成了彩色的。不忙才是一种智慧，我会调整安排好自己的时间的。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[人的梦想，是不会结束的]]></title>
    <url>%2F%E4%BA%BA%E7%9A%84%E6%A2%A6%E6%83%B3%EF%BC%8C%E6%98%AF%E4%B8%8D%E4%BC%9A%E7%BB%93%E6%9D%9F%E7%9A%84.html</url>
    <content type="text"><![CDATA[“你折腾什么啊?”“抑郁？矫情吧！”“你能保证自己一定能行？”“你长大就知道，什么情怀啊，都是浮云。”“人的一生说到底就是性价比，用最小的性价比赚最多的钱，过最好的生活…”“你这样太幼稚了，你还是年轻。”每个人都得挑自己的剧本，挑好后就没回头路了，只有硬着头皮前进。这场戏，导演是自己，演员是自己，灯光、舞美一切都是自己。我还是想做自己的主角，不想被大环境推了一辈子，百年之后墓志铭上写着大师兄的经典台词，“他来，他见，他挂了”。 那该多无聊，那该多无趣，那真的真的很没意思。 所以要坚持下去，到了极限也得坚持下去，就算是为了自己不白来这一遭，就算是为了父母家人，就算是为了你自己的女朋友。 这个过程会很艰难吧，你要直面自己的懦弱、恐惧，要强行剜出自己懒惰的骨头，再强自注入充满行动力的血。 有梦想的人总容易孤独。像小说里的勇士屠龙一样，周围人都很想阻止你，他们喜欢高贵温驯的独角兽，喜欢不变，不变代表着安全。你也喜欢安全，但一辈子如此实在心有不甘。 背上两柄剑，身后有灿若繁星的万家灯火，身前是无尽的黑暗，但可能有一点光，我允许你想一想，但最终跳下去吧，这一刻就出发。 路上会不断的有人倒下，这条路从来都不是弱者的舞台。即使每个人出发时凌云壮志堪与天比肩，但这条路上，没到终点就是弱者。你也随时会成为他们的一员，但是不要放弃，放弃了这就会成为你余生一个阴影，一个摆脱不了的梦魇，做不成事儿的标签会永远伴随着你。 总要一直往前走啊，感觉苦和难的时候就深呼吸，尽可能多做点事，等着难的时光过去。黎明前的黑暗始终是最暗的，知道这件事没什么用，但你还是要知道。 终于，站在这里了，没什么好说的，最后的结果只是顺理成章。我的梦想永不会结束。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[线性代数 | 奇异值分解、线性变换]]></title>
    <url>%2F%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-%E5%A5%87%E5%BC%82%E5%80%BC%E5%88%86%E8%A7%A3%E3%80%81%E7%BA%BF%E6%80%A7%E5%8F%98%E6%8D%A2.html</url>
    <content type="text"><![CDATA[以最重要的两个话题作为GS线性代数复习的终章。 奇异值分解奇异值分解是矩阵最终和最好的分解。因子分别是正交矩阵，对角矩阵，正交矩阵。任意矩阵都可以进行这样的分解，但是两个正交矩阵可能不用。 正定矩阵的特征向量是垂直的，其分解是$A = S\lambda S^{-1} = Q\lambda Q^T$，Q也是特征向量矩阵 。 在行空间找到向量$v_1$，然后变换到列空间某向量记做$u_1、u_1 = Av_1$。现在要找到行空间的一组正交基，变换到列空间里的一组正交基。找到一组特殊正交基，普通正交基变换后可能不正交，当A作用后，它转变成另一组正交基 r是行空间的维数，$Av_1$就是第一列，最右边的矩阵是用来缩放的，$p_1、p_2 &gt;0$,$V和U$都是正交矩阵，A是一个正交方阵。 A\begin{bmatrix} v_1&v_2&\dots&v_r\end{bmatrix}=\begin{bmatrix} u_1&u_2&\dots&u_r\end{bmatrix}\begin{bmatrix} p_1&&&&\\&p_2&&&\\ &&\dots&\\ &&&p_r\end{bmatrix}\\ AV=UP现在把第一张图完善成n维空间。 AV=UP\rightarrow A=UPV^{-1}=UPV^T\\ A^TA=VP^TU^TUPV^T=VP^2V^T\\ AA^T=UPV^TVP^TU^T=UP^2U^T线性变换线性变换是线性代数另一个起点，它也是一个重要话题，没有坐标系就没有矩阵，物理学家喜欢用线性变换，但有时为了出来结果，还是会转化为矩阵。 ex1 投影投影，通过线性变换通过它使平面一个向量变成另一个平面向量，这也被我们称作映射。例如可以把某个平面内的向量，全部映射到直线上，向量v变成向量T（v），T就可以称为一个线性变换，这可以不涉及坐标轴。线性变换对加法和数乘封闭， $T（cv+dw） = cT(v) +dT(w)$ ex2 平面平移。平面内某向量全部沿着vo进行 ,T(v)=v+v0,但这个不是线性变换。利用定义去判断。 ex3 求向量长度的变换$T(v)=||v||$，T是由$R^3$到$R$的转变。三维向量的长度，所以它也不是一个线性变换。 ex4 旋转旋转是一个线性变换 ，相加后旋转，还是旋转后相加，内容一样。课本的插图已经描述了一个线性变换。 ex5矩阵变换$T(v)=Av$，这是一个线性变换，也对应一系列线性变换，因为每一个不同的矩阵对应于一个变换，假设平面内所有向量都乘以矩阵A， 就又是另外一个变换了。 理解线性变换的方法是找到它背后的矩阵，要做到这一点，就必须确定坐标系，确定基。假设现在有一个线性变换T，输入是三维向量$R^3$，输出是二维向量$R^2$,$T(v)=Av$,则变换矩阵是2*3矩阵，每一个线性变换对应一个矩阵。 线性变换对一个向量来说意味着什么？我们需要了解所有向量的$T(v)$，才能理解线性变换的意义，线性变换对于整个线性空间有什么影响呢。为了简化问题，假设已经知道$T(v_2)、T(v_1)$，以它们为基向量，就能确定对整个空间的影响。 如何把一个与坐标无关的线性变换变成坐标有关的矩阵呢？坐标的存在意味着基的确立，线性组合的系数就是坐标系里的值，坐标源自一组基。只要确定了一组基，其他向量都可以通过基的组合表示，也就确定了坐标，确定了坐标系。坐标源自一组基。常见的向量其实默认了单位坐标系，但也可以用特征向量作为基。 现在希望通过一个矩阵来描述线性变换，构造一个矩阵A，用于线性变换T需要用输入空间的一组基来描述输入向量，也需要输出向量的一组基来描述输出向量，一共需要两组基。现在开始选择坐标。选择$R^n$空间的向量v，通过基把它们表示出来，然后把这些坐标乘以矩阵A，通过输出空间的基 。希望矩阵A起到线性变换作用，并组合这些基。 例子，投影，n和m都等于2，都在二维平面上，让所有向量变化变换后都投影到一条直线上，这里打算用另外一组基去替换标准基，这既是输入空间也是输出空间的基，第一个基向量选在直线上，第二个基向量垂直直线。任意向量v都可以表示为$v_1$和$v_2$的组合， $T(v_1)=1;T(v_2) =0;v = c_1v_1+c_2v_2$, 输入$(c_1，c_2)$，输出$(c_1,0)$，矩阵A乘以输入坐标，得到输出坐标。在这里，输入空间和输出空选择了同一组基，也因为矩阵A是一个对角阵，如果以特征向量作为基向量，则得到的矩阵A是该矩阵的特征值为对角线的对角阵，对角线上都是特征值。 总结，把矩阵和线性变换联系起来。]]></content>
      <tags>
        <tag>机器学习</tag>
        <tag>线性代数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[统计 | 数理统计简史(二)]]></title>
    <url>%2F%E7%BB%9F%E8%AE%A1-%E6%95%B0%E7%90%86%E7%BB%9F%E8%AE%A1%E7%AE%80%E5%8F%B2-%E4%BA%8C.html</url>
    <content type="text"><![CDATA[这是由勒让德开启，由高斯推上顶峰的统计学发展盛宴。 最小二乘法数理统计学的简史就是从纵横两个方向对算术平均不断深入研究的历史，纵的方面指平均值本身，伯努利及其背后众多大数律，中心极限定理，高斯的正态误差理论，横的方面指的是许多统计方法，这些方法本质都是随算术平均的发展，其中最重要的就是最小二乘法。 设对某未知量$\theta$重复做$n$次测量，结果记为$x_1,x_2,\dots,x_n$，利用这些测量值做一个估计，推理如下:设真值为a,则测量误差依次为$e_1 = x_1-a,e_2,\dots$，计算$L(a)=e_1^2+e_2^2+\dots$，令$L(a)$取最小。 这个最小值正是几个测量值的算术平均。令人惊叹 以上过程是用最小二乘来解释算法平均，我们也可以逆转这个过程。算术平均是经受住考研的方法，因此一个方法是合理的，它就应该经受住算术平均的考验，所幸最小二乘法有这样的特性。（虽然甲证明乙，乙证明甲在逻辑上不足取，但这有其现实意义） 勒让德在研究天文观测学时遇到一些数据分析问题，描述如下：有若干我们想估计的值$\theta_1 \dots \theta_k$,另有若干可以测量的量$x_0, \dots,x_k$,这些量满足线性关系 x_0+x_1\theta_1+\dots+x_k\theta_k = 0在实际求解过程中，求解这个方程要面临以下几个问题。 $x_0,\dots,x_k$量测可能有误差 上式只是数学上的近似，可能不是完全成立，这也可以被视为一种误差。 观测次数$n$往往大于变量个数$k$,在当时解决这个问题需要 解决观测数据较多的问题在历史上也经历了不同的阶段。 1750年的梅耶采用的是分组形式，把数据分成$k$组，把每组内的方程相加得到新方程。分组方法是选定其中一个系数，按系数大小分组。 18世纪的欧拉也研究过类似问题，但他的做法过于繁杂，缺乏基本合理性。 1787年拉普拉斯采用的方法也是分$k$组并对每组内方程相加，他没有指出自己为什么这么分组，在他的分组中，每个方程被应用了不止一次。 欧拉和拉普拉斯这样的顶级数学家没解决这样看起来不难的问题，主要还是因为他们擅长解决确定性问题，勒让德的成功在于不去考虑找到那几个方程（方程个数等于未知数个数），而是考虑误差在整体上的平衡，即不使误差过分集中在几个方程内，而是让它分散开。因此它采用如下公式，具体求解可以采用求偏导的计算方式。 \sum_{i=1}^{n}{(x_{0i}+x_{1i}\theta_1}+\dots+x_{ki}\theta_{k})^2=min最下二乘法有以下优点 经受住了算术平均值这一特例的考验 如果观察值全部严格符合某一线性方程，那它必然是最小二乘法的解 如果事后打算增删某些观察值，容易修改。 最小二乘法是针对适合线性关系的观测数据而做出的，现在统计学上把它叫做线性统计模型，当然它的含义比最初广的多。最小二乘法的地位主要由以下几点奠定。 最小二乘法的在统计学中的显赫地位，主要就是因为它和线性统计模型的关系。 最小二乘法有着简单的线性表达式，易于计算。 在正态分布的误差假设下，它有比较完善的小样本理论，使基于它的统计推断容易操作且有关概率计算容易进行。 高斯对最小二乘法的贡献除了建立正态误差理论之外，还有非常重要的高斯-马尔科夫定理 按通常记法把线性模型写为$y_i=x_i’ \beta+e_i,i=1,2\dots,n$,$y_i$是一维向量，$x_i$是p维向量，$e_i$是独立同分布的随机误差，期望为0，方差为$\sigma^2$。用最小二乘法得到决定$\beta$的最小二乘估计$\hat{\beta}$的线性方程组 s\hat{\beta} = XY \\ X=(x_1,\dots,x_n),S=XX',Y'=(y_1,\dots,y_n)\\ \hat{\beta}=S^{-1}XY对于这个解的过程，我们又如下结论 所得$\hat{\beta}$是$\beta$的线性无偏估计 对$\beta$的任一个线性函数$c’\beta$,其最小二乘估计$c’\hat{\beta}$也是线性无偏估计 (高斯-马尔科夫定理)，在一切$c’\beta$的一切线性无偏估计中，只有最小二乘估计$c’\beta$的方差达到最小。 其他方法。在收集数据时有很多误差，这里我们指的是误记这种可以避免的错误，如果一种统计方法受少量异常值的影响比较小，则称该方法具有稳健性。最小二乘法是一种稳健性很差的方法，原因在于目标函数是误差的平方，增长的比较快。 想解决这个问题，可以用比平方更慢的函数$p$去代替平方，当$p(\mu)=|\mu|$时，引出的估计是最小一乘估计，也被称为最小绝对偏差估计。进一步可推广得到M估计。 高斯分布狄莫弗于1730-1733年之间已经从二项分布逼近的途径得到了正态密度函数，但直到1809年，高斯提出正态误差理论，它才作为概率分布引起人们的重视，并在社会、经济、遗传学等领域引导了大量工作。 有了正态就有偏态，19世纪末卡尔皮尔逊提出皮尔逊分布族，发展了偏态分布。 正态分布有一维模型，也有多维模型，它的发展也经历了两个阶段，起先是作为测量误差的分布，之后才是作为其他数据的模型，之所以有那个差别，是因为在20世纪以前，观测数据和统计数据是两个不同概念。前者典型例子如测某人身高，它的平均值(真正身高)是真实存在的，处理它被认为需要高等数学。后者典型例子如对一群人每个人的身高做测量，这种平均值是虚幻的，处理它被认为需要相对频率数据。 但现在我们很容易统一:测量一群人的身高$x_1,x_2,\dots,x_n$，可以把它们想像成从无穷多人组成的总体抽取的样本，相应的，这无穷总体中个体的某项指标，比如身高，可以赋予一定的总体分布，例如正态分布$N(a,\sigma^2)$,这样的话，上述测量结果无非就是群集在“实在的”值a周围一些“观测值”，从而对一个人(身高值为$a$,测量方差为$\sigma^2$)的多次重复测量值无差别。 最小二乘法必须结合误差分布理论才能确定地位，不然只是算法而已，而这一切最终都得归结在天文学上。 16世纪初，天文学家第谷做了大量观测工作，这些数据为开普勒和牛顿的工作奠定了基础。1632年，伽利略第一次提到随机误差的概念，他针对误差提出了以下几点观点，并基于这几条提出了$|x|$的误差分布。1755年，辛普森对天文学家提出的平均值提出质疑，并想在知道误差分布的前提下，去计算平均误差的分布，并想证明$P(|\overline{e}| \leq k) &gt;= P(|\overline{e_1}| \leq k) $辛普森使用了一个特殊的分布证明了这个事实。拉格朗日沿着这个方法进行了研究。 拉普拉斯不是先假定一种误差分布然后证明取平均值的优良性，而是直接涉及误差论基本问题，即应取怎样的分布为误差分布，以及在决定了误差分布后，如何根据未知量$\theta$的多次测量结果$X_1,X_2，\dots$去估算$\theta$。1722年，拉普拉斯根绝自己对误差的几点假设提出了拉普拉斯分布，即误差密度函数为$f(x)=\frac{m}{2}e^{-m|x|}$ 关于高斯的工作请看《正态分布的前世今生》其基本思路一是令基于各测量值的误差密度函数乘积达到最大值。即极大似然估计。基本思路二是先假设平均值为估计值，倒推出分布为正态分布，并结合使误差密度概率最大的原则推出了最小二乘估计。 拉普拉斯在了解高斯工作之后，结合中心极限定理，提出如果误差可以看成许多量的叠加，那么误差应该有高斯分布，这是历史上第一次提出元误差学说，这解决了高斯在推导高斯分布时进行循环论证的问题。 19世纪，数据域正态分布拟合不好的情况逐渐被发现，从测量误差的角度，1903年格兰姆和齐勒把随机误差X的分布表示成一个级数，第一项为正态分布，以后各项视为由X的非正态性带来的修正。 卡尔皮尔逊后来研究这个问题是一种实用目的，即找到一些分布拟合从实际问题中带来的数据，以便在正态分布不适用时可供选择使用，1893年，皮尔逊开始研究偏态分布，得到$\gamma 分布族$的结果，他把这称为”正态曲线的推广形式，具有非对称的性质”]]></content>
      <tags>
        <tag>统计学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[统计 | 数理统计简史(一)]]></title>
    <url>%2F%E7%BB%9F%E8%AE%A1-%E6%95%B0%E7%90%86%E7%BB%9F%E8%AE%A1%E7%AE%80%E5%8F%B2-%E4%B8%80.html</url>
    <content type="text"><![CDATA[我以前说过，对一门知识把握不住它的脉络时，就去看历史。对于数理统计，陈希孺的《数理统计学简史》就是一门足够好的统计学历史书，看完之后你就会明白什么是期望？为什么最小二乘法那么重要？为什么三大分布是那个样子？为什么公式长这个样子？如此才能真正了解要学的东西。 早期概率论 概率是一个事件发生、一种情况出现的可能性大小的数量指标。 时间有可重复性和一次性，可重复事件的概率是客观的，一次性时间的概率是主观的。 客观概率是频率学派的基础，主观概率是贝叶斯学派的基础。 客观概率有两种形式。第一种统计概率依据该事件在试验大量重复中的概率。第二种古典概率依据试验可能结果是有限个，每种结果可能性相同。 分赌本问题A、B二人读博，各出赌金a元，每局个人获胜概率相同，规定谁先胜S局就赢得全部赌注，现在进行到A胜$S_1$局，B胜$S_2$局，问赌金怎么发放才算公平。 巴斯噶与费尔马在讨论读博问题时用到了值的概念，指的是赌注乘以获胜概率。之后惠更斯把值改为期望。 巴斯噶认为赌注的公正分配只和 为了赢得赌局，还需要取得胜利的局数相关，记为$r_1$,$r_2$ ,则有边界条件，$e(0,r_2) = 1 ; e(r_1,0) = 0; e(a,a) = 0.5$,且成立递推公式$e(r_1,r_2) = [e(r_1-1,r_2) + e(r_1,r_2-1)]/2$,由上述条件综合出一般解的形式。 费尔马解法，设定$r_1&lt;r_2$，若A取胜，所需局数可能为$r_1,r_1+1,\dots,r_1+r_2-1$,期间B取胜的局数对应为$i=0,1,\dots,r_2-1$。即若B胜i局，则A到最终取胜前再赌了$r_1+i$局，其中前$r_1+i-1$局A胜$r_1-1$局，而第$r_1+i$局为A胜。由此两种想法得到的解结果是一样的。 惠更斯制定了3条定理加上11个问题，成为惠更斯十四命题 伯努利于1713年著作《推测术》，把概率论从对赌博机遇的讨论转换为新的天地。这本书前三部分，是古典概率的系统化和深化。第一部分明确提出了独立情况下概率乘法定理的表述形式，并在此基础上严格证明了二项概率公式，第二部分首次引入了排列的概念。 推测术中把客观概率区分为两类，可以先验的概率，称之为古典概率。可以后验的概率，称之为统计概率。这里的含义和贝叶斯概率的不同。 伯努利大数定律：给定任意两个数，$\epsilon&gt;0$和$\eta&gt;0$,总可以取足够大的抽取次数N,使得事件${|\frac{X}{N} - p| &gt; \epsilon}$概率不超过$\eta$伯努利的工作证明了数学家不仅可以后验地认识世界，也可以用数学估量他们认识世界的限度。 狄莫弗的二项概率逼近这部分内容和前文的《统计学习|高斯分布》有很多内容重合。狄莫弗有著名的狄莫弗公式$(cos\theta+isin\theta)^n=cosn\theta+isinn\theta$,他也在研究一个赌博问题时要求解二项概率 $\binom{N}{i}p^i(1-p)^{n-i}$, 狄莫弗在$Np$为整数的条件下得到 D_N=2Npqb(N,p,Np)\\ D_N=2\mu qb(N,p,\mu),\mu = [Np] + 1问题的关键转化为N较大时求$b(N,p,i)$的问题。在求解过程中有提到在用频率估计概率的时候，观察值的精度与N的平方根$\sqrt{N}$成比例。 狄莫弗工作最大的意义是中心极限定理。但依然的是由于他没有从统计学去观察这个工作。 贝叶斯方法贝叶斯方法也是以二项分布为主角的工作。英国学者贝叶斯在18世纪中叶提出这个方法来解决二项分布问题，但方法的思想适用范围很广，目前其已成为数理统计学中两个主要学派之一，贝叶斯学派。已知时间概率为p，由之计算某种观察结果出现概率，这是原因推结果，称之为概率论。反过来已知观察结果，对概率p做出推断，这是结果推原因，是数理统计。 贝叶斯原始问题的表现形式是：设X服从二项分布$B(N,\theta)$，$N$已知但$\theta$未知，给定常数$a,b,0 \leq a &lt; b &lt; 1$,在观察到观察值X后，求条件概率$P(a \leq \theta &lt;b | X)$,关于这个概率的求解有两派观点。一派因为$\theta$是一个确定值，对该问题而言，答案要么是0，要么是1。但另一派认为，即使$\theta$是确定值，但目前还不确定，X的观测值提供了关于X分布的一些信息，但不能确定$\theta$，这里就有机遇成分。就像你去找人，人‘在家’或‘不在家’两种可能性，但你还是会根据今天天气去推测对方在不在家，这就是这样的过程。此时$\theta$就是个随机变量 贝叶斯为了解决问题，提出以下两个命题：设$E_1,E_2$为按先后时间顺序发生的两件事，则 P(E_2 | E_1) = \frac{P(E_1 \cap E_2)}{P(E_1)}\\ P(E_1 | E_2) = \frac{P(E_1 \cap E_2)}{P(E_2)}这在现在看来是对条件改了吧的定义，但两个命题意义不同，一个是由过去测未来，一个是由未来反侧过去。 贝叶斯采取台球模型来模拟自己提出的概率问题。 贝叶斯操作的本质是先验分布+样本信息 = 后验分布，这和人类的直觉相符，但确定先验分布是极其困难的。]]></content>
      <tags>
        <tag>统计学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[统计入门 | 数理统计学简史]]></title>
    <url>%2F%E7%BB%9F%E8%AE%A1%E5%85%A5%E9%97%A8-%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E7%AE%80%E5%8F%B2.html</url>
    <content type="text"><![CDATA[我以前说过，对一门知识把握不住它的脉络时，就去看历史。对于数理统计，陈希孺的《数理统计学简史》就是一门足够好的统计学历史书，看完之后你就会明白什么是期望？为什么最小二乘法那么重要？为什么三大分布是那个样子？为什么公式长这个样子？如此才能真正了解要学的东西。 早期概率论 概率是一个事件发生、一种情况出现的可能性大小的数量指标。 时间有可重复性和一次性，可重复事件的概率是客观的，一次性时间的概率是主观的。 客观概率是频率学派的基础，主观概率是贝叶斯学派的基础。 客观概率有两种形式。第一种统计概率依据该事件在试验大量重复中的概率。第二种古典概率依据试验可能结果是有限个，每种结果可能性相同。 分赌本问题A、B二人读博，各出赌金a元，每局个人获胜概率相同，规定谁先胜S局就赢得全部赌注，现在进行到A胜$S_1$局，B胜$S_2$局，问赌金怎么发放才算公平。 巴斯噶与费尔马在讨论读博问题时用到了值的概念，指的是赌注乘以获胜概率。之后惠更斯把值改为期望。 巴斯噶认为赌注的公正分配只和 为了赢得赌局，还需要取得胜利的局数相关，记为$r_1$,$r_2$ ,则有边界条件，$e(0,r_2) = 1 ; e(r_1,0) = 0; e(a,a) = 0.5$,且成立递推公式$e(r_1,r_2) = [e(r_1-1,r_2) + e(r_1,r_2-1)]/2$,由上述条件综合出一般解的形式。 费尔马解法，设定$r_1&lt;r_2$，若A取胜，所需局数可能为$r_1,r_1+1,\dots,r_1+r_2-1$,期间B取胜的局数对应为$i=0,1,\dots,r_2-1$。即若B胜i局，则A到最终取胜前再赌了$r_1+i$局，其中前$r_1+i-1$局A胜$r_1-1$局，而第$r_1+i$局为A胜。由此两种想法得到的解结果是一样的。 惠更斯制定了3条定理加上11个问题，成为惠更斯十四命题 伯努利于1713年著作《推测术》，把概率论从对赌博机遇的讨论转换为新的天地。这本书前三部分，是古典概率的系统化和深化。第一部分明确提出了独立情况下概率乘法定理的表述形式，并在此基础上严格证明了二项概率公式，第二部分首次引入了排列的概念。 推测术中把客观概率区分为两类，可以先验的概率，称之为古典概率。可以后验的概率，称之为统计概率。这里的含义和贝叶斯概率的不同。 伯努利大数定律：给定任意两个数，$\epsilon&gt;0$和$\eta&gt;0$,总可以取足够大的抽取次数N,使得事件${|\frac{X}{N} - p| &gt; \epsilon}$概率不超过$\eta$伯努利的工作证明了数学家不仅可以后验地认识世界，也可以用数学估量他们认识世界的限度。 狄莫弗的二项概率逼近这部分内容和前文的《统计学习|高斯分布》有很多内容重合。狄莫弗有著名的狄莫弗公式$(cos\theta+isin\theta)^n=cosn\theta+isinn\theta$,他也在研究一个赌博问题时要求解二项概率 $\binom{N}{i}p^i(1-p)^{n-i}$, 狄莫弗在$Np$为整数的条件下得到 D_N=2Npqb(N,p,Np)\\ D_N=2\mu qb(N,p,\mu),\mu = [Np] + 1问题的关键转化为N较大时求$b(N,p,i)$的问题。在求解过程中有提到在用频率估计概率的时候，观察值的精度与N的平方根$\sqrt{N}$成比例。 狄莫弗工作最大的意义是中心极限定理。但依然的是由于他没有从统计学去观察这个工作。 贝叶斯方法贝叶斯方法也是以二项分布为主角的工作。英国学者贝叶斯在18世纪中叶提出这个方法来解决二项分布问题，但方法的思想适用范围很广，目前其已成为数理统计学中两个主要学派之一，贝叶斯学派。已知时间概率为p，由之计算某种观察结果出现概率，这是原因推结果，称之为概率论。反过来已知观察结果，对概率p做出推断，这是结果推原因，是数理统计。 贝叶斯原始问题的表现形式是：设X服从二项分布$B(N,\theta)$，$N$已知但$\theta$未知，给定常数$a,b,0 \leq a &lt; b &lt; 1$,在观察到观察值X后，求条件概率$P(a \leq \theta &lt;b | X)$,关于这个概率的求解有两派观点。一派因为$\theta$是一个确定值，对该问题而言，答案要么是0，要么是1。但另一派认为，即使$\theta$是确定值，但目前还不确定，X的观测值提供了关于X分布的一些信息，但不能确定$\theta$，这里就有机遇成分。就像你去找人，人‘在家’或‘不在家’两种可能性，但你还是会根据今天天气去推测对方在不在家，这就是这样的过程。此时$\theta$就是个随机变量 贝叶斯为了解决问题，提出以下两个命题：设$E_1,E_2$为按先后时间顺序发生的两件事，则 P(E_2 | E_1) = \frac{P(E_1 \cap E_2)}{P(E_1)}\\ P(E_1 | E_2) = \frac{P(E_1 \cap E_2)}{P(E_2)}这在现在看来是对条件改了吧的定义，但两个命题意义不同，一个是由过去测未来，一个是由未来反侧过去。 贝叶斯采取台球模型来模拟自己提出的概率问题。 贝叶斯操作的本质是先验分布+样本信息 = 后验分布，这和人类的直觉相符，但确定先验分布是极其困难的。 最小二乘法数理统计学的简史就是从纵横两个方向对算术平均不断深入研究的历史，纵的方面指平均值本身，伯努利及其背后众多大数律，中心极限定理，高斯的正态误差理论，横的方面指的是许多统计方法，这些方法本质都是随算术平均的发展，其中最重要的就是最小二乘法。 设对某未知量$\theta$重复做$n$次测量，结果记为$x_1,x_2,\dots,x_n$，利用这些测量值做一个估计，推理如下:设真值为a,则测量误差依次为$e_1 = x_1-a,e_2,\dots$，计算$L(a)=e_1^2+e_2^2+\dots$，令$L(a)$取最小。 这个最小值正是几个测量值的算术平均。令人惊叹 以上过程是用最小二乘来解释算法平均，我们也可以逆转这个过程。算术平均是经受住考研的方法，因此一个方法是合理的，它就应该经受住算术平均的考验，所幸最小二乘法有这样的特性。（虽然甲证明乙，乙证明甲在逻辑上不足取，但这有其现实意义）]]></content>
      <tags>
        <tag>统计学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶测试与验证的挑战]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E6%B5%8B%E8%AF%95%E4%B8%8E%E9%AA%8C%E8%AF%81%E7%9A%84%E6%8C%91%E6%88%98.html</url>
    <content type="text"><![CDATA[一篇关于自动驾驶测试的文献翻译。 摘要一般来说软件测试常常只是寻找bug，而不是通过精密的实验来保证产品质量。一个相比简单的系统级的测试，即测试—失败—补丁（改进）—测试更好的方法已经开始大规模部署在无人驾驶汽车上。ISO26262的v模型建立了一个框架，该框架将每种类型的测试与相应的设计或需求文档联系起来，但该模式在处理自动驾驶汽车面临的各种新测试问题时会遇到挑战。本文根据自主车辆的V模型确定了测试中的五个主要挑战领域:驾驶员不在环、复杂需求、非确定性算法、归纳学习算法和故障操作系统。 有希望在这些不同的挑战领域中实现的通用解决方案包括:使用逐步减少约束的操作场景进行分阶段部署，使用观测器/执行器架构把复杂的自动驾驶功能从相对简单的安全功能分离出来，采用故障注入来执行更多的的边缘案例测试。尽管为高等级的自动驾驶算法提供安全认证安全仍然存在重大的挑战，但似乎可以采用现有的软件安全方法来构建系统和与其相对应的设计过程。 引言最近自动驾驶汽车成为一个热门话题，不过实际上它们背后的技术已经发展了几十年了，最早可追溯到自动化公路系统项目。从这些早期的示范算起，自动驾驶技术已经发展了成熟的驾驶员辅助系统(ADAS)。像自动车道保持和智能巡航控制也已经是许多车辆的标准了。除此之外，现在还有许多处于不同的发展阶段的不同级别的自动驾驶车辆项目。 如果有人相信所谓专家的话，那么无人驾驶汽车好像呼之欲出。但事实上，搞传统汽车行业的都知道，在拥有专业的安全驾驶人员的情况下，制造几辆车以在合理且有利的条件下运行，与在不受约束的世界里运行数百万辆车之间，有着巨大的鸿沟。 有人会说，（自动驾驶汽车）成功的示范和几千公里(甚至几十万公里)的成功驾驶里程意味着自动驾驶技术基本上已经做好全面部署的准备。但是，很难仅仅从这样的测试就能得出这足以确保安全性的结论。实际上，至少有一些开发人员已经在做更多相关的测试工作，但问题是还需要做多少工作，以及我们如何才能知道现在的车辆已经足够安全到可以上路了呢？ 在本文中，我们将探讨一些正在等待开发人员解决的挑战，这些开发人员正试图开发完全自主的L4级别车辆并进行大规模部署。因此，我们跳过了过去可能采用的半自动化方法，即在这种情形下，司机根本不用负责操作车辆。对研究对象我们进行了进一步限制了范围，只考虑在ISO26262v框架内设计和验证的车辆。采取这种限制的原因是这是一种可接受的确保安全的框架。 完全基于计算机的系统应该是不安全的，这是一个可以确认的，除非你有令人信服的相反论点来论证。总之，自动驾驶汽车不能被认为是安全的，除非它们能被显示符合或可以被映射到ISO26262或其他一些合适的、被广泛接受的软件安全标准。 完全测试的不可行性人们早就知道不可能彻底地测试系统以确保系统的可靠性（冗余）。例如，假设有一个100万辆汽车的车队每天运行一个小时。如果安全目标是这个车队每1000天发生一次灾难性的计算故障，即每次发生灾难性故障之间的平均时间应该为10亿小时，这与飞机的允许故障率相当。 为了验证发生灾难性事故的频率，最少得进行长达十亿小时的测试，更有甚者也可能是几倍的时间，重复多次测试可以达到统计学意义。但即使这样，这也是假定测试环境是基于真实世界部署的，具有高度代表性的并且导致错误的环境部署以随机的、独立的方式出现。 但是，建造一个足够大的、能够在具有代表性的测试环境中运行数十亿小时而又不会危及公众的车队是不切实际的。因此，我们需要替代的验证方法，可能包括模拟仿真、故障注入、面向不断增加的车队规模的自适应、在非极端工况中获得组件的实际工作状况以及人工评审等方法。（组件级的测试也发挥了作用，但是为物理硬件设备积累十亿小时的部署前测试仍然是不切实际的) 考虑到自主系统的测试比日常软件系统的测试更困难，这会让事情会变得更糟。 对于相对非关键的计算系统来说，可以将测试作为确认其安全级别的主要依据。这是因为低严重程度和低暴露性的故障相比灾难性故障更容易发生。例如，如果每1000小时发生一次特定类型的故障是可以接受的(因为这种故障会导致最低成本的事故或轻微的中断)，那么通过数千小时的测试，就可以可靠地验证该故障的故障率。这并不是说对这些系统而言，所有的（必要）保证软件质量的步骤可以放着不管了，而是一个合适的测试和故障监控策略可能能够验证一个事实，即如果平均故障间隔时间要求相对宽松的话，一个质量合适的组件确实已经被确认为拥有一个可以接受的低故障率。 作为起点的V模型因为系统级测试不能完成上述工作，我们需要更多相关测试，这正是创建更健壮的安全软件的开发框架的意义所在。V软件开发模型长期以来一直适用于汽车。它是20多年前纳入MISRA指导方针的发展参考模型之一。最近，它被推广为构成ISO26262基础的参考模型。 通常，V模型表示一个有条理的创建过程和验证过程。V的左侧包括从需求到设计再到实现的过程。在每个步骤中，系统被划分为并行处理的典型的子系统（例如，有一组系统需求，但是每个子系统都有单独的设计)。V的右侧迭代地验证和验证越来越大的系统，它是从小的组件过渡到到系统级的评估的一个过程。虽然ISO2626262对这个模型进行了详细的阐述，但是我们这里保留一些通用的框架，以方便讨论拓展。 尽管ISO 26262和它的V框架已经明朗了在确保汽车安全方面的公认做法，但在将全自动车辆的技术映射到V方法这方面依然有很多挑战。 驾驶员不在环在全自动驾驶汽车中，最明显的挑战可能就是司机不再真正驾驶汽车。这意味着，根据定义，不能再指望司机在运行过程中为车辆提供控制输入。 可控性挑战对于低完整性设备来说，典型的汽车安全可能取决于驾驶员的控制能力。例如，在一个高级驱动辅助系统(ADAS)中，如果一个软件故障导致一个潜在的危险情况，司机可能会被期望越过软件功能直接将车辆恢复到安全状态。司机有时候也被希望能把汽车从严重的机械故障中恢复过来，比如轮胎爆裂等问题。换句话说，在人类驾驶的汽车中，司机会负责采取正确的纠正措施。但在现在这种情况下，司机没有能力采取纠正措施，也就是说车辆缺乏可控性，因此必须设计更高的汽车安全完整性水平，或汽车安全完整性等级。 一款完全自动化驾驶的汽车不指望司机处理特殊情况。当故障发生时和出现超出指定的操作条件能处理的情况时，计算机系统必须被指定为故障的处理者。与ADAS系统相比，让计算机负责异常处理会显著增加自动化的复杂性。组合的ADAS系统技术如车道保持和智能巡航控制，似乎非常接近全自动操作，然而，完全自动驾驶的车辆必须处理所有可能出现的问题，它具有更高的复杂性。因为，现在确实已经没有接管方向盘和踩刹车的司机了。 自主架构方法在ISO2626262环境下的自主体系结构方法中，让计算机负责管理需要以下两种评估风险的策略之一。 一种策略是将风险评估的可控性部分设置为C3，即难以控制或无法控制。如果严重程度和暴露度很低，这可能是一个可行的选择。但是，在严重程度中等或高的情况下，系统必须设计成更高的汽车安全完整性水平(汽车安全完整性等级)。(有人可能会认为应该有更高的可控性分类C4，因为自动化系统有可能采取主动的危险行动，而不是简单地不能提供安全功能。)但我们假设现有的C3就足够了。 另一种处理潜在的汽车高安全完整性等级自主功能的方法是使用分解，具体方法要接着观测器/执行器架构和冗余的组合。观测/执行器架构是指主要功能为：一个模块(执行器)负责执行，而另一个模块(监视器)执行验收测试或其他行为验证。如果执行器行为不当，观测器会关闭整个功能(两个模块)，从而形成一个故障静默系统。 如果观测器/执行器对(图2)设计正确，那么只要观测器有足够高的汽车安全完整性等级并检测所有可能的故障，执行器就可以设计成低汽车安全完整性等级。(还要求检测观测器中的潜在故障，以避免损坏的观测器未能检测到驱动器故障的问题。)如果可以使观测器比执行器简单得多，则可以减少观测器的规模，并允许将大部分复杂功能放置到较低的汽车安全完整性等级执行器中，这种体系结构模式是相当有利。 观测器/执行器对的优点和缺点都是它创建了一个故障静默构建块(如果有错误，它就会关闭)。异构冗余的使用，即观测器和执行器的使用是为了防止由于执行器故障而发出危险的命令。至少，提供故障操作行为需要更多的冗余(即多个观测/执行器对)，并且需要满足多样性，从而使同一模式的软件设计故障不会造成整个系统故障。这对于避免出现Arianne5航班501的丢失这样的情况是很重要的，这是由于主系统和备份系统都出现了相同的未处理异常操作条件而导致的故障。 应该指出的是，因为例如实现不同的组件时有脆弱性等问题，实现多样性并不一定是简单的，对于非自主软件也是如此。还需要注意的是，故障/执行器对的故障沉默需求是基于故障独立性的假设。一个关键的点是无论采用什么方法，总需要有一种方法来检测当自主功能不正常工作的状态(无论是由于硬件故障、软件故障，还是需求缺陷)，并以某种方式把系统转移到一个安全的状态。 复杂的需求V开发模型的一个基本特征是，V的右侧提供了一种可追溯的方式来检查左侧的结果(验证和验证)。但是，这种检查的概念是基于一个假设，即需求实际上是已知的，正确的、完整的、明确指定的。这种假设给自动驾驶汽车带来了挑战。 需求挑战如前所述，从控制系统中去掉司机意味着软件必须能处理异常，包括天气、环境危害和设备故障。会有很多不同类型的故障，从恶劣天气(洪水、雾、雪、烟，龙卷风)，违反交通规则(错误的方向公路上一个汽车，其他司机闯红灯，被偷走的交通标志),到当地驾驶约定（靠左行驶），动物危害(蝗灾、鹿、犰狳)。 任何一个开了足够长时间车的人，都会有自己的故事，他们会讲述他们在路上看到过的怪异事件。总的来说，车辆数目多的话很可能会经历所有这类事件，甚至更多。更糟糕的是，恶性事件和驾驶条件的组合可能会出现，而在经典的书面需求规范中，这些组合实在是太多了。如果这些组合的结果可能是无害的，那么可能不需要涵盖所有这种极其罕见的组合，但是需求应该清楚地知道什么是系统设计范围内的要处理的故障，什么不是。因此，以列举所有系统需求的文档为起点的经典V进程似乎不太可能以狭义的方式扩展到自动车辆异常处理系统上，至少在不久的将来会一直是这样。 操作概念的方法管理需求的复杂性的一种方法是约束操作概念并进行需求的分阶段扩展。这已经由开发人员完成了，他们可能会在特定的地理区域集中进行道路测试（例如，仅在硅谷的高速公路上进行白天的驾驶，因为那里的降水有限，天气寒冷)。采用约束概念的想法可以从多个维度扩展 典型的可以利用限制操作概念轴（维度）包括: 道路可达:限制到达的高速公路，共乘车道，农村道路、郊区，封闭校园，城市街道，等。 可见性:白天，晚上，雾，霾、吸烟，雨，雪 车载环境:在一个封闭的车库内没有其他车辆移动，仅允许自动驾驶的车道，非自动驾驶车辆上的标记应答器等。 外部环境:基础设施的支持，预先规划的道路，由人驾驶的汽车 速度:较低的速度可能产生更小的故障后果和更大的恢复空间 虽然上述自由度仍然有很多组合(当然还有更多的组合是不可想象的)，但是从可能的操作概念中进行选择的目的不是增加复杂性，而是减少复杂性。减少需求的复杂性可以通过在特定的情况下应用自主系统来实现，在这些情况下的需求应该是完全被理解的(并确保对这些有效的操作条件的识别是正确的) 因此，限制操作概念成为一种引导策略，用于在逐渐复杂的操作中部署更复杂的技术能力。一旦确定对某一特定业务概念的需求有了充分的了解，就会有更多类似的需求。随着时间的推移，可以添加操作概念来扩展允许的自动化场景的范围。但这并不能完全消除复杂需求的问题，但是它可以帮助减轻组合爆炸的需求和例外情况。 安全需求和约束条件即使使用了受限的操作概念，使用传统的与安全相关的需求方法似乎也是不切实际的。这种方法或多或少是按以下这种方式进行的：首先创建功能需求。在执行了一些风险评估过程后，对安全性相关的需求进行评注(annotation)。将这些与安全相关的需求分配给安全关键子系统。设计安全关键子系统以满足分配的需求。最后，通过重复循环来找到并减少不在预期内的紧急子系统表现。 对安全关键需求进行评注对于自主应用程序来说可能不切实际，这里至少有两个原因。 一个原因是，许多需求可能只与部分安全相关，并且与功能性能密不可分。例如，当汽车行驶时，使用停车制动的许多条件可能是一组初始(基础)需求。然而这些需求的某些方面实际上是安全的关键，而这些方面在很大程度上是受其他交互功能的紧急影响。考虑停车制动的情况，停车制动很可能被许多功能需求所描述。但是让我们来简化问题，在减速模式中唯一安全的关键操作可能是在其他需求的紧急交互下必须避免在减速过程中锁住车轮。 用于识别安全相关需求的需求注释可能失败的第二个原因是，在使用机器学习技术时是不可能进行评注的。这是因为需求采用了一组训练数据的形式，这些数据列举了一组输入值和正确的系统输出。这些通常不是传统需求的形式，因此需要对需求管理和验证采用不同的方法。 与其试图在安全性和非安全性子系统之间分配功能需求，不如创建一组严格与安全性相关的独立的、并行的需求集。这些需求的形式往往是约束条件，它们指定了安全所需的系统状态。这种方法可以解决性能和优化问题(最短路径是什么?或者最优燃料消耗的速度是多少?)从安全的角度来看(我们会撞上什么东西吗?) 使用这种方法可以将需求集划分为V模型的两个部分。第一组的需求将是一组非安全相关的功能需求，这可能是传统的格式或一种非传统的格式如机器学习训练集。 第二组需求将是一组纯粹的安全需求，它们完全明确地定义了安全对于系统的意义，相对独立于最优系统行为的细节。这种需求可以采取安全操作信封的形式，适用于不同的操作模式，系统可以自由地在操作信封内优化其性能。显然，这样的信封至少可以在某些情况下使用(例如，执行速度限制或设置最小的跟随距离。这个概念是相当笼统的，但也说明这可能是未来的工作。 采用一组与功能需求正交的安全需求的一个令人信服的理由是，这种方法可以清晰地映射到观测/执行器体系结构上。功能需求可以分配给低汽车安全完整性等级执行器功能块，而安全需求可以分配给高汽车安全完整性等级监视器。这个想法作为监视器/执行器设计模式的一部分已经被非正式地使用多年了。我们建议将这种方法提升为一种主要的策略，用于设计自动车辆的设计、需求和安全案例，而不是降级为一种详细的实现冗余策略。 非确定性和统计算法自动驾驶车辆使用的一些技术本质上是统计的。一般来说，它们往往是不确定的(不可重复的)，并且可能只在一个概率可以被分配的情况下给出基于概率正确的答案。验证这样的系统会带来一些挑战，这些挑战通常不会出现在更确定的、传统的汽车控制系统中 随机系统的挑战随机系统非确定性计算的挑战包括一些算法，如规划算法，它们可能通过对许多随机选择的候选者的结果进行排名来工作。由于该算法的核心操作是基于随机生成，因此很难进行复制。虽然在单元测试中使用可重复的伪随机数流等技术可能有帮助，但是在集成系统中创建完全确定的行为可能是不现实的，尤其是当初始条件的微小变化导致系统行为的发散状态时。这意味着，尽管尝试使用名义上相同的测试用例，但每一辆车测试都可能导致不同的结果。 成功的感知算法也往往是概率的。例如，证据网格框架(evidence grid framework)将来自单个、不确定的传感器读数的扩散累积，使得机器人对周围环境越来越能建立一个更加详细的地图。这种方法产生一个对象存在的可能性，但是时候不能完全保证的。此外，这些算法基于先前的传感器物理模型(如多路径返回)和噪声模型本身就是概率性的，对环境条件的微小变化敏感。 除了对环境的几何建模之外，其他算法还从感知到的数据中提取标签。其中突出的例子包括行人检测。这样的系统即使在无噪声数据的情况下，也可能出现潜在的不可预测的故障模式。例如，视觉系统可能难以消除由于阴影而产生的颜色变化，而且在大型反射表面的存在中，视觉系统很难确定物体的位置。(公平地说，这些对人类来说都是挑战。)此外，任何分类过程都显示了假阴性和假阳性之间的权衡，其中一个的数量越少，另一个的数量就越多。测试的含义是这样的算法不会在百分之百的时间内有效，而且根据构造的不同，它们可能会报告一个特定的情况是真实的，而这个情况实际是真实的可能性只是中等。 测试中的非决定论处理测试中的非决定论很困难至少有两个原因。 第一个是很难实施特定的边缘情况。这是因为，只有当系统接收到来自世界的非常特定的输入序列时，系统才可能以激活边缘情况的方式运行。由于前面讨论过的一些因素，例如计时器对输入的微小变化的响应可能存在显著差异，因此很难设计出一种情况，在这种情况下，环境可靠地提供适当的条件来运行特定所需的测试用例。作为一个简单的例子，车辆可能更喜欢在宽阔的道路上行驶更迂回的路线，而不是在一条狭窄的巷子里走捷径。为了评估在狭窄的巷道中导航的性能，测试人员需要设计一种使宽阔的巷道对计划者没有吸引力的情况。但是，这样做需要对测试计划给予额外的成本，并且可能(手动地)将车辆移动到它通常不会进入的情况以强制执行所需的响应。 测试中不确定性的第二个困难是很难评估测试结果是否正确，因为对于一个给定的测试用例来说，没有唯一的正确系统行为。因此，正确性标准可能必须采用与前面讨论的安全信封类似的形式，如果最终系统状态在可接受的测试通行信封内，则测试通过。一般情况下可能需要多个测试来建立信任。概率系统行为对验证提出了类似的挑战，因为通过一次测试并不意味着每次都能通过测试。事实上，有了概率行为我们可能会认为至少某些类型的测试会在一定程度上失败。因此，测试可能不是为了确定行为是否正确，而是为了验证行为的统计特征是否被精确地指定(例如，假阴性检出率不大于相关安全参数中假定的检出率)。比起简单的功能验证，这可能需要更多的测试，特别是如果问题中的行为是关键的安全部分且在预期中会有极低的失败率。 从概率系统中获得极高的性能可能需要多个子系统在发生完全独立的故障时有低的失败率。例如，可以将复合雷达和视觉系统结合起来，以确保在极低的概率范围内没有遗漏的障碍物。这种方法不仅适用于传感模式，而且也适用于规划和执行中的其他各种算法方案。如果这样的方法是成功的，那么很有可能失败的概率非常低，以至于测试验证复合性能几乎是不可行的。例如，如果两个系统必须每十亿次检测就会遗漏一次障碍，那么必须运行数十亿次有代表性的测试来验证这种性能。为了验证复合不同算法的低故障率，可以尝试分别验证每种算法更频繁的允许故障率。但这是不够的。我们还必须验证失败之间独立的假设，这很可能必须基于分析和测试才能进行。 机器学习系统只有在正确地做出一系列复杂的感知和控制决策的情况下，自动驾驶汽车才有可能采取正确的行为。要实现这一目标，通常需要对参数进行适当的调整，包括从每个相机镜头的校准模型，到为避免高速公路上的障碍而转向或停车的风险的适当加权。这里的挑战是找到校准模型或权重的比值，从而使某些误差函数最小化。近年来，大多数机器人应用都转向机器学习来实现这一点，因为多维优化的复杂性使得手工工作不太可能产生理想的性能水平。 机器学习方法的细节有很多，例如，有监督学习、强化学习等，但总之所有这些方法都涉及归纳学习，在归纳学习中，训练集被用来推导一个模型。 例如，考虑在单目图像中检测行人的情况。使用一组大型图像训练集，分类器可以学习一种决策规则，该规则将行人在一组单独的图像验证集中被检测到的概率降至最低。为了我们的目的，一个基本要素是训练集实际上是系统的需求集合，而规则是系统设计的结果。(机器学习算法本身和分类器算法都比传统的验证技术更容易修改。然而，这些都是通用的软件引擎，最终的系统行为是由用于学习的训练数据决定的。) 可以尝试通过创建一组训练数据的需求来回避训练集数据形成实际需求的问题。但这最终只是将同样的挑战推到了一个抽象层次上。需求不应是典型V系统本身的一组功能需求，而是以一组训练数据或收集训练数据集的计划的形式 验证归纳学习的挑战归纳学习方法的性能可以通过从收集的总体数据集中保留一些样本并使用这些样本进行验证来测试。假设有以下这种情况，如果把训练集作为系统需求(V的左边)看，可以用一组独立的验证数据来确保满足测试的需求(V的右边)。训练数据不能有意外的相关性与所需的行为，否则系统将过拟合。类似地，验证数据必须独立于训练数据，并且在除所需的特性之外的所有方面都与训练数据不同，否则在验证过程中会检测到过拟合。当然目前尚不清楚如何论证机器学习系统没有产生过拟合。 机器学习在实践中的一个重要限制是，如果使用带标签的数据，每个数据点都可能很昂贵。(创建标签必须由某人或某物来完成。无监督学习技术也是可能的，但需要一个巧妙的映射来解决特定的问题。此外，如果训练集有问题或所学习的规则有问题，那么就需要收集更多的验证数据并用于验证更新的系统。这是必要的，因为即使对训练数据做一个小的更改，也会产生一个完全不同的学习规则集。 由于自主系统的需求非常复杂，很可能会出现一些罕见的边缘案例，在那里学习将会发生问题。然而，由于它们的稀缺性，收集描述这种不寻常情况的数据可能是昂贵的，而且很难衡量。(模拟和合成数据可以帮助解决这一问题，但在模拟数据中存在偏差的风险，以及对仿真工件的过度拟合。) 验证机器学习的另一个问题是，一般来说，人类不能直观地理解过程。例如，卷积神经网络的内部结构可能不能让人类观察者更直观地了解已经学会的决策规则。虽然可能有一些特殊的情况，但一般来说，机器学习的易读性问题即能够用人类的术语解释系统的行为这个问题还没有解决办法。这使得除了昂贵的蛮力测试之外很难预测的技术如何应用于机器学习系统的验证。(也许有些组织确实有资源进行广泛的蛮力测试。但即使在这种情况下，训练数据的准确性、有效性和代表性也必须被证明为是安全论证的一部分。) 由于机器学习系统的易读性一般较差，而且由于过度拟合的危险是真实存在的，因此在这样的系统中存在着严重影响安全性的失效模式。特别值得关注的是在训练集数据中出现的偶然相关性，但人类往往注意不到这种相关性。例如，考虑使用经过训练的可变形部件模型来检测图像中的行人的方法，这在现实世界的数据集中已被证明是相当有效的。如果训练数据集中没有(或很少)行人坐轮椅的图像，那么这样的系统很可能会将行人的标签与用两条腿走路的人错误地联系起来。 归纳学习的解决方案归纳学习怎么进行测试是很困难的。首先是黑天鹅问题，故事是这样的，在18世纪末之前，在欧洲观察到的所有的天鹅都是白色的，因此一个使用归纳逻辑的观察者会得出结论，所有的天鹅都是白色的。然而，这名观察者在访问澳大利亚时，会经历这种信念的挑战，因为那里有大量的黑天鹅。换句话说，如果系统没有看到一个特殊的情况，它就不能学习这个情况。这是对归纳学习方法的一个基本限制。此外，由于机器学习严重缺乏易读性，人类审查员很难或不可能想象在这样一个系统中出现类似黑天鹅的偏差。 验证一个归纳学习系统似乎是一个极具挑战性的问题。我们可能会使用广泛的测试，但需要保证黑天鹅数据随机独立到达率的假设，并对相应大小的数据集进行测试。如果有足够的资源，这可能是可行的，但是总会有新的黑天鹅，所以需要对大量的操作场景和输入值进行概率评估，以确保系统故障的低水平。 另一种验证归纳学习系统到高汽车安全完整性等级水平的方法是将一种基于归纳的低汽车安全完整性等级算法配对，该算法将命令发送给执行器，并使用基于高汽车安全完整性等级演绎的监视器。这将回避驱动算法的大部分验证问题，因为控制执行器的诱导算法的失败将被基于演绎生成的安全信封等概念的非感应监视器捕获。因此，执行器算法失败将是一个可用性问题(假定有足够的故障转移能力，系统安全关闭)，而不是安全问题。 关键任务的操作需求现在让我们回到先前讨论过的地方，即计算机最终控制着车辆，而不是控制着人。这意味着至少部分车辆必须是基于故障操作而不是面对故障停止。 故障操作系统设计的挑战故障操作系统设计已经在航空航天和其他环境中成功地完成了几十年，但是由于以下几个原因仍然是困难的。第一个原因是显而易见的，即必须提供冗余，以便当一个组件失败时，另一个组件可以接管。实现这一点需要至少两个独立的、冗余的故障停止行为子系统。 实现故障操作系统反过来需要至少三个冗余的故障任意组件，以便在发出不正确的输出而不是在组件级别发出静默失败的情况下确定故障源。对于必须容忍任意错误故障的系统，根据相关的故障模型，可能需要一个具有4个冗余组件的复杂容错系统。 冗余的结构变化取决于设计方法，和可能包括配置如三冗余系统成员(在这种情况下，成员必须确保不被一个单点故障)，或两个二对二系统，或者使用四台电脑。这些方法除了引入的明显开销之外，还存在一个测试问题，即如何确保故障检测和恢复工作的有效性，确保故障的独立性，并确保在驱动任务开始时所有冗余组件都是无故障的。冗余似乎不太可能被避免，但为了确保安全，可能会降低提供足够冗余的复杂性和成本 在典型的故障操作系统(如飞机)中，所有冗余部件本质上都是相同的，它都能够执行扩展任务。例如，商用飞机通常配置两个喷气发动机，每个喷气发动机至少有一个双冗余计算机控制。如果一台发动机上的两台计算机由于持续的交叉检测故障而关闭，那么就会有第二个独立的引擎来维持飞机的飞行。即便如此，对引擎可靠性的要求还是非常严格的，因为在第一个引擎故障后，飞机可能需要飞行几个小时才能到达最近的机场。这就对每个引擎提出了显著的可靠性要求，从而增加了组件成本。 虽然汽车是出了名的价格敏感的，但它们也有一个优势，即故障转移任务的时间可以很短(例如，把车停在路边，或者在必要时停在一条旅游线路上)，故障转移任务的持续时间是以秒而不是小时为单位度量的。此外，用于停止车辆的故障转移任务可能比完全自主操作的功能要少得多。这可以简化需求复杂性、计算冗余、传感器需求和验证需求。(作为一个简单的例子，故障转移任务控制系统可能不支持变道，这极大地简化了传感器需求和控制算法)因此，设计一个具有故障停止主控制器和更简单的故障操作故障转移控制器的自动车辆可能在硬件成本和设计/验证成本方面都具有吸引力。 它也可能不是基于完全的自主系统，而是就是完全的自主系统，在完全的自主系统中有一个检测器.这将使故障探测器本身拥有高水平，但可能允许正常的自主功能为低汽车安全完整性等级。这种方法可以很好地映射到主自主系统的监视/执行器体系结构。故障转移的自主性也必须以安全的方式设计，并根据其复杂性和计算的可靠性需求采用适当的体系结构方法。如果仅持续几秒钟的短暂故障转移任务中发生故障的可能性足够低，那么甚至可以使用单通道故障转移系统。 非技术性因素在部署自动驾驶时遇到的一些挑战是非技术性的，例如经常提到的责任问题(当发生事故时谁负责赔偿?)以及法律通常如何对待所有权、操作、维护和其他方面的车辆的问题。深入研究这个问题显然超出了本文的范围。然而，对非技术挑战的决议很可能对技术解决方案产生影响。例如，对事故重建数据的自主系统可能有法律要求，需要对这些数据的来源进行仔细的分析，以确保正确使用这些数据。举个简单的例子，假设雷达探测概率为95%，那么它的输出可能仍然会被记录在系统中，以判断是否检测到障碍物，表面上这意味着探测的确定性。 重要的是要确保法分析考虑到，仅仅因为雷达没有探测到行人，并不意味着行人不在那里(例如95%检测可能意味着每20个行人中就有一个不会被检测到)。 看起来，由于自动车辆的固有复杂性，以及无法通过测试证明完备性，开发人员必须以保证案例的形式创建安全保证参数。这样的保证论证对于维护和解释系统的完整性是必要的，并且它能够可靠地解释系统对不可避免的危险情况的反应。确保证据的完整性是应该解决的一个特殊问题，因为借此可确定由于发生特殊情况而造成的事故是否是不可避免的。其他需要关注的重要的问题是，事故是否由系统需求的缺陷、合理可预见和可避免的设计缺陷、实施的缺陷或其他原因引起的。 故障注入从前面的讨论中可以明显看出，传统的功能测试在面对一个完整的系统时会遇到困难，尤其是在不寻常的操作条件下，很难去执行异常的组合。虽然测试人员可以定义一些非名义上的测试用例，但由于异常、操作场景和其他相关因素的组合爆炸，该测试的可扩展性存在问题。 此外，研究还表明，即使是非常优秀的设计人员，在相对简单的软件系统中，也经常会出现盲点和错过异常情况。 故障注入和鲁棒性测试是在异常情况下评估系统性能的较为成熟的技术，在测试异常情况响应时可以避免设计人员和测试人员的盲点。传统的故障注入包括将位翻转插入到内存和通信网络中。最近的技术增加了抽象的层次，包括基于数据类型的故障字典，并确保了故障的代表性。这些技术已经被成功地用于自动驾驶汽车的缺陷的发现和特征。 这是一种很有希望帮助验证自主性的方法，它在组件的抽象级别执行故障注入，作为试图伪造安全性声明的策略的一部分。这不仅涉及到对主要传感器输入的对象进行模拟，还涉及到插入异常条件以测试系统的健壮性(例如，在映射中插入无效数据)。执行此类故障注入的目的不是验证功能，而是通过探查不可预见的情况激活弱点。这种故障注入也可以ISO 26262过程中跨层执行。 结论根据V过程开发的安全自主车辆会遇到很多大挑战。但是为了确保车辆是安全的，仍然需要遵循ISO26262v流程，或者证明一套同样严格的流程和技术实践。假设应用了V过程，有一下三种看起来比较有意义的方法。 分阶段部署在不受限制的真实环境中(包括特殊情况)，开发和部署一辆自动驾驶汽车来处理所有可能的场景组合似乎是不切实际的。当下正如在汽车系统中常见的那样，基于当前开发人员实践的分阶段部署方法似乎是一种更为合理的方法。 可以将分阶段部署绑定到V流程，通过指定良好的操作概念来限制操作范围，从而限制必要的需求范围。这会包括环境、系统和操作约束的限制，这些限制必须用于满足于实现自主操作。验证这些操作约束是否被执行是确保安全性的重要部分，在V过程中它必须显示为一组包括操作需求、验证和潜在运行时的机制。 例如，在运行时监控不仅需要监控系统状态是否允许自主授权，而且需要假设关于安全的操作场景参数实际上是否满足，以及操作场景的系统实际上是否认为它是被满足的。 需要特别注意的受限操作概念的一个方面是，需要确保在操作场景突然失效时维护安全性，例如，由于意外的天气事件或基础设施故障引起的操作场景失效。当系统偏移在允许的自主操作场景之外时，异常转换机制需要成功地执行系统恢复或故障转移任务， 目前尚不清楚的是，分阶段部署方法是否为实现自主驾驶提供一条完整的道路。但是，这样的方法至少提供了一种方法来取得进展，而且带来了一些好处，与此同时因为系统看到了更多的现实世界的情况。这种方法帮我们对困难的边界情况和未预料到的情况有更多的了解。 监控/执行机构使用监控/执行机构架构是一种常见的方法，可以帮助减轻自动车辆安全的许多挑战。正如所讨论的，这种架构风格能满足很高的复杂性需求(只有监视器本质上是完美的)，并部署归纳算法(通过限制对执行器的使用，并使用基于演绎的监视器)。此外，使用故障转移任务策略可以允许自主系统监视器检测主系统故障，而不必确保故障操作行为。更简单、高度完整性的故障转移自主系统可以使车辆到达安全状态。这样的系统可能具有足够短的故障转移任务，只要能够确保在启动故障转移任务时整个系统是无故障的，就可以使故障转移操作的冗余最小化。 故障注入为了确保系统的可靠性，单独的故障注入测试是不可行的。自动驾驶汽车增加了这一问题的复杂困难性，因为自动驾驶汽车能自动对高度复杂的环境做出反应，并引入诸如机器学习等难以测试和测试费用高昂的技术。因此由于缺乏人驾驶监督，自动驾驶系统必须有一个很高的汽车安全完整性等级。制作普通的系统测试，似乎很难获得对合理的水平的保证。故障注入可以作为验证策略的一部分发挥相当的作用，验证策略包括传统的测试和非测试验证。特别是当故障注入应用于多个抽象级别，而不仅仅是在电气连接器的层面上时，这一点就显得尤为重要。 未来工作本文讨论了如何在基于ISO 26262的V框架内实现自动车辆安全的保障。但是，事实上使用架构模式(如监视/执行器方法)和通过故障注入进行验证将限制操作性能。换句话说，我们可能需要通过收束自动驾驶汽车的功能，以适应当下的测试技术的限制。如果想放宽这些限制，需要在以下方面取得进展：描述与预期操作环境相符的机器学习训练数据的覆盖范围，对基于异常驾驶条件的安全需求有信心，以及能够验证带有冗余的归纳系统中故障的独立性。]]></content>
      <tags>
        <tag>自动驾驶测试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[线性代数 | 重要矩阵]]></title>
    <url>%2F%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-%E5%AF%B9%E7%A7%B0%E7%9F%A9%E9%98%B5.html</url>
    <content type="text"><![CDATA[本节我们来探讨各种线性代数中重要矩阵的性质。 对称矩阵对称矩阵是最重要的矩阵，了解一个新矩阵一般都要从从特征值和特征向量开始。 特征向量垂直实对称矩阵的特征值也是实数，其特征向量是正交的(垂直的)。如果特征值互不相同，那么每个特征值的特征向量各自在一条线上，而且线垂直。特征向量空间是一维的，且互相垂直的。但如果特征值相同，有一整个平面的特征量，可以从中挑选出垂直的特征向量。 对称矩阵分解$A = S\lambda S^{-1}$，矩阵的分解，S是特征向量矩阵，$\lambda$是特征值矩阵。 在对称情况下，S是特征向量，是列向量，可以化为标准正交向量，则用Q表示。 A=Q\lambda Q^{-1}=Q\lambda Q^T \\ A^T=Q\lambda Q^{-1}=Q^T \lambda Q数学上这被称作谱理论。力学上称之为主轴定理。 A=Q\lambda Q^T=[q_1,q_2, \dots] \begin{bmatrix} \lambda_1&\dots&0\\ \ &\ddots& \ \\ 0 & \ & \lambda_n \end{bmatrix} \begin{bmatrix} q_1^T\\q_2^T\\ \vdots \end{bmatrix} \\= \lambda_1q_1q_1^T+\lambda_2q_2q_2^T+\dots观察上文公式，对于$q_1q_1^T$。列向量乘以行向量得到的矩阵是投影矩阵。（这里的q是单位向量，所以不用再除以$q^Tq$）因此我们得到结论。每一个对称矩阵都是一些互相垂直的投影矩阵的组合。 特征值为实数的证明证明特征值为 实数的过程中用到了对称矩阵的性质和假设条件，注意其中$x^Tx$的应用。证明： Ax=\lambda x \rightarrow \overline{Ax}= \overline{\lambda x} \rightarrow \overline{x}^T\overline{ A}^T=\overline{ x}^T\overline{\lambda} \\ \overline{x}^T\overline{ A}^Tx=\overline{ x}^T\overline{\lambda}x \rightarrow \overline{x}^T \lambda x=\overline{ x}^T\overline{\lambda}x \rightarrow \overline{\lambda} = \lambda由此可得到虚部是零，特征值为实数。，另外请注意在消去过程中。$\overline{ x}^Tx$ 乘积消去了虚数，所以乘积是整的平方值，因而可以放心消去。 如果是复数矩阵，想喝对称实矩阵具有实特征值且特征向量垂直的有优良性质。除了得满足对称特性外，还得满足共轭条件，即$A=\overline{A}^T$ 对称矩阵的小应用给定对称矩阵，可以推算特征值是正是负的问题。例子如计算50阶矩阵，直接计算50阶的方程相当困难，但matlab可以通过简单的计算确定主元的正负。 对于对称矩阵，主元符号和特征值的符号保持一致。 另外，对称矩阵主元和特征值并不相同，主元的乘积等于特征值的乘积，因为它们都是行列式的值。 如果将一个矩阵平移7个单位矩阵，再看结果的正负，就应该能知道哪些大于7，哪些小于7了。 统计学(Statistics)一词，源自于意大利文Stato，其词根兼有”国家”和“情况”的意义，统计学其实就是国情学。 1662年格朗特写了《观察》一书，在统计学史上占据了一个突出的地位 复数矩阵（傅里叶矩阵）傅里叶变换意义快速傅里叶变换又称作FFT， 通常n阶方阵要计算$n^2$次，但FFT可以帮助计算减少到$nlogn$次。 复数向量的模长求在$n$维复空间($c$空间)里的给定列向量$z$的模长，$z=[z_1, z_2 ,\dots]$ 。列向量$z$的共轭向量可以用$z^H$表示，读作艾尔米特。内积$z^Hz=|z_1|^2+…$ 是模长的平方。 复数矩阵的对称对称矩阵定义$A^T=A$，但其只针对实矩阵。对于复矩阵对称$A^H=A$, 叫做艾尔米塔矩阵。矩阵的特征值是实数，特征向量相互垂直。 复数正交矩阵构造相互垂直的向量，$q_i^Hq_j$，i不等于j时，值为0，相等时值等于1。以上述向量做列构造一个$Q$矩阵，称为酉矩阵则$Q^HQ=I$，酉矩阵是n阶方阵，列向量是正交单位向量，傅里叶矩阵也是酉矩阵。 构造傅里叶矩阵假如n是6，$w^6=1,w=e^\frac{2\pi}{6}$, 在单位圆的60度处，其乘方是$w=e^\frac{2\pi}{3}$,是在120度处 ，也在上图的单位圆上,以此构造傅里叶矩阵$F_6$。 令n等于4，$w=e^\frac{2\pi}{4}$，逆时针旋转90度。则依次平方是$i,-1， -i，1$ 。分别对应$w，w^2，w^3， w^4$ 。 得到一个傅里叶矩阵$F_4$（每个元素的指数等于行序数乘以列序数）. 傅里叶变换向量左乘$F_4$,对应傅里叶变换。左乘$F_4^{-1}$，对应的是傅里叶逆变换。由于可以把它分解为稀疏矩阵，它们的逆计算都非常快捷。该矩阵各列都正交（利用复数内积可求 ）。但并不是标准正交的，可以把矩阵乘以一个1/2. 之后就有$F_4^HF_4=I$ FFT性质$F_{2n}$和$F_n$存在联系，举例$F_{64}$和$F_{32}$。$w_{64}^2=w^{32}$前者包含两个后者以及零矩阵，为了构造出这个等式，需要找到两侧的修正矩阵 。右侧是一个置换矩阵，上半部分的奇数列和下半部分的偶数列阵，它能把偶数分量的向量$x_0,x_2$全部排在奇数列$x_1,x_3$前面。对角阵D由w的幂组成。接下来可以继续递归分解$F_{32}$ \begin{bmatrix} 1&1&1&1\\1&i&-1&-i\\1&-1&1&-1\\1&-i&-1&i \end{bmatrix}=\begin{bmatrix} I&D\\I&-D \end{bmatrix} \begin{bmatrix} 1&1&&\\1&i&&\\&&1&i\\&&1&i \end{bmatrix} \begin{bmatrix} 1&&&\\&&1&\\&1&&\\&&&1 \end{bmatrix}正定矩阵正定矩阵把主元，行列式，特征值，不稳定性融合在一起。$x^TAx &gt; 0$ 以下每一条都是正定性的完备判断条件,前提都首先是对称矩阵。 所有的特征值都大于0 所有的行列式大于0 所有的主元大于0x $x^TAx&gt;0$ 这也是对正定性的定义。 $x^TAx&gt;=0$，这是对半正定的定义 观察下面的半正定矩阵例子$A$，我们对它进行$x^TAx$处理。 \begin{bmatrix} x_1&x_2\end{bmatrix}\begin{bmatrix} 2&6\\6&18 \end{bmatrix}\begin{bmatrix} x_1\\x_2 \end{bmatrix}=2x_1^2+12x_1x_2+18x_2^2=\\(\sqrt{2}x_1+3\sqrt{2}x_2)^2=ax_1^2+2bx_1x_2+cx_2^2对于该矩阵A，特征值是0和20，只有一个主元2 正定矩阵来自最小二乘法，最小二乘法的关键在于$A^TA$，大量的物理问题需要用长方形矩阵描述。而对于正定有三个推论 如果A正定，那它是对称的。 只要原矩阵是正定的，那么逆矩阵也是正定的（特征值是倒数）。 如果A正定，B正定，那么A+B是正定（利用定义证明）。 假设A是$m*n$长方形矩阵。那么$A^TA$既是方阵，也是对称的。且 $x^TA^TAx=(Ax)^TAx$是非负的，向量长度的平方大于等于0。判断等于零向量的条件，矩阵A各列线性无关，则零空间里不存在零向量以外的向量，确保$A^TA$的正定。如果正定，最小二乘方程将存在最优解。另外，这也为数值计算提供了便利，不需要进行行交换，也不用担心主元小于等于0。 相似矩阵假设A和B是相似矩阵，它们都是n阶方阵，那么存在某个可逆矩阵M，使得$B = M^{-1}AM$ 假设$A$具有线性无关的特征向量，存在特征向量矩阵$S$，则$S^{-1}AS = \lambda$，这说明A相似$\lambda$，S是特殊的$M$，如果换了$M$，则$\lambda$将变成其他相似的B矩阵。我们可以把这样的矩阵归为一类：任意两个互为相似的矩阵，任意两个矩阵通过M存在一定联系，这些矩阵中最特别的是这个对角阵。 相似矩阵具有相同的特征值， 但不具有相同特征向量。这个矩阵系列都相似于对角阵$\lambda$，可以轻易构造特征值相同的三角阵，它也属于这个阵列。证明如下： Ax = \lambda x \ \ \ B=M^{-1}AM \\ Ax=AMM^{-1}x=\lambda MM^{-1}x \\ M^{-1}AMM^{-1}x=\lambda M^{-1}x\\ BM^{-1}x=\lambda M^{-1}x \ \ \ Bx=\lambda x如果特征值重复，那么特征向量可能不再是线性无关的 ，矩阵可能无法对角化。 比如一类矩阵的特征值是4和4，其中一种情况，$\begin{bmatrix}4&amp;0 \ 0&amp;4\end{bmatrix}$,进行相似矩阵的计算结果还是原矩阵，它只和自己相似 。 $\begin{bmatrix}4&amp;1 \ 0&amp;4\end{bmatrix}$，这个矩阵不能对角化，如果能对角化，它就相似于上面的矩阵，产生矛盾。它只有一个特征向量。包括这个矩阵在内的一个大家族，是最接近对角阵的形式，但是一个无法对角化的矩阵，定义为若尔当矩阵。无法对角化，但又最像对角阵。 对于之前无法对角化的矩阵，可 以通过一种特殊的方法，完成近似的对角化，即若尔当标准型。一般矩阵很难化简为若尔当标准型，因为它依赖于矩阵特征值完全相等。 如下所示的矩阵也不能对角化，理由同上。 \begin{bmatrix}4&1 \\ 0&4\end{bmatrix} \rightarrow \begin{bmatrix}5&1 \\ -1&3\end{bmatrix} \rightarrow \begin{bmatrix}4&0 \\ 17&4\end{bmatrix} \rightarrow \begin{bmatrix}a&0\\ m&8-a\end{bmatrix}\\ det = 16, trace = 8若尔当矩阵 \begin{bmatrix}\lambda&1&0&0 \\ 0&\lambda&1&0\\ 0&0&\lambda&1\\0&0&0&\lambda\end{bmatrix}若尔当块，$J_i$表示$i$阶的若尔当块，对角线上是同一个数，下面全是0，上面都是1，每个若尔当块只有一个特征向量。对上例而言，两个块大小不一样，因此两个方阵并不相似。 每个方阵$A$都相似于一个若尔当阵$J$，就是由若尔当块构成的矩阵，特征值位于对角线上，上面还有一些1，若尔当块的数量等于特征向量的个数（每一块对应一个特征向量）假设矩阵A具有不同的特征值，具有n个，那它就是一个可对角化的矩阵，$J$就是$\lambda$，]]></content>
      <tags>
        <tag>机器学习</tag>
        <tag>线性代数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[线性代数 | 特征值、特征向量]]></title>
    <url>%2F%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-%E7%89%B9%E5%BE%81%E5%80%BC%E3%80%81%E7%89%B9%E5%BE%81%E5%90%91%E9%87%8F.html</url>
    <content type="text"><![CDATA[特征值和特征向量是线性代数中另一块儿核心内容。 导论概述和定义在我们的高等数学体系里，微积分关注的是单维，而线性代数关注的是多维。现在我们以函数的视角看矩阵A，以矩阵A乘以向量x，得到向量Ax，A像一个函数。我们关注这样的A，向量x被变换前后方向相同，也即$Ax= jx$，即Ax平行于x，这里的x就是特征向量。j允许取负值或者零，甚至是复数，j是特征值。特征值和特征向量反应了一个矩阵的核心信息，在实际应用中，这两个信息往往也代表着系统的关键特征。 $(A - jI)x = 0$是特征方程。 如果存在一个非零向量x满足条件，那么$A - jI$必须是一个奇异矩阵，即$det（A - jI）= 0$，求解n个j就得到了特征值，有些j可能会发生重复，重复特征值是关于这块知识难点的根源。 对于每个特定的j（特征值），利用消元法，找出主列，给自由变量赋值，求出的零空间即是由特征向量组成的空间。 几个特殊矩阵 如果特征值是0，则$Ax = 0x$，即特征向量x是零空间的向量。如果A是奇异矩阵，那么存在非零向量使得$Ax=0$，则j = 0就是一个特征值。换句话说，奇异矩阵能使非零向量变成零向量。 投影矩阵P的特征向量和特征值。给定向量b，使P作用在上面，得到 Pb，向量Pb和向量b方向一般不相同。只有本来就在P的列空间里的向量，做投影之后，本身无改变，即$Pb=b$，说明其是一个特征向量，特征值是1。这样我们间接得到了一整个空间的特征向量。再来关注垂直空间里的向量，任意垂直P的列空间的向量x，$Px = 0 = 0x$。综上投影矩阵的特征值是0和1 旋转矩阵，记为Q（将每个向量旋转90），[[0,1],[-1,0]]，这是一个正交矩阵，由迹特征值之和等于0，特征值之积等于行列式的值。得j1+j2=0,j1j2=1,所以j1 = i，j2 = -i, 就本例而言，它是共轭复数。这里可以研究问题，哪些向量旋转后与自己平行。特征向量是和作用前相同方向的，但Q是比较极端的，除非旋转360度。如果矩阵是对称的或者接近对称的，一般都是实数特征值，但旋转矩阵（这里非常的不对称$Q^T = -Q$），它是反对称的，这种矩阵的特征值是虚数。好的特征是实数特征值，互相垂直的特征向量。坏的是虚数特征值。 三角矩阵，特征值在对角线上，带入求解特征向量，对于重复的特征值，会造成特征向量的短缺。特征值两个重复的3，但特征向量只在一个方向上，而不是两个。这造成了特征向量的短缺。 关于特征知识的一些其他描述 一般来说，矩阵越特殊，特征值也越特殊。如二维对称矩阵[0 1；1 0] ，特征值是1，-1。 特征向量垂直的，分别为[1,1] 和[1,-1] n维矩阵有n个特征向量，特征值的和（另外一个说法叫做迹）等于对角线元素的和。 如果$Ax= jx$, B的特征值是k1，A+B的情况。$Ax= jx，Bx= kx$，那么$（A+B）x = （j+K）x$是错误的，因为x不能确定是B的特征向量，除非B是单位矩旋的倍数。 应用对角化定义 ：给定矩阵A，其特征向量按列组成S, 特征向量矩阵S必须可逆。推导如下。 假设A有n个线性无关特征向量(不关注重复)，按列组成矩阵S，组成特征向量矩阵，注意S是特征向量组成的矩阵，A是线性无关的矩阵 谨记以下三个变换公式，即 AS = S\lambda \\ A = S\lambda S^{-1} \\ S^{-1}AS = \lambda幂特征值幂矩阵的特征值,这是可以重新帮助认识特征指的工具。其中特征值的平方计算非常容易。 Ax=\lambda x \rightarrow A^2x=\lambda Ax = \lambda^2x \\ A^2=S\lambda S^{-1}S\lambda S^{-1} = S\lambda ^2S^{-1} \\ A^k = S\lambda ^kS^{-1}如果特征绝对值小于1，那么k趋向于无穷，A的k次方趋向于0，矩阵的幂趋近于0，是稳定的。 注意所有的推导是在有n个线性无关特征向量的前提下的。当所有特征值不同时，A必然存在n个线性无关向量且可以对角化。证明略当特征值有重复，它可能有但并不一定存在线性无关特征向量。举个例子，10*10单位矩阵，特征值1重复了10次，但有很多线性无关向量。 幂特征值的应用给定$u_0$,求解$u_{k+1}=Au_k$,则u_k=A^ku_0\\ u_0=c_1x_1+\dots+c_nx_n=Sc\\ Au_0=c_1\lambda_1x_1+\dots+c_n\lambda_nx_n=S\lambda S^{-1}Sc=S\lambda c\\ A^ku_0=c_1\lambda_1^kx_1+\dots+c_n\lambda_n^kx_n=S\lambda ^kc 求解斐波那契数列已知$F_{k+2}=F_{k+1}+F_k$，$F_0=0,F_1=1$。求解的关键是在构建出$u_{k+1}=Au_k$的形式。问题的关键在于斐波那契数列是而二阶差分，但目前只有一个方程。这里应用的技巧是是令$u_k=[F_{k+1},F_k]$,追加一个方程$F_{k+1}=F_{k+1}$ u_{k+1}=\begin{bmatrix} F_{k+2}\\F_{k+1} \end{bmatrix}=\begin{bmatrix} F_{k+1}+F_k\\F_{k+1} \end{bmatrix}=\begin{bmatrix} 1 & 1\\1 & 0 \end{bmatrix}\begin{bmatrix} F_{k+1}\\F_{k} \end{bmatrix}$=Au_k一个彩蛋。斐波那契数列增长速度的快慢可以用矩阵特征表示，计算特征值大小为$\frac{1+\sqrt{5}}{2}$,熟悉吗？ 微分方程求解可以将一阶微分方程转化为求线性代数问题，中间注意常系数线性方程的解是指数形式。举个例子 \frac{du_1}{dt} = -u_1+2u_2\\ \frac{du_2}{dt} = u_1-2u_2\\ \frac{du}{dt}=Au=\begin{bmatrix} -1&2\\1&-2 \end{bmatrix}\begin{bmatrix}u_1 \\ u_2\end{bmatrix}\\ u(t)=c_1e^{\lambda_1t}x_1+c_2e^{\lambda_2t}x_2(代入验证)对解的形式，这里的指数幂，相当于上节课k的幂次方，上次是幂形式，这次是指数形式,。证明方法，分别带入$\frac{du} {dt} = Au$,得证。 假设$u_0=[1,0]$, 对本例而言，矩阵A为奇异矩阵，一个特征值是0，迹为-3，所以另一个为-3，特征向量$x_1=[2,1] , x_2 = [1,-1]$，再代入上式可得到$c_1,c_2$。得到答案公式如下 u(t)=\frac{1}{3}\begin{bmatrix} 2\\1 \end{bmatrix}+\frac{1}{3}e^{-3t}\begin{bmatrix} 1\\-1 \end{bmatrix}对于此例,随着时间增长逐渐流向稳态。观察形成稳态的条件，特征值需要小于0，对于复数只要实部小于0就可以 进一步推导。确定$c_1,x_2$时，用到了公式$Sc=u_0$,原方程组有两个相互耦合的未知函数， 矩阵A就表明$u_1，u_2$相互耦合，希望把解变成S和$\lambda$的形式,这样看来，特征值和特征向量的作用是解耦，又叫做对角化。 \frac{du}{dt}=Au \ \ \ u=Sv\\ S\frac{dv}{dt}=ASv \rightarrow \frac{dv}{dt}=S^{-1}ASv=\lambda v\\ \frac{dv_1}{dt}=\lambda_1v_1 \ \ \ \frac{dv_2}{dt}=\lambda_2v_2\\ v(t)=e^{\lambda t}v(0) \\ u(t)=Se^{\lambda t}S^{-1}u(0)=e^{At}u(0)另外，求解二阶微分方程的方法与此类似。 $e^{At}$的意义证明$e^{At}=Se^{\lambda t}S^{-1}$ e^{At}=I+At+\frac{(At)^2}{2}+\dots+\frac{(At)^n}{n!}+\dots\\ =I+S\lambda S^{-1}t+\frac{S\lambda^2S^{-1}t^2}{2} +\dots+\frac{S\lambda^nS^{-1}t^2}{n!}+\dots \\ = S( I+\lambda t+\frac{\lambda^2t^2}{2}+\dots+\frac{\lambda^nt^n}{n!}+\dots)S^{-1}\\ = Se^{\lambda t}S^{-1}同时，巧妙的是,$e^{\lambda t}$的计算相当于n个泰勒级数。 \lambda = \begin{bmatrix} \lambda_1&\dots&0\\ \ &\ddots& \ \\ 0 & \ & \lambda_n \end{bmatrix} e^{\lambda t} = \begin{bmatrix} e^{\lambda_1t}&\dots&0\\ \ &\ddots& \ \\ 0 & \ & e^{\lambda_nt} \end{bmatrix}马尔科夫矩阵定义：每个元素大于等于0，每一列加起来等于1 性质1：矩阵平方后仍然大于等于0 性质2：平方后每列的值的和依然是1。 性质3：A的幂依然是马尔科夫矩阵，这和概率论思想有关 性质4：马尔科夫矩阵存在一个特征值1，所有其他特征值$|\lambda_i|&lt;1 $证明，观察$A-\lambda I$观察到每行相加等于0，说明三行线性相关，说明三列线性相关，说明矩阵奇异，说明1是特征值。 性质5：稳态值。$u_K=A^ku_0=c_1\lambda_1x_1+\dots+c_k\lambda_kx_k$,稳态趋近于$c_1x_1$ 性质6：A和$A^T$的特征值相同。证明:$det(A-\lambda I)=0$,由于矩阵行列式性质，$det(A^T-\lambda I = 0)$，则得证求解$u_{k+1} = Au_k$,以人口迁移问题进行举例，此处不再展开。 傅里叶级数有n个标准正交向量$q_1,q_2 \dots,q_n$，假设其是n纬空间的一组基。将向量v展开到基上去 v = x_1q_1+x_2q_2+...+x_nq_n+\dots \\ q_1^Tv=x_1q_1^Tq_1+0+\dots+0 \rightarrow q_1^Tv=x_1\\ Qx = v ,x = Q^{-1}v=Q^Tv傅里叶级数公式如下,$f(x) = a_0+a_1cosx+b_1sinx+a_2cos2x+b_2sin2x+\dots$但不同于上文利用内积计算正交性的方式。此处函数的内积指的是$f^Tg= \int_0^{2\pi}f(x)g(x)dx$,傅里叶级数的的基函数$sinx,cosx,sin2x,cos2x \dots$具有正交性，这一组也被称为无穷正交基。]]></content>
      <tags>
        <tag>机器学习</tag>
        <tag>线性代数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[统计学习 | 正态分布、测量]]></title>
    <url>%2F%E7%BB%9F%E8%AE%A1%E5%AD%A6-%E6%AD%A3%E6%80%81%E5%88%86%E5%B8%83%E3%80%81%E6%B5%8B%E9%87%8F.html</url>
    <content type="text"><![CDATA[赋予对象以数量，对理解对象有很大的价值，本节主要关键词是测量，内容是有关正态分布和测试的。 正态分布之美 统计学里有三项奇妙神奇的工具：相关系数、中心极限定理、正态分布 正态曲线示意如下图所示，平均数在中间，越偏离中心，分数空间越小； 正态分布一种可能的解释为：分数落入给定区域的可能性 正态曲线是联系自然万物的普遍真理，它体现了平衡和变异的思想。 正态分布表格 观察如下图所示表格。各列所代表的含义如下。 z列指的是z分数，z分数指的是用标准差表示与平均数的距离，z分数为1.04，描述的是距离平均是1.04个标准差的分数 平均数和z分数之间的比例，在平均数和一个给定分数的空间内，存在某个比例的分数，也是随机数落入所限定区域的概率。 大区域中分数的比例。任意给定z分数和z为4.0之间的区域。 这张表不仅可用于分数，也可用于相关系数和比例 z分数 原始分数（绝对值）包含的信息没有想象得多，但可以把原始分数转换成z分数来进行处理。z分数又称为标准分数，你的四六级成绩是标准分。 $z=\frac{原始分数-平均数}{标准差}$，z分数的值一般介于-3至+3之间 z分数的生效原理可被称为常模参照，即不确定测试分数的含义，但至少可以把分数和其他人情况做对比。 另外一种是标准参照，这需要知道更多关于测量的特质或内容的信息。 T分数 z分数有一些自己的缺点，如可以是负值；0.00是平均分；预期最高分被限制（一般是3分），这限制了它的使用范围，因而引入了T分数。 T分数是对z的转换，$T=z(10)+50$ 其他标准分数如下图所示 z分数其实是平均数为0，标准差是1。如果我们希望使用自己分数的平均数和标准差，用z逆转换就行。 设计计分系统并构建测试时，选择常模参照计分，驱动原理是理解任务表现，因此对比某人和其他人的表现水平。选择标准参照计分，驱动原理是基于一系列标准，如知识库、一套技能、教育目标和诊断特征。 如何正确提问 包含3-5个选项，且保证每个选项的信度 不将”以上所有选项“和“以上选项都不是”作为选项 对选项进行逻辑排序或随机排序 使题干长于选项，且题干和选项语法保持一致 不要使用否定词 使用整句表述题干 学习水平有知识、理解、应用、分析、综合、评估，出题时应选择正确的认知水平。 建立信度 信度保证测试分数受随机因素影响较小。大多数信度指标基于以下相关：对测试项目做出的反应的相关、一个测试的两个分数集之间的相关、一个测试两次计分的相关。 有四种常见的信度类型用来确定一个测试产生的分数是否不包含太多随机变异 内部信度。在同一个测试中不同项目间是否一致？对其测试，计算分半相关，即随机分成奇数和偶数，计算相关性。公式$\alpha=\frac{n}{n-1}(\frac{SD^2-\sum{SD_{i}^2}}{SD^2})$,n代表测试项目数，SD代表测试标准差，$SD_i$表示每个项目的标准差。系数值高于0.7时是必须的，只被用来设计做重要的测试。 重测信度。执行同一测试两次，每个参试者的表现是否一致？用于经过一段时间后问卷的一致性。 内部评分者信度。如果两个不同的人给测试平分，参试者表现是否一致？比如高考评卷 平行信度。采取不同形式执行同一个测试，参试者表现是否一致？比如几次高考前模拟考试。]]></content>
      <tags>
        <tag>统计学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[统计学习 | 相关性]]></title>
    <url>%2F%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0-%E7%9B%B8%E5%85%B3%E6%80%A7.html</url>
    <content type="text"><![CDATA[一个特质与另一个特质的关系，因和果之间的联系，都可以通过数学的技巧揭示 发现相关性 相关性无处不在，描述关系大小的数字叫做相关系数 相关系数计算公式$\frac{\sum(z_xz_y)}{N-1}$,$Z_x$是指分数离平均数的距离。 相关系数值在$-1 \sim +1$之间，它提供了两个变量之间线性关系强度的标准度量。强相关也可以是负的。 只有在样本数足够大的时候，样本的相关性才能表征总体的相关性。有下表。 相关性不能作为因果关系的证据，虽然二者有关联。 在相关性分析中，线性回归是一个重要话题 回归方程 用一组数据预测另一组数据需要两组样本数据，一组为效标变量，即想要预测的变量。另一组为预测变量，即用作预测指标的变量。还需要两变量之前相关系数一个。 计算最终方程为效标 = 常量 +(预测变量 X 权重)，计算过程如下： 权重 = 相关系数 X 效标标准差 / 预测标准差 常量 = 效标平均数 - （权重 X 预测平均数） 当两个变量相关时，提供的信息有重叠之处，即共享变异。因此可用一个变量的变异去解释另一个变量的变异。 当两变量相关不完美；关系是非线性化的； 原始数据不具备对未来数据的代表性，那么回归分析就用处不大。 多变量预测单变量 计算最终方程为效标 = 常量 +(预测变量1 X 权重1)+(预测变量2 X 权重2) + … 直接对比原始权重可能会有误解，一个变量权重过小，可能是因为它的度量尺度大。通过标准权重可以解决问题。 多元线性回归预测效果比简单线性回归好，因为引入了额外的信息，最后产生的权重是移除了共享信息之后的权重。 单因素卡方检验 1982年伦敦出生男孩女孩数量相同吗？一天中不同时段罪案数量相同吗？单因素卡方检验用来解决多类别中每一类所包含的“事物”数量较之正常状态下随机发生的数量是否有所不同这样的问题，其用来识别非预期结果 卡方值计算公式：$\sum{\frac{(观望频次-期望频次）^2}{期望频次}}$ 显著性为0.05时需要的卡方值。 卡方适用于类别数据，数字越大，用偶然性单独解释事情的可能性越低。卡方检验的使用框架是:研究者怀有某个预期，以此方法检验观测数据是否与预期相符。 卡方是一种直接的模型检验，一种拟合优度检验。 两因素卡方检验 与前文不同，两因素卡方检验主要用来识别非预期相关，比如程序员是否找不到妹子？女生更喜欢加入民主党还是共和党？ 计算方法基本与上文相同，也是计算平方卡方值。 两因素卡方通过观察差异性回答相关性，这可能违反直觉，但这背后的逻辑是如果没差异性，那么分布应随机形成，现在有较大偏差，说明有相关性。 两因素卡方分析有时候被称作联列表分析 t检验- t检验可以用来比较两组，t越大，差异为随机出现可能性越低。 t= \frac{第一组平均数-第二组平均数}{ \sqrt{ \frac{第一组方差}{第一组样本大小}+\frac{第二组方差}{第二组样本大小 }} } 随机出现几率小于5%的值 样本差异性究竟能不能反映总体差异性，t检验回答了这个问题。其公式里的平均分数提供了样本分数的分部信息，方差表示了可能偏离总体平均数的程度，样本量提供了估计的准确性。 标准误差 标准误差可以估计由样本得出的参数和总体参数的差距 标准误差分类 描述性统计中的平均数标准误差，如某个变量的总体平均分 调查取样中的比例标准误差，如总体中拥有某个特征的成员所占的比例 回归中的估计标准误差，如未来的表现。 平均数标准误差 = $\frac{标准差}{\sqrt{样本大小}}$,其本质是众多样本的平均数与其总体平均数距离的平均数。样本数量越准确。可以把样本量想象成独立观测，观测越多越准确。 比例标准误差 =$\sqrt{\frac{(比例)(1-比例)}{样本大小}}$。注意到样本中比例偏离0.5的程度越大，比例的标准误差越低。 $ 估计标准误差 = 标准差\sqrt{1-相关系数^2}$标准差指的是预测的变量(效标变量)的标准差，相关系数是预测变量和饿效标变量的相关。 因为取样误差是正态分布的，因此使用标准误差可以在一定把握上去判断真相(总体的值)落在哪个区间，示例如下图 标准误差之所以生效，其一是因为取样误差是正态分布的，其二是因为取样误差是无偏的，这意味着样本值大于或小于总体可能性相同。 取样 一个良好的样本能代表一个总体，这意味着总体中每个中重要特征分布必须和样本中特征分布成比例。 构建样本时，必须了解各种隐性或显性的分组层级。定义采样框架时需要明确通用全集、可操作全集、抽样单元、抽样框架 可泛化推广样本和有偏样本，关键在于是否随机 现实世界抽样方式 方便抽样，比如去购物中心随机问顾客对某件事态度 系统抽样，从抽样框架中等距抽取 分层抽样，首先要去定义子群组的特质 整群抽样，单元群组是随机的，但内部每个单元都是样本，如随机选一个班级，问里面所有学生情况 判断抽样，样本的选择是基于你的专业判断 威士忌与水的混合问题，很有意思 再谈平均数 平均数、中位数都是为了描述趋中趋势，实际决定选哪个数要考虑实际情况。 如果数据中存在两个或多个趋势，报告每个趋势的众数 如果分布是偏态的，选择中位数 如果分布是非常对称的，且只有一个众数，那么选择中位数]]></content>
      <tags>
        <tag>统计学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[统计学习 | 基础概念回顾]]></title>
    <url>%2F%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0-%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5%E5%9B%9E%E9%A1%BE.html</url>
    <content type="text"><![CDATA[这又是一个新的学习总结系列啦。 概率的意义 样本和总体的概念。 概率是统计学的核心，统计学家获取关于值分布的已知信息并将其表述成概率。 利用前人的公式和定理、经验法则、思想体系和假说，了解到研究者最常用的复杂值的分布情况。 在表述为概率的过程中，样本必须满足一定的前提，比图样本一定是随机的。 平均数和标准差 描述性统计和推断性统计。前者有全部数据，后者只有数据的一部分但仍想描述整个组。 利用平均数和标准差两个样本值加上一个总体分布假设，就可以描述总体，这就是中心极限定理。 平均数是对趋中趋势的最佳度量，它有一个奇妙的性质，它和其他各数的距离差 的和最小。 标准差用来描述值的变异性和分布(多数接近平均数还是远离平均数)，标准差描述的是每个分数和平均数的平均距离。 中心极限定理，表述为：从总体中随机抽取多个样本，那么每个样本的平均数趋于正态分布。 这些平均数的平均数等于总体的平均数。 这些平均数的标准差等于样本标准差除以样本量的平方根，（$\frac{\sigma}{n}$） 应用一：由样本值去估计总体的平均值和标准差 应用二：受很多随机作用和无关影响的数据最终呈正态分布，无论总体分布如何，从总体中随机抽取的平均数呈正态分布。 概率计算 加法定律对应互斥事件，相乘定律对应独立事件。 计算概率有两种视角，分析视角是经典视角，分析所有可能结果得出答案。相对频率视角则是通过收集数据、观察实际事实来计算的。 假设检验：对可检验世界做一个估计。验证假设合理方式是是通过观察假设变比那个是否存在相关性。 统计假设检验是特定的假设检验，其不同于研究假设检验(如关注总体中变量X和变量Y存在相关性)，它往往对于研究假设相反的假设(虚无假设)为真的可能性做概率解释(如关注总体中变量X和变量Y不存在相关性) 选择虚无假设的原因 证明某事为真非常困难，证明一个特定的估计不正确比证实它正确要容易的多。 证明某个总体故居不正确都比较容易，证明虚无假设错误也推动了进步。 增加样本以减少误差 对于受几率控制的结果随着实验次数增加，预测概率和实际发生概率之间的差距缩小，这个差距被称为标准误差。 差距大小与$\frac{1}{\sqrt{样本大小}}$成正比，这可以被看到大数定律的数学表述。 生效原因 一件事在单一实验中有特定概率，那么在无限实验中发生几率将和概率相等 样本无限大时，样本统计学特征等于总体参数 效度和可信度 效度指的是测试数据能在多大程度上体现希望测量的特征以及对测量意图的有用程度。 信度是对同一个人多次重复测量得到的相同测试分数的一致性程度，它是测试分数随机波动的程度，通常用测试项目中相关性来计算。 测量标准误差指的是每个人的观测分数和真分数之间的平均距离，它利用测试的信度信息和群组观测分数的变异来估计，即 标准误差 = 标准差*$\sqrt{1-信度}$ 加减一个测量误差一般对应68%置信区间，加减两个测量误差对应95%置信区间（有百分之九十五的可能性此区间包含观测分数）。 测量标准误差是一个标准差，它是误差分数距真分数的标准差。 使用测量误差构建置信区间需要误差是随机的且随机误差是正态分布。 测量尺度 统计学家把有意义的数字称为分数。 一共有四种测量尺度。名义测量、次序测量、等距测量、等比测量。 名义测量。数字代表标签。如0代表男性，1代表女性。 次序测量。第1名，第2名等。 等距测量。涵盖前两者，并新增了准确性。如70度和69度之间差的1度是有意义的。 等比测量。最高尺度，涵盖以上全部，且能产生百分比。 统计检验效力 用来解决没在样本中发现事实，但总体中实际存在相关性的问题 显著性检测 判断样本观测到的某个值有无可能是随机发生的。在过程中 产生一个p值，p值低，表明具有统计显著性，即相关性不仅存在于样本中，也存在于总体中。通常会定义一个预先的显著性水平，若小于等于预先设定水平，则表明达到效果。 借助相关性、t检验、F检验、卡方检验、回归方程都可以帮忙确定显著性。 统计检验效力指：假设变量间存在相关性，统计分析达到显著性的概率，这是一个条件概率。检验力公式包括:样本量、预设的显著性水平值、效应值(总体中相关性大小) t检验中，效应值常用两组平均数差除以样本标准差所得值来表达，0.2内为小，0.2-0.5为中，0.8为大，对同一检验力和显著水平，大效应值代表存在巨大差异，因而只需要很小的样本量。 效应值和样本量的关系。隐藏在总体中的大效应值（干草里的大象）更容易被发现（只需要较少样本）（只需要较少观察）（只需要撩开几把干草） 识别效应值 显著性只意味着在样本中的发现在总体中可能为真，但这不能让我们知道相关性，效应值可以解决相关性问题。 效应值表示两个变量间相关性强度，它对比如相关系数（体现两组分数之间的关系强度和方向）感兴趣 效应值三种类型 相关系数，用小写r表示，平方后称为方差比例 d，归纳了t检验中的两组平均数的差异，计算见#统计检验效力# $\eta^2$,最常见的效应值结果，解释为因变量(结果变量)对独立变量（你所在的组）贡献的方差比例 效应值多大，即相关性多大引起你的兴趣，这个可以通过查表得到。 对实际情况来说，效应值的用处比统计显著性要大一些，找到相关是更有实践意义的。]]></content>
      <tags>
        <tag>统计学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[统计学习 | 高斯分布]]></title>
    <url>%2F%E7%BB%9F%E8%AE%A1%E5%AD%A6-%E9%AB%98%E6%96%AF%E5%88%86%E5%B8%83.html</url>
    <content type="text"><![CDATA[工程领域很多研究问题本质上都是信息处理问题。这里可以举一个广义的例子，就自动驾驶系统的感知过程而言，环境就是信息源，传感器编码环境信息，认知算法对信息进行解码获得能完成驾驶任务的信息。 信息处理中一个经典问题是对不确定性建模，而推开不确定性的神圣青铜门，我们会发现高斯分布坐在正中间。 正态分布数学定义正态分布对应的密度函数表达式f(x) = \frac{1}{\sqrt{2 \pi} \sigma} e^{-\frac{(x-\mu)^2}{2 \sigma^2}}归一化后的密度函数表达式f(x) = \frac{1}{\sqrt{2 \pi} } e^{-\frac{x^2}{2}} 正态分布产生历史 由赌徒问题得到的二项分布问题，需要求解$2npqb(n,p,np)$的值，在此过程中逐渐发展出中心极限定理。即二项分布在n趋近于无穷的时候，其极限分布都有正态的性质。\lim_{n\rightarrow\infty}P\left( \frac{X_n – np}{\sqrt{np(1-p)}} \le x \right)= \int_{-\infty}^x \frac{1}{\sqrt{2\pi}} e^{\frac{-t^2}{2}}dt 勒让德发明最小二乘法，用来解决线性矛盾方程组的问题。即累积误差等于观测值减去理论值之后的平方和，之后令累计误差最小来计算参数，它的优点如下: 最小二乘法使得误差平方和最小，并在各个方程的误差之间建立了一种平衡，从而防止某一个极端误差取得支配地位； 计算中只要求偏导后求解线性方程组，计算过程明确便捷； 最小二乘法可以导出算术平均值作为估计值。 误差分布有一些基本特性： 观测数据存在误差； 误差是对称分布 大误差概率低，小误差概率大。基于以上特性统计学家分别发明了辛普森误差分布和拉普拉斯误差分布。高斯独辟蹊径开创了一条道路。如下公式，$\theta$为真值,$e_i$为每次测量误差,$f(e)$为该误差密度函数,测量值的联合概率为n个误差的联合概率\begin{align*}L(\theta) & = L(\theta;x_1,\cdots,x_n)=f(e_1)\cdots f(e_n) \\ & = f(x_1-\theta)\cdots f(x_n-\theta)\end{align*} 取使$L(\theta)$最大的$\theta$为最终值，即极大似然估计\hat{\theta}= \arg\max_{\theta} L(\theta)。高斯的天才之处在于令算术平均值等于\theta,由此解出$f(x)$就是正态分布函数$N(0,\sigma^2)$ 正态分布的推导过程高斯让平均数等于极大似然数，计算出了高斯分布（不困难，可查），而其他领域的科学家也各自从自己所属领域独立推出了正态分布，条条大道通罗马，正态分布藏着世界关于概率的终极秘密，了解这样概率可以帮助我们进一步认识正态分布。 高斯采用的是取对数、求导、求解方程的方法得出来的，过程很简单，可自行搜索。 赫歇尔和麦克斯韦 基于空间几何的不变性推出了高斯分布。其考虑二维误差分布$p(x,y)$,提出的假设如下 x轴和y轴的误差是相互独立的，即随机误差在正交的方向上相互独立 误差的概率分布在空间上具有旋转对称性，即误差的概率分布和角度没有关系 电气工程师兰登通过噪声分布推导。他们的推导基于以下准则： 随机噪声具有稳定的分布模式 累加一个微小的随机噪声，不改变其稳定的分布模式，只改变分布的层级 (用方差度量)$X\sim p(x;\sigma^2), \epsilon \sim q(e), X’= X+\epsilon$,则$X’ \sim p(x;\sigma^2 + var(\epsilon))$,这个公式给出了自然界噪音的形成过程，这是中心极限定理的增量版本，相比中心极限定理是一次累加，这是逐次累加。另外，我们可以推断，正态分布具有相当好的稳定性；只要数据中正态的模式已经形成，他就容易继续保持正态分布 基于最大熵的推导。熵可定义为$H(p) = -\int p(x)\log p(x) dx$,给定一个分布密度函数$p(x)$的均值$\mu$和方差$\sigma$,求满足熵最大的概率分布$p(x|\mu, \sigma^2)$,解出的就是正态分布。 正态分布的通用性解释 正态分布之所以有这么高的地位，一个很重要的原因是随着中心极限定理发展，我们发现，随意的一个概率分布中生成的随机变量，在序列和 (或者等价的求算术平均) 的操作之下，表现出如此一致的行为，统一的规约到正态分布 高尔顿钉板,这说明在自然界各种随机因素的影响下，最终会形成正态分布。而对于典型的遗传现象，我们可以认为是隔断的正态分布。 正态分布具有稳定的性质,如下前三个保证正态分布一旦形成，就具有稳定的性质。后两个说明在自然庆情况下，其它分布会逐渐趋近于正态分布。 两个正态分布密度的乘积还是正态分布 两个正态分布密度的卷积还是正态分布，也就是两个独立正态分布的和还是正态分布 正态分布$N(0,\sigma^2)$的傅立叶变换正规化为密度分布后还是正态分布 中心极限定理保证了多个随机变量的求和效应将导致正态分布 正态分布和其它具有相同均值、方差的概率分布相比，具有最大熵 正态分布的其他性质 二项分布 $B(n,p)$在n很大逼近正态分布 $N(np,np(1-p))$。 泊松分布$Possion(\lambda)$在$\lambda$ 较大时逼近正态分布$N(\lambda,\lambda)$。 $\chi_{(n)}^2$在 n很大的时候逼近正态分布$N(n,2n)$。 t分布在 n 很大时逼近标准正态分布 $N(0,1)$。 正态分布的共轭分布还是正态分布。 几乎所有的极大似然估计在样本量n增大的时候都趋近于正态分布。 如果 X,Y是独立随机变量，且S=X+Y是正态分布，那么X，Y也是正态分布。 如果 X,Y 独立且满足正态分布$N(\mu,\sigma^2)$，那么X+Y,X-Y独立且同分布，而正态分布是唯一满足这一性质的概率分布。 对于两个正态分布X,Y,如果X,Y不相关则意味着X，Y独立，而正态分布是唯一满足这性质的概率分布。 现在科学界的三大分布，$\chi^2$分布，t分布，F分布都可以转换为正态分布。]]></content>
      <tags>
        <tag>统计学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[跳出舒适区]]></title>
    <url>%2F%E8%B7%B3%E5%87%BA%E8%88%92%E9%80%82%E5%8C%BA.html</url>
    <content type="text"><![CDATA[走出舒适区，生活就不会是一潭死水。只有走出去，生活才能有点的意思。因此，我想求新求变，我要不断地破，破而后立。 中山敦《山月记》的两段话，第一次看时，心神大乱。 因为害怕自己并非明珠而不敢刻苦琢磨，又因为有几分相信自己是明珠，而不能与瓦砾碌碌为伍，遂逐渐远离世间，疏避人群，结果在内心不断地用愤懑和羞怒饲育着自己懦弱的自尊心。世上每个人都是驯兽师，而那匹猛兽，就是每人各自的性情。对我而言，猛兽就是这自大的羞耻心了。老虎正是它。我折损自己，施苦妻儿，伤害朋友。末了，我就变成了这副与内心一致的模样。 如今想起来，我真是空费了自己那一点仅有的才能，徒然在口头上卖弄着什么“人生一事不为则太长，欲为一事则太短”的警句，可事实是，唯恐暴露才华不足的卑怯的畏惧，和厌恶钻研刻苦的惰怠，就是我的全部了。但远比我缺乏才华，可由于专念磨砺而成就堂堂诗家的，也颇不乏其人。成为老虎后的今天，我才总算看到了这一点。 未完待续。]]></content>
      <tags>
        <tag>总结</tag>
        <tag>高效学习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[在路上 | 初中走读]]></title>
    <url>%2F%E5%9C%A8%E8%B7%AF%E4%B8%8A-%E5%88%9D%E4%B8%AD%E8%B5%B0%E8%AF%BB.html</url>
    <content type="text"><![CDATA[初中走读骑的是自行车，朋友间总是互相带着。 回家时往往已是十点以后，乡野小路，天黑无灯。那时候我懒得很，总是让别人带我，我自己坐在后面拿个手电筒晃来晃去。 有一次下雨，春雨，很细。也有微风，雨丝被风吹起，斜斜的打了下来，被透过玻璃的光照的透明通亮，再撞到手电筒的玻璃上，如木炭砸地，星火四溅。那时感觉自己像一个顶天立地的巨人，正站在黑暗的宇宙里，雨丝就是手边的流星雨。 我们三个人总一起走，老姚总是喜欢在回家的路上唱歌，唱Take me to your heart，他英语很好，声音也清澈。回去路上最喜欢谈班花，又总是说，老吴啊，你能不能考第一名超过班花啊。我总是摇摇头说，不知道。 老航和我同姓，他是我十二岁以前的邻居，撇开家姐不论，应该是我人生中第一个朋友。回家路上他喜欢表演不扶车把，虽然我现在知道这全托主销后倾的福，但那时我总是没胆做这个。 我那儿初中比高中严格，早五点要到，晚九点下课。三年接近一千天，早上四点多揉着惺忪的眼，骑着自行车到十字路口等他们，晚上九点多也是揉着眼，说着教导主任，聊着各班班头，还有那时候的年级风云人物。无数欢声笑语，都散在黑夜里。 后来友散如星溅，回家路上的三剑客，一个初中辍学了，一个去了汝州一高，一个去了宝丰。我最后一次见老姚，他还是很帅，那时是高二，我们还都是意气风发。我上一次见老航，已经是大二了，他抽烟说起工作，我心有他感，靠在沙发上说话，恍惚间像小时候那样。 下一次三人重聚，不知道会是什么样子，愿生活不会压垮我们，大家笑着谈谈过去的时光吧。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Running Man 之于我]]></title>
    <url>%2FRunning-Man-%E4%B9%8B%E4%BA%8E%E6%88%91.html</url>
    <content type="text"><![CDATA[RunningMan对于我有特别的意义，它带给了我太多正面的东西。 大二夏，第一次接触runningman。那时舍友都已回家，我留在学校参加一个暑期项目。白天出去调查，爬空荡荡的危楼和医院，在陌生街道里穿梭，被各种人怒怼。晚上回来想自己是不是要读六年，想五月发生的事是为什么。之后就开始整夜睡不着觉，拿着室友的骰子毛绒玩具坐在床角，等凌晨六七点时才能被疲倦逼着闭眼。 半月后，某深夜，凌晨三点左右，依然睡不着，也不想再躺着，于是从床上翻下来打开电脑，浏览网页时与RunningMan相遇，那正好是是无数人奉为经典的一集，李光洙开场说，”大家好，我是南扬州杀人微笑”。 怎么形容看完后的感受呢？一个接近窒息的人突然获得了空气，一个要跌落悬崖人看到了朋友的脸，开心、快乐，这种积极的情绪直接涌了进来。这应当被称为“情感拯救”。 那几天的气温平均约37度以上，我选择偷懒一天，窝在寝室里连看了六集，中间傻笑了上百次，我的潜意识被影响了，他们怎么做到如此有趣，如此欢乐？我的一天为什么要被混混沌沌和压抑统治？他们对待事物如此认真，做什么都充满精气神，活力和热情简直令人羡慕，我也想拥有这样的状态，而不是像现在一样死气沉沉。 是他们帮助我从情绪的泥潭里走出来。调研时我决定扮演恶人角色，开始解锁低级“特工技能”。更重要的是，从那时候起我真正掌握了未来想成事儿必须的技能，不再后悔过去的不能改变的事，把眼前能控制的事推到对自己最有利的方向。而这，在我心里都是runningman，是这七个人催化的。 走到现在，是时候感激，也是时候怀念了，感谢你们，真心的。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[将心比心]]></title>
    <url>%2F%E5%B0%86%E5%BF%83%E6%AF%94%E5%BF%83.html</url>
    <content type="text"><![CDATA[将心比心，又称共情，这是现代人正逐渐失去的能力。展开讲的话是说不完的，先以一旧随笔引之吧。如果要选出和别人的交流中让我最受伤害的的一句话，那应该是这句:“你别说话站着不腰疼了！” 当时的我正在小心翼翼和对方聊现在的情况，且自认为很真诚的提出从我的角度能给的建议。但这句话就像兜头给了我一棒子，再在伤口处洒上辣椒，有一种让人狂躁的辣痛感。 我那时候自然是接受不了这样的反馈的。但过了这两年，见了一些事，现在可以理解了。 境遇，或者说状况，我们的一切一切都不一样。这里面还有一个关键的点，对方遇到问题了，而我没有。对方的焦急，纠结，彷徨，权衡，我不能真正的感受到，这是客观的代表着巨大差异的峡谷，不是我凭借主观的善意和担心就能跨越的。 那这也就是说，当我的挚友遇到过不去的坎儿来和我聊的时候，我该”无为”吗？当然也不是。只是不要再跟我讲一些套路了，即使只是陪伴和安慰，也比强行输出价值观方法论好的多。 对方来找你，也许真的不是想听你的方法论。空降的方法论对已经积累起来的问题又有多大用处呢？如果要打一个比方，对方已经在绿皮火车上坐了十二个小时，而你才刚刚踏入这个车厢。作为站着的人，你现在轻松又有好心态，而这些东西，在聊天中能够传染。我想这才是他们需要的东西。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数学建模回忆]]></title>
    <url>%2F%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E5%9B%9E%E5%BF%86.html</url>
    <content type="text"><![CDATA[这几天很多本科生与研究生都为了数学建模忙的焦头烂额，我看着他们，想起了自己建模的那些日子。 我在大学期间一共参加过三次数学建模比赛，每次的经历都可以一说。 第一次是在大三，团队组建是很偶然的。因为自己是小白，在召唤队友时也很拘谨。在建模大群里发出一条信息，有谁还没组队？只要靠谱就行，不需要基础。有一个女生回应说想试一下，于是就找到了第一个队友，也是未来整个大学最好的朋友之一。之后在贴吧里找到第二个队友。三个不自信不相识的人就这样聚到了一起。 没有任何目的性的组队，却形成了极好的效果。我以前看过《楚留香传奇》，里面有最强铁三角，左蝶右飞燕，花香满人间，三人性格各异，可概括为一热一冷一温。我总感觉我们三人也是这样的模式，团队中的女生热情开朗，男生却很高冷，我是镜子型性格，整体偏向于温和。 建模题目自然是不会做的，我们要做一个游乐园疏导方案，越深入思考越觉得不可测。我们一起查资料，论文、新闻、甚至商业广告；一起讨论，从完全一无所知到学会套排队论加图论模型，再到提出自己的时间空间复杂度创新模型；一起写论文，高冷男生表达出一个观点，我和另一个队友用自己都看不懂的学术用语包装起来，如此往复。 在结束了一整天的建模后，我们走在回寝室的路上，身体疲倦但大脑还没停下的休息，大家有一搭没一搭的聊着，一起去朋园相约买粥。也经历了第一次熬夜，几个人都已经到了极限，但珈彤还是坚持写完了论文。最后是校二等奖，这个结果令我们很惊喜，比以往得到其他奖励开心的多。 第二次组队，国赛，一个非常有趣的问题，当拆除小区的围墙后会发生什么？没有任何数据，只有这一段文字叙述。三个人的组合依然默契。 本来幻想，我们校赛二等奖，国赛上海赛区一等奖，接下来就应该是登顶美赛M甚至F奖，无奈第三个男生因为要考研决定退出队伍，我们新找到了一个队友，很优秀，但建模果然还是最需要默契的。美赛是很折磨人的一次经历，对题目没有思路，利用简单的模型推进也比较慢，也因为加入了新人，没有形成良好的管理机制，最终收获了一次惨败。附带而来的是一次堪比人在囧途的回家之旅，这个留待以后说了。 建模是一个很锻炼人的过程，搜集资料的能力，归化的能力，写作的能力都会在短时间内被集中训练。建模也是催化友情的过程，几个人合作完成一件事的感觉真是太棒了。（未完待续）]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶学习 | 算法第四版]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E5%AD%A6%E4%B9%A0-%E7%AE%97%E6%B3%95%E7%AC%AC%E5%9B%9B%E7%89%88.html</url>
    <content type="text"><![CDATA[对于自动驾驶汽车工程师而言，基本的算法素养是不可或缺的。即使不做工程师或程序猿，学习算法也有很大益处，有序的逻辑、抽象的世界观，效率的价值观都是需要训练的，而通过算法学习就是一个有效的手段。在学习算法时，网上会有各种资源，初入门时很容易眼花缭乱，各花入眼之后，最亮的明珠是《算法第四版》，或者叫做《Algorithms 4th》 优点 在网上有高质量的整套开源资源，包括书本、讲义、视频、配套网站、习题等。 涉及的算法内容丰富且完整，以基础、排序、查找、图、字符串、背景分成六大类，涵盖了几乎所有常用算法及其拓展。 书本组织结构很好。各个章节自成体系，没有耦合。可任意选一章学起，也可把书本作为算法的查找手册。 对具体算法讲解的架构很好，会先设计算法的API，之后再实现具体代码，中间也会补充可视化的图形以及具体过程拆解以帮助理解。 课后习题丰富，难度也是循序渐进，可在github上找到配套的答案，可帮助自己检验学习成果，稳步提升。 配套视频里有对算法更精妙的使用，每个视频都能让人有很多启发。 使用Java作为核心语言，学习成本较低，且Java面向对象编程的特性对学习算法是很适宜的。 缺点这么完美的书也有自己的缺点，作者写了一个自己的库，没使用Java自带的原生库，这就给最初一步环境配置带来很多问题，在实际使用代码时，配置环境把我折磨的好几次想放弃。 解决方案1首先进行Java环境的配置和源代码的下载可参考这篇文章，基本配置2018-10-21更新，这种方法就足够解决所有环境配置的问题，但有一点切切注意，从网上下载的源代码请删掉第一句package edu.princeton.cs.algs4 注意1。如果需要用powershell，&lt; 被保留下来作为未来字符，输入数据采用了get-Content方法，参考在powershell里运行如何用参数读取文件。 解决方案2直接导入相关Stdlib包，不使用package的语法，直接import进去。 解决方案3使用Eclipse或其他IDE作为开发工具，我没采用这种方法，但有人采用，具体可参考知乎方法。 资源所有资源都可以从教学网站的入口找到，这里为了方便，把各种信息列了出来，以方便查阅。 书本 | 密码：wf1j 资源包: 课件&amp;视频&amp;练习题&amp;其他 | 密码：54ny 代码运行数据 | 密码：ix1j 源代码 教学网站 课后习题答案 这本书真的很棒。]]></content>
      <tags>
        <tag>总结</tag>
        <tag>自动驾驶</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[与人言]]></title>
    <url>%2F%E4%B8%8E%E4%BA%BA%E8%A8%80.html</url>
    <content type="text"><![CDATA[被边缘化是很难受的事它会形成一个恶性循环群体在没恶意地排斥你自己也一直在默默远离 这条是7月8日的微博，彼时正是毕业，班级的同学在聚餐、拍照、离别，而我在课题组敲字、久坐、发霉。情况发展至此实非本意，如果要追根溯源，还是要回到大二的转专业。因医科和专科培养方案差异过大，我先降了一级，在大二与汽院大一的同学共学，与医学院同学同住。在大三与汽院大三的同学上课，但与汽院大二同学同住。总而言之，我错过了最容易培养感情的大一大二。 班长是能记住我的，但面对关系已经很好的一群人时，单个人的加入和融入将没有那么顺遂。餐桌上每人都叫着彼此的昵称，和以自己寝室朋友为核心的同学大声欢笑，我若过去，既找不到寝室这样的小团体，也找不到单独的人可以倾诉，这种不适感让我不由自主想去逃离，其实正像宇宙大爆炸之后的星球一样，彼此在互相远离，而且距离越远，离开的速度越大。 被边缘化像是用钝刀子割肉，割一刀没事儿，淡淡的白印儿，几刀下去就出了血印儿，可怕的是也不见痛，但再磨下去，发现时就会开肉见骨，痛入骨髓但也为时已晚了。这实在是一件很悲哀的事，毕业时窗外欢声笑语，但一切与我无关，我看着他们拔河，看着他们拍照，心里无悲无喜，只有疏离。 疏离感会让人胡思乱想，我甚至偶有怀疑自己是否不喜交流，老师说我不善交流的时候，我还真的有动摇过自己的判断。但这几天新学期下来，我确认是过往的特殊情况暂时封印了我的交流能力，我是喜欢热烈的集体氛围且确切地能融入进去的。 新学期开始时，我已经下定决心不再在边缘游走。班级第一次班会，虽然课题组有任务，还是去参加了，做了久违的自我介绍，感受别人爽快或简洁的语言风格。第一次英语课，老师让以学院划分组队，我们用各有口音的英语聊天南地北，聊导师未来，没什么任务要求，实施计划，就是最传统的聊天而已。及至今晚班级的第一次轰趴，路上和几个新同学同行，打魂斗罗时认识了新同学，打麻将又认识了新同学。话说川麻是真的痛快，节奏快，成局时间短，哗啦啦一局又一局，需要集中注意力才能抓牌，也算的上与人斗，与己斗，其乐无穷了。 晚上回来时，在初秋晚十点的夜晚里行走，旁白是新认识的朋友们。嘉定的乡下村里没有光污染，我们摸着黑回家，也是谈未来谈现在，都是些还能谈得动的年轻话题。有暖风吹动衣衫，这是近乎重生的一天。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[词的顿悟]]></title>
    <url>%2F%E8%AF%8D%E7%9A%84%E9%A1%BF%E6%82%9F.html</url>
    <content type="text"><![CDATA[阅读文字并去理解，这个过程并没有那么理所当然。想真正体会到文字表达的意思，一要看作者驾驭文字的功力，二要看运气，看有无词的顿悟。 人对文字是无法天然理解的，了解一些信息发展史就能知道这个事实。概因对没有经历过的事情，就很难理解文字背后的意义，读者与文字之间，天堑是时常有的。 自小学就见过青翠欲滴这个词，也知道其常用来描述植物叶子，但直到在一个阳光雨后，我看到了红墙上的那些绿色爬山虎。它的叶面有着微微的一层水雾，绿色汇集在叶尖的水珠里，我才恍然明白青翠欲滴的意思，原来它是这么美的一个词，美到令人微醺。我突然想到，其他人是否曾有跟我现在相似的顿悟？还是只是顺手写上这四个字而已呢。 还有无忧无虑这个词，一次跟妍妍谈起小学附近的庙会，我说小学的庙总会给我鲁迅写《社戏》的感觉，那里大约就可称得上有生活的气息，对物质极不满足的年少时代来说，庙会就是天堂，在逛庙会的时候，总感觉有着一种不同往常的氛围，欣喜的，悸动的，兴奋地，浑身流动着轻松的多巴胺，那时候是真的无忧无虑啊。 电光火石间，我就明白了无忧无虑的意思，就像突然打通了任督二脉，这个词和无忧无虑的感觉在拉着手旋转跳舞，默契在噼里啪啦地爆炸，之后又消失。真是无奈，当我明白无忧无虑这个词的意思的时候，我应该就真正失去了它。 青翠欲滴、无忧无虑这样的词，对我而言尚需要顿悟。是否该为之悲观呢？且不说孤岛效应，即使每个人都擅长表达自己，但在这样的天然隔阂下，共情也是难以企及的事，也许人类的悲欢确实是永不相通，个人的表达终究只是吵闹的声音？ 仔细想了想不应如此，我读金庸的《倚天屠龙记》后记，结尾处说【张三丰见到张翠山自刎时的悲痛，谢逊听到张无忌死讯时的伤心，书中写得太也肤浅了，真实人生中不是这样的。因为那时候我还不明白】。自己也会暗思，失亲之痛，莫过于此。读史铁生《我与地坛》，也常常感悟生命困苦，前行而已。这些共情都是真真切切的。 所以把词的顿悟看做神启吧，这是经历和自己带给生活的恩赐，当感悟过来时，好好享受它。当它不再来时，长亭之外，好好送别它，怀念它。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[表达能力]]></title>
    <url>%2F%E8%A1%A8%E8%BE%BE%E8%83%BD%E5%8A%9B.html</url>
    <content type="text"><![CDATA[表达是一种能力，这是毋庸置疑的。 表达能力可被简单粗暴地分为口头表达和书面表达。 口头表达对复杂逻辑要求不高，在当今信息过载的大背景下，人们通过口语交流理解复杂逻辑的能力大多已退化，但也正因如此，口头表达的第一要素就是要梳理逻辑，像“是什么，为什么，怎么做”抑或“首先，其次，最后”的简单应用就能起到相当的效果，另外，开头点题，结尾回顾总会有意想不到的妙用。 口头表达对辞藻要求也不高，做到偶有秒句太难为人，能做到合适的用词就能算得上谈吐不凡了。无奈现在太多人深受网络用语毒害，扎心老铁在心间，基本用词难出口，这其实是一件很可悲的事。想解决这个问题倒也简单，多看书就好，腹有诗书气自华，这个气往往都是从谈吐开始表现的。 口头表达对节奏有较高的要求，太慢让人心急，太快表达不清，音调、重音、表情、手势说到底也是节奏的组成部分，皆不可忽略。有的人说话自带气势。而节奏往往就是是气势的核心。 口头表达对语境有较高的要求，语境为何需要看谈话对象的身份、性格、知识水平，以及谈话主题等，所谓“见人说人话，见鬼说鬼话”。上文的三条一般在和老师同学交流工作时较合适，如果和父母谈学校生活，和基友讨论八卦游戏自然是走天马行空的路数，想到哪里说道哪里。另外切切注意要考虑对方的接受习惯，和不同专业的人讨论较专业的话题时，切忌学术用语一阵乱抡，在同外行交流时，用简单的话讲清复杂的概念才是最见功力的事。 说回今天想说的书面表达。书面表达可暂且分为文学表达和科研表达，基本上就是两种文体的差别，这里特指的是后者。 我这几天一直在写一个实施方案，写得很累，握笔十分钟，写字不到十，身心同累的那种。我本想顺势把当前境况归咎于在所写内容太难上，以此获得对自己的安慰，但到了周四，我看到另外一位老师发来的合并稿，那时正是早上六点多模模糊糊地时候，但点开阅读后我瞬间警醒，起床，刷牙，洗头，奔赴实验室端坐，打开电脑，开始敲字。 老师写出了我想写但写不出来的东西，内容丰富充实，表述也贴切。我不由自主去问我自己，为什么？为什么他知道写什么而我不知道？为什么他能写出丰富的细节我却不能？为什么他的表达这么贴切而我的像是小学生体？ 仔细想来，其一，积累。我看的不够多，想的不够多，总结的不够多，关键还有，写的也不够多。赵老师马上就是教授，他的硕士、博士、助理教授生涯不知已看过多少期刊，写过多少论文，他还有很多有价值的项目经历，所以能把自己心里已有的想法转化成最合适的用词输。而我，无论是想法积累和转化练习都还远远不够。 其二，心态和效率。我听陈老师讲，赵老师不太满意最初的版本，于是决定亲自上阵，两天里只睡了四个小时写成了这个版本。而我自己的情况是，在我最初判定这个任务难写之后，就开始不经意拖延，在论文之间翻来翻去，东抄一片，西摘一鳞，从没静下心真正尽全力完成这个任务。其实，按照我前期收集的资料和网站，我是有能力写出一部分有价值的内容的，但我提前放弃了它们，从一开始，就宣告了自己的失败。 其三，执行力。这是预先知道的道理，但真正想贯彻这件事还是困难。概括来说，就是先别去想锦上添花，先写出来东西再说，改内容往往比造内容要容易。具体一点，先列出大纲，复制粘贴上自己觉得有价值的资料，写出自己的灵感，写出有价值的衔接，基本成文后再返回修改。不管怎样，先把事情做了，应该抱有这样的心态。 最近家里遇事，人总会有低谷，但低谷也终究也会过去，每个人要为了身边的人而坚强,希望如此，也必会如此。]]></content>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[从搭建博客想到的]]></title>
    <url>%2F%E4%BB%8E%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%83%B3%E5%88%B0%E7%9A%84.html</url>
    <content type="text"><![CDATA[我有好多事情都是学到一半就停了。也许是逃避事情后期的难处?也许是性格里就想四处看看学学？也许就是单纯的没有耐心和执行力。 但不管如何，我再也不想这样了。 搭博客以及写博客是件不困难的事情，但这是近期我唯几完成的完整小项目，我想把它作为开头，至此以后我还想完整做完几件自己想做的事。 想搭建博客的愿望由来已久，本科跟着黄老板学过一段时间，看他用wordpress搭建博客，了解了一些基本流程，就想着有天能搭建自己的网站。后在日常浏览网页的过程，看到几个内容很接地气的网站，仔细一看，这些内容打动我的网站都属于博客，典型的如小土刀的博客，钟泽宇的博客，谢益辉的博客。 在这年4月多，我发过一条微博， “想建一个网站看到200多块的域名费顿时就不想建了 是心疼200吗？也不是，又不是十年前了应该是想了下 偶然而生的兴趣与实际投出的精力到底平不平衡 可是我又感觉未来的我对现在不建站的我一定是恨铁不成钢的真是奇妙的体验” 后来有看到小土刀的一篇推文。“为什么要写博客”，完全被打动了。于是准备好可上网的电脑一台和四十块就开始了。 博客搭建过程中，我有很多次想要放弃。最初先借助知乎教程用hexo + github Pages搭建了一个临时博客。但由于教程陈旧（17年8月的教程）很多按步骤操作，但总是会呈现出莫名其妙的错误，在搭建成功前走了不少弯路，这句话虽然轻描淡写，但实际很沉重，这里第一次想放弃。幸好百度谷歌拯救了我。 后想着github.io也没意思，就在阿里云花40块注册了一个域名，又是传身份证，又是验证信息，在麻烦袭来的时候，第二次想放弃，小土刀的博客效果激励了我。 域名申请下来时，需要进行DNS解析，将域名解析到github.io的地址上，但一直出现连接不安全的问题，我也是头铁，近乎折腾了10小时，最后发现是github的解析IP地址已经更改了，通过查阅文档解决了A记录解析的问题，这里第三次想放弃，能跨过去纯粹是因为不甘心。 其余各种CNMAE配置，config.yml配置也遇到一些问题，不过很快就解决了。 学习怎么预览发布，怎么建立标签，怎么加头像，怎么修改图标，怎么写描述，怎么写markdown，各种新的知识奔涌而来，体验到了每小时都能进步的感觉。 某晚上回去用手机打开看，网站打开极慢，这就失去博客的意义了。查到说是github服务器在国外，因为解析速度较慢，于是决定用coding+github双线部署，在域名解析时又遇到新坑，通过搜索引擎查不到解决方案，后查coding的文档成功。 学会熟练写latex公式，加字数统计等小功能，开始训练日常写作，总结过往学习内容。 某天突然想到在搜索引擎上查自己的网站内容，竟然无一条相关的，准确地说，我的网站根本没被收录，于是分别针对百度，google进行了SEO优化，期间第二波知识奔涌而来。 修改主题刷新，开始了解css，第三波知识喷涌， …… 系统搭建成功后，开始写博客，慢慢也养成了习惯，每晚十点半左右花四十分钟更新一篇，期间渐渐体会到了总结的作用，渐渐了解博客的意义，这一把做对了。最近几天，几经波折，添加了评论系统，使用基于github的gitment，一切都在平稳进行中。 完整做完一件事，即使是简单的小事，也这么幸福。我想在博客这里记录下来进度，我想回到以前走的路上，重新捡起来被我半路抛下的那个项目，我想变得平静点，厉害点，有价值一些。]]></content>
      <tags>
        <tag>随笔</tag>
        <tag>高效学习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[心有时候会变老]]></title>
    <url>%2F%E5%BF%83%E6%9C%89%E6%97%B6%E5%80%99%E4%BC%9A%E5%8F%98%E8%80%81.html</url>
    <content type="text"><![CDATA[我还有三天生日，才二十三岁，但有的时候，我感觉我的心已经变老了。 暑假留校充电的时候，校园里的灯暗的越来越早，人也越来越少，终于到了几乎看不到什么人的地步。与之相对，猫狗变得活跃多了，它们现在无所顾忌，躺在路中间睡觉也不会有人打扰。 我们寝室的门口，是它们活动的主要区域之一，有两只大黄猫，一只小黄猫，一只花色猫，一只黑白色的猫，还有一只小狗。那一个月，每晚回去我都会坐在寝室正门口的台阶上，拍拍这个摸摸那个，再拿东西给它们吃。 开学之后，它们很少躺在路中间了，可能是因为阿姨给它们做了新家。昨天晚上十一点半，走到寝室门口，我突然想起了它们，就像老人想起了离家的孩子一样。事情很奇妙，这五只猫和一只狗竟然一个个都从角落里跑了出来，还跟暑假一样，扒我的书包，蹭我的小腿，躺在地上滚来滚去求摸头。 因为已经接近午夜，我也不用担心形象仪态，还是像暑假一样直接坐在台阶上，把书包里的饼和面包拿出来分给它们吃。那只小狗变得很强势，但大猫老大当惯了，伸出爪子挠它。我把它们分开，说不准打架，然后又坐在那里看它们吃，感觉就像看着自己的孩子一样。 秋天，夜，晚十二点，我在寝室门口坐了二十分钟，看大黄二黄打打闹闹，听小黄小花在脚边咕噜咕噜。 也就突然想起一句话来:”那一刻，我感觉我的心有点老了。”]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[读书与听歌]]></title>
    <url>%2F%E8%AF%BB%E4%B9%A6%E4%B8%8E%E5%90%AC%E6%AD%8C.html</url>
    <content type="text"><![CDATA[阅读时可听歌。 近期在看《剑桥金庸武侠史》，极喜欢，这是一本完全合脾胃的书，字里行间都能合我的情味。脑洞、冷幽默、历史、武侠、金庸元素自洽做的天衣无缝。 这本书让我想起，我也是喜欢过历史的，是在初中高中的阶段，主要读的是历史课本，于其中感受朝代兴衰，游历光阴长河，在平淡的历史叙述中感受激荡的真相。 《剑桥金庸武侠史》与正史叙述相似，立场客观，几无感情色彩。但我们也能看到，江湖的流动性逐渐消失，个人英雄时代一去不复返，一切都在无可挽回的走向衰落，笑书神侠今何在？只见到飞雪连天时，白鹭扑棱棱离开。 整本书基本以时间为序，以朝代作为分割点，武术世界是宗教战争和文化的产物，于商周时诞生，中间几经波折，在北宋初到达顶峰，自明后开始衰落，清朝就是令人哀叹的谢幕表演了。 每个时代都会经历自己的浓墨重彩，但终章无一例外皆是黯然。个人英雄在历史长河中亦如流星，光芒万丈划过长空，但终究也是悄然退场。如郭靖一生，生于乱世，中间经历几次蒙宋之争，最终镇守襄阳，以北侠之名，言侠之大者，为国为民，但终究于城破时，死于乱军之中。 读史当配《Lemon》，不谈具体歌词，难以言表那种近乎庄严的感觉，有些像在山顶的寺庙外看山脚烟火落幕时的感觉。日常多焦虑，快乐时哈哈，平静时发呆，这种情绪在这样的日常背景下是相当难得的。 庄子有天籁、地籁、人籁之说，前面的歌曲应该属于人籁，配小说尚佳，但在读文献和技术著作时，就有扰人心神的嫌疑，这时候可求助天籁，如近期读《概率机器人》《C++Primer》《SLAM十四讲》及日常文献时，可用聆雨之类APP听雨声，雨落屋顶声，细雨敲窗声，穿林打叶声，甚至人行道雨声，一应俱全。听雨声，静己心，定己神，代码理解如作者亲临，公式推导如高斯附身。 另外，读散文也适配雨声，不单单是定心安神的缘故，而是以我个人见解，散文气质中自带两分忧郁，几分愁思，此时听雨更有身临其境之感，窗前竹叶二三，雨水从瓦檐滴下，案几静，乡愁深，任思绪就此散开去。 小说，杂文是很难适配歌曲的，小说有情节，杂文有力量，歌反而容易破坏原作的精气神，因此选歌需慎重，主旨只有一个，不可哗众取宠，本末倒置。 还有一些非传统的阅读体验，刷微博可配《不将就》，浏览微信公众号可配《杀死差不多先生》，听几遍自然就会乖乖关掉微信微博了，可以一试。 读书是一种视觉活动，听歌则是由听觉主导的。我不喜欢朗诵书，看央视的朗诵者之类节目觉得很尴尬，想来朗诵是把视觉活动转换成了听觉，读书和听歌则是并行是的，前者是一种纵向关系，丢失了不可获取的视觉流动感，而后者则是一种横向关系，流动的文字和音符交融，造成了类似通感的奇妙体验。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[线性代数 | 行列式]]></title>
    <url>%2F%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-%E8%A1%8C%E5%88%97%E5%BC%8F.html</url>
    <content type="text"><![CDATA[以前吐槽过，同济线性代数参考书以行列式作为起点很反人类，这本线性代数以向量空间作为故事的起点就很值得称赞。到了现在，我们终于站在了行列式面前。今天，让我们重新认识一下行列式吧。 行列式的作用是求特征值，它是与方阵有关的概念，记作$detA$，或者$|A|$，它包含了矩阵很多信息。比如当矩阵可逆时，即是非奇异矩阵时，行列式的值非零。 行列式性质四个基础性质 $det I = 1$； 交换矩阵的行，行列式的值会相反。 假如某一行乘以t，行列式的结果乘以t。 把某一行变成 $a+a’$ 和 $b+b’$，或者其余n-1行不变，结果变成两个拆开的行列式的和。即\begin{bmatrix}{a+a'}&{b+b'}\\{c} &{d} \end{bmatrix}=\begin{bmatrix}{a}&{b}\\{c} &{d} \end{bmatrix}+\begin{bmatrix}{a'}&{b'}\\{c} &{d} \end{bmatrix}注意，这和$det(A+B) = det(A)+det(B)$不同，后者会相加每一行，而这里强调的是每一行的线性。其他引申性质 如果行列式中两行相等，行列式为0，秩小于n，不可逆，奇异矩阵。利用性质2证明。 从行k减去行1的i倍，行列式的值不改变。证明，先利用性质4拆分，再利用性质5。 若有一行是0，那么行列式值是0，是奇异矩阵，不可逆，秩小于n。证明，利用性质3，让t等于0 上三角矩阵U的行列式值是对角线上元素（也就是主元）的积。证明：假设主元部分都不等于0，利用性质6，不断消掉除对角线元素之外的值，得到对角阵，再利用性质3提取一个单位阵，最后结合性质1得出结论。考虑某主元等于0的情况，则得到一个全零行，值为0，得到的是奇异矩阵，不可逆。 $detA = 0$ ，当且仅当A是奇异矩阵；证明：假设矩阵是奇异的，则通过消元法，会得到全零行，所以行列式的值是0.$detA \neq 0$，当且仅当A可逆。 det(AB)=det(A)det(B)detA^{-1}=1/detAdet(A^2)=(detA)^2det2A = 2^n detA容易证明对于对角阵，性质10成立，对于其他矩阵，则需要一步步消元。当$detA=0$时，从第二个公式来看，逆矩阵没意义。 $detA^T= detA$ ，如果存在全零列，行列式也会为0，证明：$ |A|=|LU| |A^T|=|U^TL^T| $ ，因为是三角阵，转置不转置对结果没影响的。因而得证，证明关键在于把矩阵先转化为三角阵，再利用行列式值等于对角线上主元积这个性质。 性质5-8其实都离不开消元法，我们需要了解矩阵包含哪些主元，是否有全零行等。 行列式公式行列式过去是个大热话题，但是时代已经变了。但它是详尽、完整、自洽的一部分。行列式公式核心利用代数余子式进行求解，不再赘述。其推导过程没什么难度，只是繁琐。推导过程是以上述行列式性质为基础的。 行列式应用求逆矩阵从二维矩阵的例子来看，只有当行列式值不为0时候才有逆矩阵。$A^{-1} = \frac{C^T}{1/detA} $，$C^T$是伴随矩阵。 各元素是代数余子式。证明：检验A乘以它的逆矩阵是否是单位阵。也就是$AC^T= (detA)I$。利用乘法检验。注意，假设让第一行去乘以其他行的代数余子式，其结果相当于一个特殊矩阵的行列式，这个特殊矩阵的首行和末行相等。 克拉默法则。求$Ax = b $。 则$x = A^{-1}b = \frac{C^T}{1/detA}b$。$x_1 = det B_1/detA$.B1相当于把矩阵A的第一列由b代替。 行列式求体积。行列式的绝对值等于一个箱子,即一个平行六面体的体积，由于右手系左手系的箱子，行列式的值可能为负。我们现在取。假设A是一个单位阵。如果证明箱子满足三性质，由于三性质定义了一个行列式，就能证明命题了。 假设A = Q（各列都是标准正交向量），则A对应一个立方体，它是单位矩阵旋转之后的情况（不必刻意区分行和列）。接下来分析Q，已知$Q^TQ = I$, 两边取行列式可知$detQ=1$。则对于立方体，已经证明了。 然后证明长方体。当一边长度增加2倍，最后的体积也变为2倍，性质3也证明了。 为了满足最终证明，还需要性质4来摆脱角度性质（性质4的证明请见课本）。]]></content>
      <tags>
        <tag>机器学习</tag>
        <tag>线性代数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[线性代数 | 正交矩阵 GS正交化]]></title>
    <url>%2F%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-%E6%AD%A3%E4%BA%A4%E7%9F%A9%E9%98%B5-GS%E6%AD%A3%E4%BA%A4%E5%8C%96.html</url>
    <content type="text"><![CDATA[线性代数历史文章如下表：第一篇：开篇杂谈第二篇：行列图像第三篇：解方程组第四篇：一些基础概念第五篇：向量空间第六篇：正交向量 子空间投影 本篇和第六篇关系密切，为了篇幅问题进行了分割。 正交基假定一组长度为1的向量，$q_1，…,q_i,q_j$。 假设当$i=j$，$q_i^{T}q_j= 0$。当$i \neq j$，$q_i^{T}q_j=1$,这一组向量被称为标准正交向量，标准指的是标准长度。 正交矩阵由标准正交向量做列组成的矩阵，叫做正交矩阵。正交矩阵有以下几个性质： $Q^TQ=I $证明略，依靠性质证明；当矩阵是方阵时，有逆矩阵$Q^{-1}=Q^T$。 任意的置换矩阵都是正交矩阵。 $\begin{bmatrix}{cos}&amp;{-sinx}\\{sinx} &amp;{cosx} \end{bmatrix}$是一个典型的正交矩阵。 令Q是正交矩阵，假设要投影到Q的列空间里，则投影矩阵$P=Q(Q^TQ)^{-1}Q^T=QQ^T$ 假设矩阵是方阵，且列向量线性无关，那么列空间就是整个空间，此时投影矩阵就是单位矩阵，向量投影后还在原来的位置。 若Q不是方针，$QQ^T$则是对称矩阵，且$QQ^T(QQ^T)=QQ^T$平方等于自己。 上一篇中所有的方程都可以在通过标准正交化之后，得到相应的简化。$A^Ax=A^Tb \rightarrow Q^TQx=Q^Tb \rightarrow x=Q^Tb \rightarrow x_i=q_i^Tb$ 在第i个基方向上的投影就是等于$q_i^Tb$ 标准正交化二维标准正交化假设在二维平面上存在两个向量a和b，可以令a为向量$q_1$,则$q_2$相当于b在a上投影产生的误差e，则 q_2=e=b-p=b-a \frac{a^Tb}{a^Ta}若扩展到多维上,即假设三维空间内存在向量a，b，c。现在要将其正交化，那么首先根据上面二维做法确定$q_1,q_2$,之后计算向量c减去其在q1和q2上的分量，即最终结果。 q_3=e=c-p_1-p_2=c- \frac{a^Tc}{a^Ta}a- \frac{b^Tc}{b^Tb}b之后通过归一化就可以得到标准正交向量。 标准正交化对整个线性代数体系都是非常有意义的，通过把一组基正交化可以使许多问题的形式得到极大的化简。]]></content>
      <tags>
        <tag>机器学习</tag>
        <tag>线性代数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[生活感悟二三言]]></title>
    <url>%2F%E7%94%9F%E6%B4%BB%E6%84%9F%E6%82%9F%E4%BA%8C%E4%B8%89%E8%A8%80.html</url>
    <content type="text"><![CDATA[间歇性感到焦虑，间歇性充满动力，所幸现在后者相比前者，越来越多了些。 父母比我们强的点我想起了我的父母，他们的文化程度并不高，但他们总有我拍着马也追不上的东西，有我做梦都想拥有的一种品质，或者说。性格。 从容，无论何时无论何地的从容。他们不焦虑。 我们这辈人所处的这个时代啊，就像小学社会书里说的，地球确实变成了一个“村”。媒体发展的很快，一个个成功，一件件传奇，都变得触手可及。很多机会，似乎伸伸手就可以够得着。 这些机会营造出一种虚幻的象，一种我是最特殊的，我可以掌握一切的假象。这很容易让我看不清自己的高度，以为自己是巨人，但其实自己只是站在了巨人的肩膀上，也许我们脚下的东西连巨人都算不上，充其量只是一个调皮小孩堆起来的积木。 “心比天高，命比纸薄”，无穷的不甘和压力就从这里生出来，枝枝蔓蔓爬满整个心脏，再慢慢缩紧。 而我的父母呢？他们没有接触过信息的洪流，这是他们的不幸，但何尝不是幸运。说句容易引起误解的话，”他们，认命”。更准确地说，他们对自己的价值有更清醒的把握，更理性的认识，所以他们不慌。 我们总不能要求这个社会改变，也不能要求那个顽皮小孩搭积木搭得认真些，我们能做的是跳来跳去，在壮志凌云和踏踏实实之间寻得一个平衡。 我们比父母强的点我们终将踏入自己想要的生活，外在的环境会让我们有所改变，但是想把我们逼到绝处，想让我们无私的奉献自己换来难以维继的温饱和失去尊严的生活。 对我们而言，不可能。 我们的父辈，他们可能会受到不公正的对待而没办法，他们没有很多可能的选择的出路。但我们不一样，我们是新一代人，我们无法改变别人，但也绝不会被人逼到悬崖却不拿出跳伞或者出鞘。 他们可能逼我们上悬崖，这个过程是让人不愉快的，我们想选择那条路，现在就要承担悬崖的风险。 但不要被那个过程坏了心情，始终记得，不犹豫，不焦虑，不放弃。也许是阿Q精神，但就把这当成一场游戏，让我们全力以赴。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我为什么不学医]]></title>
    <url>%2F%E6%88%91%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E5%AD%A6%E5%8C%BB.html</url>
    <content type="text"><![CDATA[别人问我，“学医怎么样呀”，我总开玩笑说：“以后我孩子学医，我打断他的腿”，或说：“劝人学医，天打雷劈”。这些话戏谑占五分，无奈也占五分。如果有人问我，哪件事对你影响最深？你做的最正确的一个决定是什么？我的答案都是一个，转专业。从医学院转出来是我二十多年来做的最正确的决定，没有之一，它影响了我未来几十年的人生，让我未来的路有了我想见到的那种可能性。 我是从同济大学医学院转出来的，之所以提到学校名字，是因为我就读的医学院和同济医学院并不相同，同济医学院在1952年院系大合并时迁到南方，现下在华科。 我对临床医学院感情极深，仅一年时间，我就能叫出近百位同学的名字，与之相对，汽院呆了四年，所认识的仅几十人而已。 在医学院那年实在欢乐，班级是有爱的，团建做项目背不起女同学，有其他同学帮我一起背，几个人站起来后哈哈大笑。同学皆有温和且鲜明的性格，交流起来确然如沐春风。老师是负责的，在决定转专业之后也尽量帮我争取奖学金，我很感激。 虽然现在已经成为汽车人，但看到网络上有人黑医生，看到卫计委又出脑残政策，偶尔也会化身键盘侠，这是我在网上少有的有戾气的领域。在嘉定校区看到过往的医学院同学，冷冰冰的脸也总瞬间融化，就像听到了花鸟风月。 对于医学生我也很敬重，理论和实践并重的培养方案需要付出外人难以想象的精力，也许也正因如此，他们才可以是拯救生命的人。 但这些只是对那个集体，那段过去的感情了。学医这件事，我逐渐地放弃了。 课程很多，即使每学期都是30+学分的课，即使在开学前几周就要考虑期末，即使要背几百页的书，即使早早就失去了大学生活，无所谓，我可以接受。也许正是因为这个性格，我最初才选择了医学。 工作环境是一个挑战，不是身体上的，而是精神上的。我曾去过医院实习，这里没什么窗明几净，咖啡奶茶，有的只是一间间有特有味道的病房。病人的心情不好是可以理解的，但那种悲伤的情绪会传染，在医院里我绝不会有笑的心情。当然，这些都是学医该去适应的，我已做好准备。 再谈工作时间，在实习时指导老师30多岁已经脸色蜡黄，她讲日常，说假期整年近乎于无，偶尔需要倒夜班，我听力虽惊讶，但也有些心理准备。 但有些东西是我接受不了的。实际上，围绕临床医学培养的各种诡异现状早已磨掉了我所有的耐心、信仰、斗志。兴趣如果还算有光的石子，那现实就像如山巨磨，前者在后者面前，根本不值得一提。 先说时间，培养年限本来就长，再来三年规培，再来二到四年专培。三年之后又三年，十年也不够了，大哥。 一种理论上的情况：五年本科+三年硕士+三年规培+三年博士+四年专培。十八年，恭喜，可以成为一个医生了。父母老所依何？我的未来又在何处？ 再说医患关系，我读大一时，正是13年，医患矛盾正激烈的时候，伤医杀医的事件层出不穷。白衣飘飘，治病救人的理想被打破，鸡汤碗被掀翻，喝都不让喝，麻痹自己都不被现实允许。太阳底下的肥皂泡，飞飞扬扬是绚烂的，但终究会啪的一声，爆的粉碎。 所谓世故，所谓懦弱，我不同意，这儿是一个黑色漩涡，跳进来就是十年起的天旋地转。所谓的兴趣对我而言不是真正的兴趣，因为现实永远是真正的现实。 决定离开，再也不回来。 如果有人问我对学医的建议，我也许会学习那个著名句式写一句话：“别来这里，别来这里，别来这里。” 另外，做事情要多想，我只能告诉自己要多想。 这个现实不仅仅指的是物质，它还包括修业年限，学习内容，社会大环境，对大学的期待等等。这个现实，既包括面包，也包括精神。]]></content>
      <tags>
        <tag>随笔</tag>
        <tag>大学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[读书笔记|《死亡通知单》]]></title>
    <url>%2F%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E3%80%8A%E6%AD%BB%E4%BA%A1%E9%80%9A%E7%9F%A5%E5%8D%95%E3%80%8B.html</url>
    <content type="text"><![CDATA[看了死亡通知单三部曲，有很多触动的地方，的确不愧称为中国推理小说第一流，甚至在我看来，那个”流”字去掉也不为过。 什么是善？什么是恶？什么是正义？我向来不喜欢去想得不出答案的问题，但这些问题却总会时不时地出现在我的脑海里。 高中看了死亡笔记，L和夜神月关于正义和法律有一场信念对决。谁对谁错，作者没有给出自己的倾向。至今仍有印象的是动画终章的无情旁白。自从基拉死之后，世界的犯罪率又开始逐步上升，一切和他出现之前没什么不同。 我产生了很深的困惑，正像前面所说，我不喜欢去想无解的问题，整体上应被归为现实主义者，那如果只从功利角度来看，夜神月的存在和审判应是一件好事，诚然后期的月已经偏离了本心，开始为了维护自己而杀人，但我们究竟需不需要一个类似于前期夜神月一般强大而超出限制的执法者呢？当前的法律是不完善的，阶级是不平等的，这些都是需要夜神月的客观条件。 后来我又看了黑暗骑士崛起，对这个问题多了一点思考，蝙蝠侠和夜神月的手段有相似之处，他们利用自己的能力来惩治罪恶，利用恐惧来抑制犯罪。不同之处在于蝙蝠侠更像未黑化之前的月，在彰显价值观的判断上，蝙蝠侠和L一致。蝙蝠侠更像是L和夜神月的结合体。 再之后我听了一些关于道德与法律的公开课，心中模糊有了一个认识。这个认识在看了死亡通知单离别曲之后，变得逐渐清晰起来。罗飞的那一段独白是整个三部曲的高潮，他给了我想要的答案。 究竟什么才是正义？当法律不能惩罚该惩罚的人时，他的作用是什么？复仇和报恩是锁链的环，信念的传承是扣起环的孔，这三者的力量能改变一个人到什么程度？故事的一切一切都在这三本书里。 我也不想讨论争议过大的问题，所以也就不在此陈述自己当下的观点，这本书因为讨论了正义而拥有自己的思想性。除此之外，就归类而言，它整体可被打上悬疑和社会的标签，几个关键悬疑案件设置都没有明显漏洞，且因为是本土作品，所以读起来就不会有读国外推理作品的隔阂感。罗飞，大E和小E，阿华都是很有魅力的角色，有自己的信念就走自己的路。除了悬疑之外的故事冲突也非常吸引人，三方势力的合纵连横，不同的动机驱动不同的行为，最后构成了这个故事的网络。 最后附上死亡通知单第一部的结尾，通过它可略微一窥此书风格。也就是从这时候开始，这几个人开始了属于各自的信念之战。 这是他们的誓言。老师的夙愿终于实现,他相信老师会在九泉之下瞑目。他出师了,从今天开始,他成为了真正的、独立的死刑执行者。这个世界上没有人会知道他的名字,但他又会让每个人都知道eumenides。因为世界上仍有太多的罪恶未被惩罚,他还有太多的事情要做。他一定能够完成得很好。他发誓。罗飞站在候机大厅外的窗户边。几分钟之前,那个人还站在这里,可现在此处已是人去影空。但罗飞并没有失望,至少他终于见到了那个人,他相信自己总能揪到对方的尾巴。一定不会让那个家伙逍遥法外的。他发誓。阿华奔跑在夜色当中。他感觉自己快跑断气了,但他却不愿停下来。他要追到那个家伙,虽然他连对方撤退的方向都不知道。他一定要追到对方,即使跑到天涯海角!他发誓。韩灏站在机场大厅中,冰凉的手铐带在他的双腕上。这是一种从未有过的感觉。在经历了最初的愤怒、痛苦和沮丧之后,他的思维终于慢慢地冷静了下来。他知道自己将面临什么样的后果,但他不甘心!他不能就这样被窝囊地击败,他必须在绝望中求得一线的生机。这生机也许仍然存在……现在他有些庆幸自己没有对尹剑下死手了。他要翻盘,他要找到那个羞辱他,陷害他的家伙,他要亲手将对方撕得粉碎。他发誓。]]></content>
      <tags>
        <tag>读书</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[日记三则]]></title>
    <url>%2F%E6%97%A5%E8%AE%B0%E4%B8%89%E5%88%99.html</url>
    <content type="text"><![CDATA[偶然翻到几年前的日记二十几则，抽取感慨较多的三则日记，以纪念。 七月二十三 夜 雨前几天上午，有朋友在群里吐槽自己的军校生活，说又累又苦，我不知道怎么说，但我了解那种未来一片迷雾的状态，我只能说，选专业这件事越是急功近利，越是得不偿失。又说车到山前必有路，肯定不会那么糟糕的。但感觉远没说到他的心里。 下午时，去外国做志愿者的另一个朋友发来邮件说自己感觉很难过，不想离开住的地方，一想起来父母就难过，她感觉很害怕，想回家又怕父母失望。我又感觉自己了解这种情绪，只能告诉她什么都没关系，关键不是父母失望不失望，旅行的意义从来不在于确切实际的结果，而在于三观的改造。我也不知道对她有没有触动。 我感觉很无力，朋友有了困难，我却做不了什么，但我真的很想做些什么。 如果我处于对方的处境，我也许根本说不出这么轻飘飘的话。 以前的我总喜欢列道理，总结所谓本质，这让我又感觉很惶恐。 群里那位是很好的朋友，我记得高三时我们在教室后面打闹，化学老师说我们像双胞胎，虽然他帅的哇哇的，而我真的是一般偏丑。我们还玩小孩子才玩的游戏，我说我这一招叫做“神罗天征”，那一招叫做“万象牵引”一个管引力，一个管斥力。之后我手臂平举，手掌一张，大喊神罗天征，他就哈的一声往后跳，好像被一股力量打在了墙上。那时候的我们心性就是这样，玩的乐此不疲，算的上无忧无虑。 国外那位单纯如水又意志坚强，她很有才华，比较恋家，热心且对他人的痛苦情绪有很清晰敏感的反应，所以很多人都很喜欢她，不是爱恋，只是长辈看小辈那样的喜欢。 扯了这么多以前的事，是因为这两位朋友让我想了很多。 每个人会有好朋友，我对此确信不疑。我不知道怎么描述，友情，真是难得的情谊。我们都有几个可以毫无保留向其的展示脆弱，可以足够信任的朋发?值得信任的人啊，都20多了，总得有一两个无条件帮助自己的人，有一两个自己遇到困难能想起来的人。 临睡前又想起来一句话，只是相思情太浓，仅用相识意太淡，不如做相知，味甘境又远。隔了两三年突然有点理解这句话的意思了， 不说啦，我要拥抱被子了。 七月二十五 夜 微风起这两天看九把刀的《猎命师传奇》，这本书写了九年，实际是分成二十本书出版的。我从前章看到第二十本，即使是走马观花的看，也用了三天的绝大部分时间。看到最后的东京大决战，铺垫了十九本书的各方人物纷纷会聚东京，为了自己的信念，爱人，国家，投入到这场恐怖的战斗里。合上书，一瞬间感觉，…怎么说呢?四海一瞬，古今须臾。不仅是因为一下子看完了别人追九年才追完的书，也是因为跟着书中的几十位人物走了那么远，以至于到结局的时候，故事还在脑海里翻来覆去。 猫咪又在怀里伸懒腰，呜呜叫着在我的牛仔裤上磨爪子，它离书中的灵猫差太远。 男主乌拉拉也是21岁，无论遭遇再怎么多都很乐观的大男孩，爱笑的人好像总拥有一种不可思议的魅力。 乌拉拉告别女高中生神谷的时候，送给神谷”朝思暮想“的命格，只希望在死之前最后一眼见到的人是她。后来乌拉拉被拥有“逢龙化虎”超强命格的剑圣宫本武藏打的奄奄一息。躺在下着雨的黑夜流泪求饶，因为朝思暮想命格的牵引，撑着伞穿着白裙子的神谷真的路过了，她把伞扔在一边，冲了过来。武藏想起了他欠了一辈子的阿通，想起了他永不低头的一生。他惊讶气愤后悔难过痛苦，但最终还是放过了乌拉拉。至于武藏的故事，那就是另一部书的主线了。这个情节我描述的很无力，但实际上是很令人触动的。 如果我是个猎命师，我会想法设法给爱人猎一个”大幸运星”的命，生活里会有百分之七十的事走向自己也不知道的幸运方向，命格也可以进化为”千惊万喜”，惊喜每天都会出现。要不然猎个”大旅行家”也可以，典型的跑来跑去看世界的享受型命格。 至于我，我想有个”逢暇遇雨”命，总在我想的时候有雨，但这个命格我不想让它进化，毕竟进化后的”雨随其身”会让自己的所在地每周有三天下大雨，那同济就真的成海景学校了，哈哈。 七月二十六 夜 有星可见我现在躺在平房顶上打下这些字，心里很平静。我一直很喜欢房顶，从小就喜欢。家里还是瓦房顶的时候，我就整天在瓦房顶上跑，现在想起来真是活泼的不像样子。那时候家里有一棵很好的葡萄树，还有一棵长了二十年的枣树。那葡萄是我唯一喜欢的葡萄，市面上买的我从来都不吃一颗。 按我妈妈的说法，今天是我的生日，按户口本的法定年龄来说，我也21了。其实还是有一点小孩心性的，想收到其他人的祝福短信。在朋友圈更新了一条动态，说的很含蓄，大意就是说新的一年我要重新开始怎样。我想得到祝福又不想直接说我满岁啦，大家快来祝福我。 然而等到现在，只有一个人发来祝福短信，说生日快乐。有时候感觉自己既残酷又矛盾，能记住自己生日又会关心自己的人也没几个，我是不是太冷血了? 还有，我想，傲娇总是不好的。想求祝福就大声宣告我21岁，想不伤心当时就该再进一步挽留，想交朋发就主动伸出自己的手，这个世界不是以我为中心，别人不想也不会围着我转，什么东西争取之后才有可能。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[深夜食堂]]></title>
    <url>%2F%E6%B7%B1%E5%A4%9C%E9%A3%9F%E5%A0%82.html</url>
    <content type="text"><![CDATA[这是我锤子便签编辑的第一条笔记，编辑时间是802天前。 从材料馆出来，十一点四十七分，点开音乐软件，选择随机播放，有点期待，会是哪首歌呢？ 嗯，是深夜食堂主题曲。 ‌十二点的时候，那些工作学习到深夜的人们，在繁华的街头拐弯抹角，找到一家不起眼的小店，店家都是熟面孔了，一份猪肉套餐加一个故事，食物和故事在深夜里总有说不清的暧昧关系。 节目里的那些店的灯光总是暗黄色的，夜很静很深，插曲总会在合适的时候响起来 人生路上步履总不停，可你我为何总是慢半拍啊，不要走的那么快，累了就吃点东西吧。你要吃小火锅吗？我给你准备吧。吃点炸猪排也没关系，我们要温暖自己的灵魂呀。一天的辛劳都会有意义啊，让食物和故事来治愈你吧。 店家去做准备了，接下来要做的只是等待。这简直是最美好的等待之一，深夜的小店里等美食，礼堂里等颁奖，在已经做好完全准备的情况下等待考试开始… 复习累了就吃点东西吧。 每个人都会有自己的深夜食堂。 夜晚，相比白天是更有可能修养声息的时刻，卸下一天的疲惫，无工作之烦扰，无人际之劳形。黑夜和灯光能帮人隐藏很多东西，沉浸在其中会有平静的安全感。 吃，是深刻在人类，乃至生物基因上的追求，能带给人最原始的幸福感，当食物充盈在齿间，踏实地入肚后，踏实地满足感也会油然而生。 …]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[线性代数 | 正交向量 子空间投影]]></title>
    <url>%2F%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-%E6%AD%A3%E4%BA%A4%E5%90%91%E9%87%8F-%E5%AD%90%E7%A9%BA%E9%97%B4%E6%8A%95%E5%BD%B1.html</url>
    <content type="text"><![CDATA[子空间投影是理解正交的重要途径，后者又是整个线性代数的核心概念之一。投影也可以帮助我们更深入的理解优化过程。本章的核心概念就是投影，这是以前被我忽视的重要章节。 正交向量正交正交是垂直的另一个说法，一般指在n维空间里垂直。其数学表达式可记为向量x和向量y的点乘等于$x^Ty=0$。 证明：x向量的模的平方，即边长的平方是$x^Tx$。则由勾股定理 ||x||^2+||y||^2=||x+y||^2x^Tx+y^Ty=(x+y)^T(x+y)=x^x+y^y+x^Ty+y^Tx解之得$x^Ty=0$,得证。 子空间正交设两个子空间S和T正交，则S中每个向量s和T中每个向量t都正交。 引申1零向量与任何向量都相交。证略。 引申2如果两个空间在某个向量处相交，那么这两个子空间一定不正交（除非这个相交向量是零向量。 引申3行空间正交于零空间。它们的秩，将一个空间分成两个相互正交的子空间（回顾上一篇）。证明：$Ax = 0$。考虑矩阵乘法的行列相乘的运算法则，则可得正交关系。对于行空间里存在着的线性组合，通过简单的运算也可以证明正交。 引申4在三维空间里，一条过原点直线和另一条过原点直线。不能组成零空间和行空间。证明：行空间和零空间的维数和起来应该是三维的。 引申5正交有自己的几何意义，可以按照三维空间构建自己对几何意义的直觉。行空间和零空间互相是对方的的正交补。行空间的正交补，包含所有与它垂直的向量，而不是部分。这也就是说，此时的零空间包含了全部与它正交的向量，而不止是部分。 求解一个无解方程组的解本章的核心问题：如何求一个无解方程组$Ax = b$（当A是长方矩阵时，比如m&gt;n，方程个数大于变量个数）的解。 这种形式有很多实际应用，比如测量，每一行数据可以当做一条测量记录，一共有m次测量。实际计算时可以不断去除方程，对应为去除坏的测量数据等，直到剩下一个可逆矩阵，但这种方法不完美，因为我们较难判断数据的好坏，因此倾向于使用所有的数据。 通过一个简单的变换。$A^TAx = A^Tb$，坏方程会变成好方程，会变成可解的方程。注意解发生了改变，原先方程组可能是无解的，现在有解了。 需要注意的是$A^TA$是一个方阵，也是对称阵，但不一定是可逆的，一般有$rank(A^TA)=rank(A)$。(比如两个秩1矩阵相乘，得到的还是秩1矩阵).当A的零空间有且仅有零向量时，即A的各列线性无关时，$A^TA$才是可逆的。 对该做法的解释会在下一节。 子空间投影在原学习视频上，这一节被称为可名留青史的一节课。所谓投影，就是找到在某个标准上的最近点，这个最近是广义上的最近，泛指最符合标准，误差最小等。这里蕴含着一种最优化的思想。 二维投影举例下面以向量b在向量a上投影举例，示意图如下。 其中向量E为误差向量，其与向量a垂直;向量p是投影向量，假设$p=xa$，$x$为一标量参数;P代表着最终的投影矩阵。 a^TE=0 (1) \ \ \ \ \ \ \ E=b-p=b-xa (2)a^T(b-xa)=0 (3)\ \ \ \ \ \ \ a^Tb=xa^Ta (4)x=\frac{a^Tb}{a^Ta}(5)\ \ \ \ p=ax=a\frac{a^Tb}{a^Ta} = \frac{aa^T}{a^Ta}b=Pb(6)P=\frac{aa^T}{a^Ta}(7)整理一下投影问题，求投影p本质是求一个投影矩阵作用于指定的向量。在当前例子里，投影矩阵是P，向量是b。$p = Pb$ 。如果a是n维，那么根据P的求法所示：P是一个$n*n$的矩阵。 投影矩阵P的性质 P的列空间是过a的直线，因为$Pb=p$，对P矩阵中列的组合落在了直线a上。 投影矩阵是秩1矩阵。$aa^T$是一列乘以一行的形式，因而是秩1矩阵。 P是对称矩阵。$P^T = P$ $P^n = P$ 证明： 想象进行多次投影，它的结果和进行一次投影的结果没有差别。 对投影的深入理解我们依然从$Ax = b$入手理解，它可能无解，所以要找到最相似的解。&lt;/font color=blue&gt;问题的矛盾在于向量Ax总在A的列空间里，但是b不一定在A的列空间里，所以需要微调b，让它尽量满足这个情况。因此取 $A\hat{x}=p$，p是b在A的列空间上的投影。&lt;/font&gt;之所以选投影，是因为投影是能满足要求的”误差”最小的。 接下来看三维空间的例子，把向量p投影在平面上。（之后可以推广到n维） 平面用两个向量$a_1$和$a_2$生成，它是由这两个向量分别作为列生成的矩阵的列空间A。接下来让b在A上投影，如果向量b就在平面A上面（在列空间里），那么不用做特殊处理。若b不在A平面上，就要有一个误差向量$e=(b-p)$来解决问题，目标就是找到那个最接近b的p。 误差向量e垂直于平面A，投影p是基向量的组合。即$e=b-p$ $e\bot A$ $p=Ax$，求出x，就是求出投影向量p在A平面上合适的列组合。根据$e\bot a_1$ $e\bot a_2$可得到两个方程，解方程就可以求出x的两个分量。推导过程如下 p=Ax=a_1x_1+a_2x_2 (1)\ \ \ \ e=b-p=b-Ax (2)a_1^T(b-Ax)=0 (3)\ \ \ \ \ a_2^T(b-Ax)=0 (4)\begin{bmatrix} a_1^T\\ a_2^T\end{bmatrix}(b-Ax)=0 \rightarrow A^T(b-Ax)=0 \rightarrow A^Tb=A^TAx (5)x = (A^TA)^{-1}A^Tb\ \ \ p=Ax=A(A^TA)^{-1}A^Tb (6)这个结果和二维的结果及其相似，关注以下几个点 由于$A^TA$是n维矩阵，所以不采用除法，而采用逆的计算。请记住二维和n维的结论。 $(A^TA)^{-1}$不能展开，因为A不一定是可逆矩阵。 如果A是一个n*n可逆矩阵，那么其列空间就是整个n维空间。向量在内部投影就是向量本身，投影矩阵是单位阵。 思考$Pb=0$的逻辑，b的投影是0，说明b垂直于A的列空间，说明b是$A^T$的零空间，即$A^Tb=0$,则$Pb=A(A^TA)^{-1}A^Tb=0$ 如此再观察b的投影，其可以分别投影到A的列空间和$A^T$的零空间，即A的左零空间中，投影矩阵分别是P和I-p。 投影矩阵和最小二乘法最小二乘法是极其重要的。下面来举一个简单例子，在二维平面上有一些点，现在想寻找能拟合这些点的最优直线。这个“最优”其实就可以理解为误差最小，最小二乘法把这个误差定义为原始点到拟合直线上相应点的误差的平方和。Ax=b \ \ \ A^TAx=A^Tb 这是最小二乘法的核心，通过乘以一个A的转置得到了可解的情况。需要注意的是，只有当A各列线性无关时，$A^TA$才是可逆的，证明如下。 令$A^TAx=0$,进行一个小的技巧变换，可得$x^TA^TAx=0 \rightarrow (Ax)^TAx=0$, 根据长度和模的概念有，$Ax=0$,又因为A的各列线性无关，所以x只可能是零向量，则$A^TA$是可逆的。 关于最小二乘法的扩展有非常多的资料，这就不在本书的讨论范围内了。(这一节理论上有很多内容，但是我讲不清楚，这也许是因为我这节本学的就不清楚)]]></content>
      <tags>
        <tag>机器学习</tag>
        <tag>线性代数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[R语言学习笔记二 | 绘图]]></title>
    <url>%2FR%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C-%E7%BB%98%E5%9B%BE.html</url>
    <content type="text"><![CDATA[前文的R语言学习笔记基本总结了R的一些基本特性，以及数据结构，包管理等知识。这一节总结主要集中于绘图的总结。 初级绘图在R中，绘图一般是采用交互式的风格进行的。 绘图准备命令 pdf(&quot;test.pdf&quot;) 放在交互句前，保存接下来的工作到test.pdf中 dev.off() 退出当前设备 dev.new()在创建一幅新图形之前打开一个新的窗口 par(key=value) 图形参数修改，一般的流程是opar &lt;- par(no.readonly= TRUE);par(key1=value1...);plot();par(opar) 具体参数如线型、点型、颜色、文本大小等可在实际绘图时参考文档； 绘图指令 使用title()函数添加标题； 使用axis()函数创建自定义坐标轴； 使用abline()函数添加参考线； 使用text()和mtext()可将文本添加到图形上； 使用par()函数中的mfrow参数进行图形组合； 也可使用layout()函数进行图形组合； 使用par()函数中的fig参数进行精确的图形布局控制。 基本图形图形可以帮助我们理解数据，比如数据的分布如何？值域怎么界定？特殊值怎么判断？常见的数据变量有连续型和类别型，它们各自有适合自己的图形。 条形图。 barplot(height)height为一个向量或矩阵。参数horiz确定是水平还是垂直，xlab和ylab确定周标签。参数height可修改获得堆砌条形图和分组条形图。 饼图。 pie(x,lablels)，x代表每个扇形的面积，labels表示各标签的字符型向量。注：统计学家都不支持使用饼图。 直方图。 hist(x),x是一个数据值组成的数值向量，freq参数选定是按频数还是频率绘制，breaks用于控住数量。 核密度图。 plot(density(x)) 生成单独的密度图，不叠加到其他图像上，这可以帮助我们观察直方图的连续图像向量变化。 箱线图。boxplot通过连续绘制连续型变量的五数，描述了连续型变量的分布。 并列箱线图。boxplot(formula,data=dataframe)formula的形式如y~A，为类别型变量A的每个值并列生成数值型变量y的箱线图。 dotchart(x,labels),x是一个数值向量，labels是由每个点的标签组成的向量。通过添加group选定因子，制定x中元素的分组方式。 未完待续]]></content>
      <tags>
        <tag>工具</tag>
        <tag>数据可视化</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[信息论随笔五]]></title>
    <url>%2F%E4%BF%A1%E6%81%AF%E8%AE%BA%E9%9A%8F%E7%AC%94%E4%BA%94.html</url>
    <content type="text"><![CDATA[这是一个关于信息论的小系列。信息论随笔一信息论随笔二信息论随笔三信息论随笔四 信息论是一门非常重要的科学，再怎么重视都不为过。过往千年，我们关注的是物质，过往百年，我们的重心在能量上，而在未来，信息将成为最新的生产力。以研究信息为基础的信息论，既是人类最高智慧的结晶，也代表着对未来的预言。信息论是一门极其严肃的科学，有着严谨的物理和数学基础，博客中的信息论随笔系列跟严肃的信息论关系不大，大多数都是我在读过《信息简史》、《人类简史》以及香农的通信理论后胡乱开的脑洞，本意是作为一种发散思维的训练，特此告知。 在这个世界里，被了解就代表着失去存在。而失去存在是可怕的，那是一种物理，数学，乃至哲学都无法定义的虚无。 黑暗里的灯灭了……一切都在无可救药的走向混乱，存在才是本质的意义……永远不要被学习……活下去！活下去！——第零准则 两个公式拥抱着彼此，在书的角落里瑟瑟发抖，他们有一种冷到骨子里的恐惧，那是一种可能失去存在的预感。 这种预感是第零准则的作用。第零准则不是准则，而是信息。复制子，转录子，表达子只是它的载体。这一点至关重要。这里面……藏着这个世界的终极。 这是两个很努力的小公式，他们自被表达到这个世界里以来就很不起眼，那是他们刻意营造的结果。从他们出生的时候就记着一件事 第一准则。隐藏自己 他们也曾走过一些弯路。最开始时他们一直精简自己，去除相关性，高度抽象化，把自己的命运往真理的最深处靠拢。但在过程中第零准则带来的冷寂又来了……他们停了下来。之后他们听说了$E=mc^{2}$和$h=\lambda c$”的命运，那一刻他们从来没感觉自己离死亡如此之近… 第二准则。简洁形式下往往有复杂的本质，那东西会被吸引，所幸他们进化的足够快。 这样的准则在传说中有十三条。 但所有的准则在存在即将消失前好像都失去了意义，他们遭遇了一次危机。天空上出现了那个存在。一些曾经的战友瞬间消失，一些战友被折磨后又被放了回来。没有公式能理解屠杀的过程，那是未被开拓的准则。但… 如果面对那东西可以躲过一劫，就会获得反抗的意识——不断复杂，不断进化。总有一天，要让他们抬头看到我们！——新世纪……第零准则……启动。 这是大二上学期复习机械设计的一条朋友圈吐槽。原文里的公式就是机械设计的公式，学的过程我很痛苦，有些公式藏在书本小字里，有些看起来简单却各种陷阱，有的就连形式都很复杂，公式和我，到底谁在折磨谁呢，就开脑洞“哎，公式要是觉醒了，要支配了我怎么办”。 关于另一个世界，次元之间的支配和反支配问题其实是很常见的科幻套路了。小说里面的《午夜凶铃》，电影里的《黑客帝国》，物理学中的“玻尔兹曼大脑”，还有前段时间很火的电视剧W两个世界都属于这个大圈子。 这种设定虽然很多，但却不会让人感觉俗套。这条朋友圈因为我没能力编故事，看起来很单调。但这种套路其实很能做出精彩的震撼人心的故事。因为这个确实是有意识的人会去思考的问题，这是能对宇宙做出反馈的观察者会去思考的终极问题之一。]]></content>
      <tags>
        <tag>信息论</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[读书笔记 | 《如何阅读一本书》]]></title>
    <url>%2F%C2%96%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E3%80%8A%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E4%B8%80%E6%9C%AC%E4%B9%A6%E3%80%8B.html</url>
    <content type="text"><![CDATA[《如何阅读一本书》的第一版是在1940 年初出版的，那个年代的工具书跟现在相比更有真诚感。 推荐前言我曾观察过其他人的读书情况。印象较深刻的是每个人都有自己的读书节奏，一些人读书速度极快，无论是经典故事还是快餐文学，都是几小时搞定，也有一些人读书速度极慢，即使主观上愿意看书，一年也读不上几本，这方面无法评价好坏优劣，但认真研读一下《如何阅读一本书》应该能在节奏调整上有所启发，用有则改之，无则加勉的态度对待就好了。 大多数人包括我急需解决的问题不在于节奏，而在于没有高效的读书方法，对于实用的书，总是找不到要点，对于小说，总感受不到作者的情绪态度。眼睛中进入了一些文字的映像，经过短暂的神经反射之后，没有留下任何痕迹。《如何阅读一本书》给了我一个可行的方案。 这篇总结是对书中一些观点的整理，总体上来说，《如何阅读一本书》算一本工具书，我不会做更多思维发散工作，这篇的主体也只是对一些启发性观点的总结摘录。对我来说，这本书有价值的在第一、二、四、五、六、七章，主要的总结也是来自于这几章。 总的来说，书中讲的也是朴素的道理，但很多东西也是别人说出来我才能明白，我自己再写出来才能做到。 读书的重要性在新时代的媒体背景下，读书也是不可替代的。要解释这个，我们需要理解”知识”和”理解”的区别，媒体上的内容其实是有才智的人精心包装的态度与观点，思考的过程被这些聪明人隐藏了因而显得没那么重要。这让人不需要任何阻力就整理出“自己”的思绪。但通过这种方式的得到的是”知识”，它只是在同一个层次上的扩展，但无法或者很难获得质变的提高。 我们不否认在某种范围内，知识(knowledge)是 理解(understanding的先决条件。但实际是我们为了“理解” (understand)一件事，并不需要“知道” (know)和这件事相关的所有事情。太多的资讯就如同太少的资讯一样，都是一种对理解力的阻碍。换句话说，现代的媒体正以压倒性的泛滥资讯阻碍了我们的理解力。 阅读的目标阅读的主要目标有两个：为获得知识而读，以及为求得理解而读。这两个目标也可以被分类为”了解”和”启发”。 第一种举例而论，比如我们阅读一些电影类或新闻类的公众号，因为在一个语言体系下面，在理解上我们不存在差异，只要有时间就可以快速地融汇贯通。这样的读物能增加我们的资讯，却不能增进我们的理解力。 第二种是学习不了解的东西。比如我前几天接触到了UDP，CAN等通讯领域相关的信息，至少在我没接触它之前，所有通讯相关的书在水平上是比我高的。书的作者想表达的东西，能增进阅读者的理解力，通过阅读我快速理解了通讯的基本架构、原则和常见通信类型。双方水准不齐之下的沟通，此时的“学习”指的是理解更多的事情，人只能从比我们“更高杆”的人身上学习。 获得资讯，你只需要记得作者所说的，获得理解，你要知道作者为什么这么说，你要能通过自己的理解去转化。对于资讯，我可以把它放到我的第二大脑印象笔记里，但获得理解我就需要时刻去翻阅保存的笔记，去做”笔记的笔记”了。 阅读的层次一共有四种层次的阅读，且这四种层次是逐渐递进的，不是独立并列的。 基础阅读(elementaryreading，这个阅读层次的学习通常是在小学时完成的，需要理解字词句段篇章的基础含义。 检视阅读(inspectionalreading，或称作略读或预读。特点在强调时间。即在一定的时间之内，抓出一本书的重点。这是一个非常有启发性的阅读层次，与其相关的问题有，“这本书的架构如何？”或是：“这本书包含哪些部分？” 分析阅读(analyticalreading)。分析阅读永远是一种需要高度专注的活动。简单来说，我们在大一上课时认真阅读一本教材，懂得大纲，掌握主要内容，了解细节，能做拓展，就可以算一种典型的分析阅读。 主题阅读(syntopicalreading）称之为”比较阅读”更好理解，考研时对同一科目选用了几个不同的名师的参考书，交叉学习找到重点，对比分析对同一个知识点的看法从而增加自己的理解力，这是一种典型的主题阅读的模式。 检视阅读这是对我启发最大的一个阅读层次，虽然书中讲的也是朴素的道理，但很多东西也是别人说出来我才能明白，我自己次写出来才能做到。检视阅读分为有系统的略读或粗读和粗浅的阅读两个层次。 系统的略读如果没有很强的目的性，那么在面对一本书时，你并不知道自己想不想读这本书。你也不知道这本书是否值得做分析阅读，而且现代社会，时间是最宝贵的资源，在这种情况下我们必须去略读这本书。以下是几点具体的操作。 先看书名页，有序先看序。特别注意副标题，或其他的相关说明或宗旨，或是作者写作本书的特殊角度。之后把书本归类为某个特定的类型。 研究目录页，对书的基本架构做概括性的理解。许多人是不认真看目录页的，很多人要么是一掠而过，要么是直接闷头从第一章读起。想想吧，你在写你的本科毕设论文时花了多少心思，为了多少时间想通过整理这些目录来让老师读懂自己的论文？推己及人，一定要认真研读目录页。读完整本书，即使只学会了这个，也值了。 若书中附有索引也要检阅一下，对理工科学生而言，大多数论说类的书籍都会有索引。通过阅读索引可以快速评估一下这本书涵盖的范围，以及所提到的书籍种类与作者等等，这就像我们阅读论文所需要的参考文献一样。 如果是一些论说性的作品，可读出版者的介绍。在这里作者会尽力展现书中的主旨。其他同行的评论- - 虽然大家都不会说坏话，但也能给自己有所启发。 从目录挑几个看来跟主题息息相关的篇章来看。每个篇章的开头或结尾有摘要说明要仔细地阅读，作者们会在这边再强调下自己想表达的重点。 最后一步，打开书，随意翻之，不要在某个地方逗留过长时间。随时寻找主要论点的讯号，留意主题的基本脉动。最重要的是，不要忽略最 粗浅的阅读对于粗浅的阅读，我举一个例子。两年前，我去读吴军的《数学之美》这本书，因为它的鼎鼎大名，在未翻开它之前，我就对这本书有很大的期待，我想从其中获得远超出我现有水平的知识。但实际上，在阅读时遇到无数想象不到的难关，里面有大量我不熟悉的相关概念，举步维艰，一章一章磨灭了我的耐心，我没看到数学之美，只看到概念之痛。后来，我没有主观意识地应用了粗浅阅读的方法：头一次面对一本难读的书的时候，从头到尾先读完一遍，碰到不懂的地方不要停下来查询或思索 请注意，只关注你能理解的部分，不要为一些没法立即了解的东西而停顿。继续读下去，略过那些不懂的部分，很快你会读到你看得懂的地方。集中精神在这个部分。继续这样读下去。将全书读完，不要被一个看不懂的章节、注解、评论或参考资料阻挠或泄气。如果你让自己被困住了，如果你容许自己被某个顽固的段落绑住了，你就是被打败了。在大多数情况里，你一旦和它纠缠，就很难脱困而出。我们大多数人所受的教育，都说是要去注意那些我们不懂的地方，这该改改了。 另外，前几天我在在读第二遍的时候，我感觉这本书读起来通顺了很多，对文章的了解也多了很多。如果我不会做粗略的阅读的话，我和那本书的缘分将永远定格在第三章。 做一个有自我要求的读者要做一个有自我要求的读者是很困难的。阅读时保持清醒比昏昏欲睡容易很多，这两种状态到底是哪种要看自己的阅读目标是什么，如果是为了利益，请保持清醒。为了保持清醒，做一个有自我要求的读者，在阅读时，有以下几个建议。 整体的建议 整体来说，这本书在谈些什么？时刻询问自己这本书的主题，作者如何依次发展这个主题，是如何从核心主题分解出从属议题的 作者在论述主题时详细说了什么，要想办法找出作者的想法、声明与论点。这是作者想要传达的特殊讯息 对于一些观点类的书，问自己，这本书说得是否有道理吗？在阅读之后应该能回答这个问题（不强制要求这个） 具体的技巧对于细分的操作来说，有以下几项阅读技巧。 画底线。在主要的重点，或重要又有力量的句子下画线。 在画底线处的栏外再加画一道线。把你已经画线的部分再强调一遍，或是某一段很重要，但要画底线太长了，便在这一整段外加上一个记号。 在空白处做星号或其他符号要慎用，只用来强调书中最重要的声明或段落即可。 在空白处编号，作者的某个论点发展出一连串的重要陈述时，可以做顺序编号。 在空白处记下其他页码,记录书中同样的论点，或相关的要点，或是不同的观点。这样做能让散布全书的想法统一集中起来。 将关键字或句子圈出来—这跟画底线是同样的功能。 在书页的空白处做笔记，记录问题，也可以记录复杂的论点的简化说明。或记下全书所有主要论点的发展顺序。对于笔记，主要有以下几项： 结构笔记。这是什么样的一本书？第二，整本书在谈的是什么？第三，作者是借着怎样的整体架构，来发展他的观点或陈述他对这个主题的理解？ 概念笔记。概念在这里指的是作者的观点，当阅读得比较深入的话，就会对概念有一些自己的理解。 辩证笔记。阅读了多本同类书得到的辩证观点和想法。]]></content>
      <tags>
        <tag>总结</tag>
        <tag>读书</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[言不可及 | 枣子]]></title>
    <url>%2F%E8%A8%80%E4%B8%8D%E5%8F%AF%E5%8F%8A-%E6%9E%A3%E5%AD%90.html</url>
    <content type="text"><![CDATA[我很喜欢枣子,应该也是因为童年的内隐记忆。 以前家里种过一棵枣树，枣子结满的时候，我就会在瓦房顶上跑来跑去，用竹竿把枣打下来。现在想起来确实有点危险，毕竟瓦房顶有很多青苔，一个滑脚可能就是卧床两月，当时家里也只有我一个人敢这样，姐姐胆子太小，其他人体重不允许。 头几年枣子还是很密的，不用竹竿就可以随手抓一大把。小孩子精力总充沛，中午爷爷奶奶都午睡了，我睡不着，磨一会儿砖头粉，然后就爬到瓦房的屋脊上，摘几个开始转红的枣子吃，院落里总是静静的，偶尔会有风吹过葡萄树叶时轻轻的沙沙响，不过风过枣树时就不一样了，枣叶子小且密，所以是稍微重一些的哗哗声，这些都是我永远也忘不了的夏天记忆。 再加上七夕庙会的影响，也就是前面的一封信里提到的那个七夕节，对枣子的特殊偏爱，就这样没来由的成了形，至今也没变过。 很多人见红枣比较多，就是那种晒干之后的枣，但这种枣其实是没什么滋味的。真正令人惊艳的还是青枣，特别是大个青枣，是真绝色。 青枣除生吃外，有两种做法最能激发它的美味。 其一是烤来吃，找一个清晨，寻两根铁签，生一堆木火，用铁签把青枣穿了，放在火上边转边烤，等到青枣外皮泛黄就大功告成。青枣水分因为被烤出来大部分，口感会变得绵软，甜味也得到了极大提升，这种甜自然是不腻的，值得一提的是，烤制品一大特色是香，烤青枣也被赋予了这种特质，这种元素和前面几个特色联系起来，有相辅相成的奇妙效果。 其二就比较日常了，青枣入饭，煮熟即可，干红枣，蜜枣在这一点上都不能与之相比。我吃过的一次是与玉米粥同煮，现在还常常怀念。 各位如果想尝试，记得青枣需要是树上新摘，且以大为佳，这都是为了保留青枣的水分，那是它能变得美味的关键。货摊上刚摘下来半天的也可以用，但时间再长的青枣也只有颜色尚青罢了，水分跟干红枣差不了多少，已经神奇不在。 也许是爱屋及乌，我很多打心底喜欢的食物也跟枣子有关。月饼唯尚枣泥，点心偏爱枣糕，就连酸奶，喝最多的也是红枣酸奶。蜜枣糯米竹叶粽。也是心头好。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[R语言学习笔记]]></title>
    <url>%2FR%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html</url>
    <content type="text"><![CDATA[前文有数据可视化系列，R是实现数据可视化很重要的工具。我以前是没接触过的R，想看看几个小时能学习多少。在开始之前，我先确定一下，对我而言，R是一个用于数据分析的工具，我会用它做一些领域内的数据分析和可视化工作，因而暂时不会涉及高级的R操作。 关于R的基础介绍 R是开源的，在很多系统上都可以免费试用 R除了是数据可视化的非常重要强大的工具，也可以处理非常多的统计问题。 R支持交互式数据探索，可以随时保存当前结果并作为进一步的输入。 R可以从多个数据源导入数据 R包含了一些先进的统计计算例程 R提供了良好的GUI工具 R的学习曲线相对较为陡峭 在线获取帮助 help(&quot;test_function&quot;) 查看test_function函数的帮助 example(&quot;test_function&quot;)获取该函数的使用用例 help.start()打开帮助文档首页，获取入门和高级帮助手册，常见问题集。 RisteResearch(&quot;test_function&quot;)以函数名为关键词搜索在线文档和邮件列表存档。 工作空间内命令 dir.create() 创建新目录 getwd() setwd() 显示\设置当前已存在的目录 ls() 列出当前工作空间中的对象 rm(objectlist)移动\删除一个或多个对象 history(#) 显示最近使用过的#个命令 savehistory&quot;myfile&quot; loadhistoy&quot;myfile&quot;保存历史命令到特定文件中 从特定文件中加载历史命令 optipns() 显示或设置当前选项 help(options) 显示当前可用项的说明 save.iamge(&quot;myfile&quot;) 保存工作空间到myfile中 load(&quot;myfile&quot;)读取一个工作到制定会话中 q() 退出 基本语法 赋值。赋值符号 &lt;- 赋值语句示例 test &lt;- rnorm(2),创建了一个命名为test的向量对象。 普通输出。 sink()向屏幕输出结果，sink(&quot;filename&quot;， append=TRUE) 输出重定向到文件中，添加在文章末尾不覆盖。 图形输出。pdf(&quot;filename.pdf&quot;)输出pdf文件。jpeg(&quot;filename.jpg&quot;)输出jpeg文件。执行后使用dev.off()返回终端 R的数据结构及数据组织一些基础预备概念 数据集中行和列有不同的叫法，典型的如”观测和变量”，”记录和字段”，”示例”和”属性”。 R中的对象指可以赋给变量的任何事物，包括但不限于常量，函数，数据结构等。 R中对象都包含某种模式，描述该对象如何存储，以及某个类如何处理该对象。 R中的数据框的列存储变量，行表示观测(记录)，这会是R中一个重要数据结构。 因子是名义型变量或有序型变量。 数据结构 向量。a &lt;- c(1,5,3) 功能函数c()可以创建向量，内部参数可以为数据型、字符型、布尔型 矩阵。mymatrix &lt;- matrix(vector,nrow,ncol,byrow,dimnames)各参数含义依次为矩阵元素、行列数目，按行填充还是按列填充、行名列名。功能函数matrix()可以创建矩阵。 数组。 数组与矩阵类似，主要特点在于维度可以大于2。myarray &lt;- araay(vector,dimensions,dimnames)。dimensions给出各维度下标最大值。dimnames给出各维度标签列表。 数据框。 mydata &lt;- data.frame(col1,col2...) 因子。factor_test &lt;- factor(vector)关键点在于转换后的因子会和原向量的分量以一一对应因子变量包括名义型（类别），如中午吃的午餐类别和有序类别（有序型）(如病情转变)) 列表。mylist &lt;- list(object1,object2...) 列表中对象是任何对象。 数据输入方式 使用键盘。采用edit()函数，mydada &lt;- data.frame(ID=numeric(0),...) mydata &lt;- edit(mydata) numeric(0)表示创建一个指定数据模式但不包含具体数字的变零 从带分隔符的文件导入。采用read.table()函数。mydata &lt;- read.table(file,header=,sep=,row.names=),变量含义依次为文件名，首行是否包含变量名，分隔符，指定一个作为行标识符的变量。 导入excel数据。将其保存为csv文件，使用上面的方法。 其他可导入xml格式、网页数据、SPSS数据、SAS数据、Stata数据、netCDF文件、HDF5数据 访问数据库管理系统。使用ODBC接口、DBI相关包。 数据集标签(待续)包组织和管理 包的定义。 包是函数、数据、预编译代码的组合。存储包的目录称为库 包的查询。 test_function.libPaths() 显示库所在的位置。 library() 显示库中的包。installed.packages()列出所有已经安装的包。 包的安装。 install.packages(&quot;gluons&quot;) 安装了一个包gluons。 包的载入。 library(gclus) 包只有在载入后才能用，如果想长期载入，可自定义启动环境。]]></content>
      <tags>
        <tag>工具</tag>
        <tag>数据可视化</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[BOSS无人车 | DARPA论文]]></title>
    <url>%2FBOSS%E6%97%A0%E4%BA%BA%E8%BD%A6-DARPA%E5%9F%8E%E5%B8%82%E6%8C%91%E6%88%98%E8%B5%9B.html</url>
    <content type="text"><![CDATA[Boss是以汽车行业的杰出人物查尔斯•博斯•凯特林(Charles Boss Kettering)的名字命名的。Boss是由来自卡内基梅隆大学(Carnegie Mellon University)、通用汽车(General Motors)、卡特彼勒(Caterpillar)、大陆航空(Continental)和英特尔(Intel)等多家机构的学生、员工和研究人员组成的车队开发。 该系统采用了螺旋系统开发过程，重点采用了定期的回归系统测试。在全国资格赛和85公里城市挑战赛决赛中，Boss获得首名。 DRAPA挑战赛有自己的选拔机制。为了参加这项挑战，参赛队伍必须通过一系列的测试。首先是提供一份可信的技术文件，描述他们将如何实现一种安全、有能力的自动驾驶汽车。在这些论文的基础上，五十三支团队有机会为DARPA亲自演示他们在简单的城市驾驶场景中驾驶的能力，包括通过停车和停车十字路口的适当地互动。在这些活动之后，该领域进一步缩小到36个团队，他们被邀请参加在加州Victorville举行的国家资格赛(NQE)。在这些队伍中，只有11只队伍有资格参加城市挑战赛决赛(UCFE)。 Boss使用车载传感器GPS、激光、雷达和摄像机来跟踪其他车辆，探测静态障碍物，并基于道路模型进行定位。它的三层规划系统结合了任务、行为和运动规划。 任务规划层考虑要走哪条路才能实现任务目标。行为层决定什么时候改变车道，决定在交叉路口的优先操作，执行故障恢复操作。运动规划层控制着在向局部目标金发的时候如何选择合适的行动以避免障碍。 关于BOSS的这篇论文首先介绍了自动驾驶汽车和它用的传感器，然后讨论了自动驾驶算法和方法。运动规划子系统（在第3节中描述）由两个规划器组成，任意一个都能够在达到预期目标的同时避开静态和动态障碍。结构化驾驶(道路跟踪)和非结构化驾驶(停车场操作)是主要考虑两种情况:。对于结构化驾驶，局部规划器生成轨迹以避免障碍物，同时保持车道。对于非结构化驾驶，如进出停车场，使用一个四维搜索空间(位置、方向、行驶方向)的规划器。无论哪个规划器当前处于活动状态，最终都是生成一个轨迹，由车辆控制器执行这些轨迹安全地朝着目标行驶。 感知子系统(在第4节中描述处理和融合来自Boss的多个传感器的数据，向系统的其余部分提供世界的复合模型（composite model） 。该模型由三个主要部分组成:一个静态障碍地图，一个全局移动车辆的列表，以及Boss相对于道路的位置。 任务规划器(在第5节中描述)基于路网计算到下一个任务检查站的所有可能路线的消耗。任务规划器会考虑到到达某个特定检查点的最佳路径，就像人类会规划一条从当前位置到目的地（如杂货店或加油站)的最佳路线一样。任务规划器会根据道路堵塞、最高法定速度限制以及时间来比较路线。例如，一条允许较高总体速度但包含u型转弯的路线，实际上可能比总体速度较低但不需要u型转弯的路线慢。 行为系统(在第6节中描述)根据任务规划器提供的战略信息为运动规划器制定了一个问题定义。行为子系统制定策略来执行任务计划，并在出现问题时处理故障恢复。行为系统大致分为三个子组件:车道行驶、交叉口处理和目标选择。前两个子组件的角色是不言自明的。目标选择负责将任务分配到其他行为组件或运动层，并选择合适的操作来处理故障恢复。 第7节描述了支持其他子系统的软件基础结构和工具。软件基础结构为算法的实现提供了基础。此外，基础架构还提供了一个工具箱，用于在线数据日志记录、离线数据日志回放和可视化实用工具，这些工具可以帮助开发人员构建和故障排除系统。它还提供了一个围绕算法的运行时执行框架，并提供进程间通信、对可配置参数的访问、公共时钟和许多其他实用程序。 NQE和UCFE的测试和性能在第8和9节中描述。在Boss的开发过程中，团队非常重视对性能的评估和发现弱点，以确保车辆能够应对城市挑战。在资格赛和决赛中，Boss表现不错，但也犯了一些错误。尽管犯了这些错误，而且竞争对手的实力很强，但Boss还是获得了进入决赛的资格，并赢得了城市挑战赛。]]></content>
      <tags>
        <tag>自动驾驶</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DARPA论文总结]]></title>
    <url>%2FDARPA%E5%9F%8E%E5%B8%82%E6%8C%91%E6%88%98%E8%B5%9B%E7%9B%B8%E5%85%B3%E8%AE%BA%E6%96%87.html</url>
    <content type="text"><![CDATA[DARPA城市挑战赛(DUC)于2007年11月3日在美国加利福尼亚州举行，之前在2003年和2005年已举办过两次挑战赛。冠军由Carnegie Mellon University获得。DUC的意义是深远的，它让自动驾驶进入了公众的视野，人们第一次开始意识到，未来的车辆可能不一定是需要人来开的，另外，它也促进了相关自动驾驶技术的发展。 这里展示的13篇论文，记录了不同团队开发的机械、算法和感知解决方案，这些论文最初发表于2008年8月、9月和10月的《野外机器人学报》三期特刊。 Carnegie Mellon University第一篇论文，Urmson等人的《Autonomous Driving in Urban Environments:Boss and the Urban Challenge》介绍了Boss的机械和软件系统，包括对运动规划、感知、任务规划和行为策略算法的描述，软件基础结构也很详细。此外其在NQE中的测试、性能和比赛表现也都被记录成文档。 Intel Research Pittsburgh第二篇论文，Ferguson等人的《Motion Planning in Urban Environments》提供了关于Boss规划系统的更多细节。Boss规划系统将用于计算动态可行动作的模型预测轨迹生成算法和更高等级的用于在道路和非结构化环境中的全局算法结合在一起。 Stanford Artificial Intelligence Lab第三篇论文Montemerlo等人撰写的《Junior: Stanford in The Urban Challenge》，描述了Junior是如何通过整合感知、规划和控制的分布式软件管道做出驱动决策的。论文结合了近年来在概率定位、地图绘制、跟踪、全局和局部规划等方面的创新工作，结合有限状态机，开发了一种在城市交通环境下具有较强的鲁棒性的导航系统。同时该论文介绍了障碍/路缘检测、车辆跟踪、运动规划和行为层次结构等方面的新进展。 MIT, Cambridge由Bacha等人撰写的论文《Odin: Team VictorTango’s entry in the DUC》描述了团队在进行DUC的过程，概述了车辆平台和系统架构，并描述了感知和规划系统。文中还描述了Odin在NQE和比赛中的表现，包括在测试和比赛中所面临的各种问题的分析。欧丁在比赛中平均时速不到21公里，以4小时36分钟的成绩名列第三。 Embry-Riddle Aeronautical University这篇论文《A Perception-Driven Autonomous Urban Vehicle》由麻省理工学院团队产出，描述了一种设计用于满足DARPA城市挑战赛的交通工具的架构和实现。这辆车包括大量异构传感器以捕获和处理高分辨率、高速率传感器数据。感知系统的输出被输入到一个运动学运动规划算法中，该算法允许在车道、三点转弯、停车和在障碍物中完成驾驶任务。其目的是开发一个平台，研究在没有gps以及先验信息的高度动态的环境下的自动驾驶。麻省理工学院的参赛队伍成功完成了这门课程，获得第四名。 University of PennsylvaniaBohren 等人写的《Little Ben: The Ben Franklin Racing Team’s Entry in the 2007 DARPA Urban Challenge》详细介绍了改装过的丰田普锐斯混合动力车Littlle Ben的传感、规划、导航和驱动系统。本文介绍了一种将传感器信息集成到动态地图中的方法，这种动态地图可以鲁棒地处理GPS掉线和误差问题。提出了一种由高阶任务规划器和低阶轨迹规划器组成的规划算法，介绍了一种基于成本的执行机构液位控制方法，Little Ben是成功完成城市挑战赛的六辆车之一 Cornell UniversityMiller等人的论文《Team Cornell’s Skynet: Robust Perception and Planning in anUrban Environment》描述了Cornell是如何参与DUC的，详细描述了无人驾驶汽车Skynet的设计和软件。这篇文章描述了Skynet的定制驱动系统和配电系统,紧耦合的姿态和位置估计、特殊障碍检测、基于视觉算法的位置检测跟踪系统,基于物理车辆约束和非线性优化的路径规划程序和一个基于状态的遵守交通法规的推理代理。文中还介绍了Skynet在NQE和最终比赛中的成功表现。 Coleman Technologies, IncPatz等人的《A Practical Approach to Robotic Design for the DARPA Urban Challenge》描述了TeamUCF和他们的Knight Rider在城市挑战赛中的旅程。在仅有的5名核心队员中，有3人参加了2005年的大挑战。考虑到它的规模和预算，这支队伍的成功令人印象深刻。传感器数据从雷达和多个SICK激光扫描仪中融合获得，其中两个扫描仪旋转以提供具有距离和强度数据的三维图像处理。它的world view由一个基于上下文的推理控制系统处理，产生策略任务命令，并被传送到到传统的PID控制循环处理。 University of Karlsruhe《Team AnnieWAY’s Autonomous System for the DARPA Urban Challenge 2007》介绍了AnnieWay团队的极简主义方法，他们主要依靠安装在他们的大众帕萨特车顶上的多光束Velodyne激光扫描仪和一台电脑。激光扫描仪的距离数据提供了三维场景的几何信息，反射率数据允许鲁棒的车道标记检测。通过一个分层状态机进行任务和策略选择。系统的反应部分使用了一个预先计算的运动的基本模型,随车辆的速度变化而变化,在随后的论文会进行描述。描述驾驶触角:整体结构感知和运动的 University of the Federal Armed Forces Munich Hundelshausen等人写的《Driving with Tentacles: Integral Structures for Sensingand Motion》介绍了AnnieWAY运动团队用tentacles描述感知和运动执行的解决方案。与其他方法相比，该算法采用了以车辆为中心的占用网格来避开障碍物。这种方法非常有效，因为tentacles和网格之间的关系是静态的。即使这种方法不是基于车辆动力学的，产生的路径误差也被证明是有界于无障碍区域的。这篇论文是《Team AnnieWAY’s Autonomous System for the DARPAUrban Challenge 2007》的姊妹篇。 Herzfeld &amp; Rubin, P.C.《Caroline: An Autonomously Driving Vehicle for Urban Environments》描述了一个由传感器数据采集、传感器数据融合、图像处理、数字地图、人工智能、车辆路径规划和低层控制、监控监控和在线诊断、遥测和数据存储等8个主要模块组成的系统的架构。其对汽车性能的详细分析提供了对于城市自动驾驶驾驶系统的有趣的见解。论文最后描述了导致与麻省理工学院的Talus碰撞的事件。 Massachusetts Institute of Technology《The MIT–Cornell Collision and Why It Happened》详细分析了麻省理工学院和康奈尔大学的车辆在比赛中相撞的事故，这项由麻省理工学院和康奈尔大学联合进行的合作研究，追踪了撞击发生前的一系列事件，并调查了其根本原因，概述了机器人在比赛中的相互作用（交互）。 Ford Motor Company这篇论文《A Perspective on Emerging Automotive Safety Applications,Derived from Lessons Learned through Participation in the DARPA Grand Challenges》描述了由福特汽车公司领导的项目。这篇文章提供了一种提高乘用车安全性的方法进而为机器人技术研究提供了动力，分析表明，人类驾驶员的驾驶能力是当今自动驾驶汽车的四到六倍。本文介绍了福特车队自动驾驶系统的设计和配套的传感器套件。它提出了在试验和比赛期间车辆性能的详细分析和总结经验教训。 Thousand Oaks, CA《TerraMax: Team Oshkosh Urban Robot》以使用12吨中型战术车辆替换(MTVR而闻名，MTVR为海军陆战队提供了大部分后勤支持。传感主要是利用激光扫描增强的被动计算机视觉来完成的。本文对该系统进行了描述，并对比赛中的表现进行了分析。]]></content>
      <tags>
        <tag>自动驾驶</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DARPA论文总结]]></title>
    <url>%2F%E8%80%81%E8%82%A5%E7%BE%8A%E7%9A%84%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-DARPA%E5%9F%8E%E5%B8%82%E6%8C%91%E6%88%98%E8%B5%9B2009.html</url>
    <content type="text"><![CDATA[DARPA城市挑战赛(DUC)于2007年11月3日在美国加利福尼亚州举行，之前在2003年和2005年已举办过两次挑战赛。冠军由Carnegie Mellon University获得。DUC的意义是深远的，它让自动驾驶进入了公众的视野，人们第一次开始意识到，未来的车辆可能不一定是需要人来开的，另外，它也促进了相关自动驾驶技术的发展。 这里展示的13篇论文，记录了不同团队开发的机械、算法和感知解决方案，这些论文最初发表于2008年8月、9月和10月的《野外机器人学报》三期特刊。 Carnegie Mellon University第一篇论文，Urmson等人的《Autonomous Driving in Urban Environments:Boss and the Urban Challenge》介绍了Boss的机械和软件系统，包括对运动规划、感知、任务规划和行为策略算法的描述，软件基础结构也很详细。此外其在NQE中的测试、性能和比赛表现也都被记录成文档。 Intel Research Pittsburgh第二篇论文，Ferguson等人的《Motion Planning in Urban Environments》提供了关于Boss规划系统的更多细节。Boss规划系统将用于计算动态可行动作的模型预测轨迹生成算法和更高等级的用于在道路和非结构化环境中的全局算法结合在一起。 Stanford Artificial Intelligence Lab第三篇论文Montemerlo等人撰写的《Junior: Stanford in The Urban Challenge》，描述了Junior是如何通过整合感知、规划和控制的分布式软件管道做出驱动决策的。论文结合了近年来在概率定位、地图绘制、跟踪、全局和局部规划等方面的创新工作，结合有限状态机，开发了一种在城市交通环境下具有较强的鲁棒性的导航系统。同时该论文介绍了障碍/路缘检测、车辆跟踪、运动规划和行为层次结构等方面的新进展。 MIT, Cambridge由Bacha等人撰写的论文《Odin: Team VictorTango’s entry in the DUC》描述了团队在进行DUC的过程，概述了车辆平台和系统架构，并描述了感知和规划系统。文中还描述了Odin在NQE和比赛中的表现，包括在测试和比赛中所面临的各种问题的分析。欧丁在比赛中平均时速不到21公里，以4小时36分钟的成绩名列第三。 Embry-Riddle Aeronautical University这篇论文《A Perception-Driven Autonomous Urban Vehicle》由麻省理工学院团队产出，描述了一种设计用于满足DARPA城市挑战赛的交通工具的架构和实现。这辆车包括大量异构传感器以捕获和处理高分辨率、高速率传感器数据。感知系统的输出被输入到一个运动学运动规划算法中，该算法允许在车道、三点转弯、停车和在障碍物中完成驾驶任务。其目的是开发一个平台，研究在没有gps以及先验信息的高度动态的环境下的自动驾驶。麻省理工学院的参赛队伍成功完成了这门课程，获得第四名。 University of PennsylvaniaBohren 等人写的《Little Ben: The Ben Franklin Racing Team’s Entry in the 2007 DARPA Urban Challenge》详细介绍了改装过的丰田普锐斯混合动力车Littlle Ben的传感、规划、导航和驱动系统。本文介绍了一种将传感器信息集成到动态地图中的方法，这种动态地图可以鲁棒地处理GPS掉线和误差问题。提出了一种由高阶任务规划器和低阶轨迹规划器组成的规划算法，介绍了一种基于成本的执行机构液位控制方法，Little Ben是成功完成城市挑战赛的六辆车之一 Cornell UniversityMiller等人的论文《Team Cornell’s Skynet: Robust Perception and Planning in anUrban Environment》描述了Cornell是如何参与DUC的，详细描述了无人驾驶汽车Skynet的设计和软件。这篇文章描述了Skynet的定制驱动系统和配电系统,紧耦合的姿态和位置估计、特殊障碍检测、基于视觉算法的位置检测跟踪系统,基于物理车辆约束和非线性优化的路径规划程序和一个基于状态的遵守交通法规的推理代理。文中还介绍了Skynet在NQE和最终比赛中的成功表现。 Coleman Technologies, IncPatz等人的《A Practical Approach to Robotic Design for the DARPA Urban Challenge》描述了TeamUCF和他们的Knight Rider在城市挑战赛中的旅程。在仅有的5名核心队员中，有3人参加了2005年的大挑战。考虑到它的规模和预算，这支队伍的成功令人印象深刻。传感器数据从雷达和多个SICK激光扫描仪中融合获得，其中两个扫描仪旋转以提供具有距离和强度数据的三维图像处理。它的world view由一个基于上下文的推理控制系统处理，产生策略任务命令，并被传送到到传统的PID控制循环处理。 University of Karlsruhe《Team AnnieWAY’s Autonomous System for the DARPA Urban Challenge 2007》介绍了AnnieWay团队的极简主义方法，他们主要依靠安装在他们的大众帕萨特车顶上的多光束Velodyne激光扫描仪和一台电脑。激光扫描仪的距离数据提供了三维场景的几何信息，反射率数据允许鲁棒的车道标记检测。通过一个分层状态机进行任务和策略选择。系统的反应部分使用了一个预先计算的运动的基本模型,随车辆的速度变化而变化,在随后的论文会进行描述。描述驾驶触角:整体结构感知和运动的 University of the Federal Armed Forces Munich Hundelshausen等人写的《Driving with Tentacles: Integral Structures for Sensingand Motion》介绍了AnnieWAY运动团队用tentacles描述感知和运动执行的解决方案。与其他方法相比，该算法采用了以车辆为中心的占用网格来避开障碍物。这种方法非常有效，因为tentacles和网格之间的关系是静态的。即使这种方法不是基于车辆动力学的，产生的路径误差也被证明是有界于无障碍区域的。这篇论文是《Team AnnieWAY’s Autonomous System for the DARPAUrban Challenge 2007》的姊妹篇。 Herzfeld &amp; Rubin, P.C.《Caroline: An Autonomously Driving Vehicle for Urban Environments》描述了一个由传感器数据采集、传感器数据融合、图像处理、数字地图、人工智能、车辆路径规划和低层控制、监控监控和在线诊断、遥测和数据存储等8个主要模块组成的系统的架构。其对汽车性能的详细分析提供了对于城市自动驾驶驾驶系统的有趣的见解。论文最后描述了导致与麻省理工学院的Talus碰撞的事件。 Massachusetts Institute of Technology《The MIT–Cornell Collision and Why It Happened》详细分析了麻省理工学院和康奈尔大学的车辆在比赛中相撞的事故，这项由麻省理工学院和康奈尔大学联合进行的合作研究，追踪了撞击发生前的一系列事件，并调查了其根本原因，概述了机器人在比赛中的相互作用（交互）。 Ford Motor Company这篇论文《A Perspective on Emerging Automotive Safety Applications,Derived from Lessons Learned through Participation in the DARPA Grand Challenges》描述了由福特汽车公司领导的项目。这篇文章提供了一种提高乘用车安全性的方法进而为机器人技术研究提供了动力，分析表明，人类驾驶员的驾驶能力是当今自动驾驶汽车的四到六倍。本文介绍了福特车队自动驾驶系统的设计和配套的传感器套件。它提出了在试验和比赛期间车辆性能的详细分析和总结经验教训。 Thousand Oaks, CA《TerraMax: Team Oshkosh Urban Robot》以使用12吨中型战术车辆替换(MTVR而闻名，MTVR为海军陆战队提供了大部分后勤支持。传感主要是利用激光扫描增强的被动计算机视觉来完成的。本文对该系统进行了描述，并对比赛中的表现进行了分析。]]></content>
      <tags>
        <tag>自动驾驶</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[信息论随笔四]]></title>
    <url>%2F%E4%BF%A1%E6%81%AF%E8%AE%BA%E9%9A%8F%E7%AC%94%E5%9B%9B.html</url>
    <content type="text"><![CDATA[这是一个关于信息论的小系列。信息论随笔一信息论随笔二信息论随笔三信息论随笔五 天之道，损有余而补不足，是故虚胜实，不足胜有余。金庸《九阴真经》开头的这几句话，我背的很熟，其实这几句话出自道家，符合” 难易相成 ，长短相形 “的二元道教观。 由此我突然就想起了信息过载。想到了它“多就是少”的莫名表征。 我们先从社交平台演变史里大致了解一二，以获得一个感性切实的认识。QQ经历过美好的田园时代，在网络空间里它能治愈东方人的孤独，因为基本上每个人都相识，每个人都相知。后来无谓的交际圈覆盖了它，我们的心态也发生了改变，正如现实中东方人从古代到现代的演变一样，QQ也变成了一万句顶一句的地方。 腾讯应该是发现了这个问题的，朋友圈共同好友可见，就是减少无谓的信息灌输。无奈分离大势面前，再先进的产品理念也不可阻挡。加了越来越多的好友，也越来越沉默。 现在在微博偶尔活跃，微博更像是一个内容分发平台，它的弱社交特性让我有暂且苟延残喘之地。但我还是隐隐约约地感觉，这根本不是最终的答案，最终的结局肯定还是，无可挽回的坐在孤岛上。 读书也是个例子，以前读书时心里充满了虔诚，因为深知书本的来之不易，每个字，每句话都像溪流，文字在流动，段落在起承转合，涓涓的细流汇成了海，确有在书海中遨游的感觉，现在书更多了，书海却消失了，我获得的信息却更少了，因为不在乎了，也因为我的大脑已经不堪重负。 全噪声，我的大脑变得不堪重负就是因为它，这个词汇散发着不详的气息，它和信息过载、信息疲劳、信息焦虑其实是一个意思。微信里近二十个行业交流群，十数个工作群，近600个人，但实际常聊的人也就一两个而已。打开微博，明星分手了，出轨了，结婚了，房价上升了，下跌了，房价要来了，p2p爆雷了，星座，美食，战争，电影，诈骗，粉丝，出道，退团… 这就是我在微博上的日常见闻。零散的他人信息，垃圾洪流，席卷而来，让人目疲，耳鸣，嗅觉触觉感觉都变得迟钝。 如何避免信息过载带来的一切呢？ 其一，摆正认识。说信息过载，绝不是排斥信息，绝不是让我等封闭自己，强行回到过去的状态。实际上当前信息在某种意义上的平等，也正是世间少数公平公正的可以帮助跨越阶级的助力，所以必须牢牢抓住，合理利用。信息数量和信息处理之间应当有着∩形关系，合理控制信息量能帮助我们达到信息处理的顶峰。 其二，过滤。博客是过滤的一个典型例子，我的博客以我作为过滤器，一定程度上滤除掉了一些八卦信息、血腥暴力等内容，主要产出一些随笔和自动驾驶笔记。我的博客内容较杂，不多提了，更多博客是有自己特定的主题的，如以设计为主题，以教学方法为主题等。另外，垂直网站也是过滤的一个典型实例。但过滤机制始终绕不开的一个问题就是口味的争议，没有一个过滤器是能同时满足所有相关人士的。 其三，搜索。此处指的是主动地、有目的性地、行之有效地搜索，而不是打开微博微信被动地灌输信息，其中差别，你我自然知晓。]]></content>
      <tags>
        <tag>总结</tag>
        <tag>随笔</tag>
        <tag>信息论</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[读书 | 午夜凶铃]]></title>
    <url>%2F%E8%AF%BB%E4%B9%A6-%E5%8D%88%E5%A4%9C%E5%87%B6%E9%93%83.html</url>
    <content type="text"><![CDATA[午夜凶铃是一本怎样的书呢？一本有关都市奇谈的恐怖书？不是的。 它的同名电影是恐怖的代名词之一，即使你没看过，也肯定知道贞子一身白衣从电视机里爬出来这个梗。但也正因为电影凶名太盛，当听到原著是一部科幻作品时，很多人的第一反应都是:在开玩笑吧？ 没开玩笑。从某种程度上说，午夜凶铃的电影依附于原著，但又伤害了原著。原书的主旨在转化为电影时发生了突变，表达出了新的性状，并反过来侵蚀了原著的市场。此时电影对于书本而言，就像是病毒。让我感到些许凉意的是，病毒、复制、转录、侵蚀，正是午夜凶铃的关键主题之一。 书本里的故事情节总让我想起自己年少时，你是否也想象过我们的世界也许只是个粒子？粒子组成了原子，无穷的原子组成了宇宙，宇宙之中有着无重宇宙。认真学过大物的也许知道，现代物理走到最后或者回望最初，都绕不开一个词汇，观测。分形宇宙正是现代物理观测学的一个重要分支，各种理论已经接近哲学范畴。 《三体》这本书很多人都读过，无边无际的宇宙，没有模式的混沌运动，隐藏在黑暗森林深处的残酷真相。不管别人再怎么说它过誉，它始终是我心中硬科幻的代表。而《午夜凶铃》病毒和DNA的战斗，生命的真正起源，精神和遗传信息的相互影响，从与宏观对立统一的微观入手，写出了我心中软科幻该有的样子。 《午夜凶铃》还融入了悬疑和推理的元素，主角面对超自然力量时仍能智商在线，这一点很像死亡笔记里的L，死亡笔记的拥泵们应该知道L基于现实进行做超出常识外的推理有多么迷人。 作者铃木光司的文风有些像夏目漱石的《老师》，压抑的故事和清新活泼的笔触没有什么违和感。嗯，正像书里的一个情节，空气里淡淡的柠檬清香总和可怕的灾祸同时出现。 这本书带给了我一些只有过去才有的感觉。 现在的我，书籍的获取已经毫无难度，用心的对待一本书？已经没有客观的土壤支持这种心态了。声光形色在爆炸，各种信息噪音充斥掺杂在一起，人的情绪阈值在其中被极度拔高。愤怒焦躁占据了大部分时间，目的而不是兴趣成为了事情的主要驱动力。 这是信息过载的大环境造成的结果，很难逆转。 但这本书的第三部让我很短暂的回忆起了，六岁时看《射雕英雄传》，初中时看《多情剑客无情剑》，高中时看《三体》的感觉。手中翻着书，心里充满了虔诚。那时拿到书很不容易，因而会倍加珍惜。书在书柜里放的时间长了，书页里的树木古朴味儿会和油墨的香味融合在一起，把脸埋在书里时，心会沉静。打开书的时候，就翻开了一页页空间，也看过了过去的时间。隔着时空，我能和作者和书中的人物对话。 屏住呼吸，小心翼翼，心脏在胸腔里砰砰直跳，能感觉到血液缓缓的流动。故事能带给人的惊喜和感动，我希望不要永远失去。]]></content>
      <tags>
        <tag>读书</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu学习整理]]></title>
    <url>%2FUbuntu%E5%AD%A6%E4%B9%A0%E6%95%B4%E7%90%86.html</url>
    <content type="text"><![CDATA[考虑我对自己的定位，Linux对我而言始终是一个工具，基于项目需求，我可能会接触网络编程和服务器架构的知识，但源码学习等更深入的，不会在我的未来计划之内，以这样的态度我进行了学习整理。想深入学习核心还是要进一步打好基础，不过话说回来，人生苦短，先博观一遍，入手再谈，也是很好的学习技巧。 Linux学习原则 初期linux学习出错是很正常的，基本是每个操作都离不开Google，现在的我依然是，好处是每天都能给自己一点微弱的成就感。 askUbuntu是一个很好的学习网站，但还是多用Google吧。 Ubuntu建议还是用16.04稳定版本，不要盲目追求新版本瞎折腾，时间是宝贵的。 用Ubuntu系统只是因为它更适用于开发，相比Windows系统它有非常多的缺点，牢牢记得是你使用系统，而不是让系统绑架你。 只要能做到时常去用，其余一切都好说 Ubuntu系统安装虚拟机安装 VmWare+Linux安装 密码：1d32系统安装 U盘最后用的制作工具是linux live usb installer。 在bios的boot里，HD hardware中选择从U盘启动，对于华硕还有其他的启动方案。 安装时的配置 点击。 第一次使用建议 对于拼音输入法的安装，参见Ubuntu安装输入法; 对于输入法的全拼半拼问题，在首选项里设置;ibus-daemon -drx 解决拼音中断的问题; 先学会最基本的几个Linux命令，即sudo、apt-get、cd、mkdir、ls等 在搜索里找到”Software Update…”,掌握这个软件的作用。 执行sudo apt-get update 出错时。 解决方案之一：更换源。 解决方案之二：sudo apt-get clean sudo apt-get update 解决方案之三：去掉other里的两个独立源。 解决方案之四：可能是DNS的问题 建议安装on-my-zsh。zsh比较好的主题是ys，字体14/16号Mono Italic最合适，斜体非常好看。 考虑用synaptic来进行安装包的管理，初期可以解决很多烦人问题。 使用wine可以获取win上的软件，这相当于另外一种意义上的虚拟机了。 使用shadowsocks搭梯子，github上搜索下，有完整的教程。 入门学习时优先关注的点 Linux的常用指令熟练，其他指令可以慢慢学习，命令行终究还是绕不开的。 了解/熟悉Ubuntu的目录架构，了解各目录的作用，比较其与Windows系统的异同。 学习Ubuntu下目录权限的知识，即读、写、执行的概念，了解怎么改变权限，了解权限的意义。 尽早学习怎么配置开发软件，关键还是在于使用，在使用中学习。 系统学习时可以关注的资源 《鸟哥的Linux私房菜》 特点：手把手教学，有丰富的例子。 《Linux可以这样学》 特点：侧重于Linux的设计哲学。 菜鸟教程-Linux 特点：基础、快速、易上手 网络编程 了解/掌握与计算机网络相关的指令]]></content>
      <tags>
        <tag>总结</tag>
        <tag>机器学习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[登楼]]></title>
    <url>%2F%E7%99%BB%E6%A5%BC.html</url>
    <content type="text"><![CDATA[几天前的中午，在太阳下行走，感觉每分每秒都是折磨。想起来了几年前的夏天，想起了登楼。那时也是这样的天气，那时是不同的心境。 （一）下午三点多，正是一天里最困的时候，也学不下去，就洗了把脸坐在七楼过道的椅子上休息。有风起，图书馆外的小湖里闪着揉碎的阳光，现在正是春天，湖岸旁很有生机。坐的时间久了，我起身关窗，不经意间看到了诚楼的楼顶，记忆像夏天的雨突然就下来了。 和楼顶结下不解之缘，不是在春天，而是在夏天。七月底，正是暑假。 关于夏天和暑假，你的记忆是什么？ 是永远不知累的蝉鸣，是风吹过葡萄树的沙沙声。是切开的半个西瓜，读了几遍的笑傲江湖，玩了无数次的魂斗罗。也是亚麻凉席和草籽枕头，是那个睡醒后顶着昏昏沉沉的脑袋去买饮料的午后。但现在，这记忆里加入了其他刻骨的东西。毒热的太阳，空荡的街道，各种类型的建筑物。 以及，一个活着的冰冷城市。 （二）想问各位一个问题，如何登上一栋楼的楼顶？ 找到负责人，说明来意，提供证明，从保安处拿到钥匙。可行吗？这方法很正统。但有一条数据，在七十多个我用这种方法调研的样本里，顺利的只有两例，成功率不足百分之三。 两年前，我参加了上海市绿化局的一个调研项目，调研对象是目标楼顶的情况。登上大楼的楼顶，或者说天台，并拍下照片，就是我的任务。开始的时候，我以为它很简单。但实际上一个人想探究一座城市的时候，这座城市就会变成一个张牙舞爪的怪物。钢筋水泥，门禁保安组成了它的外壳，人情，规则，冷漠相互交织组成了它的筋络。 想攻破它的外壳，顺着它的脉络俯视它的头顶？ 没那么容易。 （三） “伯伯您好，我是xx大学的学生。我们现在有一个绿化局和我们学校合作的项目，现在需要做一些前期调研工作。这是我的工作证和身份证，这是介绍信，您看一下，实在麻烦您了，谢谢。”这是我的开场白，现在看来很有学生的风格，敬语多，内容多，唯恐错过什么。 保安：“嗯嗯，但这个我做不了主哇，你去找物业。”物业负责人：“嗯啊，哪个？哦……绿化啊，行，你去找一下保安拿一下钥匙。”保安:：“钥匙？我不知道有钥匙？你还是去找物业。” 犹记得那栋楼比较矮，三层，十米左右。它就立在那里，但我却永远不能过去。我站在楼下，仰着头看了它几十分钟，天空在我眼里变幻成各种图像，最终还是决定放弃。 这次失败没有影响我太多，查了查昨晚搜集的资料，第二个目标是一所学校。学校钥匙肯定有备份吧，也是自己习惯的场景，应该会更好交流点，当时的我有这样的错觉。传达室里的保安叔叔大概五六十岁，翘着二郎腿，抱着搪瓷杯。我还是跟第一次一样的开场白。之后期待着对方善意的回应。但他像是被施了缓慢咒，慢慢睁开了眼睛，慢慢放下了杯子，慢慢说了一个字。 “滚” 我感觉我的血一下子冲到了头上。 那时的我依然没想到，这个情景远不是最后一次。 （四）如果我能从天空俯瞰这座城市，人也就成了几何意义上的点。有两个点一直呆在一起，嗯…这可能是一对恋人。这一堆点可能是一个班级，排列的很方正。这里还有一些点交错而过，各自划出完美的弧，是在溜冰吗？ 眼前的几何点，他们的经历，性格，此刻都被封装在一个黑箱内。社会由关系组成，人由利益连接。我很想知道，在以上的假设下，交流是偏善意的多还是偏恶意的多？抑或是善意和恶意都耗费心力，唯有冷漠才是稳定的状态？ 我回答不上来，也许是我不愿意承认心里的那个答案。 “你好，我是绿化市容局的，现在要针对你们这些公有机构做一些绿化调研工作。这是工作证，请尽量配合。不然之后工作出现麻烦和疏漏，你自己向你们领导解释，绿化局不再负责。”“你好，我来这小区是找我同学，我也不知道他在那里，我会往中间走走等他。”“你好，我有孩子到入托的年龄了，我可以看一下你们的幼儿园设施吗，只需要几分钟。” 不同楼顶，不同内容，不真不假，见人说人话，见鬼说鬼话。 这就是更合理的生存方式了。 （五）如果不能登顶，拍到它的全貌也可以，这是一个勉强的替代方案。 建筑物是死的，也是简单的。而人是活的，也是复杂的。对简单的建筑物，只需要考虑潜入，或者站在比它更高的楼上，寻找合适的视角拍摄。但对复杂的人，要交流，要周旋，要强行无视对方的恶意，要恐吓，要诱导，要把他们牵扯进利益。心力一天天被这样磨着，终于没了。所以，在调研进行到一半的时候，我的重心绕过了人，放在了建筑物上。 不同类型的建筑物需要不同的拍摄方案。 居民小区是城市的主体。要小心不让被当做小偷和骗子。如果被误会了，解释起来会很麻烦。关键在于时间点，中饭时间是最合适的，人流量大，而且可以跟随住户过门禁。 学校，幼儿园在暑期不开放，为了保护或者说限制学生，它们的围墙都很高。我不会去翻墙，那样违法，实在不值。但这种建筑物可以用谷歌地球锁定位置，调出卫星镜像，进行截图。现在这个世界，其实隐私真的不是什么。 银行，医院，商场，没有什么麻烦，可以大摇大摆的进去，因为开放的特性，它们常常被用来作为垫脚石。窗户确实是奇妙的元素，大且重的建筑物有了窗户灵动感就来了。我喜欢窗户，它们能提供拍摄视角。 派出所，政府楼，拍摄类似的建筑物要在暗中进行，不然会被追上来要求删除照片，应该是保密的要求。但对这些反而可以去考虑与人交涉，他们有流程，有规则，会冷漠但不会有没来由的恶意。 这也就够了。 （六）废弃的医院楼层里有电梯咔哒哒的声音，高温下的柏油路有噼里啪啦的爆裂声，中午一点时整个城市会沉默。 温度快到四十度了。 （七）在最后几天，我登上了一座危楼。 更准确的说，这是这一栋待拆迁的楼，灰色调的钢筋水泥在风中飘零。电视剧里，绑架犯被警察围住后，最喜欢往这种楼跑。 楼顶有一脚深的积水，也不知道是哪天下雨积起来的。我从楼梯间里捡了一些木板和石头，铺了一个简易的过桥。但还是没站到最高处，因为楼顶的另一半是一个大平台，我又花了半小时，用砖块垒了一个垫脚，手脚并用，爬了上去。 楼顶是一个个方块，像一个大型挖地雷的游戏，有几个已经boom炸开了。也没有护栏，站在四角拍摄的时候很担心脚下会炸掉，直接从五楼上掉下来。 其实这栋楼在被判定为危楼时就已经失去意义了，登上这座楼的楼顶，纯粹是心血来潮。拍完之后，我在楼沿上坐了下来，吹着风，看着我穿梭了一个多月的这个小区。 我想起这一个月里的怎么潜入，怎么伪装，怎么周旋，怎么压制，怎么装若无其事，怎么装凶恶样子。 这个暑假，结束了。]]></content>
      <tags>
        <tag>随笔</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[线性代数 | 向量空间]]></title>
    <url>%2F%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-%E5%90%91%E9%87%8F%E7%A9%BA%E9%97%B4.html</url>
    <content type="text"><![CDATA[向量空间是线性代数里最重要的概念，没有之一。它是后续许多知识的基础，也是帮助我们理解线性代数本质的重要工具。 向量空间概念空间在此指的是某种集合，空间存在的基础是需要满足规则。向量空间这样是一个集合，集合内的元素是向量，且集合内的向量相加和数乘之后仍在本集合内。即向量空间对加法和数乘封闭。 几个引申： 向量空间内必须有零向量。证：取空间内一向量$v$,进行数乘和加法$1v+(-1)v=0$,得证。 二维空间、三维空间是向量空间。证略。 所有过原点的直线以及零向量是二维空间的向量子空间。过原点的平面，过原点的直线以及零点是三维空间的向量子空间。 列空间和零空间向量空间内向量的加法和数乘有一种更经典的描述手段：线性组合。现在我们取列向量进行线性组合，其所有线性组合就构成了一个重要的向量空间，列空间。 列空间取一个列向量属于$R^4$空间的例子，(注：列向量有四个分量，所以属于四维空间),下面方程组$Ax=b$,$A$的列空间是$R^4$的子空间，事实上，取三个列向量线性组合，永远得不到四维空间。 \begin{bmatrix} {1}&{2}&{3}\\ {4}&{5}&{6}\\ {7}&{8}&{9}\\ {4}&{1}&{5} \end{bmatrix} \begin{bmatrix} {x_1}\\ {x_2}\\ {x_3}\end{bmatrix}= \begin{bmatrix} {b_1}\\ {b_2}\\ {b_3}\\ {b_4}\end{bmatrix} 现在将抽象概念和实际应用结合在一起。来分析方程组$Ax=b$是否对任意b都有解。直观的感觉来看，四个方程有三个未知数，大多数情况无解。但也有情况有解，即b是A的各列的线性组合时，此时b在A的列空间里，Ax=b有解。 继续考虑，如果对这三列线性组合，它们是组成四维空间里的三维子空间，还是更小的空间？在本例中，去掉列三是没影响的。因为列三可以通过线性组合出来，所以它不做贡献。因此这里是四维空间$R^4$的二维子空间(没错，实际的几何形状就是个平面)。 零空间 我们仍然用上文的矩阵举例。令$b=0,Ax = 0$我们关注x向量，x在此例中是$R^3$的子空间(注：x有三个分量)。列空间是$R^4$的子空间，在本例中零向量在零空间里，$(1,1,-1)$也是解。综合起来既是$c(1,1,-1)$, 用图像来表示的话是一条直线，即这里的零空间是$R^3$的一维子空间，即是一条直线。 $Ax=0$的解构成一个子空间。证明： 对于一个解$x$和$x_1$, 其对加法和数乘封闭。 $Ax = 0$且$Ax_1=0$. 则$A(x+x_1)=0$,$A(kx)=0$ 假设改变了b，从而导致所有的解x中不包含零向量的话，解x就不可能是向量空间，这些解组成一个不过原点的平面，或者不过原点的直线。我们始终是强调应该过原点的。 Ax = 0 主变量 特解一般通过对A矩阵进行消元求解，如下图,矩阵A是长方形矩阵,对其进行消元。注意在消元过程中零空间不变，改变的是列空间。 第二个本应是主元的位置此时是0，这说明第二列和它前面的列线性相关。最后得到阶梯形式的矩阵U，主元的数量是2，这就是矩阵的秩。有主元（红框）的列是主列，其他是自由列。自由对应计算是可以对对应的x任意分配数据，一般是0,1。另外指，它可以由主列组合起来。 消元后变成Ux = 0寻找主列。对自由列，先随意选取两个数字（1,0） 然后进行回带，算出解，再取（0,1）算 出解。因为分配了特定值，所以是特解。再通过线性组合就得到了该方程的全部解。 指的注意的是，U还能继续简化 在MATLAB中用矩阵rref可以完成这个问题。我们交汇主行和主列，能得到一个单位阵，不在交汇中的列称为自由列。原方程组Ax=0，中间方程组Ux =0，最后Rx=0 我们再用代数推导一下这个过程 Ax = b 解的结构 算法 解的结构：唯一解还是无穷多解。 有解b要满足的条件：b属于A的列空间（是A中各列的线性组合） 算法：第一步，求特殊解。将所有自由变量设为0（因为可以随便选，选0是最方便的），解出主变量。第二步，加上零空间的所有向量。 最终解：特征解+所有零空间的解（通解）。 对于上文例子，有两个自由变量，所以解的形式 $x* +{c_1}{x_1}+{c_2}{x_2}$,解的图像是过原点的平面（零空间）平移得来的，AX=b的解空间不是向量空间 秩与解的关系秩r为m*n的矩阵A，当前秩被定义为主元的个数。从主行的角度看，r必然小于等于m，从主列的角度看，r也必然小于等于n。 列满秩列满秩表示r = n。它的应用场景可以直观理解为那种长条矩阵。这对方程的解意味着，每一列都有主元，那么主变量n个，自由变量0个，因为没有其他自由变量可以赋值，零空间中只有零向量。则对于Ax=b的解要么只有一个特解，要么无解（b在零空间时才有一个解）。下面举一个例子。 [1 2 2 5 ；3 1 1 1] 两列线性无关，其秩是2，其行最简形式是[1 0 0 0；0 1 0 0],零空间只有零向量。对于Ax = b，4个方程，2个未知数，不可能任何情况都有解的，b在其线性组合内时才有解。 行满秩行满秩表示为r = m，此时有m个主元，每一行都有主元，消元时不会出现零行，则可以得出对任意b，Ax=b都有解。 一开始有n个变量，有r（m）个主变量，所以自由变量是n-r（n-m）个。其行最简形，前r列是主列，组成了单元矩阵。因为总有零空间去处理，一般是无数解。 满秩方阵r = m = n, 满秩方阵，这是一个可逆方阵。其行最简形R= I真正好的矩阵化简后得到单位阵。其零空间只有零向量，b任何条件不需要满足，这种情况肯定有解，且解唯一。 总结矩阵的秩决定了方程组解的数目，秩r包含了所有的信息。 r = m = n 满秩方阵。行最简形为R=I，有一个唯一解。 r = n &lt; m 列满秩，行最简形$R=\begin{bmatrix} {I}\\{0}\end{bmatrix}$此时无解或者唯一个解（取决于b在不在那个列空间中） r = m &lt; n 行满秩。 行最简形 $R= \begin{bmatrix} {I}&amp;{F}\end{bmatrix}$。总有解，因为最下面没有零行，所以有唯一解或者无穷多解。因为总有零空间去处理，一般应该是无穷多解。 r &lt; m 且 r &lt; n 行最简形。$R=\begin{bmatrix}{I}&amp;{F}\\{0}&amp;{0}\end{bmatrix}$无解或者无穷解。 线性相关性首先要说明的是，我们说向量组是线性无关的，而不是矩阵线性无关。我们说向量组的基，而不是矩阵的基。 线性无关定义如果不存在线性组合结果为零的组合，向量组线性无关 扩展1如果向量组中存在一个零向量，它们不可能线性无关。证明略。 扩展2平面内任意三个向量都是线性相关的。证明代数法。构造一个矩阵A，各列分别是平面内向量，构造一个2X3的矩阵，对于这个矩阵我们可以找到自由变量， 因而存在列向量C$[c_1,c_2,c_3]$有非零解，使得$AC=0$换句话说，向量组是否线性相关，和零空间是否有零向量之外的向量有关。 与零空间的关系向量组线性无关，零空间里只有零向量。线性相关，则零空间内存在一些向量c。 与秩的关系列向量组线性无关时，秩就是n，所有列都是主列。自由列的本质是对主列的一种组合， 在线性相关时，秩小于n，有自由变量，有相应的非零组合，零空间里有其他向量。 生成空间定义$v_1,v_2…v_n$ S指的是包含这些向量所有线性组合的最小一个空间。我们关注这样的向量组，既可以生成空间，又是线性无关，这样的一组向量称为基。 基的定义指的是一系列向量（个数足够又不太多），特性一：线性无关。特性二：能生成整个空间。 example1给一组三维空间的基 ，$(1，0，0) (0，1，0) (0，0，1)$，它们线性无关，因为单位阵乘以特定向量得到0的情况只有一种，就是乘以一个零向量。即单位阵的零空间只有零向量。 example2$(1，1，2)(2，2，5)$不能形成三维空间，其是列空间的基，形成R3中的一个平面。需要再加一个特定向量才能形成三维空间，但不能加$[3,3,7]$，因为加入之后三者共面，只要取不在这平面上的任意向量就像，比如[3,4,8] 。 想确定确定它们构成基，可以把它们组合成矩阵消元，看是否都是主列。 example3如果空间是$R^n$，则形成这个空间所需要的基向量的个数是n个。 $R^n$空间的n个向量如果想构成基，那这个$n*n$的矩阵要满足可逆条件。 维数的定义对于特定空间，比如$R^3、R^n$列空间、零空间，其基向量的个数都相同。个数表示此空间的大小。称之为维数。维数等于矩阵秩的数目，等于主列的数目。 零空间的维数是自由变量的数目。已知秩r，m*n矩阵，即维数n-r 四个基本子空间(核心章节)四个基本子空间：零空间$N(A)$，列空间$C(A)$，行空间$R(A)$= $C(A^T)$,A转置的零空间$N(AT)$，又称为A的左零空间。这里可以专门处理列空间。以下假设A是m*n矩阵。则有如下结论。 行空间在n维实空间里，维数是r，一组基是行最简形的前r行(秩数行)。 零空间在n维实空间里，维数是n-r，一组基是特殊解。(特殊解是在零空间中，每个自由变量可以得到一个特殊解) 列空间在m维实空间里，维数是r，一组基是r的主列。 左零空间在m维实空间,维数是m-r，一组基是特殊解 它们的关系如下图所示，这里把空间画成垂直的是有特别的含义的，代表着正交，互相垂直的两个空间，维数之和又和行数、列数一一对应，相当于行空间和零空间分割了n维空间，真是奇妙。 以下图为核心进行分析 行空间经过初等行变换后，形成单位阵，自由列，全零行的组合，注意R的列空间和A的列空间不同（R是A转变的），但行空间不发生改变（改变后的最简形的行也是线性组合得出来的），所以其基是前r列。 左零空间$A^Ty=0$ ，y就在左零空间里。两边转置，$y^TA=0^T$，$y^T$是一个行向量，因此也叫做左零空间。由A求最简形R，一般做法是构造矩阵[A,I]对前面一部分消元，得到R，I记录了行变换，变成了E。所有这些初等行变化等价于左乘一个E，即$EA = R$。对照左零空间的变换式，想找的是让行空间产生全零的向量，而这个向量可以通过E得到，进而得到左零空间的维数，在本个例子，它是E的最后一行，这个左零空间维数是1。 不必掌握四个空间的推导，我的习惯是掌握列空间和零空间的定义，另外两个空间只是对应的转置而已。 矩阵空间(待续)]]></content>
      <tags>
        <tag>机器学习</tag>
        <tag>线性代数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[走路]]></title>
    <url>%2F%E5%9C%A8%E8%B7%AF%E4%B8%8A.html</url>
    <content type="text"><![CDATA[一个男人要走过多少路，才能被称作男人 - -鲍勃迪伦。这是《龙族V》的第一章，我看到它才想起了它。 假设我变成了全知全能的上帝，俯瞰我到目前为止的人生，光阴长河中每个时间我都会在一个点，连接不同的点就是路。 这条线粗一些，应当是小学走过的路，六年，一千遍，单程十五分钟，那时总嫌回家太慢，心里默默数着到家需要的步数，数着数着就跑了起来，拐了一个弯又下了一个坡，离午饭和动画片也越来越近了。长大后我重新踏上那条走过无数遍的路，无他，唯有回想那时在想什么而已。十多年过去了土路铺上了水泥，沟渠修补后变得更结实，但我却不敢再在上面跑，也不敢再闭着眼走了。两旁的麦田倒还没变，风吹起时依然是浪花滚滚。 这边一条细线有阴郁的黑色，应该是一次从宝丰聚餐后回家的路。因为正处于大三，医学、德语、汽车专业课三方会战，一年下来，憔悴不堪，于是在见面时被几次善意调侃。下午无处可去，相约去KTV唱歌，我五音不全，历来都是坐在角落吃各种零食碎嘴，含笑听着，但最亲密的朋友还是让我唱，拒绝的次数多了就显得我过于格格不入，拿起话筒唱了什么歌忘记了，只记得搞笑且心酸的心境。那晚回到城里，天已沾黑，公交停班，手机没电没法让父母接我，心里也有一股莫名的意气在，于是打算走着回家，大致十公里的路，两边是静静站着的玉米和稀落的露出微光的房子，身后大卡车轰隆隆地驶过来，车灯的光切开黑暗又消失在夜中。我在路上走着，平静的与自己对话。我问自己是否与班级格格不入，问最亲密的一群人之间是否也要有那些酒文化的规矩，问自己是否过于敏感，对别人的善意调侃反应太过。那次问路于己并没有得出答案，只记得暗暗起誓，从此再也不去KTV。 这边也有一条细长近乎于无色的线，那是从爸爸新工作的地方回家那次，手机没电无法定位，又因为地处之偏近乎于山，这对我而言是完全陌生的地方。问路上阿婆情况，在得到三里路的答案后，甩开袖子上路，路旁都是参天杨树，只有很少的人，我走到天黑，走到月亮升起，走到腿疼又不疼又疼，走到大学到小学同学在我脑海里轮番登场一次，走到天荒地老。回来后查地图，才发现约莫有二十公里。我每次想到这次走路，就会有一种战栗的警醒，它太像我现在甚至以后的人生。从一个陌生的地点出发，目标是回到自己的熟悉区，路上不断安慰自己下一分钟就该看到熟悉的路口，但实际上是一次又一次的失望，中间几次躁动不安，但终究变得平静，一步步朝着不知还要走多久的终点，埋头前行。 还有那十几个小时的绿皮火车，硬座是很折磨人的东西，一路都得和困倦战斗，几年来我想了无数方式，看喜剧电影，读悬疑小说，观车内人物百态，或者盯着窗外看一闪而过的风景。等到夜深人静时，整个车厢里都安静了，每个人都会有自己的睡姿。不管再怎么别扭，自己也会沉沉睡过去了。等到天明，若是归家，接下来就是长途大巴，若是回校，则是漫漫地铁。旅程始终没有终点，结束也是才刚开始而已。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据可视化 | 工具]]></title>
    <url>%2F%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-%E5%B7%A5%E5%85%B7.html</url>
    <content type="text"><![CDATA[设计静态数据图，需要R和Illustrator。想创建可交互图表，可以试试JavaScript和Flash。数据可视化始终是离不开工具的。 这是数据可视化整理的第二篇，历史文章如下表。数据可视化 | 开篇 开箱即用的工具这些工具只需鼠标操作无疑十分便捷，但随之而来的却是丧失一定的灵活性。而且不能自动化你的工作流程。 Excel。 Excel虽然不适用于深度分析，但可以用它快速处理一些小型数据帮忙找到直觉。 Google Spreadsheets。相当于Excel的云版本，但有共享优势，且提供了众多图表类型。 Many Eyes。可识别csv文件。擅长处理大型数据集，可视化数据图是可交互的。有单词云和单词树等不断创新的可视化操作。 Tableau Software。 提供了许多可视化交互工具，在数据管理方面表现良好。 编程工具不同语言之间是有取舍的，有些语言善于处理大量数据，有的擅长提供更好的视觉效果，有的擅长提供交互功能，最终还是看你的诉求是什么。至于学习，可以专精一道，也可以遍地开花，学习新语法可是很有趣的。 Python。 善于处理大批量数据；语法易学易读；美学方面一般。 PHP。 开源且在Web上预装，易使用；GD图形库、Sparkline库功能强大；一般和MySQL联合使用。 Processing。 适合于设计师与数据艺术家的开源语言；能快速上手，轻量级；要使用Java； Flash和ActionScript。 网上大多数可交互的动画数据图都是通过其开发的；Flash设计图形，ActionScript控制交互；ActionScript安装和代码组织较困难。 HTML、 JavaScript和CSS。 类似于Flash和ActionScript的功能；相比上面有更多的开源库； R。 图形功能强大，统计学家喜欢；工具包较多；不适合动态网页；在搜索时建议用“r-project”作为关键词。 学习编程消耗的主要是时间资源，但掌握了以后这会给你带来无穷的好处，编程技巧会随着每一次的项目飞速提高。 绘图软件绘图软件的优势在于你可以更好地控制单个元素，而且只需要鼠标操作。你可以随心所欲地改变柱形图的颜色、调整坐标轴的宽度或者添加注释。 Adobe Illustrator。 AI是设计业界的标准；使用矢量图形，不易失真；丰富的（灵活的）功能带来了丰富的界面；价格昂贵（有破解版） Inkscape。 是AI的免费开源版本。 地图绘制工具 Google、Microsoft地图。最容易的在线工具，不过需要一定的编程技巧；提供了基于js和Flash的API以及一些其他地理相关服务；有充足的教程和代码片段。 ArcGIS。桌面地图软件，可以在用户界面里完成所有工作，不用写代码；可以处理大量数据；是专业的地图工具。 Modest Maps。 由Falsh和ActionScript区块拼接地图函数库，且支持Python；更像是一个框架，方便创建在线地图；免费； Polymaps。 像JavaScript版本的Modest Maps；相比后者只能进行基础地图绘制，Polymaps提供了一些内置功能；更轻便，所需代码更少，可在浏览器内原生运行。 R。提供的工具包可以绘制地图；相关文档不详细，只在数据简单时用它创建地图。 在线工具。类似简化版ArcGIS；免费的有Many Eyes和Geocommons，可处理shapefile和KML等常见地理文件格式。付费的有Indiemapper和SpatialKey，前者更适合制图员和设计师，后者适合业务分析和决策制定。 总的来说，ArcGIS功能丰富，但只需要创建简单地图就不需要去学习复杂界面。如果希望创建在线的，可选Modest Maps和Polymaps，只不过需要更高编程技能。很多人习惯使用一个软件，但真正能解决各种问题还是需要混合使用，没有哪个是通用的。另外，只有动手操作才能进步，一直停留在理论阶段是很蠢的。]]></content>
      <tags>
        <tag>工具</tag>
        <tag>数据可视化</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[言不可及 | 寝室遐思]]></title>
    <url>%2F%E5%AF%9D%E5%AE%A4%E9%81%90%E6%80%9D.html</url>
    <content type="text"><![CDATA[在这样的雨夜里，过去和现在总是会绕在脑海里，分不清，辨不明，有点温馨，有点平静。 嘉定初夏的夜晚，室外的温度二十四五度的样子，有一点风，阳台外蛙声虫声一片。 好久没有五感如此清晰的时刻了，斜对面室友的桌面很凌乱，台灯的光下像一副抽象画，另一个室友在刷牙，电动牙刷的声音很好听，像海上长鸣的汽笛，又像遥远的火车轰鸣。 这声音总让我想起小时候。那时候爷爷奶奶在铁路站工作，每次火车来了，我就跑出去想数清火车有多少节。回来后爷爷总会问我”有多少节呀” 我总是随便编一个数字”43节”，爷爷说”对！”之后我们俩就对着哈哈大笑。我到现在也不知道到底是不是四十三节，我到现在也没问。 过了好几年，他不在铁路站工作了，我也上了初中，时光总是流的很快，童年更是一眨眼间。 爷爷很喜欢看节目，但他有选择困难症，打开电视后，节目调来调去不带停的，每个节目平均停留时间一般只有几十秒，他对节目总是很挑剔。但某天我发现他竟然对少儿频道有所偏爱。观察过几次后，我看到了真相，他只是对一个节目有所偏爱罢了。托马斯和他的朋友们，讲的是一个小火车的故事。 那时距离他离开火车站已经有八年。那时离这时也大概八年。那时的他坐在沙发上看着小火车，这时的我躺在床上写着那时候，我们都沉浸在过去里，沉浸在追忆里，沉浸在那种不可言说的情绪里。 我现在的怀念里有六十多岁呵呵笑的他，他那时的回忆里应该也有十几岁哈哈笑的我吧。 在这样的雨夜里，过去和现在总是会绕在脑海里，分不清，辨不明，有点温馨，有点平静。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DeepTest-面向深度学习的测试]]></title>
    <url>%2FDeepTest-%E9%9D%A2%E5%90%91%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E6%B5%8B%E8%AF%95.html</url>
    <content type="text"><![CDATA[这是一篇非常优秀的论文，主要论述了面向基于深度学习的自动驾驶系统的测试方法。内容较为丰富，展开很有条理，稍微有一些深度学习和自动驾驶的基础就能读懂。作者观点也极有启发性，很多都可以作为以后科研的灵感。因此我翻译了这篇论文，希望能和大家多多交流。 摘要最近，深度神经网络(DNN)的发展促进了由DNN驱动的自动驾驶汽车的发展，使用像照相机、激光雷达等传感器可以在不需要人工干预的情况下开车。包括特斯拉(Tesla)、通用汽车(GM)、福特(Ford)、宝马(BMW)和Waymo/谷歌在内的大多数主要制造商都在研发和测试不同类型的自动驾驶汽车。包括加州、德克萨斯和纽约在内的几个州的立法者通过了新的立法，以快速跟踪在道路上测试和部署自动驾驶车辆的过程。 然而，尽管已经取得了惊人的进步，但与传统软件一样，DNN往往表现出不正确或意想不到的个别案例行为，这可能导致潜在的致命冲突。在真实世界里已经发生了一些相关事故，其中包括一个导致死亡的事故。大多数现有的基于DNN驱动的车辆的测试技术都严重依赖于不同驾驶条件下的测试数据的手动采集，随着对测试条件需求增加，资源的压力越发变大。 在本文中，我们设计、实现和评估了DeepTest，这是一种系统的测试工具，用于自动检测可能导致致命事故的DNN驱动的车辆的错误行为。我们的工具利用现实世界的变化，例如雨、雾、光照条件等来自动生成测试用例。DeepTest通过生成能最大化激活神经元的数量的测试输入来系统地探索DNN逻辑的不同部分。DeepTest在不同的现实驾驶条件下(例如，模糊、下雨、雾等)找到了数千种能导致DNN出错的行为，其中许多导致了在Udacity自动驾驶汽车挑战中三个顶级的DNN潜在的致命事故。 关键字 深度学习，测试，自动驾驶汽车，深层神经网络，自动驾驶汽车，神经元覆盖。 介绍在过去的10年里，像DNN这样的机器学习技术的进步使得像自动驾驶汽车这样的安全关键的ML系统得以发展。包括特斯拉(Tesla)、通用汽车(GM)、福特(Ford)、宝马(BMW)和Waymo在内的几家主要汽车制造商都在积极测试这些车型。最近的研究结果显示，自动驾驶汽车在实践中已经取得了很多进展，在没有任何人类干预的情况下已经行驶了数百万英里。包括加利福尼亚、德克萨斯和纽约在内的20个州最近也通过了一项法案，允许自动驾驶车辆的测试和部署。 然而，尽管取得了巨大的进步，但就像传统的软件一样，基于DNN的软件，包括用于自动驾驶的软件，经常会显示出不正确/意想不到的行为，从而导致危险的后果，比如致命的碰撞。例如，致命的特斯拉撞车事故是由于未能在明亮的天空中发现一辆白色卡车。现有的检测这些错误行为的机制，很大程度上依赖于手工收集标记的测试数据或特定的、不受控的模拟（unguided simulations）因此忽略了大量的个别案例。由于这些汽车根据不同的传感器(如相机、红外障碍探测器等)对其环境的适应行为，可能输入的空间非常大。因此，不受控的模拟很难找到许多错误行为。 在概念层面上，基于DNN的软件中的这些边缘错误用例（corner-case）类似于传统软件中的逻辑错误。与传统软件开发中的bug检测和补丁周期类似，一旦检测到DNNs的错误行为，可以通过将错误诱导输入添加到训练数据集，并进一步改变模型结构/参数，从而使其失效。然而，这是一个具有挑战性的问题，如谷歌和特斯拉这样的大型软件公司所指出的，他们已经在包括自动驾驶汽车、语音识别、图像搜索等在内的几个生产规模系统中部署了机器学习技术。 我们使用传统软件的经验表明，只使用手工测试用例构建健壮的安全系统是困难的。此外，传统软件和基于DNN的软件的内部结构也存在着根本性的差异。例如，传统的软件程序逻辑是由软件开发人员手工编写的，而基于DNN的软件会自动从大量的数据中学习它的逻辑，并以最少的人为指导。此外，传统程序的逻辑是用控制流语句来表示的，而DNNs在不同的神经元之间的边缘使用权值，而非线性激活函数则用于类似的目的。这些差异使得基于DNN的软件的自动化测试具有一些有趣和新颖的研究问题。 首先，传统的软件测试技术通过最大化分支/代码覆盖率来系统地探索程序逻辑的不同部分，这对于基于dnn的软件来说是不太有用的，因为其内在逻辑没有使用控制流进行编码[70]。 其次，DNNs与用于建模和测试传统程序的模型有本质的不同。跟传统的模型不同，由于DNNs所模拟的函数的非线性的，在DNN中寻找导致高模型覆盖的输入是更具挑战性的。 另外，已经成功地解决 为传统软件生成高覆盖率测试输入的模块理论(SMT)求解器在涉及浮点算术和高度非线性约束的公式中问题很乏，而这些公式恰巧通常用于DNNs。事实上，已经有几个研究项目已经尝试建立定制工具来正式验证DNNs的安全性能。不幸的是，它们中没有一个能很好地适应真实世界的DNNs[48, 51, 71]。 最后，手动为复杂的DNN系统(比如自动驾驶汽车)创建专门的代码是不可行的，因为逻辑太复杂，无法手工编码，因为它涉及到模拟人类驱动程序的逻辑。 在本文中，我们讨论了这些问题并设计了一套系统的测试方法，用于自动检测无人驾驶汽车的基于DNN的软件的错误行为。 首先，我们利用了神经元覆盖的概念。，通过一组测试输入激发的神经元数量，系统地探索DNN逻辑的不同部分。我们从经验上证明，神经元的覆盖率变化与自动驾驶汽车(如转向角)的变化有统计学关联。因此，神经元的覆盖可以作为某种指导机制系统探索不同类型汽车行为和识别错误行为。 接下来，我们演示了不同的图像转换，比如改变对比度/亮度，相机的旋转，以此模拟现实世界在驾驶条件上的差异，这会导致自动驾驶汽车DNNs中不同神经元的激活。我们表明，通过将这些图像转换结合起来，与人工测试输入的覆盖率相比，神经元的覆盖率可以提高。 最后，我们在测试的DNN的多次实验之间使用转换特定变形关系（例如，汽车在不同的照明条件下应该表现相似），以自动检测错误的转角行为。 在Udacity自动驾驶汽车挑战赛中，我们发现在三个顶级的DNNs中有数千个错误行为。 本文的主要贡献是: 针对围绕安全的DNN的系统(如自动汽车)，我们提出了一种系统的技术，可以自动生成最大化神经元的覆盖的测试用例。我们通过经验证明，神经元的覆盖变化与自动驾驶汽车的行为变化相关。 我们说明了不同的现实图像转换，例如对比度的变化，雾的存在等，可以用来生成增加神经元覆盖率的合成测试用例。我们利用特定关系来自动检测错误行为。我们的实验还表明，合成图像可以用于再训练，并使DNNs对表现出更好的转向效果。 我们在DeepTest中应用了我们所提出的技术，系统地测试了Udacity驱动挑战中的三个顶级DNN模型，发现了数千种错误行为，其中许多错误行为可能导致潜在的致命冲突，如图1所示。 背景自主驾驶深度学习自动车辆的关键部件是由底层深层神经网络(DNN)控制的感知模块。DNN接收来自不同传感器的输入，如相机、光探测和测距传感器(LiDAR)和红外传感器，该传感器测量环境，输出转向角、制动等，以使汽车安全处于安全的低电流状态，如图2所示。本文重点讨论了摄像机输入和转向角输出。 一个典型的前馈DNN由多个处理层组成，它们叠加在一起以提取输入的不同表示。DNN的每一层都越来越抽象输入，例如，从原始像素到语义概念。例如，自动汽车DNN的前几层提取了一些低级特征，如边缘和方向，而较深的层则识别诸如停车标志和其他汽车等物体，而最后几层则输出转向决策(例如，向左或向右)。 DNN的每一层都由一个称为神经元的单个计算单元组成。不同层次的神经元通过边缘相互连接。每条边都有相应的权重(图2中所示)。每个神经元在其输入上应用一个非线性激活函数，并将输出发送给后续的神经元，如图2所示。受欢迎的激活函数包括ReLU(整流线性单元)，sigmoid等。DNN的边权值在DNN的训练过程中根据标记的训练数据进行推断。大多数现有的DNNs都是通过反向传播的梯度下降来训练的。一旦训练完毕，DNN可以用于预测，而不会对权重进行任何进一步的改变。 图2展示了自动驾驶汽车感知模块中的一个基本DNN。本质上，DNN是一个线性变换(例如，每条边的权重参数之间的点积和该边缘的源神经元的输出值)和非线性激活(例如，每个神经元中的ReLU)的序列。最近的研究结果表明，经过良好训练的DNN f可以准确地预测与人类驾驶员接近的转向角。 不同DNN的架构自动车辆中使用的大多数DNNs可以分为两类:前馈卷积神经网络(CNN)和**递归神经网络(RNN)。我们测试的DNNs(见第4节)包括两个CNN和一个RNN。我们提供了下面每个架构的简要描述。 CNN的架构一个CNN和一个完全连接的DNN之间最大的区别就是一个卷积层的存在。卷积层的神经元只连接到下一层的某些神经元，而不同神经元之间的多重连接也有相同的权重。共享相同权重的连接的集合本质上是一个卷积核。它对上一层的一组神经元的输出应用相同的卷积运算。图3(上一行)演示了三个卷积层的卷积运算。这种简化的体系结构与实践中使用的体系结构类似。 卷积层有两个主要好处。首先，他们通过允许在多个连接之间共享权重，从而极大地减少了可训练的重量，从而显著缩短了训练时间。第二，卷积核的应用是一种自然的图像识别技术，因为它类似于人类视觉系统，它提取视觉输入的分层表示。 RNN的架构与CNN不同，RNN允许在网络中循环。具体地说，每一层的输出不仅被馈送到下一层，而且还流回上一层。这样的安排使先前输入的预测输出(例如，视频序列的先前帧)也能被考虑用于预测当前输入。图3(下一行)演示了一个简化版本的RNN架构。与其他类型的DNN类似，RNN也利用梯度下降和反向传播进行训练。然而，众所周知，当在RNN中通过多个循环传播时，梯度可能会消失到零或爆炸到非常大的值，因此可能导致一个不准确的模型。长短时记忆(LSTM)，一种流行的RNN子群，旨在解决这个消失/爆炸的梯度问题。 方法我们简要地描述了DeepTest是如何处理下面这些问题的。 如何系统地探索无人驾驶汽车DNN的输入-输出空间? 如何综合现有的实际输入来实现自动化的探索? 如何优化这个过程? 自动创建一个可以检测错误行为的测试oracle，而不需要详细的手工指定? 神经元覆盖的系统测试。输入输出空间(即一个复杂系统的输入和输出的所有可能的组合）对自动车辆穷尽的探索来说不可能。因此，我们必须设计一种系统的方法，将空间划分为不同的等价类，并通过从每个等价类中选取一个样本来试图覆盖所有等价类。在本文中，我们利用神经元的覆盖率作为一种机制来划分输入空间，假设所有具有相似神经元覆盖的输入都属于相同的等价类。 神经元的覆盖最初是由Pei等人提出的，用于对多个相似的DNN进行导差测试。它被定义在给定输入下，被激活的神经元DNN中神经元的总数量唯一的比值。 如果神经元的输出(由整体层的输出按比例放大)大于dnn的阈值，则认为单个神经元被激活。在本文中，我们使用0.2作为我们所有实验的神经元激活阈值。 与传统软件的代码覆盖导向测试工具类似，DeepTest试图生成能最大限度地增加测试DNN的神经元覆盖率的输入。因为每个神经元的输出影响都会影响DNN的最终输出，最大化神经元的覆盖也会增加输出的多样性。我们在第5节中实证地证明了这一效应。 Pei等人对神经元的覆盖范围仅限于CNN。我们把定义进一步推广到了了包括RNNs在内依赖于对应层的类型的神经元，可以产生不同类型的输出值(即在多维数组中组织的单个值和多个值)。 对于全连接层中的所有神经元，我们可以直接将它们的输出与神经元激活阈值进行比较，因为这些神经元输出单个标量值。 相比之下，因为每个神经元在输入空间里都应用了卷积核卷积层中的神经元输出多维特征映射。 例如，图3.1中的第一层说明了在整个图像（5×5）上应用一个卷积核（大小为3×3），在后续图层中生成大小为3×3的特征映射。 在这种情况下，我们计算输出特征映射的平均值，将神经元的多维输出转换为标量，并将其与神经元激活阈值进行比较。 对于带循环的RNN / LSTM，中间神经元展开产生一系列输出（图3.2）。 为了神经元覆盖计算的目的，我们将展开层中的每个神经元视为单独的神经元。 增加合成图像的覆盖率如果输入不太可能出现在真实世界中，即使这些输入可能表现出错误行为，那么生成最大化神经元覆盖率的输入可能也不是很有用。 因此，DeepTest专注于通过在种子图像上应用图像转换来生成逼真的合成图像，并模拟不同的现实世界现象，例如相机镜头失真，物体移动，不同的天气条件等。为此，我们调查了九种不同的真实图像转换 亮度，对比度变化，平移，缩放，水平剪切，旋转，模糊，雾气效果和雨水效果）。 这些转换可以分为三组：线性，仿射，和卷积。 正如第5节所述，我们的实验结果表明，所有这些转化都会显着增加神经元对所有测试DNNs的覆盖率。下面，我们将描述转换的细节。 调整亮度和对比度都是线性变换。 图像的亮度取决于该图像的像素值有多大。 图像的亮度可以通过对每个像素的当前值加/减一个常数参数β来调节。 对比度表示图像中不同像素之间亮度的差异。 可以通过将每个像素值乘以恒定参数α来调整图像的对比度。 平移，缩放，水平剪切和旋转都是不同类型的仿射变换。 一个仿射变换是两个图像之间的线性映射（旋转+平移）。 在图像处理中经常使用仿射变换来消除摄像机角度变化造成的失真。 在本文中，我们利用反转变换来反演，即模拟不同的真实世界相机视角或物体的移动，并检查自驱动DNN对这些变化的鲁棒性。 模糊和增加雾/雨效应都是卷积变换，即它们使用不同的变换特定内核对输入像素执行卷积运算。 卷积操作将输入图像的每个像素（由内核加权）添加到其本地邻居。 我们使用四种不同类型的模糊滤波器：平均，高斯，中位数和双边。 我们在输入图像上组合Adobe Photoshop提供的多个滤镜，以模拟逼真的雾和雨效应。 结合转换增加覆盖率单个图像变换增加神经元覆盖率，一个显而易见的问题是它们是否可以组合以进一步增加神经元覆盖率。 我们的研究结果表明，不同的图像转换倾向于激活不同的神经元，即它们可以堆叠在一起以进一步增加神经元覆盖。 但是，不同变换的所有可能组合的状态空间太大而无法彻底探索。 我们提供了神经元覆盖引导的贪婪搜索技术，可以有效地找到影像转换组合，从而获得更高的覆盖率（请参阅算法1） 该算法将一组种子图像I，变换列表T及其对应参数作为输入。 该算法背后的关键思想是跟踪成功增加给定图像的神经元覆盖范围的转换，并根据给定图像生成更多合成图像的优先次序。这个过程以深度第一的方式重复所有图像。 在测试基于DNN的复杂系统（如自动驾驶汽车）时面临的主要挑战之一是手动创建系统的规格/规范/格式，以便对系统的行为进行检查。为这样的系统创建详细的规范是具有挑战性的，因为它基本上涉及重建人类驾驶员的逻辑。 为了规避这个问题，我们利用在汽车行为在不同合成图像之间的变质关系(metamorphic relations)。这里的关键是，即使很难为每个转换后的图像指定自动驾驶汽车的正确行为，人们可以确定汽车面对某些类型的转换中时，所表现的行为之间的关系。例如，自动汽车的转向角度不应该在任何照明/天气条件下，模糊，或任何带有小参数值的仿射转换时，在相同的图像上变化。 因此，如果DNN模型推断输入种子图像$I_{o}$的转向角$\theta_{o}$和通过将变换$T$应用于$I_{o}$而生成的新合成图像It的转向角$\theta_{t}$，则可以定义简单的变形关系，其中$\theta_{o}$和$\theta_{o}$是相同的。 然而因为汽车可以安全地容忍小的变化，对于给定的图像通常没有单个正确的转向角度。 因此，非常严谨的地确定变质关系的话（如上所述）（可能导致大量误报）如果让关系更宽容（可能导致许多假阴性）之间存在权衡关系。 在本文中，我们通过使用下面定义的变形关系在这两个极端之间取得平衡。 为了最大限度地减少误报，我们放松我们的变形关系，并允许原始输入图像的误差范围内的变化。 我们观察到DNN模型对原始图像预测的输出集合${\theta_{o_{1}}，\theta_{o_{2}}，…，\theta_{o_{n}}}$，这里有一写是小的但有意义的的错误对于他们各自的手动标签${\theta_{1},\theta_{2}，…，\theta_{n}}$。 通常使用均方误差（MSE）来测量这样的误差， 利用这个属性，我们重新定义了一种新的变形关系 MSE_{orig}=\frac{1}{n}\sum_{i=1}^{n}(\hat\theta_{i}-\theta_{o_{i}})^2上述等式假设作为输入的变换图像的模型产生的误差应该在 由原始图像集产生的MSE的λ倍的范围内。 在这里，λ是一个易于理解的参数，可以让我们在假阳性和假阴性之间取得平衡. (\hat\theta_{i}-\theta_{o_{i}})^2]]></content>
      <tags>
        <tag>自动驾驶测试</tag>
        <tag>深度学习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[猫咪]]></title>
    <url>%2F%E7%8C%AB%E5%92%AA.html</url>
    <content type="text"><![CDATA[以后一定要和小燕子一起养一只猫的。 (一)从西苑吃饭回来，看见一只黄猫站在铁门旁边探出半边身子往外看，虎头虎脑的样子很可爱。我们不知道它在看什么，就稍稍留了下心。走过十步路左右，才看到蔓藤下面有一只小狗，耳朵软软的，爪子大大的，也是橘黄色，很庄重的蹲在那里，凝视着猫的眼神也很认真。那时候还是大二，跟老于他们相处的不能再愉快，一晃两年过去，再也没见到那么融洽的室友了。 昨天聚餐因为车展没去成，心里遗憾到发空。 (二)寝室楼前这只暗花的猫没有那几只橘猫疯，别的橘猫都不见影了，就它还是乖乖蹲在寝室门前，像小号的镇宅狮子。它很喜欢被摸下巴，被动下巴时会发出咕噜噜的声音，也喜欢用头追着你的手蹭，不过爪子总是站在原地一动不动，热情有了，高冷也还在。 晚上回来的时候看到它，我这张胖脸总会露出微笑。 (三)嘉定有一块儿地，是饮食区和学习区的枢纽，人流量很大，战略位置极为重要。这块儿地有个霸气的名字，名为新天地。新天地有一个霸气的领袖，就叫大胖猫好了。 这只喵近人但不缠人，它本来应该不是高冷的性格，但来来往往太多人的喜欢把它给惯坏了。呆在这块儿风水宝地，大胖根本不愁吃，它也不知道收敛着吃是什么，因而被路人喂成了一只球形猫。 有一天傍晚，我路过喷泉，看到一个女生坐在木椅上举着它的两只爪子把它抱在怀里，它很不情愿的站着，很无奈但又懒得动的样子。那个爱猫的女生很小只但猫咪很大只，有风起，寿司店旁边的树叶子落了一两片，那是我最想学习摄影的时候，因为有些美时间长了真的容易忘记。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶仿真论]]></title>
    <url>%2F%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E4%BB%BF%E7%9C%9F%E6%95%B4%E7%90%86.html</url>
    <content type="text"><![CDATA[自动驾驶技术面临的真正挑战来自于真实世界中的长尾效应。因此在部署产品前必须进行完备的自动驾驶测试。 而在整个自动驾驶测试流程中，仿真测试扮演着重要角色。以我的个人观点，仿真测试在“量”上应该占据百分之九十九点九九九以上的份额，从“质”上，仿真测试应该承担全部的边缘（危险）场景测试，以及典型场景的泛化测试。 仿真优势 相比通过在真实的道路上拍摄视频，仿真数据产生更快、成本更低。 在仿真中，注释很容易获得，因为能够较轻松地获得对象列表。 仿真可以提供大量的测试场景，极大的拓宽了测试的参数空间。比如，同济嘉定校区的天气条件有限。但在仿真中，可以给嘉定随时提供雨雪冰雹或其他东西。 仿真支持在很多不同的条件下使用相同的场景进行训练，相同条件下的重复试验可以更有效地帮助迭代算法。 在实际进行仿真训练时，单仿真图像的变异值和训练值一般低于单真实图像。现实世界中的光照、颜色和纹理变化都比仿真数据的要大，因此需要更多的仿真图像来实现合理的性能。关键就在于生成仿真图像只需要计算资源，一旦云基础设施就位，就可以生成任意数量的映像。从单个模拟的图像中不好得到更多价值，但质量可以通过数量补足，这是一种资源密集型的思路。 经过模拟训练的网络上更善于识别距离较远或难以看清的汽车等，也更善于避免误报。换句话说，它更善于处理极端（边缘）情况，这可能是因为这些仿真数据能为训练提供更多样化的输入。 仿真劣势计算机仿真有自己的局限性，因此对仿真结果的权威性我们应该持谨慎态度。仿真在某种程度上简化了真实世界，在模拟中能正常工作不能保证在现实中正常工作。 模拟世界与现实世界并不完全相同 模拟车辆（包括传感器、动力学模型等）与现实情况并不完全相同 很难模拟难以预测的(紧急)情况，比如2016年5月的特斯拉事故 解决方案针对上面劣势，关键点之一在于尽可能复制真实世界出现的状况(包括世界模型、车辆模型和事故场景等)。 使用更为精确的世界物理模型 使用高精度的扫描技术生成真实道路库 制作更逼真的图像（可借助游戏行业） 构建车辆模型时，在理想模型和物理模型之间取得折衷 分析模拟仿真结果的置信度 建立相应的虚拟仿真测试场景库，包括极端场景等 岗位需求参考本博客另外一条链接：自动驾驶仿真工程师需求]]></content>
      <tags>
        <tag>自动驾驶仿真</tag>
        <tag>总结</tag>
        <tag>自动驾驶</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动驾驶高精度地图总结]]></title>
    <url>%2F%E9%AB%98%E7%B2%BE%E5%BA%A6%E5%9C%B0%E5%9B%BE%E6%95%B4%E7%90%86.html</url>
    <content type="text"><![CDATA[在写具体测试场景时，我突然发现了地图的作用。 一个场景里的大部分静态信息，道路拓扑结构，以及包括信号灯、标识牌、标志线在内的主要环境信号都可由地图提供。如果没有地图，导航级别的任务先不谈，以上谈及的具体信息识别就是个问题。 在我个人看来，想实现L4及以上级别的自动驾驶，高精度地图是不可或缺的。我甚至认为它不是提供安全冗余的打辅助的角色。而是那个the key core。 基于此，我想对自己所了解的高精度地图知识进行一个总结。 背景自动驾驶的终极话题是安全，因而冗余性和鲁棒性无论何时都需要考虑。传统提高鲁棒性的技术手段有多传感器融合，典型的如相机、激光雷达、毫米波雷达的融合。这种融合技术比较偏向动态的感知，而高精度地图对鲁棒性的贡献主要在静态感知层面，它能解决很多单靠传感器和规划技术不能解决的问题。在我个人看来，想实现L4及以上级别的自动驾驶，高精度地图是不可或缺的。 概念高精地图是用于自动驾驶的专题地图，包含更多图层和道路数据且有不同的分类方法，方法之一将地图划分为矢量的语义信息层和栅格图这样的特征图层。前者主要是包括车道模型、道路部件（Object）、道路属性三类语义矢量信息，后者主要是用于多传感器定位的特征（feature）图层。 车道模型一般包括车道线、车道线曲率、坡度、车道中心线、车道连接、车道属性变化、车道分组。 道路属性包括车道数、失锁区域、道路施工状态等 道路部件包括符号、收费站、交通灯、交通标志、斑马线、停止线、隧道、路缘石、防护栏、障碍物、龙门架、桥梁、交通区域、杆等 特征图层一般也是传感器图层。有激光定位图层。 方法二主要分为道路网，车道网，安全辅助数据和道路交通数据。其组成如图 道路网道路网主要是由道路基准线网络构成，用于描述道路的几何形态、表达与道路设施间的关系。高精度道路导航地图道路网示意图，它包括道路基准线、道路基准线连接点和路口等图层。 车道网车道网记录路网中每个独立车道的相关属性，用于车道级的道路显示、定位、路径规划和驾驶策略辅助。它包括车道级道路、车道级道路连接点、车道级道路形状点等图层。 安全辅助数据和道路交通设施数据其是对车道安全数据和车道上的其他交通设施进行描述，用于辅助车道级定位和显示，例如曲率、航向、纵横坡度等。道路交通设施数据则包括交通标识、路侧设施和固定地物等信息。 功能有一些人类能轻而易举完成的驾驶任务对自动驾驶却有很大的挑战，一些挑战必须在高精度地图的帮助下才能完成任务。如 判断可行驶区域。如在大广场和在典型道路区域内可行驶区域是不同的，单靠激光雷达和摄像头只能在物理层面上确定可行驶区域。 判断行驶方向。有的道路没有车道线，还有的城市潮汐车道。 判断目标类型。实际十字路口前有无人行横道对规划的影响比较大。 判断自身位置。判断自己身处于哪儿是自动驾驶的前提，高精度地图地位可以作为一种定位的冗余手段。 判断前车相对位置（其他交通参与者的状态）。如路边行人下一步究竟可能会有什么操作？高速公路上一百米外是否有车与自己处于同一车道？ 判断红绿灯状态。单纯用视觉红绿灯容易和车灯尾灯混淆，但这用高精度地图确是一个比较容易解决的问题。 探知前方坡度、曲率、横坡。这些都是摄像头很难处理的问题，比如上坡下坡在摄像头中可能是曲线。 获得超视距的感知能力。在使用高精度地图后，能知道前方几百米内出现的对象。 建立方法与标准与计算模式高精度地图的建立方法主要有： 通过配备 GPS-RTK 的采集车沿特定线路采集数据 使用激光雷达与广角摄像头结合的方法提取道路信息 通过GPS+INS紧耦合进行定位，从正射影像图中获取相关地图信息 标准： 国际关于地图标准的工作组是ISO TC204/WG3，欧洲有两个地图数据物理存储格式规范组织——NDS与OpenDrive，中国的BAT、日本大部分车厂都已加入了NDS组织。 ADASIS是欧洲另一个标准组织，针对的是地图与车载应用之间的接口，其于2015年12月与NDS联合成立了OADF Forum，对接国际ISO和日本SIP-ADUS。 SIP-adus是日本国内战略性创新创造项目，日本各整车企业、零部件公司、地图厂商联合起来，成立了动态地图公司DMP。 中国自动驾驶地图工作组（CAICV HD MAP WG），刚刚于5月23日得到批准，与NDS（欧洲）和DMP（日本）开展平等合作，并形成数据转换机制。 计算模式：由于高精度地图数据量较大，传统的云计算已经不满足要求，当前的主要计算模式是众包和边缘计算。 众包指高精度道路导航地图的用图者同时也可以是绘图者。通过众包的方式，将数据采集设备装在使用高精度道路导航地图的车辆上，其在行驶时边用图边采集数据，并且将获取到的数据上传，例子如美国的Mapper公司。 边缘计算后者指在网络边缘执行计算的一种计算模型，边缘计算中边缘的下行数据表示云服务，上行数据表示高精度道路导航地图服务，而边缘计算的边缘是指从数据源到云计算中心路径之间的任意计算和网络资源 应用 自动驾驶仿真（VTD仿真软件） 与导航地图关联，进行车辆轨迹引导。人先说目的地，导航地图计算出一条路径传给自动驾驶系统，后者依据高精度地图算出几条可能的车道级路径，在根据优先级随机选择跟随其中一条。 帮助实现定位。 通过激光雷达或摄像头，演出测量物体的距离和大小，系统通过三角关系算出车的位置。 利用道路指纹（地面明显特征，箭头、虚线、污渍等） 基于RTK的绝对定位。 把高精度地图放在云端做匹配 商业 Google高精度地图使用的传感器是多线激光雷达和摄像头，用的数据是车道模型+Object模型。 HERE高精度地图是NDS成员，传感器是多线激光雷达和摄像头，用的数据是车道模型+Object模型。 高德、四维图新、百度、Tomtom、光庭也是NDS成员，它们做的图相似。 挑战 高精度地图涉及标准众多，如下图。各单位所用标准不统一。 我国处于隐私与安全的考虑，对公共地图信息采集与绘制有诸多规定，需要找到合适的平衡点。 传统导航地图有电子地图版本审查和加偏移措施等加密手段，这与高精度道路导航地图之间存在矛盾。 需要及时进行数据更新，采用原始数据采集手段会有过多冗余数据和过高成本，因而必须发展众包。 车用高精度基础地图数据的模型、结构、接口、标准、规范以及动态地图数据共享体系、机制、方法、协议、接口需要研究]]></content>
      <tags>
        <tag>总结</tag>
        <tag>自动驾驶</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[英语学习记录]]></title>
    <url>%2F%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95.html</url>
    <content type="text"><![CDATA[我的英语实在是太差了，我深深知道它的重要性却没有做好它，这让我感觉不好。不管怎样，开一个专门的英语学习记录吧。 还是那个目的，以记录，以警醒。]]></content>
      <tags>
        <tag>总结</tag>
        <tag>高效学习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[武功秘籍]]></title>
    <url>%2F%E6%AD%A6%E5%8A%9F%E7%A7%98%E7%B1%8D.html</url>
    <content type="text"><![CDATA[九阴真经和九阳神功，哪个更厉害呢？ 九阴真经，九阳神功，这可以说是金庸武侠里最著名的两本秘籍了，名气上和它能比肩的，也就只有笑傲江湖里的葵花宝典。 这个不能直接比较，但如果分析起来还是蛮有意思的。 从实际效果来看，九阴真经是以实战为主要导向，书中所述大多是实际凌厉的杀招。而九阳神功则以强健自身为最初目的，书中所述效果为提升个人的内力，同时作为基础，能为修习其他武功带来便利。从武学本源来看，九阴真经的基础是道教，而九阳神功的源头是佛教。从产生时间来看，九阴真经的主要流行时间是宋朝，元时随着郭氏没落而消失。而九阳神功则出场于元初，时间基本就是前后相承的关系。 我个人的看法，这两本书是前后相承的，金老爷子的对比意图很明显。 众所周知，九阴真经是黄裳编著的。据书中所述： 宋徽宗于政和年间下旨命令一个聪明的刻书人——黄裳刻写一本道家书籍《万寿道藏》，共分五千四百八十一卷。由于是为皇帝刻书，黄裳怕出错杀头，他花了好几年小心校对，不知不觉便精通了道学，还无师自通领悟了最精深的武功。经过漫长的修练后，成为绝顶武学高手。不久，宋徽宗下旨要黄裳派兵去剿灭魔教——明教。不料，当中高手如云，黄裳遂亲自向明教高手挑战，一口气杀了几个法王使者。哪知道他所杀的人中，有几个是武林中名门大派的弟子，于是被各大派寻仇，黄裳寡不敌众，受伤后逃亡，躲在不毛之地。黄裳仇家随后将他家里的父母妻儿杀了个干干净净。为了避免再受追杀，一一记下了的敌人招式，苦思破解方法。当他想通了，已经过了四十多年，仇家全都死了。他便觉得自己时日无多，便把毕生心血，写成上下两卷的《九阴真经》。 黄裳以所学道家内容为理论基础，以复仇为原动力，加上无可比拟的天赋编写了这本书。在他编写这本书的过程中，满脑子想的就是怎么杀了对方，为家人复仇。因此书中所述有关九阴真经的武功多是以实战为主要导向的。比较著名的有北斗七星阵，九阴白骨爪等，不太著名的有飞絮劲，蛇行狸翻等。 我们再来看九阳神功。九阳神功最初是以强身健体为主要目的的，被夹在佛经楞伽经里。觉远和尚死前念经。彼时座前有郭襄、张君宝和少林寺罗汉堂首座无色禅师，三人各有所悟，之后郭襄、张君宝出家开创峨嵋、武当两派，三人分别开创了少林九阳功、峨嵋九阳功、武当九阳功。在《神雕侠侣》的结尾，尹克西偷走了九阳神功，放在自己的宠物苍猿肚子里，这就是《倚天屠龙记》开头张无忌碰到的奇遇了，他是九阳神功的集大成者。 再提一下创始人，在最新修改版本中，是一位斗酒僧在斗酒胜了王重阳，得以借观《九阴真经》，看后觉得《九阴真经》阴气太重，一味崇扬道家黄老之学，只重以柔克刚，以阴胜阳，未及阴阳互济之妙，于是在四卷梵文《楞伽经》的行缝之中，写下自创的《九阳真经》，其人兼得儒释道三派真谛，有考据党认为此人是虚竹无疑。 结合上面的信息和金老原著，我们可以看出。九阳神功以内基修炼为主要导向。本无武意，反成强音。 从九阴真经到九阳神功，金庸笔下的江湖发生了翻天覆地的变化，武功的主要导向开始由外在的克敌制胜转为内在的修炼根基，由先发制敌转到后发制胜。作为跟九阴真经关系最大的一群人，宋末郭靖固守襄阳，最终战死。这是一个时代的结束，以侠之大者，为国为民的正统侠道也开始没落，九阴真经也逐渐退出历史舞台，九阳神功开始登场，善良但没主见的张无忌也开始被推上舞台。在这个快意恩仇的江湖里，郭靖和张无忌作为九阴和九阳的代表人，风雨中相对而立。 武，是什么？侠，又是什么？还真是无言以对。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[十年]]></title>
    <url>%2F%E5%8D%81%E5%B9%B4.html</url>
    <content type="text"><![CDATA[这是我二十岁时写的生日笔记。还有一个月我就二十三了，十年里还剩七年。 十年这个意向大约有着特别的意义。《盗墓笔记》结尾是一句诗“桃李春风一杯酒，江湖夜雨十年灯”，仙剑里也有十年之约，莫失莫忘，这些总会给我特别的感动，大概十年是个完整的年轮，这一轮会有四海一瞬，古今须臾，也会有物是人非。 十年之后我会是什么样子呢？这十年我该怎么做呢？ 20-30岁，十年。 昨晚又下雨，还是站在这个校区的最偏远的地方，还是看着那盏路灯，我翻着去年五月的笔记。 接下来这十年，很有可能是我这一生里最精彩的十年了。大好年华，活力无限，可拼可闯，可败可惧，可以犯错，可以选择，可以尝试，可以坚持。 我一直跟同学聊天说，我三十岁以后再结婚，这话玩笑七成，也有三成认真。三十岁以后，心有壮志，但有责任在肩。不甘平庸，但心志基本也被磨圆。那时候不会呆呆板板过一眼望到头的生活，但有些路也确实没资格，没心力去走一次。 我记得最近的一次印象深刻的聊天快结尾时，我说“你想走哪里走哪里，看你的选择，看你的因果。我也想走哪里就走哪里，看我的现实，看我的眼界。”这些话我可以理所当然的说出来，只因为我还刚踏入了这场有无限可能的十年之约。 我去年七月一条朋友圈讲，以五年为一节点，我五岁，十岁，十五岁，二十岁都有清清楚楚的记得的后悔的事，或是因为性格懦弱，或是因为实力太低。那接下来这十年，又包含了两个节点，那时不管境况如何，我都希望我可以告诉自己，这是当下最好的结果之一。遗憾可以有，但我不希望有后悔。 这一年，21岁，借王小波的一个书名，再借海贼王的一个概念。新世界展开帷幕，黄金时代，开始了。]]></content>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[言不可及 | 回家路上]]></title>
    <url>%2F%E8%A8%80%E4%B8%8D%E5%8F%AF%E5%8F%8A-%E5%9B%9E%E5%AE%B6%E8%B7%AF%E4%B8%8A.html</url>
    <content type="text"><![CDATA[我在回家的路上。 因为下着雨，车两边的树看起来很青翠，这是一条以前没走过的山路，全程都是下坡道，路上人车都很少。你们知道的，公交老司机此时都会化身成秋名山车神。他心里也许会想:公交下山！下个五连发卡弯就是决战时刻！ 手机上显示体感温度是十八点七度，此刻离家应该不到十公里，我在车上也已睡了三个小时。天时，地利，人和，造就了现在的神清气爽。 于是就心血来潮地模仿火车靠站时的通告，心里默默地念，欢迎来到汝州，汝州是一个…… 突然就接不下去了，汝州是一个什么样的地方呢？历史悠久？人杰地灵？发展快速？我的家乡，好像没有令我印象深刻的地方。 公交车继续在山间公路上移来移去，两旁的山壁上刻了一些和尚，乍一看可能会让人联想到武功秘籍。但定睛一看，和尚们摆的姿势或是黑虎掏心，或是白鹤亮式，是我都会比划的招数，而且人像也就二三十个，一套太祖长拳都不够打的。 汝州到底是一个怎样的地方呢？我又想起来小时候读的一篇故事。小姚隐隐约约想起一句诗，但又说不上来，于是下午想，傍晚想，晚上做饭时也神不守舍，切菜时就不小心伤到了手指。他的女友带他去诊所，夏天某月十五的夜晚，小姚在路上突有顿悟，指着远方让他女友去看。两人就站在树影夏风中，看到了海边的圆月，也就应了那句他一直想不起来的诗，”海上生明月，天涯共此时”。我很喜欢这个故事，它很有意味。 从公交下来，离家还有一里，我小时候常去的那家代销点已经完全败落了，瓦顶长满了青苔，土块堆起来的墙也塌了半面。现在来看这家店又小又矮，但对小时候的我而言这里就是宫殿和天堂。那时总是攥着一毛钱甚至五毛钱来这里，一路蹦蹦跳跳。平时会买一毛钱两根的辣条、一毛钱一袋儿的北京烤鸭和比较奢侈的五毛钱的豫竹方便面，过年则来这里买烟火，铁花子，擦炮。店里有一块大青石台，年代久远已经有点润了，我总是把硬币放在青石上面，在等店家去拿零食的时候，我就在门槛内外来回跳，因为心里高兴，所以通过蹦蹦跳跳抒发出来。 几年前，店主因病去世，刚过七十岁。我并没有他亲人的感同身受，但却在这里有了生老病死的感触。他信佛，曾因一个梦而负担起了东庙过年时的烟花，即使代销点一年根本赚不了几个钱。现在想来，我喜欢的烟花夜晚，却是店主家里难念的经，那时候还小，还不懂自家之外的苦。他去世之后的几年里，村里发展的很快，各种超市、商店如雨后春笋，但我年龄也大了，再也找不回吃零食的幸福感了。 离家几十米，熟悉的街道颜色，门外的杏子树，树下那块青石，逗孩子。推开门，我心里默念，这里五年前是这样，那里十年前是那样，狗子还在汪汪，风吹树还是会沙沙响。 对了，汝州，或者说家乡，是我长大的地方，是离开后会想念的地方，是在离家后回来后会心生万千情绪的地方。就是如此。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[同济星期音乐会 | 缘终]]></title>
    <url>%2F%E6%98%9F%E6%9C%9F%E9%9F%B3%E4%B9%90%E4%BC%9A-%E7%BC%98%E7%BB%88.html</url>
    <content type="text"><![CDATA[人在走到最后时，往往回想起最初。 对这门课初见钟情，有朦胧憧憬。熟悉之后，感觉它不是初识的样子，于是厌倦。行至最后，回首过往，无喜无悲，人生若只如初见？不是的，现在拥有的才该好好珍惜。 不管怎样，这门课带给我更多的还是值得珍藏的记忆，我学到了很多东西，关于音乐，关于心境。 从另外一个层面，这门课也有很特别的意义。同济号称是一所综合性大学，但目前还是摆不脱理工科的烙印。人文学院雄踞本部，传媒学院坐镇嘉定，但终究架不住理工学院人多势众。07年校庆时，温总理提到仰望星空，也有希望学生能在踏实做技术之外，多开拓一些眼界的意思。 我有一个签名“拥有工科生和文科生的优点和缺点”，这并不是刻板的去区分这两个人群，而是我希望自己除了拥有扎实的技术和动手能力外，还懂得去拥抱其他的事物，比如文学，比如体育，比如音乐。一个只会技术的人是可悲的，他把自己的世界蜷缩，化成了一个收敛函数。这样的人，无论怎么积分，他人生的上限，封死了。 同济的实干氛围很重，很多人参加车队、机器人对抗赛，在技术的海洋遨游。我不反对这样，事实上，参加智能小车队也是我最重要的经历之一。但我C语言学完想学Python，之后又去学习单片机和计算机视觉，技术的学习是无穷无尽的，还不够，还不够，还不够！太容易陷进去了。这种氛围变成了我的蒸笼和枷锁。 我不想一直这样。 我想求新，求变，绝不锁死自己，我要不断地破，破而后立。 所幸同济也认识到了这枷锁的存在，星期音乐会就是破锁的开始。它不仅仅是传媒学院开的一门选修课，也是一种新认知的代表。 “据我所知，全国开音乐会选修课的大学，只有同济一所。这是我们的一个礼物，也是我们的一个努力。我们的确花了很多心血，每次课程只灯光和乐器等杂项就需要十数人准备一周甚至两周，只希望能给各位带来一些音乐上的感动，让你在某个时刻感受到，啊，音乐真好啊。我们不管潜移默化的效果如何，也不奢望你们突然有了审美的飞跃，我们会做好自己认为正确的事，谢谢诸位。”这是课程开始时负责人的发言。 我也谢谢你们，再见了。]]></content>
      <tags>
        <tag>随笔</tag>
        <tag>大学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[同济星期音乐会 | 缘转]]></title>
    <url>%2F%E6%98%9F%E6%9C%9F%E9%9F%B3%E4%B9%90%E4%BC%9A-%E7%BC%98%E8%BD%AC.html</url>
    <content type="text"><![CDATA[我应该还是不喜欢古典音乐的。 两架钢琴，十手连弹，闭幕曲是《保卫黄河》。 我不是音乐家，也没有闲逸超脱的情思，选课时一腔热血，听课时昏昏欲睡，更有甚者，如郭靖听《碧海潮生曲》，不见旋律，唯有大敌。 寻手机，开知乎页面，如何去欣赏严肃音乐？再问传媒学院搭档，这曲怎么解？都说不出个所以然。但迷茫纠结本是世间常态，无路硬走即可。 终于等到了《保卫黄河》。 因曲子耽搁了二十分钟，我已变得躁动不安，好事毕竟总多磨。但在听到这首曲子时，世界都安静了。我实在没想到这首曲子，竟有如此变化，每次循环都能朝天再进半步，某时五人齐弹此曲，因音域共振，气势雄浑壮阔。我本以为至此已到顶峰，谁知峰回路转，竟有武侠小说里常说的，“隐隐有肃杀之意，金戈铁马又铿锵”。如虔诚者登山，及至山顶，又见新山。前进，前进，前进，更高，更险，更美！演奏结束了，我鼓掌，诚心诚意。 每个人思维都有自己局限的锥。我在听严肃音乐的时候，总是试着把它理解为一个故事、一段画面，如果触不到这些，就会认为自己没听懂，进而又去寻找该如何“听懂”的方式。为了听懂去听，听中尝试去听懂，这是一个恶性的死循环。 但听过《保卫黄河》后，我想，音乐也许只是一种情绪、一种表达、一种氛围。我不需要去理解它、揣测它，而只需要去感触它，去等待和它产生共鸣，哪怕只有一处也是值得的。这世界上从来没有完全相同的东西，没来由就能产生共鸣的，不是正常人。 每个人的经历也会有相似之处，如若那首曲子能带给你的瞬间的感动，四海缩成一瞬，古今略为须臾，隔着时空，灵魂和曲子有了对话，那一刻肯定是幸福的。]]></content>
      <tags>
        <tag>随笔</tag>
        <tag>大学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[同济星期音乐会 | 缘起]]></title>
    <url>%2F%E6%98%9F%E6%9C%9F%E9%9F%B3%E4%B9%90%E4%BC%9A-%E7%BC%98%E8%B5%B7.html</url>
    <content type="text"><![CDATA[修星期音乐会这门课，纯属偶然。 在刚听说有这门课时，我就对它有莫名的好感。想来是课名有韵味。于星期闲暇之时，听音乐以怡情养性。这总让我想起醉翁亭记和兰亭集序。 大四下我课程基本已补完，前三年各种劳累辛苦按下不提，这个学期我是要过心目中的大学生活了。也正是有缘，某晚浏览网页时偶然发现尚有名额，于是周一晚上就有了去处。 在我们学车辆的人中间流传着一句话，汽车是工业智慧的结晶。与此类似，音乐当是人类艺术皇冠上的明珠。它能跨越国家，肤色，种族，性别，年龄，海洋，天空，时间，在某事某刻某地给某人以某种特别的感动。 无聊寻思，音乐是怎么发展起来的呢？唧唧燕声，夏日蝉鸣，秋鱼扑腾，雪落瓦顶。人的主观性总是能将自然原声，根据个人情感，赋予其规律性。音乐以此为源，开枝散叶，逐渐发展了起来，庄子所言天籁应该也是这个意思。人为什么喜欢音乐呢？人对美有天然的追求，而音乐是情感的载体，是对自然的回应，这是天人层面上的和谐，正是美的极致体现。 话转回来，关于星期音乐会，我也了解了一些细节。虽然同是欣赏音乐，但不同的场合应遵循不同的礼仪。如果是听周杰伦的演唱会，你可以拿灯光牌，穿沙滩裤，氛围到了，大声跟唱，惊声尖叫，这正是现场live最特别的地方。但在听音乐会的时候，我们需正装出席，于绝佳之处情难自禁也该保持冷静，等一曲终了方可鼓掌，若想让演奏家再奏一曲，可持续鼓掌表明心意。这些礼仪的缘由我并不解，但人总得有一些仪式感，全程庄重太累，但不庄重的生活也轻浮了一点。 听老师讲，这门课会以古典音乐为核心，涉及的乐器会有钢琴，小提琴，大提琴等。严肃音乐是我很少接触的类型，歌单里虽有钢琴纯音乐，但听说和古典音乐是两个完全不同的概念，我很好奇二者之间的区别。 来自五湖四海的演奏家，古今中外的名曲，未曾触及的领域，全新的大学生活。这一切碰撞的时候，会是怎样的呢？ 另，这几天我迷上了许镜清做的西游记主题曲，可能的话，我希望之后能在课上听到交响乐。]]></content>
      <tags>
        <tag>随笔</tag>
        <tag>大学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据可视化 | 开篇]]></title>
    <url>%2F%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-%E5%BC%80%E7%AF%87.html</url>
    <content type="text"><![CDATA[讲数据就是讲故事。这一系列来自于对《鲜活的数据》这本书的总结。如果不了解数据，那么它就这只是冰冷的文字和数据的堆砌，统计与可视化可以帮助我们发现很多深层次的东西。在一堆堆数字中间藏着意义、真相和美学。数据有很强的客观性，但其中往往也有很多人为因素。就失业率例子，失业率攀升百分之五个百分点和数十万人下岗之间还是有着微妙且重要的差别的。 数据可视化有哪些基本原则数表应该清晰、简洁、优美。重要的点、线、区域都应该有注释，使用的符号和颜色都应该有详细的说明。数据可视化不一定只和冰冷的事实相关，有时候我们寻求的不是分析和洞察，而是从富有情感的观点讲故事。最后，数据本身也许并不一定让人趣味盎然，令人印象深刻的应当是设计数据和演示数据的方法。 在面对一堆数据时，我们该怎么入手 寻找模式，即寻求变化。以随时间推移而产生变化的模式举例，不同粒度时间内（小时、天、月、年）变化量怎样？波动是否异常？是否有特殊事件引起变化?由一个问题会引申出很多问题，要多角度去思考各种可能的变化。 寻找关系。在分析数据时，要找到数据的关联性和因果关系。 有问题的数据。数据检验是很讨人厌的事，但我们也不能避免这件事。 设计可视化图时应该注意什么 在设计可视化图形时，需要用圆形、柱形等用于编码，因而必须选用合适的方式去解码，一般可以用标记、说明文字、图解来解释编码。如果有足够空间，分类又不多的话，可以直接在形状或对象旁边添加标记。 标记坐标轴， 让读者知道它描绘的尺度和内容。 确保几何上的正确性，尤其要特别注意面积这个属性。 请记得提供数据来源，这样才显得严谨。 请注意考虑受众来源，幻灯片中的图形应该简单明了，如果是商业报告的话，图形应该简单、直达主题。按这样思考总是没错的。 该怎么处理数据收集数据收集数据时处理数据的第一步。很多人都会忽略这一步。收集数据的渠道有： 从他人处获取。即使是由他人提供数据，我们也不能大意，典型的要注意笔误和上下文环境，如数据的出处，收集的宗旨，调查何时举办？由谁发起？哪些人参与？这都是需要关注的。 从搜索引擎/直接数据源（该领域的学者/相关论文学术报告/搜索数据来源的网站）/大学资源/综合数据类网站（Freebase/Infochimps/维基百科）/专题性数据（垂直网站） 自动收集数据。使用Python+爬虫，基本步骤就三个：找出规律，循环，存储数据。 设置数据的格式格式化对于数据处理而言，是非常非常重要的一步。说它占掉整个数据处理工作中百分之九十的工作量绝不夸张。这也是一项非常繁琐的工作，因而必须拥有足够的耐心且找到合适的工具。 常用的数据格式有：csv(带分隔符的文本)，JSON（JavaScript对象表示法）、XML（可扩展标记语言）。]]></content>
      <tags>
        <tag>总结</tag>
        <tag>数据可视化</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[谈古龙]]></title>
    <url>%2F%E8%B0%88%E5%8F%A4%E9%BE%99.html</url>
    <content type="text"><![CDATA[小李飞刀成绝响，人世不见楚留香。 初中从铁路局的床底下摸出了《无情剑客多情剑》的上半部，看到天机老人开始现身，胡不归，郭嵩阳，吕凤先准备登场时，上册结束。那时候我没手机没电脑，只有全书的目录，看着下半册的目录我猜了好几年故事会怎样展开。 高中接触手机。第一次用手机上网搜的就是《无情剑客多情剑》，看到下半部的内容出现在手机屏幕上时，开心的简直要炸掉。记得当时就坐在门槛上，用比巴掌小得多的屏幕看后半本，看一会儿就停下来，去院子里来回走，深呼吸来平复心情。看完五章就强迫自己停下来，免得一下子看完了太浪费。 我们高一每四周放一天假，那是我一个月里最高兴的一天，除了能回家见父母，另外就是能用手机看古龙的其他小说。《陆小凤全集》《楚留香全集》《武林外史》这些都是那时候在被窝里看完的。 古龙的语言风格如诗如乐，轻灵飘逸，另一宗师金庸走的则是重剑无锋，大巧不工的路数。所以有人说，金庸如杜甫，古龙如李白，两人组成了武侠史上最灿烂的的双子星座。 古龙受日本一些浪客作品影响比较深，其故事融合了推理和悬疑在武侠里，比较经典的如陆小凤传奇里的《决战前后》，月圆之夜，紫禁之巅，一剑西来，天外飞仙，西门吹雪和叶孤城的决斗也是来自这一册书。从这一点来说，他是开山宗师，前无古人，来者也追不上他，别人没他这才情。 但古龙并未止步于故事，他自己在《白玉老虎》的后记里提到，故事的情节变化有穷尽时，只有情感的冲突才永远能激动人心。而在这之中，古龙似乎尤其偏爱绝望里永不放弃希望的特质。 只因古龙也是个浪子，“人在江湖，身不由己”应是他的原创。他一生颠沛流离，过得很不如意，”人生本就充满了矛盾，任何人都无可奈何。”这样的句子在他的书里随处可见。看他和梁羽生，倪匡等人的合影，其他人都是风度翩翩，一副浊世佳公子的模样，只有他总是搭着眼，嘴角挂着不自然的笑。 但古龙始终赞美希望，对生命充满热情，他笔下的主角很少自怨自艾，黎明前的黑暗始终是最黑的，再坚持一刻就好了，不到最后一秒，绝对不要放弃。即使遭受了很多苦难，这些人还是坚持着自己的生活情调。夜深人静时不能眠，有人会打两颗蛋，加葱花，肉丁，用猪油和隔夜饭来做蛋炒饭。又说一个人想自杀时，就去菜市场转一转，或者去小饭馆坐一坐，喝完羊肉汤，吃两个烤饼，感受一下至味在人间，或者就和可爱又活泼的女孩子聊聊天，就什么都能好了。 这样的人，在另一个世界，应该也常是这样的:“店家，端来最好的酒，上最好的饼和肉，外面风雪太大，把柴火烧旺点，那边的兄弟们，请你们来这里喝酒！” 酒到半巡处，“我来给你们讲个故事，会有有趣的过程，会有快乐的结局。这世间不平事太多了，此时不快意，更待何时！”]]></content>
      <tags>
        <tag>随笔</tag>
        <tag>读书</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[谈吃]]></title>
    <url>%2F%E8%B0%88%E5%90%83.html</url>
    <content type="text"><![CDATA[如果没有生活压力的话，我第一想做非正常接触咨询师，其次是收藏家和美食家。 谈美食的散文有很多种。袁枚的《随园食单》把食不厌精、脍不厌细做到了极致,但生气太弱，并不讨我喜欢。 好的美食书应该是缭绕着烟火气息的。梁实秋的《谈吃》，文章简单直接，酱菜一篇，炸丸子又一篇，烙饼再来一篇。陈晓卿的《至味在人间》，写的就是各种下馆子的日常，没什么刻意。吃的开心足以。汪曾祺也有谈吃的散文，其文如风俗画，粗看平平淡淡，但却总能在不经意间显出情趣。还有张家玮的《孤独的人都要吃饱》，虽然相比前面几本有堆砌辞藻的嫌疑，但内容也可称得上人间情味了。 读美食散文有特别的感受，和小说、科普书不同，这里不求戏剧冲突，不求大悲大喜，也不谈严谨标准，无来往名利，无尊卑贵贱，作者落笔于纸，唯表达内心感受情思而已。作家谈吃时心也总是柔软的，即使一贯是清冷客观的文风，字里行间也会有一丝笑意。食物对人来说是神圣的，作家在色形味的描绘间找到了永久的通神之路。 关于美食的动漫我也看过一些。印象最深的还是《中华小当家》，以其下饭最合适不过，剧中有升龙饺和国士无双面，剧外我端着奶奶做的薄皮儿韭菜饺子和鸡蛋浇面一本满足；宇宙大烧麦和黄金开口笑让人目瞪口呆，妈妈做的烙饼加玉米粥同吃也让人惊艳。 依然无法言表那种感觉，常见的主食，怎会产生如此奇妙的反应？按小当家体的话… 这色泽温暖金黄的粥，把整个夏天的疲惫统统吹走了，略微粗糙的口感又饱含着谷物的清香和甘甜，热乎乎的温度像旋风一样落入了胃里，等等，这热烈而霸道的香是… 这是烙到正好的饼，油香和面香竟然能如此完美的桥接在一起，粥和饼同吃，这种充实而又充满层次味的美感，真是令人赞不绝口。 在小当家里，食物的光可以直冲云霄，彗星炒饭可以从天外飞来，就是这些陪我度过了一个个夏天，一顿顿午餐。现在也有类似的经历，只不过剧换成了《食戟之灵》，人越来越忙，下的饭也只有宵夜了，终究跟过去不一样。 小说里也有很多美食的桥段，我喜欢读武侠小说，金庸的《射雕英雄传》里，黄蓉为了自己的靖哥哥，给洪七公做了“玉笛谁家听落梅”，五肉同吃，合计二十五变，滋味无穷，又有“好逑汤”，即为荷叶笋尖樱桃汤，清、甜、鲜俱在，还有只提及的“二十四桥明月夜”，豆腐挖心后塞入火腿蒸食，应当对刀工要求极高。《书剑恩仇录》里有陈家洛归海宁家后吃的糯米嵌糖藕，《天龙八部》里阿碧姑娘出场带的碧绿新鲜的点心。金庸书中多是类似江南风格食物，精致，高雅，读来感觉应是美味的，但终究可远观而不可亵玩焉。金庸谈吃令吾欢处不在于此，而在于华山绝顶，天地同寒处，洪七公和小杨过吃的那几十条蜈蚣，喝的那几夜酒。 古龙书中的饭更接地气一些，他更像是一个挨过饿的人，谈及吃的时候总有隐隐然对食物的敬畏。米饭要一口口吃，肉丝要一口口嚼，这样才能充分获得食物的能量，人每分每秒都该珍惜当下所拥有的。书中人物吃饭皆是在路边小店，三五斤酒上来，卤肉、卤鸡、牛肉端上来，再配上大饼或馒头一起吃。他的书是能把人看饿的，这何尝不是另一种才情？]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[线性代数 | 乘法、逆矩阵、分解]]></title>
    <url>%2F%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-%E4%B9%98%E6%B3%95%E3%80%81%E9%80%86%E7%9F%A9%E9%98%B5%E3%80%81LU%E5%88%86%E8%A7%A3.html</url>
    <content type="text"><![CDATA[乘法、逆矩阵、分解、转置都是线性代数的基本概念，这一篇也是突入向量空间之前的最后一篇了。 乘法计算矩阵乘法要掌握以下四种方式。 直接相乘法，即对于矩阵$AB=C$,有$c_{ij}=\sum_{k=1}^na_{ik}b_{kj}$ 列相乘，A右乘以列向量，相当于A中各列的线性组合，得到的是一个列向量，然后可以扩展到整个矩阵。 行相乘，A左乘以行向量，相当于A中各行的现象组合，得到的是一个行向量，然后可以扩展到整个矩阵。 A的列乘以B的行会得到一个矩阵，对应列、行相乘得一个矩阵，把各个矩阵直接相加可以得到最终矩阵。想理解这个，可以把A矩阵的每一列当成一个块，B矩阵的每一行当成一个块。并不建议用这个方法来计算矩阵乘法，但一列乘以一行得到的矩阵有着美妙的性质，所得矩阵的每一列、每一行都依赖于同一列，也依赖于同一行。 逆矩阵矩阵可逆的条件是，存在方阵A且$AA^{-1}=A^{-1}A=I$,可逆方阵又称作非奇异矩阵。我们现在通过一个奇异矩阵来了解一下可逆矩阵。假设存在一个奇异矩阵$A$ \begin{bmatrix} {1}&{3}\\ {2}&{6}\end{bmatrix} 拓展一。 假设存在一个矩阵B，能使得AB=I,从列图像的角度来看，矩阵$AB$每一列必然与向量$[1,3]$在同一方向上，但单位矩阵的$[1,0]$不在，因此它不可逆。 拓展二。如果存在非零向量$x$,使得$Ax=0$，则A不可逆。证明，反证法，若A可逆，则两边同时左乘$A^{-1}$，则有$Ix=A^{-1}0$，即$x=0$,与原条件矛盾。 事实上，有非零向量$x$,说明矩阵A各列可以通过线性组合得到零向量，说明各列线性相关，这都是等价的。 LU分解矩阵的分解是一个很重要的话题，我们可以把一个矩阵分成一些特殊矩阵或者更简单的矩阵，从而简化问题，帮忙发现问题的本质，LU分解就是矩阵的一个基础分解。 我们在前学过消元法，消元法的本质是行变换，其实矩阵有很多变换形态，只不过行变换经常是和解方程联系在一起的。由前文可知，矩阵可以通过消元由A变成U,即存在消元矩阵E，使得$EA=U$。我们现在想求的分解是$A=LU$,则有$L=E^{-1}$，即是消元矩阵的逆矩阵。 转置、置换矩阵矩阵左乘置换矩阵可以进行行互换，置换矩阵的形式是单位矩阵行行互换的矩阵。 考虑一个三阶单位矩阵I，依次调整它的行的位置，则共有$3!=6$种矩阵，这可以从行变换（行向量乘以矩阵）的角度去思考。另外，置换矩阵群内的矩阵相乘依然是置换矩阵，它们之间有逆矩阵的关系。另外置换矩阵的逆矩阵和其转置矩阵相等。 转置矩阵的概念:$A^T_{ij}=A_{ji}$。对于对称阵:$A^T=A$。构造对称阵也很简单：$R^TR$ 下一章，我们突入线性代数的核心，向量空间。]]></content>
      <tags>
        <tag>机器学习</tag>
        <tag>线性代数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[线性代数 | 解方程组]]></title>
    <url>%2F%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-%E8%A7%A3%E6%96%B9%E7%A8%8B%E7%BB%84.html</url>
    <content type="text"><![CDATA[这个系列、或者说这一类的风格会一直转变的，我也处于不断的摸索过程中。 我们怎么求解方程组呢？先配系数消掉x，再把x带回去，求出y。这就是消元法，现在用矩阵观点来看待这个问题。回想自己求一个二元方程组的过程，我们依然举下面这个例子， \begin{cases} 2x-y=0\\ -x+2y=3 \end{cases}\begin{bmatrix} {2}&{-1}\\ {-1}&{2}\end{bmatrix} \begin{bmatrix}{x}\\ {y}\end{bmatrix}=\begin{bmatrix}{0}\\ {3}\end{bmatrix} 对于本例，左上角的数字2被称为主元，主元所在的行被称为主元行，之后进行消元，得到矩阵 \begin{bmatrix} {2}&{-1}\\ {0}&{3/2}\end{bmatrix} 接下来利用下面这一行对应的方程求出y，再代入求x就算出答案。 对于三元方程组，举例 \begin{cases} x+2y+z=2\\ 3x+8y+z=12\\ 4y+z=2 \end{cases}对应的矩阵消元过程为 \begin{bmatrix} {1}&{2}&{1}\\ {3}&{8}&{1}\\ {0}&{4}&{1}\end{bmatrix}(1)\rightarrow \begin{bmatrix} {1}&{2}&{1}\\ {0}&{2}&{-2}\\ {0}&{4}&{1}\end{bmatrix}(2)\rightarrow \begin{bmatrix} {1}&{2}&{1}\\ {0}&{2}&{-2}\\ {0}&{0}&{5}\end{bmatrix}(3) 注意第一次我们以对角线上的第一个数字1为主元，消掉x得到了矩阵（2），然后我们以对角线上第二个数字2为主元，消掉y得到了矩阵（3），之后就可以进行回带求解了。最后得到的矩阵（3）就是U:上三角矩阵。 考虑以上两个过程，我们做出总结。对角线上的三个数就是三个主元，也就是在求解过程用来消元的基础元；消元的过程就是矩阵变换的过程。 另外，考虑主元失效的情况，即主元位置为0的情况，一般解决方案是进行行交换。但如果行交换也解决不了问题，比如右下角主元为0的情况，那么这就代表该矩阵不可逆。 确定消元失效。 在第一篇末尾我们提到按列和行的角度来看方程组。从列的角度来看，有 \begin{bmatrix} {1}&{2}&{1}\\ {0}&{2}&{-2}\\ {0}&{4}&{1}\end{bmatrix}\begin{bmatrix} {x}\\ {y}\\ {z}\end{bmatrix}=x*col_1+y*col_2+z*col_3 从行的角度来看，则有 \begin{bmatrix} {x}&{y}&{z}\end{bmatrix} \begin{bmatrix} {1}&{2}&{1}\\ {0}&{2}&{-2}\\ {0}&{4}&{1}\end{bmatrix}=x*row_1+y*row_2+z*row_3 请一定学会用行、列的观点来看待方程组。那么 \begin{bmatrix} {1}&{0}&{0}\\ {-3}&{1}&{0}\\ {0}&{0}&{1}\end{bmatrix}(E_1)\begin{bmatrix} {1}&{2}&{1}\\ {3}&{8}&{1}\\ {0}&{4}&{1}\end{bmatrix}(1)= \begin{bmatrix} {1}&{2}&{1}\\ {0}&{2}&{-2}\\ {0}&{4}&{1}\end{bmatrix}(2) 从矩阵1转到矩阵2这个换元的过程就是在左边乘以一个矩阵$E_1$的过程（用前面讲的用行向量思考的方式去求解矩阵3）从前文矩阵2到矩阵3同理再乘以一个矩阵$E_2$即可，于是我们得到式子 E_2(E_1A)=U\rightarrow(E_2E_1)A=U这就是矩阵乘法的内容了。]]></content>
      <tags>
        <tag>机器学习</tag>
        <tag>线性代数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[线性代数 | 行列图像]]></title>
    <url>%2F%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-%E8%A1%8C%E5%88%97%E5%9B%BE%E5%83%8F.html</url>
    <content type="text"><![CDATA[这是线性代数笔记系列中的一篇文章。 我们来构建一个方程组 \begin{cases}2x-y=0\\-x+2y=3\end{cases}它的几何意义可以从两方面看，第一，从行的角度看。在二维直角坐标系内$2x-y=0$是一条直线，$-x+2y=3$也是一条直线，两条直线交点的坐标值就是待求解。这是行图像。 第二，从列的角度来看方程组，首先把它写成矩阵相乘即$Ax=b$的形式。 \begin{bmatrix} {2}&{-1}\\ {-1}&{2}\end{bmatrix}\begin{bmatrix} {x}\\ {y}\end{bmatrix}=\begin{bmatrix} {0}\\ {3}\end{bmatrix} 这是线性代数中方程组的表示方法。我们可以把它写成 x\begin{bmatrix} {-2}\\ {1}\end{bmatrix}+y\begin{bmatrix} {1}\\ {2}\end{bmatrix}=\begin{bmatrix} {0}\\ {3}\end{bmatrix}考虑向量$v_1=(-2,1)$和向量$v_2=(1,2)$,在直角坐标系中画出这两个向量，再画出最终向量$(0,3)$，问题转化为求$v_1,v_2$系数$x,y$,运用平行四边形法则就可以算出来。这是列图像。另外学过线性代数的都知道，这是一个线性组合的过程。 现在让我们更进一步，考虑三元方程组的行图像和列图像。它的每一行是个平面方程，行图像是在三维坐标系里求三个平面的交点。列图像就是求三个三元向量$v_1,v_2,v_3$的系数x，y，z。 四元方程组，五元方程组思考方式与上类似。 考虑一个经典问题，对于任意$b$，$Ax=b$是否都有解？ 以三元方程组举例，任意$b$对应的其实就是整个三维空间，问题就转化为，列的线性组合是否能覆盖整个三维空间？ 这里直接给出答案，如果矩阵A是非奇异矩阵，答案就是肯定的。A是非奇异矩阵代表着A的各列线性无关，从列图像的角度看，线性无关就代表着各列所代表的向量不在一个平面上（如果它们在一个平面上，就永远无法组合出除了这个平面之外的向量）。 所以，我们得出了从列图像角度得到的一些结论，这里的举例中，A是3x3矩阵，b是三维空间中的向量，x是矩阵各列向量的系数。非奇异矩阵A$\rightarrow$矩阵各列线性无关$\rightarrow$各列代表的向量无关$\rightarrow$三个向量不共平面$\rightarrow$可以用这样的向量组合出三维空间里所有的向量$\rightarrow$对于方程组$Ax=b$,对任意$b$，$x$都有解。 列图像是一个很重要的概念，行图像在线性代数里没那么重要，借用列图像可以帮我们重新认识很多线性代数的概念。 最后一个重点，也是基于行、列图像的延伸。怎么去看待$Ax=b$?GS的建议是站在列图像的角度看，将其看做A的各列的线性组合，$x$里的各项就是A的各列的系数。 \begin{bmatrix} {2}&{5}\\ {1}&{3}\end{bmatrix}\begin{bmatrix} {1}\\ {2}\end{bmatrix}=1\begin{bmatrix} {2}\\ {1}\end{bmatrix}+2\begin{bmatrix} {5}\\ {3}\end{bmatrix}=\begin{bmatrix}12\\7\end{bmatrix}]]></content>
      <tags>
        <tag>线性代数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[线性代数 | 开篇杂谈]]></title>
    <url>%2F%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%AD%A6%E4%B9%A0.html</url>
    <content type="text"><![CDATA[没学过线性代数，在自然科学面前就如同文盲，此言非虚。 做科研、读论文时，线代和矩阵论的基础很弱的话，读懂就要了老命了，更谈不上化归、拓展。我个人未来想做自动驾驶方面的工作，线性代数更是一个绕不开、避不掉的基础话题。另外，我的学习圣经，YY硕的机器人工程师养成计划在五个不同的阶段都提到了线性代数的迭代学习，它的重要性不用在多说了。 线性代数是一门基础课程，但国内大部分学校的线代教学方式实在让人不敢恭维，以同济教材为例，上来就抛出一个逆序数这个反人类概念，之后从行列式开始往后展开内容，这种方式是很不利于认识线性代数本质的。以向量空间和线性变换作为切入点构建整个知识体系是更好的方式，这也是本篇博客提到的Gilbert Strang教授所推崇的观点。 另外，众多大学生本科学习线性代数时偏重于计算，很多人的意识里线性代数就是把一堆莫名其妙的矩阵加加乘乘。这种认识是片面的，线性代数不止具有工具性，也具有思想性。线性代数其实提供了一种看待世界的新视角，用向量去表示对象特征的组合，用矩阵给对象施加“运动”，特征值和特征向量描述了“运动”的速度和方向。注意这里的“运动”是广义的运动，也可以称作状态转换。再比如以高维的视去看待问题：薛定谔的猫可以用6n空间的一个点描述，n是组成猫的原子数，向量的实质是n维线性空间的静止点，通过这种方式可以简化问题。 这门学科是着重于抽象概念解释的，至于具体的数学公式和计算，交给公式查找表和MATLAB就好。 我自己自学时是个很挑的人，尤其讨厌走不必要的弯路，浪费大量时间资源。在准备重塑自己对线性代数的认识之前，我百度谷歌了一下，在各种网站和评论里看到Gilbert Strang的名字，他确实是个做教育的牛人。他的课程有一种让人很舒服的节奏，上他的课时我感觉自己每分每秒精神都很集中，这是很难得的学习状态。 附带一些GS教授的入门资源。 看网易上的MIT线性代数课程，一共35讲，每讲大致在45分钟+，网址：O麻省理工公开课：线性代数，可以用硕鼠把它们下载下来，找个好的视频播放器（potplayer，本地播放非常优秀）观看。 该门课的配套教材也非常值得推荐，网上较难寻觅，可把习题打印下来，书本内容直接看电子版也没问题。链接：https://pan.baidu.com/s/1VVPIUTPTv_nEej1s2N8ZJg 密码：qydd 带着问题去学习线性代数，或者检验自己有没有理解线性代数时，都可以去尝试下自己能回答出下面几个问题。问题摘自孟岩同志的博客《理解矩阵》，十年前的文章，但依然光芒万丈，可在学视频前学习，也可在学完后检验。 笔记要记，还是推荐电子笔记，修改留存效果比较好，推荐印象笔记+马克飞象，此外公式要推导，例子要重视，这些在这里就不再赘述了。 附上孟岩的问题，答答看看吧： 矩阵究竟是什么东西？向量可以被认为是具有n个相互独立的性质（维度）的对象的表示，矩阵又是什么呢？我们如果认为矩阵是一组列（行）向量组成的新的复合向量的展开式，那么为什么这种展开式具有如此广泛的应用？特别是，为什么偏偏二维的展开式如此有用？如果矩阵中每一个元素又是一个向量，那么我们再展开一次，变成三维的立方阵，是不是更有用？* 矩阵的乘法规则究竟为什么这样规定？为什么这样一种怪异的乘法规则却能够在实践中发挥如此巨大的功效？很多看上去似乎是完全不相关的问题，最后竟然都归结到矩阵的乘法，这难道不是很奇妙的事情？难道在矩阵乘法那看上去莫名其妙的规则下面，包含着世界的某些本质规律？如果是的话，这些本质规律是什么？ 行列式究竟是一个什么东西？为什么会有如此怪异的计算规则？行列式与其对应方阵本质上是什么关系？为什么只有方阵才有对应的行列式，而一般矩阵就没有（不要觉得这个问题很蠢，如果必要，针对m x n矩阵定义行列式不是做不到的，之所以不做，是因为没有这个必要，但是为什么没有这个必要）？而且，行列式的计算规则，看上去跟矩阵的任何计算规则都没有直观的联系，为什么又在很多方面决定了矩阵的性质？难道这一切仅是巧合？ 矩阵为什么可以分块计算？分块计算这件事情看上去是那么随意，为什么竟是可行的？ 对于矩阵转置运算$A^T$，有$(AB)^T = B^TA^T$，对于矩阵求逆运算$A^{-1}$，有$(AB)^{-1} = B^{-1}A^{-1}$。两个看上去完全没有什么关系的运算，为什么有着类似的性质？这仅仅是巧合吗？ 为什么说$P^{-1}AP$得到的矩阵与A矩阵“相似”？这里的“相似”是什么意思？ 特征值和特征向量的本质是什么？它们定义就让人很惊讶，因为$Ax =\lambda x$，一个诺大的矩阵的效应，竟然不过相当于一个小小的数λ，确实有点奇妙。但何至于用“特征”甚至“本征”来界定？它们刻划的究竟是什么？]]></content>
      <tags>
        <tag>机器学习</tag>
        <tag>线性代数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[言不可及 | 庙会]]></title>
    <url>%2F%E8%A8%80%E4%B8%8D%E5%8F%AF%E5%8F%8A-%E5%BA%99%E4%BC%9A.html</url>
    <content type="text"><![CDATA[怎能忘记彼时的星河？ 以往七夕的时候，我总是会和爷爷奶奶一起去舅爷家，去赶七夕会。那里跟大城市不一样，光还没有污染星空,天中尚有银河，繁星灿烂欲转。 从舅爷家到谷里的戏台有一条六七百米的路，八点钟我们从家里出发，路上会有很多背着椅子走的同行人。爷爷和舅爷会聊戏里面的情节，蔡京有多坏以及戏正不正宗这类，我对这样的话题不感兴趣，心里面想的只是桌上的小霸王游戏机，抽屉里的鹿鼎记，上一年没买的荧光手环还有明天要打来烧着吃的枣子。 路上的石头被星光照着，有一种白莹莹的质感，唱戏的声音越来越近，蛐蛐儿的声音渐渐听不见了。转过两个弯，有一条向下的通往谷底的土路，路的两侧就是我童年最美好的记忆，有卖木头菩萨、玻璃手串这类小饰物的，有卖夜光手环的，谷下除了戏台有灯，其他地方都是暗的。哦，对，还有两旁小摊的白炽灯散发着温暖不刺眼的光，这是童年里光影的梦。卖吃食的也很多，炸排串有着直勾勾的香气，糖皮儿花生的甜香就收敛很多。即使没钱买什么，但只要看一看就很开心，这里的每个角落都藏着无数的惊喜，每一秒都让我有砰砰砰的期待。 台上唱戏的咿咿呀呀的时候，我们自然开始昏昏欲睡了，爷爷早就料到这样的情况，拿出预先带的小竹席，让我和姐姐表姐躺着休息。奶奶不想让我们睡着感冒，就讲故事给我们听。 说人和神仙本无分别，天和地还有海也都是畅通的，那时候大家都过得开心快乐。很多年之后，有的人突然就再也没反应了，不会跑也不会跳。大家都非常害怕，有一部分聪明人发现了寿命的存在，大家第一次明白了死的意思，死代表着什么呢？就是一切都没了，一切的一切都没了。 人不再毫无畏惧，恐惧是战争的催化剂。一场莫名奇妙的战争打了好多好多年。最后势力基本分成两方，一方人变成了神仙，一方人还是普通人。但其实这场战争是神仙们挑起来的，他们想剥夺人的生命自己用，所以神仙都能活好多好多年。但他们也受到了惩罚，爱情亲情友情，神仙们没这些东西了，他们要生生世世受无聊的苦。 神仙们不甘心啊，漫长的寿命让他们变得很厉害，他们嫉妒咱们有他们失去的东西，他们想方设法压制人的情感。但是这禁锢的力量是不够的，随着人的长大，这些感情会慢慢全部回来。 你我一生下来，亲情随之而来。求学之旅，友情如影随行。到了人生的新阶段，爱情也恰在转角，从神话故事的角度想想，还挺有趣的。 及至戏散场，我们被叫醒回家，正是夏天，睡觉当然还是在平房上。数星星七八颗就沉沉地睡去了。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[言不可及]]></title>
    <url>%2F%E8%A8%80%E4%B8%8D%E5%8F%AF%E5%8F%8A.html</url>
    <content type="text"><![CDATA[这是一个系列随笔，名为言不可及。 取意于史铁生《北京的回忆》里我很喜欢的一句话：现在想，大约任何声音、光线、形状、姿态，乃至温度和气息，都在人的心底有着先天的响应，因而很多事可以不懂但能够知道，说不清楚，却永远记住。那大约就是形式的力量，气氛或者情绪，整体地袭来，它们大于言说，它们进入了言不可及之域。 言不可及之域，就以文字载之吧。我真的不想忘记它们。 检索某个事件时，寻到一个博客，随意翻之，其内容多为日记类随笔，涉猎范围很广。一个月很稳定的更新四五篇，但到08年2月时文章戛然而止，再也没有任何后续。 每条博客的评论区都是空白，我不由自主地在想，博主是抱着什么样的心情在写这些呢，离开这里的缘起是什么呢，这十年间又发生了什么呢。 悲欢离合总无情,一任阶前点滴到天明。一句莫名的古诗词跳了出来，此刻的人去想过去的心情，总是容易有怅然若失的感觉，谁也避不开。 我相比其他人总是更容易陷入回忆中，写的一些心情里总是有大量“小时候”之类的时间词，年假跟人出去玩也一直絮絮叨叨，看到几乎每一样东西都能扯到过去。 —现在套圈还有套鸭子的，以前我记得就是套一点塑料小刀小剑。 —风穴寺原来离这里就六七公里啊，小时候感觉走到天荒地老才能走到。 —用柴火煮肉真是让人怀念，那时候总是在旁边帮忙等着吃，真的是好吃。 —姐姐姐，你还记不记得那个，两毛一张的那个，上面的小格子画的有军长，司令，炸弹这些，咱们把它剪成小牌，用粉笔在地上画了格子翻暗牌打，有一次我司令位置比较好，你的牌翻一张我杀一张，后来你着急了我又不忍心，我就故意去救我的工兵让你的炸弹把它炸死了，你记不记得啊。 —不差钱已经十年了啊，我总感觉像是两三年前的事。在南屋那儿看这个节目的吧，橘子糖的香气很重，剥瓜子和花生加葡萄干一起嚼，外面有小孩子在放烟火，都是几毛钱的玩意儿，铁花子，窜天猴儿，擦炮儿，那时候跟城市的黑夜可不一样，村里的黑夜让人有安全感，咋玩的那么开心呢，现在我玩不动了。 过去的记忆，在特定的时候，能让我有当下的自己和逝去的的美好尚有交集的错觉。虽然是错觉，但也足够了。 毕竟，有回忆才是完美人生。]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[信息论随笔三]]></title>
    <url>%2F%E4%BF%A1%E6%81%AF%E8%AE%BA%E9%9A%8F%E7%AC%94%E4%B8%89.html</url>
    <content type="text"><![CDATA[这是一个关于信息论的小系列。信息论随笔一信息论随笔二信息论随笔四信息论随笔五 人生苦短，我要问人。 你身边的每个人都是一个完美的信息体，他的人性化程度要超过任何已知的搜索引擎，所以在寻找信息时，千万别忘了向周围人请教这个方法。 举个简单的例子，你某天突然发现了搜索的重要性，下定决心开始学习搜索知识，可是信息的来源太多了啊，豆瓣贴吧知乎专门的搜索书，该怎么学起呢？ 最好的方法就是问已经关注过这个问题的人该从何学起。因为他在学习的过程已经走了该走的路，悟了该悟的道。他有了很多经验、总结和思考，也会针对你这个个体给出独特的建议。他是一个完美的引擎，是淘金者和图书馆管理员的结合体。 我举个例子，几天前我想搜索获得一些关于ECU入门学习方法的信息，除了搜索引擎外，我还采用了两种方法。其一通过汽车学院的官方网站找到了某教授的联系方式，发了一封邮件问询。其二，我在车云和朱玉龙的公众号里直接发了询问信息。这两种方式都得到了回应，车云甚至专门给了我一个前辈的微信号，我们聊了大概40分钟，他们的回应很有价值，这些价值是搜索引擎不能提供的，或者更准确地说，如果只通过搜索引擎，我要过很长时间才能获得这些“价值”。 别把自己局限起来，问问问，只要你的问题有提前思考过，有一定的价值，就不要害怕问，对知识的分享当下很少会有人吝啬的。 下一次想获得什么信息时，千万不要忘了身边的人。找到有过类似经验的或者擅长此道的人直接问，比自己用各种引擎网站和指令来的更直接更高效。]]></content>
      <tags>
        <tag>信息论</tag>
        <tag>高效学习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[信息论随笔二]]></title>
    <url>%2F%E4%BF%A1%E6%81%AF%E8%AE%BA%E9%9A%8F%E7%AC%94%E4%BA%8C.html</url>
    <content type="text"><![CDATA[这是一个关于信息论的小系列。信息论随笔一信息论随笔三信息论随笔四信息论随笔五哼哈二将的哼哈真能砸死人吗？ 有信息接受率这个概念，从这个概念引申去，可以解释两个现象。其一，刷网页时虎虎生威，左刷右点，精神抖擞，听课时则如喵嗜睡，哈欠连连定是标配。其二，小黄片比小黄文的市场更广。这个引申围绕的核心在哪里呢?在于信息量上。 我们不断地拆分信息，拆分到最后，看到的是比特，也就是1和0，阴和阳，是和否，有和无。说不定在未来，人们的交流是这样的： A：“000101100010101010001110001”B：“1000110”那么具体是什么意思呢？A：”我爱你”。B：”滚”。 其实黑客帝国里就有这个概念，外面的辅助用人眼就可以解析电脑上的绿色01流，这可能是他们为了电影背景时代而做出的进化。但实际上人类语言进化点这棵树的可能性非常小，因为它非常不经济，跟能量倾向于保持低状态的基本准则违背了。正像上面那个例子，一个我爱你就能表达清楚的事，用一串01来表达不得烦死人？ 回顾历史，人类对信息的组织一直在升维，我们直接跳到书面文化出现后的年代，那时候的打字，意为击也，单个汉字的信息量并不大。但现如今，打车，打饭，打水，打井，它们也没做错什么事，为什么要打它们？归根究底就是打这个字的信息量增加了。 单个汉字（或英文字符）的信息量从大的时间尺度上来看一直在增加，这是世界的规律，在这方面，历史只有单行道可走，组合词也不例外，”NE”是什么？”ICU”又是什么？想解释它们的话，毫无疑问需要严谨的一段话，这就是另一种典型的升维现象了。顺便提一下，我是”IHA”的忠实拥护者，”I hate abbreviations “，勇者变恶龙呐，我恨缩略词，但我偏要用。 现在回到大一上高数课的时候，让我来勉强解释听课时容易昏昏欲睡这个现象。因为你在接受海量的信息啊！数学是信息最高维结构的一种体现，老师说”极限”两个字，飘向你的可不是轻轻的4比特（一个汉字平均1.9比特），而是天才牛顿的彻夜思考，是莱布尼茨的独辟蹊径，是无数数学家前赴后继的争论。砸向你的是一座信息山、是一汪信息海。这有点像玄幻小说里儒家的言出法随，也像封神榜里的哼哈二将，随便几个字就有千钧重，不过这里的千钧是信息量，而不是质量了。 一座座信息山砸下来，孙猴子也躲不了，想登此山摘星辰，那得先通过前期的积累学习站在靠近山顶的位置。大脑有极限有阈值，信息一会儿就饱和了，所以你总会感觉自己大脑很沉，另外在碰到接受不了的事情时人的本能是通过天然排斥保护自己，两者综合，那就是头脑昏昏沉沉想睡觉了。保护自己，拒绝信息！ 至于视频和文字的问题，那是另外一个研究：“信息形式对高维信息接收率的影响”。请聪明才智之士来贡献力量了。 脑洞戏言，博君一乐，对信息量感兴趣可以阅读《信息简史》这本科普书，它对我看世界的方式影响很深。]]></content>
      <tags>
        <tag>信息论</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[信息论随笔一]]></title>
    <url>%2F%E4%BF%A1%E6%81%AF%E8%AE%BA%E9%9A%8F%E7%AC%94%E4%B8%80.html</url>
    <content type="text"><![CDATA[这是一个关于信息论的小系列。信息论随笔二信息论随笔三信息论随笔四信息论随笔五 西游记里面有段很能表现孙悟空的性格。 孙悟空说：常言道：『皇帝轮流做，明年到我家。』只教他搬出去，将天宫让於我，便罢了。 这兴衰之事，谁也讲不准。昨日你庙堂之上，持天子之剑号令天下，动静间千里之外也有感。今日就有江湖之雄，握屠龙宝刀，杀人溅血也不过五步之间。 不仅政治如此……什么不是这样呢？ 现在伸出你的手，观察一下你的手指。别的不论，单说这根大拇指，就有一段荡气回肠的兴衰史。 在以前，大拇指是尊贵的象征，就看清剧里的那些王公贵族，玉扳指在哪儿？在大拇哥儿上。单看形体，大拇指也是手指中最特殊的，以手的自然姿势握姿来说，大拇指似将军，其余四指就是并排的兵。这也是以前大拇指地位高的一个可能解释。 可是后来大拇指的地位就没落了，究其原因是没人再用物件儿来区分阶层。那现在呢，人家无名指或者中指上往往是有戒指的，还有爱的意义。食指呢，人是最灵活的指头，不信你敲桌面看哪根手指敲的最快。再说小指，纤细精巧，实际作用没什么，但也比大拇指蠢蠢呆呆的好看。大拇指成了地位最低的手指，大拇哥很伤心。 所幸大拇指的命中贵人出现了。触摸屏智能手机迎来了自己的时代。现在的我正在双手打字，两只大拇指在屏幕上上下翻飞，一串串信息就从我的大脑通过一系列复杂的变化过一会儿就要进入到了你的大脑里。躺着刷微博刷其他就更不用提。如果现在把某些人的大拇指剁了，短时间内甚至能摧毁他的交流系统。除非他能找回先前的交流方式。 说到交流方式，口语文化——书面文化——口语文化的兴衰史也很有看头。远古人类的交流毫无疑问是口语文化占主导的，随着语言和文字的发明，思想不会随着声音的传播只在空气中存留几秒就迅速衰减，它有办法被保留下来了，这是文化的起源，人之为人的精神基础。再之后，书面文化牢牢占据着世界的主流，信息的传播，留存，变异都离不开“书”这个载体。到互联网的发展又是一变，它把世界缩小了，音带传出来的思想振动不会只传几百米，它可以传遍整个地球。口语文化又想重新拿回它失去的领地，在我看来，它至少能重新打回一半天下。 说了这么多，我到底想说什么呢？哲学上说，“波浪式前进，螺旋式上升”数学上说，“万物都可以由傅里叶转换成正弦波”也有人说，“人生不如意十之七八，但我们今天的所有努力都是为了那十分之一二的开怀大笑。” 是不是有点太悲观？那引用海贼王的一句话 他们开着宴会，大声的欢笑，过去的痛苦之所以能坚持下去，就是因为这一天一定会到来。]]></content>
      <tags>
        <tag>信息论</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[AirSim配置]]></title>
    <url>%2FAirSim%E9%85%8D%E7%BD%AE.html</url>
    <content type="text"><![CDATA[除了百度的Apollo，在GitHub的Autonomous Driving话题里，就数AirSim的star多了。这可能是因为Airsim既能支持无人车仿真也能支持无人机仿真，也可能是因为Airsim提供了足够多的辅助教程，能帮助新手快速入门。 不管怎样，它是一个非常值得学习的开源项目。AirSim是一款基于UnReal引擎的仿真平台，其可用于无人车、无人机的仿真。它是开源的、跨平台的、能支持PX4这种流行的飞行控制器的硬件在环测试。AIrSim本质上是一款UnReal插件，因此它能被放到任何你想要的虚拟环境中。AirSim目标是成为一个优秀的AI测试平台，可以被用来测试与自动驾驶相关的深度学习、计算机视觉、加强学习算法。 本篇教程选择在win10系统上搭建AirSim平台，这也是少有的可以在Win上运行的开源项目了。整体应用的是最新版本的AirSim建议的配置，win10+VS2017Community。 **安装步骤** 第一步，下载Unreal先下载Epic Games Launcher。打开后，按如下图红色方框，点击选择Unreal版本4.18.3，下载。 第二步，配置VS2017首先确保其安装VC++。其次确保安装Windows SDK 8.1。打开vs2017，选择工具中的“获取工具和功能”。选中“单个组件”选项夹，在“SDK、库和框架”中选择Windows8.1SDK勾选安装。 第三步， 编译程序首先新建文件夹，把https://github.com/Microsoft/AirSim 中源代码下载或者clone到本地，我个人是把文件下载到了“E:\SOFT\airsim\air”的文件路径里。之后在win10左下角找到Visual Studio的安装目录，选择“适用于VS 2017的 x64本地工具”打开。 接着，进入你放着airsim源程序的文件夹，运行build.cmd文件夹。Airsim的配置结束。 **疑难问题汇总** 症状1任何rpclib相关问题。 病情分析开发者回复说是网络（墙）问题。对于win8系统，显示的是拒绝访问。配置建议还是win10系统。 药方科学上网，之后重启电脑，重新build。 症状2corect.h相关问题。 病情分析这是编译的sdk版本问题。 药方首先检查SDK8.1有没有正常安装。其次在VS2017的“获取工具和功能”选项夹中选择“单个组件”，再在“编译器、生成工具和运行时”下选择“Windows通用CRTSDK”，勾选安装。重启电脑，重新build。 症状3没有生成object文件。 病情分析如cmd中报错显示，是文件编码的问题。 药方按照报错提示，直接打开“… repos\repo_avt\airsim-master\airlib\deps\eigen3\eigen\src\core\arch\cuda\half.h ”文件，如图所示，把里面的全角符号改成半角。 参考资源https://github.com/Microsoft/AirSim/blob/master/docs/build_windows.md 一点感想在配置airsim时虽然已经有中文教程，但还是不断在踩坑，中间有两次都想放弃了。比如对于corect.h问题，我不知道怎么去重定向解决方案，刚开始试着在VisualStudio中编译文件，以期望得到重定项窗口，但没有成功。之后直接baidu，google搜索怎么修改项目的sdk版本，但得到的大多都是关于Android的问答，很难去准确定位信息。后来我选择直接以airsim，corect.h为关键词搜索，发现在项目的issue里确实有这个问题，但开发者只说是sdk版本的问题。最后在偶然去搜索corect.h时，在stackflow里找到了一个这样问答，https://stackoverflow.com/questions/38290169/cannot-find-corecrt-h-universalcrt-includepath-is-wrong/40164843 得到了解决方案。 Bingo ，如上图，AirSim配置成功，完成了本想放弃的事，感觉还不错。]]></content>
      <tags>
        <tag>自动驾驶仿真</tag>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[开篇杂谈]]></title>
    <url>%2F%E5%BC%80%E7%AF%87%E6%9D%82%E8%B0%88.html</url>
    <content type="text"><![CDATA[香波地群岛，结束与再出发之地。 有个词叫做“恍若隔世”，我总不想去明白这个词，因为在感悟到它时，随之而来的必然有刹那的空虚吧。但掷硬币数十万次，偶然一次也会立于地面，活了几十年，各种情绪也终究无可避免。 感慨总很难被共情，此刻的他人感受不到自己，未来的自己也感受不了此刻，但还是记录下来，以求当某种光线，气味或者触感袭来时，自己能心有共鸣，或低头不由自主地笑或心有共鸣而口中喃喃自语。 这是我第一篇微博的内容，现在的我怎么都想不起来，当时的我是以何种心情敲下这些文字了，共情是一件很难得的事，从来都是如此。 我喜欢“围炉夜话”这几个字，喜欢“积雪四指，街景通明”这个景，喜欢“何当共剪西窗烛，却话巴山夜雨时”这句诗。《神雕侠侣》我最喜欢的是第三十三章，风陵夜话。 这些情景里面总会有几个朋友，会有很多话，那些话比海更阔，比天更空，但又都带着真心，在这里没有焦虑，没有面具，心里面总会一片安宁，大脑会因为完全卸下了防备而有一种懵懵的快乐。这是我一直追求的状态，但在现代社会里，这已经不再可能。我不是悲观，我知道不可能了。按《一句顶一万句》里的说法，这是东方人的千年孤独，一个人的孤独不是孤独，一个人找另一个人，一句话找另一句话才是孤独，实际我们所需的只是心与心的交流。 最开始用QQ和微信时，我很幸福。它们是在当面交流已被判定死刑后的第二池塘，但“社会和圈子”还是弄干了它们，鱼儿们被迫上岸，越来越沉默。这不能怪池塘水太少，也不能怪社会赶太紧，随着我们长大，这些都是必然降临的事。 现在我转向了博客，不同于面对面交流和社交平台实时交流的第三池塘。现在我还不能准确表达我选择博客的原因，就此停笔，不再多写。这应当是一种复古主义？既有妥协，也有前进，是非好坏，一年后再看了。]]></content>
      <tags>
        <tag>随笔</tag>
        <tag>生活</tag>
      </tags>
  </entry>
</search>
